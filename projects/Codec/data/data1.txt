{
    "changes": [
        {
            "commit_id": 751,
            "hash": "77ceca23f1e9370daa9866f3cda5e5b758370623",
            "commit_summary": "Fix deprecated warnings for junit.framework.Assert.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1437501 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/CharEncodingTest.java",
                "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java",
                "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                "src/test/java/org/apache/commons/codec/language/Caverphone1Test.java",
                "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java",
                "src/test/java/org/apache/commons/codec/language/SoundexTest.java"
            ],
            "functions": [],
            "date": "2013-01-23"
        },
        {
            "commit_id": 752,
            "hash": "50c63317be1a98a8a543217ca38036c71e4ada01",
            "commit_summary": "Exception not thrown\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1438145 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/NysiisTest.java"
            ],
            "functions": [
                {
                    "function name": "testTranan",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testTranan"
                },
                {
                    "function name": "testSnad",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testSnad"
                },
                {
                    "function name": "testSnat",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testSnat"
                },
                {
                    "function name": "testCap",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testCap"
                },
                {
                    "function name": "testSpecialBranches",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testSpecialBranches"
                },
                {
                    "function name": "testFal",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testFal"
                },
                {
                    "function name": "encodeAll",
                    "function params": [
                        "strings",
                        "expectedEncoding"
                    ],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.encodeAll"
                },
                {
                    "function name": "testDan",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testDan"
                },
                {
                    "function name": "testDad",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testDad"
                },
                {
                    "function name": "testBran",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testBran"
                }
            ],
            "date": "2013-01-24"
        },
        {
            "commit_id": 753,
            "hash": "ba1efb71a4c736b30eabee639f3e9d8c17d0bb02",
            "commit_summary": "Raw type\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1438146 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java"
            ],
            "functions": [],
            "date": "2013-01-24"
        },
        {
            "commit_id": 754,
            "hash": "bd99b9adc1c94b787d110046e68d9df8b851530a",
            "commit_summary": "Simplify and avoid boxing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1438149 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java"
            ],
            "functions": [
                {
                    "function name": "testCompareNameNullSpace_ReturnsFalseSuccessfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"
                },
                {
                    "function name": "testIsVowel_CapitalA_ReturnsTrue",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_CapitalA_ReturnsTrue"
                },
                {
                    "function name": "testCompareNameSameNames_ReturnsFalseSuccessfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"
                }
            ],
            "date": "2013-01-24"
        },
        {
            "commit_id": 755,
            "hash": "fa32d5d67aebc35b120356a003202ea32dd34755",
            "commit_summary": "CODEC-167 - Test our decode with pad character in the middle\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1447431 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "testDecodeWithInnerPad",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"
                }
            ],
            "date": "2013-02-18"
        },
        {
            "commit_id": 756,
            "hash": "b8a168df404754ba324f743dd710e0f654aae201",
            "commit_summary": "CODEC-166 - Base64 could be faster.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1447443 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [
                {
                    "function name": "for",
                    "function params": [
                        "i",
                        "iS"
                    ],
                    "file name": "ApacheModifiedMiGBase64.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/binary/ApacheModifiedMiGBase64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.ApacheModifiedMiGBase64.for"
                },
                {
                    "function name": "checkLen",
                    "function params": [],
                    "file name": "ApacheModifiedMiGBase64.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/binary/ApacheModifiedMiGBase64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.ApacheModifiedMiGBase64.checkLen"
                },
                {
                    "function name": "decode",
                    "function params": [],
                    "file name": "ApacheModifiedMiGBase64.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/binary/ApacheModifiedMiGBase64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.ApacheModifiedMiGBase64.decode"
                },
                {
                    "function name": "ApacheModifiedMiGBase64",
                    "function params": [],
                    "file name": "ApacheModifiedMiGBase64.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/binary/ApacheModifiedMiGBase64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.ApacheModifiedMiGBase64.ApacheModifiedMiGBase64"
                },
                {
                    "function name": "encodeToByte",
                    "function params": [],
                    "file name": "ApacheModifiedMiGBase64.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/binary/ApacheModifiedMiGBase64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.ApacheModifiedMiGBase64.encodeToByte"
                },
                {
                    "function name": "encodeToString",
                    "function params": [],
                    "file name": "ApacheModifiedMiGBase64.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/binary/ApacheModifiedMiGBase64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.ApacheModifiedMiGBase64.encodeToString"
                },
                {
                    "function name": "encodeToByte",
                    "function params": [],
                    "file name": "ApacheModifiedMiGBase64.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/binary/ApacheModifiedMiGBase64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.ApacheModifiedMiGBase64.encodeToByte"
                },
                {
                    "function name": "decode",
                    "function params": [],
                    "file name": "ApacheModifiedMiGBase64.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/binary/ApacheModifiedMiGBase64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.ApacheModifiedMiGBase64.decode"
                },
                {
                    "function name": "encodeToChar",
                    "function params": [],
                    "file name": "ApacheModifiedMiGBase64.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/binary/ApacheModifiedMiGBase64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.ApacheModifiedMiGBase64.encodeToChar"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "decodeBase64",
                    "function params": [
                        "base64Data"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.decodeBase64"
                },
                {
                    "function name": "encodeBase64",
                    "function params": [
                        "binaryData",
                        "isChunked",
                        "urlSafe",
                        "maxResultSize"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encodeBase64"
                },
                {
                    "function name": "encodeBase64String",
                    "function params": [
                        "binaryData"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encodeBase64String"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encode"
                },
                {
                    "function name": "decodeBase64",
                    "function params": [
                        "base64String"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.decodeBase64"
                },
                {
                    "function name": "encodeBase64URLSafeString",
                    "function params": [
                        "binaryData"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString"
                }
            ],
            "date": "2013-02-18"
        },
        {
            "commit_id": 757,
            "hash": "c8742a898db78494c0da82dddbbc39f0fa92ad38",
            "commit_summary": "reverting r1447443 while we discuss it\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1447577 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [
                {
                    "function name": "decode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "decodeBase64",
                    "function params": [
                        "base64Data"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.decodeBase64"
                },
                {
                    "function name": "encodeBase64",
                    "function params": [
                        "binaryData",
                        "isChunked",
                        "urlSafe",
                        "maxResultSize"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encodeBase64"
                },
                {
                    "function name": "encodeBase64String",
                    "function params": [
                        "binaryData"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encodeBase64String"
                },
                {
                    "function name": "decodeBase64",
                    "function params": [
                        "base64String"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.decodeBase64"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encode"
                },
                {
                    "function name": "encodeBase64URLSafeString",
                    "function params": [
                        "binaryData"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString"
                }
            ],
            "date": "2013-02-19"
        },
        {
            "commit_id": 758,
            "hash": "4ed92ebd457a4ba964585b8c669e436cc99c69de",
            "commit_summary": "Use the RADIX constant consistently\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1458495 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/Utils.java"
            ],
            "functions": [
                {
                    "function name": "digit16",
                    "function params": [
                        "b"
                    ],
                    "file name": "Utils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/Utils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/Utils.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.Utils.digit16"
                }
            ],
            "date": "2013-03-19"
        },
        {
            "commit_id": 759,
            "hash": "8cfa4882a175d3e1327098c898448a701fbb2375",
            "commit_summary": "Fix Javadoc @see reference.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1462705 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [],
            "date": "2013-03-30"
        },
        {
            "commit_id": 760,
            "hash": "fd48c7cea91e4cc99e11c54206e0de227728eebe",
            "commit_summary": "[CODEC-168] Reported by Daniel Cassidy: Add DigestUtils.updateDigest(MessageDigest, InputStream). No need for additional tests as the method is used by Codec itself.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1462710 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [
                {
                    "function name": "digest",
                    "function params": [
                        "digest",
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.digest"
                },
                {
                    "function name": "updateDigest",
                    "function params": [
                        "digest",
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.updateDigest"
                }
            ],
            "date": "2013-03-30"
        },
        {
            "commit_id": 761,
            "hash": "63687e70f21639a9a3105a502b58846368733442",
            "commit_summary": "Rename ivar _random -> random.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1462765 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "getRandom",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.getRandom"
                }
            ],
            "date": "2013-03-30"
        },
        {
            "commit_id": 762,
            "hash": "b4eba75157d30e86192af55697591e0f2f6ef354",
            "commit_summary": "Improve toString() for debugging.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1465178 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java"
            ],
            "functions": [
                {
                    "function name": "Context",
                    "function params": [],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.Context"
                }
            ],
            "date": "2013-04-06"
        },
        {
            "commit_id": 763,
            "hash": "58b6aa8c53e30874bb3d83a913db4e4d19878228",
            "commit_summary": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1465180 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [],
            "date": "2013-04-06"
        },
        {
            "commit_id": 764,
            "hash": "9ff186bd4faaa784b0ba9bdd8980f9f9d41bd8f8",
            "commit_summary": "Fix Checkstyle.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1465182 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java"
            ],
            "functions": [
                {
                    "function name": "Context",
                    "function params": [],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.Context"
                }
            ],
            "date": "2013-04-06"
        },
        {
            "commit_id": 765,
            "hash": "3cc73baf806ea007dea3e66252dddf2d8350601d",
            "commit_summary": "Fix up some generics warnings as best we can\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1465689 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/StringEncoderComparator.java"
            ],
            "functions": [
                {
                    "function name": "compare",
                    "function params": [
                        "o1",
                        "o2"
                    ],
                    "file name": "StringEncoderComparator.java",
                    "file old path": "src/main/java/org/apache/commons/codec/StringEncoderComparator.java",
                    "file new path": "src/main/java/org/apache/commons/codec/StringEncoderComparator.java",
                    "full name": "src.main.java.org.apache.commons.codec.StringEncoderComparator.compare"
                }
            ],
            "date": "2013-04-08"
        },
        {
            "commit_id": 766,
            "hash": "b2c2cf3d42dd306c96b6b68283eeeadc1b3e5c22",
            "commit_summary": "Fix up ambiguous description\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1465848 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java"
            ],
            "functions": [],
            "date": "2013-04-09"
        },
        {
            "commit_id": 767,
            "hash": "402339a7578090ef93399606e6966bd9025e5c09",
            "commit_summary": "Javadoc (thread-safety)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1465850 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java",
                "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java"
            ],
            "functions": [],
            "date": "2013-04-09"
        },
        {
            "commit_id": 768,
            "hash": "79c4777389b173d15fad261ac5dbc98cf7618d8c",
            "commit_summary": "Checkstyle fixes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1468177 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/StringEncoderComparator.java"
            ],
            "functions": [],
            "date": "2013-04-15"
        },
        {
            "commit_id": 769,
            "hash": "4a8bb5884168cb6c7d3bf7cd2efa5b0f7a74d763",
            "commit_summary": "Fix attribution links.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1468715 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java"
            ],
            "functions": [],
            "date": "2013-04-17"
        },
        {
            "commit_id": 770,
            "hash": "03aa0776df745abd944666731e8859ec5ed487ba",
            "commit_summary": "Fix spelling (US).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1477586 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/Metaphone.java"
            ],
            "functions": [],
            "date": "2013-04-30"
        },
        {
            "commit_id": 771,
            "hash": "9e7c59dfd25b087cc56e13e406ab1124b0d28829",
            "commit_summary": "[CODEC-170] Link broken in Metaphone Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1477592 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/Metaphone.java"
            ],
            "functions": [],
            "date": "2013-04-30"
        },
        {
            "commit_id": 772,
            "hash": "ea8ede041009d4a018657db339e68c6823a3c561",
            "commit_summary": "Fix spelling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1477596 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/Metaphone.java"
            ],
            "functions": [],
            "date": "2013-04-30"
        },
        {
            "commit_id": 773,
            "hash": "21a8423514bcbcebd24e3d1c120da62683ad70f0",
            "commit_summary": "Better Javadocs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1485804 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java"
            ],
            "functions": [],
            "date": "2013-05-23"
        },
        {
            "commit_id": 774,
            "hash": "7fb904ff9e0d5903fa91d967543aed54d97cfe36",
            "commit_summary": "CODEC-170 Base32 decode table has spurious value\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1488493 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32.java"
            ],
            "functions": [],
            "date": "2013-06-01"
        },
        {
            "commit_id": 775,
            "hash": "f2528beee5e222f63bc85a4bd7884f558717cd11",
            "commit_summary": "Document how strings are converted to bytes for digest\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1493409 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [],
            "date": "2013-06-15"
        },
        {
            "commit_id": 776,
            "hash": "b623db94829eda3afa2c244f1519bcc2d43852c2",
            "commit_summary": "Javadoc typo\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1493417 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [],
            "date": "2013-06-15"
        },
        {
            "commit_id": 777,
            "hash": "322cc85a2c2d20acdebee2d38ef86449d1e7f522",
            "commit_summary": "Javadoc typo\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1493418 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [],
            "date": "2013-06-15"
        },
        {
            "commit_id": 778,
            "hash": "8b0318c9dded3ef6306d3ee5904721149b7981e1",
            "commit_summary": "[CODEC-174] Improve performance of Beider Morse encoder. Add a performance test.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1539776 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "test",
                    "function params": [],
                    "file name": "PhoneticEnginePerformanceTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEnginePerformanceTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEnginePerformanceTest.test"
                }
            ],
            "date": "2013-11-07"
        },
        {
            "commit_id": 779,
            "hash": "a9a1ef40e6468a11abce920f720197b183b9834c",
            "commit_summary": "[CODEC-174] Apply patch https://issues.apache.org/jira/secure/attachment/12611963/CODEC-174-change-rules-storage-to-Map.patch. Thanks to Thomas Champagne.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1539783 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEnginePerformanceTest.java"
            ],
            "functions": [
                {
                    "function name": "RulesApplication",
                    "function params": [
                        "finalRules",
                        "input",
                        "phonemeBuilder",
                        "i",
                        "maxPhonemes"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication"
                },
                {
                    "function name": "RulesApplication",
                    "function params": [
                        "finalRules",
                        "input",
                        "phonemeBuilder",
                        "i",
                        "maxPhonemes"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "input",
                        "languageSet"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.encode"
                },
                {
                    "function name": "applyFinalRules",
                    "function params": [
                        "phonemeBuilder",
                        "finalRules"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules"
                },
                {
                    "function name": "applyFinalRules",
                    "function params": [
                        "phonemeBuilder",
                        "finalRules"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules"
                },
                {
                    "function name": "RulesApplication",
                    "function params": [],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication"
                },
                {
                    "function name": "for",
                    "function params": [
                        "s"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.for"
                },
                {
                    "function name": "getInstance",
                    "function params": [
                        "nameType",
                        "rt",
                        "langs"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.getInstance"
                },
                {
                    "function name": "getInstance",
                    "function params": [
                        "nameType",
                        "rt",
                        "lang"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.getInstance"
                },
                {
                    "function name": "parseRules",
                    "function params": [
                        "scanner",
                        "location"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.parseRules"
                }
            ],
            "date": "2013-11-07"
        },
        {
            "commit_id": 780,
            "hash": "422d2e44cba5d256ea130b418f91c56c723c5788",
            "commit_summary": "Javadoc results of testing https://issues.apache.org/jira/secure/attachment/12611962/CODEC-174-delete-subsequence-cache.patch. Patch not applied.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1539787 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEnginePerformanceTest.java"
            ],
            "functions": [],
            "date": "2013-11-07"
        },
        {
            "commit_id": 781,
            "hash": "9fcdb588c3958c9468fe83dfe5e07a36aeaa9e7c",
            "commit_summary": "[CODEC-174] Apply patch https://issues.apache.org/jira/secure/attachment/12612178/CODEC-174-reuse-set-in-PhonemeBuilder.patch. Thanks to Thomas Champagne.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1539788 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEnginePerformanceTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/RuleTest.java"
            ],
            "functions": [
                {
                    "function name": "PhonemeBuilder",
                    "function params": [
                        "languages"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [
                        "phonemes"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [
                        "phoneme"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                },
                {
                    "function name": "applyFinalRules",
                    "function params": [
                        "phonemeBuilder",
                        "finalRules"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [
                        "str"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [
                        "phonemes"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                },
                {
                    "function name": "Phoneme",
                    "function params": [
                        "phonemeLeft",
                        "phonemeRight"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "Phoneme",
                    "function params": [
                        "str"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "Phoneme",
                    "function params": [
                        "phonemeText",
                        "languages"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "testSubSequenceWorks",
                    "function params": [],
                    "file name": "RuleTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/RuleTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/RuleTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"
                }
            ],
            "date": "2013-11-07"
        },
        {
            "commit_id": 782,
            "hash": "390aa7125269cde1062dfea9b515db8f63d10a2c",
            "commit_summary": "[CODEC-174] Javadoc test.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1539789 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEnginePerformanceTest.java"
            ],
            "functions": [],
            "date": "2013-11-07"
        },
        {
            "commit_id": 783,
            "hash": "65ebf2cbe46f9c9328ac96f16e7ce1297a4f756c",
            "commit_summary": "[CODEC-174] Javadoc test.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1539797 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEnginePerformanceTest.java"
            ],
            "functions": [],
            "date": "2013-11-07"
        },
        {
            "commit_id": 784,
            "hash": "70191f0f7945e35f89d5f0ff2cce4beeeae6d3fd",
            "commit_summary": "Fix Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1539798 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java"
            ],
            "functions": [],
            "date": "2013-11-07"
        },
        {
            "commit_id": 785,
            "hash": "5c31aa4a642eca6a3275fc8e9361d28c3af4774e",
            "commit_summary": "Format.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1539800 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/Lang.java"
            ],
            "functions": [
                {
                    "function name": "loadFromResource",
                    "function params": [
                        "languageRulesResourceName",
                        "languages"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Lang.loadFromResource"
                }
            ],
            "date": "2013-11-07"
        },
        {
            "commit_id": 786,
            "hash": "2abec2678331c6972b2cd7817532f1cfe9830e5b",
            "commit_summary": "Make sure the scanner is always closed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1539801 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/Lang.java"
            ],
            "functions": [
                {
                    "function name": "loadFromResource",
                    "function params": [
                        "languageRulesResourceName",
                        "languages"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Lang.loadFromResource"
                }
            ],
            "date": "2013-11-07"
        },
        {
            "commit_id": 787,
            "hash": "e7f9dafe2278cd5d43b6f49b9c0c62d45e160e7b",
            "commit_summary": "Make sure the scanner is always closed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1539802 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/Languages.java"
            ],
            "functions": [
                {
                    "function name": "getInstance",
                    "function params": [
                        "languagesResourceName"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.getInstance"
                }
            ],
            "date": "2013-11-07"
        },
        {
            "commit_id": 788,
            "hash": "298527f9ed4ed5b8b902238c7edcadbe8cdbabe2",
            "commit_summary": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1539804 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEnginePerformanceTest.java"
            ],
            "functions": [
                {
                    "function name": "PhonemeBuilder",
                    "function params": [
                        "phoneme"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [
                        "phonemes"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [
                        "phonemes"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                },
                {
                    "function name": "RulesApplication",
                    "function params": [],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [
                        "phoneme"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                },
                {
                    "function name": "parseRules",
                    "function params": [
                        "scanner",
                        "location"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.parseRules"
                },
                {
                    "function name": "testDecodeWithInnerPad",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"
                },
                {
                    "function name": "test",
                    "function params": [],
                    "file name": "PhoneticEnginePerformanceTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEnginePerformanceTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEnginePerformanceTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEnginePerformanceTest.test"
                }
            ],
            "date": "2013-11-07"
        },
        {
            "commit_id": 789,
            "hash": "791c721449939096088c5a5d52d7f21cf288f14a",
            "commit_summary": "Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1539823 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/RuleType.java"
            ],
            "functions": [],
            "date": "2013-11-07"
        },
        {
            "commit_id": 790,
            "hash": "69a7fd9bba0b8aa145a11e4b21c7d7462b4feb55",
            "commit_summary": "Tab police\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1540224 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java"
            ],
            "functions": [
                {
                    "function name": "testgetMinRating_5_Returns4_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully"
                },
                {
                    "function name": "testCompareNameSameNames_ReturnsFalseSuccessfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"
                },
                {
                    "function name": "testgetMinRating_10_Returns3_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_10_Returns3_Successfully"
                },
                {
                    "function name": "testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse"
                },
                {
                    "function name": "testgetMinRating_7_Returns4_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully"
                },
                {
                    "function name": "testisEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse"
                },
                {
                    "function name": "testgetMinRating_6_Returns4_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"
                },
                {
                    "function name": "testisVowel_SingleVowel_ReturnsTrue",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisVowel_SingleVowel_ReturnsTrue"
                },
                {
                    "function name": "testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"
                },
                {
                    "function name": "testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"
                },
                {
                    "function name": "testgetMinRating_5_Returns4_Successfully2",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"
                },
                {
                    "function name": "testgetMinRating_11_Returns_3_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully"
                },
                {
                    "function name": "testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"
                },
                {
                    "function name": "testisEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse"
                },
                {
                    "function name": "testAccentRemoval_NullValue_ReturnNullSuccessfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"
                },
                {
                    "function name": "testgetMinRating_8_Returns3_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"
                },
                {
                    "function name": "testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse"
                },
                {
                    "function name": "testCompareNameNullSpace_ReturnsFalseSuccessfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"
                },
                {
                    "function name": "testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse"
                }
            ],
            "date": "2013-11-09"
        },
        {
            "commit_id": 791,
            "hash": "b8112b003103be8c22849483229ee5a57125d39e",
            "commit_summary": "Tab police\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1540225 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java"
            ],
            "functions": [
                {
                    "function name": "Phoneme",
                    "function params": [
                        "phonemeLeft",
                        "phonemeRight"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "Phoneme",
                    "function params": [
                        "str"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "parseRules",
                    "function params": [
                        "scanner",
                        "location"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.parseRules"
                }
            ],
            "date": "2013-11-09"
        },
        {
            "commit_id": 792,
            "hash": "a8a4bc18c3600ad3fcc9f6ec0f2ce312c81e07d1",
            "commit_summary": "Tab police\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1540226 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java"
            ],
            "functions": [
                {
                    "function name": "RulesApplication",
                    "function params": [],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [
                        "str"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                }
            ],
            "date": "2013-11-09"
        },
        {
            "commit_id": 793,
            "hash": "6207523b518b2e0a98c558d8df56f38362066010",
            "commit_summary": "[CODEC-174] Improve performance of Beider Morse encoder. Implement Sebb's suggestion in order to keep binary compatibility for a method.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1540434 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java"
            ],
            "functions": [
                {
                    "function name": "Phoneme",
                    "function params": [
                        "str"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                }
            ],
            "date": "2013-11-10"
        },
        {
            "commit_id": 794,
            "hash": "1e531f785c26d608c489ca20636489b898faf964",
            "commit_summary": "Add a performance test.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1541177 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "cacheSubSequence",
                    "function params": [
                        "cached"
                    ],
                    "file name": "CacheSubSequencePerformanceTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/CacheSubSequencePerformanceTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.CacheSubSequencePerformanceTest.cacheSubSequence"
                },
                {
                    "function name": "test",
                    "function params": [
                        "input"
                    ],
                    "file name": "CacheSubSequencePerformanceTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/CacheSubSequencePerformanceTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.CacheSubSequencePerformanceTest.test"
                },
                {
                    "function name": "test",
                    "function params": [],
                    "file name": "CacheSubSequencePerformanceTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/CacheSubSequencePerformanceTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.CacheSubSequencePerformanceTest.test"
                },
                {
                    "function name": "test",
                    "function params": [
                        "input",
                        "times"
                    ],
                    "file name": "CacheSubSequencePerformanceTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/CacheSubSequencePerformanceTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.CacheSubSequencePerformanceTest.test"
                }
            ],
            "date": "2013-11-12"
        },
        {
            "commit_id": 795,
            "hash": "b91f50fb5ce9c15df4f61b6716542b0984daf474",
            "commit_summary": "[CODEC-174] Small (2.3%) but consistent performance gain with this patch from https://issues.apache.org/jira/secure/attachment/12612838/CODEC-174-delete-subsequence-cache-and-use-String.patch. The nicer aspect of the patch is that it simplifies the code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1541231 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java"
            ],
            "functions": [
                {
                    "function name": "applyFinalRules",
                    "function params": [
                        "phonemeBuilder",
                        "finalRules"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "input",
                        "languageSet"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.encode"
                }
            ],
            "date": "2013-11-12"
        },
        {
            "commit_id": 796,
            "hash": "7d7e486df3d177e850f15cdbaa71b7046589335b",
            "commit_summary": "[CODEC-174] Small (4-5%) but consistent performance gain with this patch from https://issues.apache.org/jira/secure/attachment/12613346/CODEC-174-refactor-join-method-in-Phoneme.patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1541234 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java"
            ],
            "functions": [
                {
                    "function name": "PhonemeBuilder",
                    "function params": [
                        "phonemeExpr",
                        "maxPhonemes"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                },
                {
                    "function name": "Phoneme",
                    "function params": [
                        "phonemeLeft",
                        "phonemeRight"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "Phoneme",
                    "function params": [
                        "phonemeLeft",
                        "phonemeRight",
                        "languages"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                }
            ],
            "date": "2013-11-12"
        },
        {
            "commit_id": 797,
            "hash": "fea31ea9b1511d38b42f70e83ced9cede3c803ff",
            "commit_summary": "[CODEC-174] 15% performance gain with this patch from https://issues.apache.org/jira/secure/attachment/12613371/CODEC-174-refactor-restrictTo-method-in-SomeLanguages.patch. See test Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1541239 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEnginePerformanceTest.java"
            ],
            "functions": [
                {
                    "function name": "SomeLanguages",
                    "function params": [
                        "other"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.SomeLanguages"
                }
            ],
            "date": "2013-11-12"
        },
        {
            "commit_id": 798,
            "hash": "4898d123b1d3c11a025e7cc707b85809e3627ef3",
            "commit_summary": "Fix checkstyle warnings.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1542813 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                "src/main/java/org/apache/commons/codec/language/bm/RuleType.java"
            ],
            "functions": [
                {
                    "function name": "loadFromResource",
                    "function params": [
                        "languageRulesResourceName",
                        "languages"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Lang.loadFromResource"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [
                        "phonemeExpr",
                        "maxPhonemes"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                },
                {
                    "function name": "applyFinalRules",
                    "function params": [
                        "phonemeBuilder",
                        "finalRules"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules"
                }
            ],
            "date": "2013-11-17"
        },
        {
            "commit_id": 799,
            "hash": "78c75127ae121958de3ec2ee4da69a10528fe52c",
            "commit_summary": "[CODEC-174] Add removed method again and make it deprecated.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1542815 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java"
            ],
            "functions": [
                {
                    "function name": "Phoneme",
                    "function params": [
                        "right"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "Phoneme",
                    "function params": [
                        "str"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                }
            ],
            "date": "2013-11-17"
        },
        {
            "commit_id": 800,
            "hash": "f98699421fe6e66c911559559979f23a50ad0c9d",
            "commit_summary": "[CODEC-174] Fix Clirr error by renaming new Methods \"Map Rule.getInstance(...)\" to \"Map Rule.getInstanceMap(...)\" and re-introducing the original methods with the original signature \"List Rule.getInstance(...)\" and returning a joined result of getInstanceMap.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1542823 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "input",
                        "languageSet"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.encode"
                },
                {
                    "function name": "getInstanceMap",
                    "function params": [
                        "nameType",
                        "rt",
                        "langs"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.getInstanceMap"
                },
                {
                    "function name": "getInstance",
                    "function params": [
                        "nameType",
                        "rt",
                        "lang"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.getInstance"
                },
                {
                    "function name": "getInstance",
                    "function params": [
                        "nameType",
                        "rt",
                        "langs"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.getInstance"
                },
                {
                    "function name": "getInstanceMap",
                    "function params": [
                        "nameType",
                        "rt",
                        "lang"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.getInstanceMap"
                }
            ],
            "date": "2013-11-17"
        },
        {
            "commit_id": 801,
            "hash": "c170f6b67d6927aa7e1efff3f0618542483f8708",
            "commit_summary": "[CODEC-174] Improve PhonemeBuilder.apply by updating the internal state instead of creating a new PhonemeBuilder each time.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1542831 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java"
            ],
            "functions": [
                {
                    "function name": "RulesApplication",
                    "function params": [],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [
                        "phonemeExpr",
                        "maxPhonemes"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                }
            ],
            "date": "2013-11-17"
        },
        {
            "commit_id": 802,
            "hash": "2e92a8705e420ca32c32ecb77edc9f3f76bce7a2",
            "commit_summary": "Add since tags.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1542832 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java"
            ],
            "functions": [],
            "date": "2013-11-17"
        },
        {
            "commit_id": 803,
            "hash": "a85362e950874ce8fdc1c741a0b775495f2af842",
            "commit_summary": "git-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1544347 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java"
            ],
            "functions": [
                {
                    "function name": "flush",
                    "function params": [
                        "propagate"
                    ],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.flush"
                },
                {
                    "function name": "flush",
                    "function params": [
                        "propogate"
                    ],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.flush"
                },
                {
                    "function name": "handleS",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleS"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testByteByByte"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testByChunk"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "separator"
                    ],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testByteByByte"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "separator"
                    ],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testByChunk"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testByteByByte"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "separator"
                    ],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testByteByByte"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testByChunk"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "separator"
                    ],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testByChunk"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "separator"
                    ],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testByteByByte"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testByChunk"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testByteByByte"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "separator"
                    ],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testByChunk"
                }
            ],
            "date": "2013-11-21"
        },
        {
            "commit_id": 804,
            "hash": "83881d7331950147503d9ad952a14ed06f3c91ae",
            "commit_summary": "[CODEC-176] Spelling fixes in Javadoc and comments.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1544349 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java"
            ],
            "functions": [
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testByChunk"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "separator"
                    ],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testByChunk"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testByteByByte"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "separator"
                    ],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testByteByByte"
                }
            ],
            "date": "2013-11-21"
        },
        {
            "commit_id": 805,
            "hash": "b17d10dd5d4457ff751f0c37dedd6ae2adfa221f",
            "commit_summary": "Remove useless comment.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1544390 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [],
            "date": "2013-11-22"
        },
        {
            "commit_id": 806,
            "hash": "a8b19f4bac481609e2f210e73c0c8018463ef119",
            "commit_summary": "Avoid modifiers which are implied by the context.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1544532 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java"
            ],
            "functions": [],
            "date": "2013-11-22"
        },
        {
            "commit_id": 807,
            "hash": "bacf66673718f3af8d9500e6fc22cc2a85201839",
            "commit_summary": "[CODEC-174] Revert change of set to list in PhonemeBuilder.apply.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1544659 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java"
            ],
            "functions": [
                {
                    "function name": "PhonemeBuilder",
                    "function params": [
                        "phonemeExpr",
                        "maxPhonemes"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                }
            ],
            "date": "2013-11-22"
        },
        {
            "commit_id": 808,
            "hash": "1a03d4297a6f5bda9622233af6d0ee69efe4a4a0",
            "commit_summary": "Fix Javadoc typo.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1549875 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java"
            ],
            "functions": [],
            "date": "2013-12-10"
        },
        {
            "commit_id": 809,
            "hash": "ff8ad6dce1ddbca02981fef9a5f79055fabbcf96",
            "commit_summary": "Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1552696 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java"
            ],
            "functions": [
                {
                    "function name": "sha2Crypt",
                    "function params": [
                        "keyBytes",
                        "salt",
                        "saltPrefix",
                        "blocksize",
                        "algorithm"
                    ],
                    "file name": "Sha2Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt"
                }
            ],
            "date": "2013-12-20"
        },
        {
            "commit_id": 810,
            "hash": "ddf4ba4e4c1f53014230401b81985518f2434289",
            "commit_summary": "Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1552818 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java"
            ],
            "functions": [],
            "date": "2013-12-20"
        },
        {
            "commit_id": 811,
            "hash": "33f678b9c67a099eb4ba7970a89584cd773a98b8",
            "commit_summary": "Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1552821 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java"
            ],
            "functions": [],
            "date": "2013-12-20"
        },
        {
            "commit_id": 812,
            "hash": "2f769f2b0afdb19b6a99c7945be2f494876023b6",
            "commit_summary": "Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1552861 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java"
            ],
            "functions": [],
            "date": "2013-12-21"
        },
        {
            "commit_id": 813,
            "hash": "f49aa5e8439831f135de38dfe31cbef58d23e33a",
            "commit_summary": "Remove trailing white spaces on all lines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1552918 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java"
            ],
            "functions": [
                {
                    "function name": "testgetMinRating_11_Returns_3_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully"
                },
                {
                    "function name": "testgetMinRating_5_Returns4_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully"
                },
                {
                    "function name": "testgetMinRating_10_Returns3_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_10_Returns3_Successfully"
                },
                {
                    "function name": "testgetMinRating_7_Returns4_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully"
                },
                {
                    "function name": "testgetMinRating_6_Returns4_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"
                },
                {
                    "function name": "testgetMinRating_5_Returns4_Successfully2",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"
                }
            ],
            "date": "2013-12-21"
        },
        {
            "commit_id": 814,
            "hash": "66436373d83a18676dd6d24f0317200a4daf83f0",
            "commit_summary": "[CODEC-178] Deprecate Charsets Charset constants in favor of Java 7's java.nio.charset.StandardCharsets.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1562097 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/Charsets.java"
            ],
            "functions": [],
            "date": "2014-01-28"
        },
        {
            "commit_id": 815,
            "hash": "cfd44eb99719bf045bf78b1e35dba231f98f5a45",
            "commit_summary": "[CODEC-180] Patch from Ville Skytt\u00e4 applied and then some (well, just one more). Fix Javadoc 1.8.0 errors.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1563226 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/CharEncoding.java",
                "src/main/java/org/apache/commons/codec/Charsets.java",
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                "src/main/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [],
            "date": "2014-01-31"
        },
        {
            "commit_id": 816,
            "hash": "379211207d6d9937e11757714f3c7afadabdf567",
            "commit_summary": "<action dev=\"ggregory\" type=\"add\" issue=\"CODEC-181\" due-to=\"Ivan Martinez-Ortiz\">Make possible to provide padding byte to BaseNCodec in constructor</action>\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1571406 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "Base32",
                    "function params": [
                        "useHex",
                        "pad"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.Base32"
                },
                {
                    "function name": "Base32",
                    "function params": [
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.Base32"
                },
                {
                    "function name": "Base32",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "useHex"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.Base32"
                },
                {
                    "function name": "Base32",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "useHex",
                        "pad"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.Base32"
                },
                {
                    "function name": "Base32",
                    "function params": [
                        "useHex"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.Base32"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.encode"
                },
                {
                    "function name": "Base32",
                    "function params": [
                        "pad"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.Base32"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encode"
                },
                {
                    "function name": "BaseNCodec",
                    "function params": [
                        "unencodedBlockSize",
                        "encodedBlockSize",
                        "lineLength",
                        "chunkSeparatorLength"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.BaseNCodec"
                },
                {
                    "function name": "BaseNCodec",
                    "function params": [
                        "unencodedBlockSize",
                        "encodedBlockSize",
                        "lineLength",
                        "chunkSeparatorLength",
                        "pad"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.BaseNCodec"
                },
                {
                    "function name": "isInAlphabet",
                    "function params": [
                        "arrayOctet",
                        "allowWSPad"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.isInAlphabet"
                },
                {
                    "function name": "containsAlphabetOrPad",
                    "function params": [
                        "arrayOctet"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.containsAlphabetOrPad"
                },
                {
                    "function name": "testBase32SamplesNonDefaultPadding",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"
                },
                {
                    "function name": "testContainsAlphabetOrPad",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"
                },
                {
                    "function name": "testProvidePaddingByte",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.testProvidePaddingByte"
                }
            ],
            "date": "2014-02-24"
        },
        {
            "commit_id": 817,
            "hash": "2e43440c5ddd84a21032ca0cb6bea9dce9c43940",
            "commit_summary": "Organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1571906 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/CharEncodingTest.java",
                "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java",
                "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                "src/test/java/org/apache/commons/codec/language/Caverphone1Test.java",
                "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java",
                "src/test/java/org/apache/commons/codec/language/SoundexTest.java"
            ],
            "functions": [],
            "date": "2014-02-26"
        },
        {
            "commit_id": 818,
            "hash": "627f47f24f13f7dd8bb96a6ac23ce42290b80845",
            "commit_summary": "Fix Javadoc for Java 8.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1585866 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java"
            ],
            "functions": [],
            "date": "2014-04-09"
        },
        {
            "commit_id": 819,
            "hash": "c260d9f378b7a5c5d4c71c5021cf332a31610715",
            "commit_summary": "Add TODO.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1585867 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java"
            ],
            "functions": [],
            "date": "2014-04-09"
        },
        {
            "commit_id": 820,
            "hash": "d9d0eaca911ff6654c71b9eca9349cdffc3e5871",
            "commit_summary": "Sort methods in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1586283 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java"
            ],
            "functions": [
                {
                    "function name": "testCCedilla",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"
                },
                {
                    "function name": "createStringEncoder",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.createStringEncoder"
                },
                {
                    "function name": "testNTilde",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"
                },
                {
                    "function name": "testSetMaxCodeLength",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"
                }
            ],
            "date": "2014-04-10"
        },
        {
            "commit_id": 821,
            "hash": "40a63e663caec98771885f8ea4f10c016cce89fe",
            "commit_summary": "Refactor API calls in lvar.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1586286 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/Metaphone.java"
            ],
            "functions": [
                {
                    "function name": "metaphone",
                    "function params": [
                        "txt"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.metaphone"
                }
            ],
            "date": "2014-04-10"
        },
        {
            "commit_id": 822,
            "hash": "66ba506f5ca0000e8be37b09b053bc58449fc1bd",
            "commit_summary": "Refactor API calls in lvar.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1586298 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/Metaphone.java"
            ],
            "functions": [
                {
                    "function name": "metaphone",
                    "function params": [
                        "txt"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.metaphone"
                }
            ],
            "date": "2014-04-10"
        },
        {
            "commit_id": 823,
            "hash": "8c145775da55fb33104751199a28809acb657c1f",
            "commit_summary": "Checkstyle line length <= 120.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1586299 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java"
            ],
            "functions": [],
            "date": "2014-04-10"
        },
        {
            "commit_id": 824,
            "hash": "37ba197e62d6b60037d18afc33801e6221f1b8c6",
            "commit_summary": "<action dev=\"ggregory\" type=\"add\" issue=\"CODEC-184\" due-to=\"Cyrille Artho\">NullPointerException in DoubleMetaPhone.isDoubleMetaphoneEqual when using empty strings</action>\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1586300 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java"
            ],
            "functions": [
                {
                    "function name": "regionMatches",
                    "function params": [
                        "cs",
                        "ignoreCase",
                        "thisStart",
                        "substring",
                        "start",
                        "length"
                    ],
                    "file name": "CharSequenceUtils.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/binary/CharSequenceUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.CharSequenceUtils.regionMatches"
                },
                {
                    "function name": "equals",
                    "function params": [
                        "cs1",
                        "cs2"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.equals"
                },
                {
                    "function name": "isDoubleMetaphoneEqual",
                    "function params": [
                        "value1",
                        "value2",
                        "alternate"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.isDoubleMetaphoneEqual"
                },
                {
                    "function name": "testCodec184",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184"
                },
                {
                    "function name": "testIsDoubleMetaphoneEqualBasic",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"
                }
            ],
            "date": "2014-04-10"
        },
        {
            "commit_id": 825,
            "hash": "ab77a5e565f978d81d098c5a0ea59483201f4d74",
            "commit_summary": "Added ASL header.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1586336 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/CharSequenceUtils.java"
            ],
            "functions": [],
            "date": "2014-04-10"
        },
        {
            "commit_id": 826,
            "hash": "5dd9e60cb226c571e13832023489e8bc366ce69c",
            "commit_summary": "<action dev=\"ggregory\" type=\"fix\" issue=\"CODEC-187\" due-to=\"Michael Tobias, Thomas Neidhart\">Beider Morse Phonetic Matching producing incorrect tokens</action>\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1602044 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java"
            ],
            "functions": [
                {
                    "function name": "testCompatibilityWithOriginalVersion",
                    "function params": [],
                    "file name": "PhoneticEngineRegressionTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion"
                },
                {
                    "function name": "testSolrGENERIC",
                    "function params": [],
                    "file name": "PhoneticEngineRegressionTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC"
                }
            ],
            "date": "2014-06-11"
        },
        {
            "commit_id": 827,
            "hash": "570431c8502a6705e749b62ebf5519930946a776",
            "commit_summary": "[CODEC-187] Beider Morse Phonetic Matching producing incorrect tokens. Apply patch https://issues.apache.org/jira/secure/attachment/12650479/CODEC-187_ashkenazi_approx_any.patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1603573 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java"
            ],
            "functions": [
                {
                    "function name": "testCompatibilityWithOriginalVersion",
                    "function params": [],
                    "file name": "PhoneticEngineRegressionTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion"
                }
            ],
            "date": "2014-06-18"
        },
        {
            "commit_id": 828,
            "hash": "1189e1b201e0234b54df551804098df18bd9f445",
            "commit_summary": "[CODEC-187] Beider Morse Phonetic Matching producing incorrect tokens. Revert changes from r1603573.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1603614 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java"
            ],
            "functions": [
                {
                    "function name": "testCompatibilityWithOriginalVersion",
                    "function params": [],
                    "file name": "PhoneticEngineRegressionTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion"
                }
            ],
            "date": "2014-06-18"
        },
        {
            "commit_id": 829,
            "hash": "711c2e1aff80dc3205e7a3608a2ac391894d6711",
            "commit_summary": "[CODEC-187] Beider Morse Phonetic Matching producing incorrect tokens. Apply patch https://issues.apache.org/jira/secure/attachment/12651251/CODEC-187_ashkenazi_approx_any_v2.patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1603689 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java"
            ],
            "functions": [
                {
                    "function name": "testSolrASHKENAZI",
                    "function params": [],
                    "file name": "PhoneticEngineRegressionTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"
                },
                {
                    "function name": "testCompatibilityWithOriginalVersion",
                    "function params": [],
                    "file name": "PhoneticEngineRegressionTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion"
                }
            ],
            "date": "2014-06-19"
        },
        {
            "commit_id": 830,
            "hash": "39d5df29fb768fd257f9d328b99f00bc69ec864a",
            "commit_summary": "[CODEC-187] Apply patch to make BeiderMorse phonetic engine compatible with v3.3 of the reference implementation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1608115 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java"
            ],
            "functions": [
                {
                    "function name": "for",
                    "function params": [
                        "s"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Lang.for"
                },
                {
                    "function name": "LanguageSet",
                    "function params": [],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.LanguageSet"
                },
                {
                    "function name": "SomeLanguages",
                    "function params": [
                        "other"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.SomeLanguages"
                },
                {
                    "function name": "applyFinalRules",
                    "function params": [
                        "phonemeBuilder",
                        "finalRules"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules"
                },
                {
                    "function name": "Phoneme",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "Phoneme",
                    "function params": [
                        "lang"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "parseRules",
                    "function params": [
                        "scanner",
                        "location"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.parseRules"
                },
                {
                    "function name": "testCompatibilityWithOriginalVersion",
                    "function params": [],
                    "file name": "PhoneticEngineRegressionTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion"
                },
                {
                    "function name": "data",
                    "function params": [],
                    "file name": "PhoneticEngineTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineTest.data"
                }
            ],
            "date": "2014-07-05"
        },
        {
            "commit_id": 831,
            "hash": "7bf48eefb3dc9fa049f2f0411ebffdd46cea84c8",
            "commit_summary": "Javadoc 8.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1619948 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/DecoderException.java",
                "src/main/java/org/apache/commons/codec/EncoderException.java",
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                "src/main/java/org/apache/commons/codec/binary/CharSequenceUtils.java",
                "src/main/java/org/apache/commons/codec/binary/Hex.java",
                "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                "src/main/java/org/apache/commons/codec/language/AbstractCaverphone.java",
                "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                "src/main/java/org/apache/commons/codec/net/QCodec.java",
                "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java"
            ],
            "functions": [],
            "date": "2014-08-22"
        },
        {
            "commit_id": 832,
            "hash": "cd07a9721ed81850d97a2effc26a82154d6d3d29",
            "commit_summary": "Javadoc 8.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1619949 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32.java"
            ],
            "functions": [
                {
                    "function name": "HmacAlgorithms",
                    "function params": [
                        "algorithm"
                    ],
                    "file name": "HmacAlgorithms.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacAlgorithms.HmacAlgorithms"
                },
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "HmacAlgorithms.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacAlgorithms.toString"
                },
                {
                    "function name": "hmacSha384Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha384Hex"
                },
                {
                    "function name": "hmacSha1Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha1Hex"
                },
                {
                    "function name": "hmacMd5Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacMd5Hex"
                },
                {
                    "function name": "hmacMd5",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacMd5"
                },
                {
                    "function name": "getHmacSha512",
                    "function params": [
                        "key"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.getHmacSha512"
                },
                {
                    "function name": "getInitializedMac",
                    "function params": [
                        "algorithm",
                        "key"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.getInitializedMac"
                },
                {
                    "function name": "getHmacSha256",
                    "function params": [
                        "key"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.getHmacSha256"
                },
                {
                    "function name": "hmacSha256",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha256"
                },
                {
                    "function name": "hmacSha1Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha1Hex"
                },
                {
                    "function name": "hmacSha1",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha1"
                },
                {
                    "function name": "hmacSha1Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha1Hex"
                },
                {
                    "function name": "hmacSha1",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha1"
                },
                {
                    "function name": "updateHmac",
                    "function params": [
                        "mac",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.updateHmac"
                },
                {
                    "function name": "getHmacMd5",
                    "function params": [
                        "key"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.getHmacMd5"
                },
                {
                    "function name": "hmacSha512Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha512Hex"
                },
                {
                    "function name": "hmacSha512Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha512Hex"
                },
                {
                    "function name": "getInitializedMac",
                    "function params": [
                        "algorithm",
                        "key"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.getInitializedMac"
                },
                {
                    "function name": "hmacSha384",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha384"
                },
                {
                    "function name": "hmacSha512",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha512"
                },
                {
                    "function name": "hmacSha512",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha512"
                },
                {
                    "function name": "hmacSha512",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha512"
                },
                {
                    "function name": "hmacSha256Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha256Hex"
                },
                {
                    "function name": "hmacMd5",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacMd5"
                },
                {
                    "function name": "hmacMd5Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacMd5Hex"
                },
                {
                    "function name": "hmacSha384",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha384"
                },
                {
                    "function name": "updateHmac",
                    "function params": [
                        "mac",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.updateHmac"
                },
                {
                    "function name": "hmacSha256",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha256"
                },
                {
                    "function name": "hmacSha512Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha512Hex"
                },
                {
                    "function name": "getHmacSha1",
                    "function params": [
                        "key"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.getHmacSha1"
                },
                {
                    "function name": "hmacSha384",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha384"
                },
                {
                    "function name": "hmacSha384Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha384Hex"
                },
                {
                    "function name": "hmacSha1",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha1"
                },
                {
                    "function name": "hmacSha256Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha256Hex"
                },
                {
                    "function name": "hmacSha384Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha384Hex"
                },
                {
                    "function name": "hmacSha256",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha256"
                },
                {
                    "function name": "getHmacSha384",
                    "function params": [
                        "key"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.getHmacSha384"
                },
                {
                    "function name": "hmacSha256Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha256Hex"
                },
                {
                    "function name": "updateHmac",
                    "function params": [
                        "mac",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.updateHmac"
                },
                {
                    "function name": "hmacMd5Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacMd5Hex"
                },
                {
                    "function name": "hmacMd5",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacMd5"
                },
                {
                    "function name": "testSha512HMacFail",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail"
                },
                {
                    "function name": "testInitializedMacNullKey",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey"
                },
                {
                    "function name": "testHmacMd5Hex",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex"
                },
                {
                    "function name": "testEmptyKey",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey"
                },
                {
                    "function name": "testSha256HMac",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac"
                },
                {
                    "function name": "testHmacSha1UpdateWithByteArray",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray"
                },
                {
                    "function name": "testConstructor",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testConstructor"
                },
                {
                    "function name": "testSha256HMacFail",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail"
                },
                {
                    "function name": "testInternalNoSuchAlgorithmException",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testInternalNoSuchAlgorithmException"
                },
                {
                    "function name": "testNullKey",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testNullKey"
                },
                {
                    "function name": "testInitializedMac",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac"
                },
                {
                    "function name": "testSha384HMac",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac"
                },
                {
                    "function name": "testSha1HMacFail",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail"
                },
                {
                    "function name": "testHmacSha1UpdateWithString",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString"
                },
                {
                    "function name": "testSha384HMacFail",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail"
                },
                {
                    "function name": "testInitializedMacNullAlgo",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullAlgo"
                },
                {
                    "function name": "testMd5HMac",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac"
                },
                {
                    "function name": "testSecretKeySpecAllowsEmtyKeys",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testSecretKeySpecAllowsEmtyKeys"
                },
                {
                    "function name": "testHmacSha1UpdateWithInpustream",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream"
                },
                {
                    "function name": "testMd5HMacFail",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail"
                },
                {
                    "function name": "testHmacSha1Hex",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex"
                },
                {
                    "function name": "testGetHMac",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac"
                },
                {
                    "function name": "testSha1HMac",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac"
                },
                {
                    "function name": "testSha512HMac",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac"
                }
            ],
            "date": "2014-08-22"
        },
        {
            "commit_id": 833,
            "hash": "d0ab3c889508e84f0f08fbf9ba7931a94bd8c839",
            "commit_summary": "Fix Javadoc 8 error.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1634404 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java"
            ],
            "functions": [],
            "date": "2014-10-26"
        },
        {
            "commit_id": 834,
            "hash": "d18de6baa740beb3e112e96c147af5296a3da781",
            "commit_summary": "Fix Javadoc bad link.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1634405 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java"
            ],
            "functions": [],
            "date": "2014-10-26"
        },
        {
            "commit_id": 835,
            "hash": "8b3653712323de2d9286f1c5e8453bcdc93aedca",
            "commit_summary": "Fix Javadoc bad link.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1634406 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java"
            ],
            "functions": [],
            "date": "2014-10-26"
        },
        {
            "commit_id": 836,
            "hash": "112806027300defb068b44639d86f028d0ab692a",
            "commit_summary": "Fix Javadoc bad link.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1634407 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java"
            ],
            "functions": [],
            "date": "2014-10-26"
        },
        {
            "commit_id": 837,
            "hash": "cc52a7a47fc767a5a218e0cd77989c08ed7f9a60",
            "commit_summary": "Add missing Javadoc @throws.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1634411 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java"
            ],
            "functions": [],
            "date": "2014-10-27"
        },
        {
            "commit_id": 838,
            "hash": "9fc25d43b4a57b88bfdc1d51cfb0553289cf5d62",
            "commit_summary": "Add missing Javadoc @throws text.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1634413 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/AbstractCaverphone.java"
            ],
            "functions": [],
            "date": "2014-10-27"
        },
        {
            "commit_id": 839,
            "hash": "456097d9f36fb551f233ee67e597c435992c7ac3",
            "commit_summary": "Add missing Javadoc @param text.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1634414 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [],
            "date": "2014-10-27"
        },
        {
            "commit_id": 840,
            "hash": "d5949d0969cec0d2f036325ed9f0645f69a48c71",
            "commit_summary": "Fix Javadoc 8 error.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1634415 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [],
            "date": "2014-10-27"
        },
        {
            "commit_id": 841,
            "hash": "4188997e3f00f47a8a98546cdb1f0b9f8423f0a1",
            "commit_summary": "Fix Javadoc 8 error.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1634416 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [],
            "date": "2014-10-27"
        },
        {
            "commit_id": 842,
            "hash": "05220e0153e509b0d6f8c32d9579d87dd3c82c54",
            "commit_summary": "Plain /* */ comments suffice for these two protected methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1634417 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java"
            ],
            "functions": [],
            "date": "2014-10-27"
        },
        {
            "commit_id": 843,
            "hash": "90a212cd2572ec30d69b2e2492671b1c93901732",
            "commit_summary": "Add missing Javadoc @param text.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1634418 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java"
            ],
            "functions": [],
            "date": "2014-10-27"
        },
        {
            "commit_id": 844,
            "hash": "7b6f71dd0f65952ed9cba0d76f1aa26c41161056",
            "commit_summary": "Add missing Javadoc tags.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1634419 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java"
            ],
            "functions": [],
            "date": "2014-10-27"
        },
        {
            "commit_id": 845,
            "hash": "9bf6f26fcd41b90686e6ed0b4d25abe54ac861a3",
            "commit_summary": "Checkstyle: Line is longer than 120 characters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1634427 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java"
            ],
            "functions": [],
            "date": "2014-10-27"
        },
        {
            "commit_id": 846,
            "hash": "83794caf98ec830c302f016a42573b7df6f030f9",
            "commit_summary": "Checkstyle: Line is longer than 120 characters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1634428 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [],
            "date": "2014-10-27"
        },
        {
            "commit_id": 847,
            "hash": "52c62086777545f25677137d8b17b3735f0bbb2b",
            "commit_summary": "Checkstyle: Line is longer than 120 characters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1634429 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java"
            ],
            "functions": [],
            "date": "2014-10-27"
        },
        {
            "commit_id": 848,
            "hash": "39b770325f695578e6c5ae3f8974eca0de3ed5c3",
            "commit_summary": "Checkstyle: Line is longer than 120 characters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1634430 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java"
            ],
            "functions": [],
            "date": "2014-10-27"
        },
        {
            "commit_id": 849,
            "hash": "a169746c427ab8d31ee38457dcbf52c33fe920b0",
            "commit_summary": "Checkstyle: Line has trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1634431 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/CharSequenceUtils.java"
            ],
            "functions": [],
            "date": "2014-10-27"
        },
        {
            "commit_id": 850,
            "hash": "09a6f097f8a44f3161235327b872d1ac2f4d9ea4",
            "commit_summary": "Checkstyle: Line is longer than 120 characters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1634432 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/StringUtils.java"
            ],
            "functions": [],
            "date": "2014-10-27"
        },
        {
            "commit_id": 851,
            "hash": "42fdabacf35e9b8f045055871a0b56fdd1586925",
            "commit_summary": "Checkstyle: Line is longer than 120 characters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1634433 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [],
            "date": "2014-10-27"
        },
        {
            "commit_id": 852,
            "hash": "30c5463395d76cbcc1131090964e9c5f64d7195f",
            "commit_summary": "Checkstyle: Line is longer than 120 characters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1634434 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [],
            "date": "2014-10-27"
        },
        {
            "commit_id": 853,
            "hash": "9b140df6364d65493360b305db916ca54d0a3813",
            "commit_summary": "Checkstyle: Line is longer than 120 characters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1634435 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java"
            ],
            "functions": [],
            "date": "2014-10-27"
        },
        {
            "commit_id": 854,
            "hash": "a600bbfd622e4d225ad3b8e6cf3334df3cd6e19e",
            "commit_summary": "Checkstyle.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1634455 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/CharSequenceUtils.java"
            ],
            "functions": [
                {
                    "function name": "regionMatches",
                    "function params": [
                        "cs",
                        "ignoreCase",
                        "thisStart",
                        "substring",
                        "start",
                        "length"
                    ],
                    "file name": "CharSequenceUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/CharSequenceUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/CharSequenceUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.CharSequenceUtils.regionMatches"
                }
            ],
            "date": "2014-10-27"
        },
        {
            "commit_id": 855,
            "hash": "9164cd83b44ae9e83bd11c50a5e59e8c6887771e",
            "commit_summary": "Checkstyle: Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1634456 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java"
            ],
            "functions": [
                {
                    "function name": "testBase32SamplesNonDefaultPadding",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"
                },
                {
                    "function name": "testProvidePaddingByte",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.testProvidePaddingByte"
                },
                {
                    "function name": "testIsDoubleMetaphoneEqualBasic",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"
                }
            ],
            "date": "2014-10-27"
        },
        {
            "commit_id": 856,
            "hash": "2fa5d5c17107f2194d16b9a7d1b6d277aedba3d3",
            "commit_summary": "Use @code in Javadoc. Typo.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1635204 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Crypt.java"
            ],
            "functions": [],
            "date": "2014-10-29"
        },
        {
            "commit_id": 857,
            "hash": "49ec4b5d656e8e16d508b04945ad327612d555da",
            "commit_summary": "Typo.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1635205 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Crypt.java"
            ],
            "functions": [],
            "date": "2014-10-29"
        },
        {
            "commit_id": 858,
            "hash": "227aa204152883a628ec980f2ae2c2ef31ed1344",
            "commit_summary": "Better test reports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1635647 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/bm/LanguageGuessingTest.java"
            ],
            "functions": [],
            "date": "2014-10-31"
        },
        {
            "commit_id": 859,
            "hash": "05bcf7d1cda34baa41333da83b0d743b6ad4d658",
            "commit_summary": "Better test reports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1635649 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java"
            ],
            "functions": [],
            "date": "2014-10-31"
        },
        {
            "commit_id": 860,
            "hash": "d2d757416ed62f48afc65e570c08f7c08315a98f",
            "commit_summary": "[CODEC-191] Added clarification to Base32 and Base64 OutputStream that calling close() is mandatory.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1635952 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java"
            ],
            "functions": [],
            "date": "2014-11-01"
        },
        {
            "commit_id": 861,
            "hash": "2cb32b82b22da4e36cd12778ba98637843bbcf06",
            "commit_summary": "[CODEC-185] Added clarification concerning the use of the urlSafe parameter to Base64.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1635986 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [],
            "date": "2014-11-01"
        },
        {
            "commit_id": 862,
            "hash": "2b1e98f2744aaa514b75b7f90c0838fc897b4348",
            "commit_summary": "Change recently added method to package private to avoid a Clirr error. Fix typos.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1636435 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/Languages.java"
            ],
            "functions": [],
            "date": "2014-11-03"
        },
        {
            "commit_id": 863,
            "hash": "5b2806103d5e6d4a7a6df1ebc8d88005ad7731be",
            "commit_summary": "[CODEC-192] Add Daitch\u2013Mokotoff Soundex.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1636486 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "soundex",
                    "function params": [
                        "source",
                        "branching"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex"
                },
                {
                    "function name": "cleanup",
                    "function params": [
                        "input"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.cleanup"
                },
                {
                    "function name": "Branch",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch"
                },
                {
                    "function name": "Rule",
                    "function params": [
                        "pattern",
                        "replacementAtStart",
                        "replacementBeforeVowel",
                        "replacementDefault"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "source"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.encode"
                },
                {
                    "function name": "DaitchMokotoffSoundex",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.DaitchMokotoffSoundex"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.encode"
                },
                {
                    "function name": "Branch",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch"
                },
                {
                    "function name": "Branch",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch"
                },
                {
                    "function name": "Branch",
                    "function params": [
                        "other"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch"
                },
                {
                    "function name": "soundex",
                    "function params": [
                        "source"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex"
                },
                {
                    "function name": "Branch",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch"
                },
                {
                    "function name": "Rule",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule"
                },
                {
                    "function name": "Rule",
                    "function params": [
                        "context",
                        "atStart"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule"
                },
                {
                    "function name": "Rule",
                    "function params": [
                        "ch"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule"
                },
                {
                    "function name": "Branch",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch"
                },
                {
                    "function name": "for",
                    "function params": [
                        "rule"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.for"
                },
                {
                    "function name": "if",
                    "function params": [
                        "rulesIS"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.if"
                },
                {
                    "function name": "stripQuotes",
                    "function params": [
                        "str"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes"
                },
                {
                    "function name": "Branch",
                    "function params": [
                        "replacement",
                        "forceAppend"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch"
                },
                {
                    "function name": "DaitchMokotoffSoundex",
                    "function params": [
                        "folding"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.DaitchMokotoffSoundex"
                },
                {
                    "function name": "Rule",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule"
                },
                {
                    "function name": "parseRules",
                    "function params": [
                        "scanner",
                        "location",
                        "ruleMapping",
                        "asciiFoldings"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules"
                },
                {
                    "function name": "Rule",
                    "function params": [
                        "context"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule"
                },
                {
                    "function name": "testSoundexBasic3",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundexTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3"
                },
                {
                    "function name": "testSoundexBasic",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundexTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic"
                },
                {
                    "function name": "testEncodeBasic",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundexTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeBasic"
                },
                {
                    "function name": "createStringEncoder",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundexTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DaitchMokotoffSoundexTest.createStringEncoder"
                },
                {
                    "function name": "testEncodeIgnoreTrimmable",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundexTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable"
                },
                {
                    "function name": "testAccentedCharacterFolding",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundexTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding"
                },
                {
                    "function name": "testEncodeIgnoreApostrophes",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundexTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes"
                },
                {
                    "function name": "testSpecialRomanianCharacters",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundexTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters"
                },
                {
                    "function name": "testAdjacentCodes",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundexTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes"
                },
                {
                    "function name": "testEncodeIgnoreHyphens",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundexTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens"
                },
                {
                    "function name": "testSoundexBasic2",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundexTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2"
                }
            ],
            "date": "2014-11-04"
        },
        {
            "commit_id": 864,
            "hash": "aed6d321b3407daa36ee6a0f0a44deca05d17352",
            "commit_summary": "Minor refactoring.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1636488 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "source"
                    ],
                    "file name": "DaitchMokotoffSoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DaitchMokotoffSoundexTest.encode"
                },
                {
                    "function name": "testSoundexBasic",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic"
                },
                {
                    "function name": "testEncodeBasic",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeBasic"
                },
                {
                    "function name": "testEncodeIgnoreTrimmable",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable"
                },
                {
                    "function name": "testAccentedCharacterFolding",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding"
                },
                {
                    "function name": "soundex",
                    "function params": [
                        "source"
                    ],
                    "file name": "DaitchMokotoffSoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DaitchMokotoffSoundexTest.soundex"
                },
                {
                    "function name": "testSpecialRomanianCharacters",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters"
                },
                {
                    "function name": "testAdjacentCodes",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes"
                },
                {
                    "function name": "testSoundexBasic3",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3"
                },
                {
                    "function name": "testSoundexBasic2",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2"
                }
            ],
            "date": "2014-11-04"
        },
        {
            "commit_id": 865,
            "hash": "2118816d94129503b695990224d9edff3560b3ef",
            "commit_summary": "Javadoc typos: ascii -> ASCII.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1636489 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java"
            ],
            "functions": [],
            "date": "2014-11-04"
        },
        {
            "commit_id": 866,
            "hash": "38cc09c6bc617c0bb6ebbe32756e39cb3ea35d1b",
            "commit_summary": "Fix Javadoc 8 errors.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1636492 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java"
            ],
            "functions": [],
            "date": "2014-11-04"
        },
        {
            "commit_id": 867,
            "hash": "83af056059bd781b6104caba38558cc4b5257220",
            "commit_summary": "Remove comments after re-ordering, re-order static fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1636515 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java"
            ],
            "functions": [],
            "date": "2014-11-04"
        },
        {
            "commit_id": 868,
            "hash": "0110214af6a802b2c7abc4f7151eab7595036478",
            "commit_summary": "[CODEC-187] Update Beider-Morse rules to v3.4.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1636703 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java"
            ],
            "functions": [
                {
                    "function name": "data",
                    "function params": [],
                    "file name": "PhoneticEngineTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineTest.data"
                }
            ],
            "date": "2014-11-04"
        },
        {
            "commit_id": 869,
            "hash": "bdc77f1b289f349e09051b482d7b4efbc6cd9f6f",
            "commit_summary": "[CODEC-121] QuotedPrintableCodec does not support soft line break per the 'quoted-printable' example on Wikipedia. Apply patch from TN.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1637008 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "isWhitespace",
                    "function params": [
                        "b"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace"
                },
                {
                    "function name": "QuotedPrintableCodec",
                    "function params": [
                        "charset",
                        "strict"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec"
                },
                {
                    "function name": "QuotedPrintableCodec",
                    "function params": [
                        "charsetName"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec"
                },
                {
                    "function name": "QuotedPrintableCodec",
                    "function params": [
                        "strict"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec"
                },
                {
                    "function name": "QuotedPrintableCodec",
                    "function params": [],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec"
                },
                {
                    "function name": "decodeQuotedPrintable",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable"
                },
                {
                    "function name": "getUnsignedOctet",
                    "function params": [
                        "index",
                        "bytes"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet"
                },
                {
                    "function name": "QuotedPrintableCodec",
                    "function params": [
                        "charset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec"
                },
                {
                    "function name": "encodeQuotedPrintable",
                    "function params": [
                        "printable",
                        "bytes",
                        "strict"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable"
                },
                {
                    "function name": "encodeQuotedPrintable",
                    "function params": [
                        "printable",
                        "bytes"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable"
                },
                {
                    "function name": "encodeByte",
                    "function params": [
                        "b",
                        "encode",
                        "buffer"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte"
                },
                {
                    "function name": "encodeQuotedPrintable",
                    "function params": [
                        "b",
                        "buffer"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "testSoftLineBreakEncode",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"
                },
                {
                    "function name": "testSoftLineBreakDecode",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"
                },
                {
                    "function name": "testSkipNotEncodedCRLF",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"
                },
                {
                    "function name": "testTrailingSpecial",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"
                },
                {
                    "function name": "testUltimateSoftBreak",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"
                },
                {
                    "function name": "testFinalBytes",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"
                }
            ],
            "date": "2014-11-05"
        },
        {
            "commit_id": 870,
            "hash": "722c81702112ae07b8fe1f57612a5e82e93e00b6",
            "commit_summary": "Fix checkstyle warnings.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1637069 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java"
            ],
            "functions": [
                {
                    "function name": "encodeQuotedPrintable",
                    "function params": [
                        "printable",
                        "bytes",
                        "strict"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable"
                }
            ],
            "date": "2014-11-06"
        },
        {
            "commit_id": 871,
            "hash": "0929762d9dc10ccc62c7a227f69cd831e2bfb1b8",
            "commit_summary": "Move static var decl.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1637832 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [],
            "date": "2014-11-10"
        },
        {
            "commit_id": 872,
            "hash": "199019d04c26b9aea45c77be6634ba3a49122470",
            "commit_summary": "Fix method name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1637835 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [
                {
                    "function name": "testDecodeEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeEmpty"
                }
            ],
            "date": "2014-11-10"
        },
        {
            "commit_id": 873,
            "hash": "13c152582e5f72fad13a42e1eebfbd8c6c848c01",
            "commit_summary": "Better test method names.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1637837 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [
                {
                    "function name": "testEncodeHexBytesHelloWorldLowerCaseHex",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexBytesHelloWorldLowerCaseHex"
                },
                {
                    "function name": "testEncodeHexBytesHelloWorldUpperCaseHex",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexBytesHelloWorldUpperCaseHex"
                }
            ],
            "date": "2014-11-10"
        },
        {
            "commit_id": 874,
            "hash": "85d3cefb485fa6f34ce0893ff4ad795dafea8b6f",
            "commit_summary": "Better test method names.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1637838 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [
                {
                    "function name": "testEncodeHexBytesZeroes",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexBytesZeroes"
                }
            ],
            "date": "2014-11-10"
        },
        {
            "commit_id": 875,
            "hash": "fbda264f3c25c6db302f4a44eb71b70f24553ece",
            "commit_summary": "Split test method in two.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1637840 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [
                {
                    "function name": "testEncodeHexBytesEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexBytesEmpty"
                },
                {
                    "function name": "testEncodeStringEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeStringEmpty"
                }
            ],
            "date": "2014-11-10"
        },
        {
            "commit_id": 876,
            "hash": "c8ebfacdb707f08a919f9c4231bae2fe821230c2",
            "commit_summary": "Better test method names.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1637841 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [
                {
                    "function name": "testDecodeHexCharArrayOddCharacters3",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters3"
                },
                {
                    "function name": "testDecodeHexCharArrayOddCharacters5",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters5"
                },
                {
                    "function name": "testDecodeHexCharArrayOddCharacters1",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters1"
                },
                {
                    "function name": "checkDecodeHexCharArrayOddCharacters",
                    "function params": [
                        "data"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.checkDecodeHexCharArrayOddCharacters"
                }
            ],
            "date": "2014-11-10"
        },
        {
            "commit_id": 877,
            "hash": "845c2f7c2659427ebae2f186c237c94c763af335",
            "commit_summary": "Split test method in two.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1637844 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [
                {
                    "function name": "testDecodeByteArrayEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeByteArrayEmpty"
                },
                {
                    "function name": "testDecodeStringEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeStringEmpty"
                }
            ],
            "date": "2014-11-10"
        },
        {
            "commit_id": 878,
            "hash": "d9be5752c4ebb4ccf1b054bd8c1367bd8215884c",
            "commit_summary": "Better test method names.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1637846 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [
                {
                    "function name": "testDecodeHexStringOddCharacters",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters"
                }
            ],
            "date": "2014-11-10"
        },
        {
            "commit_id": 879,
            "hash": "485db150d852d634d21e103040640edfc7dab8b6",
            "commit_summary": "Better test method names.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1637849 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [
                {
                    "function name": "testEncodeHexByteArrayHelloWorldUpperCaseHex",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldUpperCaseHex"
                },
                {
                    "function name": "testDecodeByteArrayOddCharacters",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeByteArrayOddCharacters"
                },
                {
                    "function name": "testEncodeHexByteArrayEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayEmpty"
                },
                {
                    "function name": "testEncodeHexByteArrayZeroes",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayZeroes"
                },
                {
                    "function name": "testEncodeHexByteArrayHelloWorldLowerCaseHex",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex"
                }
            ],
            "date": "2014-11-10"
        },
        {
            "commit_id": 880,
            "hash": "7f5a9acc5ffc84dd1890f17fe01274ae1007f0ae",
            "commit_summary": "Sort test methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1637850 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [
                {
                    "function name": "testDecodeByteArrayEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeByteArrayEmpty"
                },
                {
                    "function name": "testDecodeBadCharacterPos0",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"
                },
                {
                    "function name": "testEncodeStringEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeStringEmpty"
                },
                {
                    "function name": "testDecodeByteArrayOddCharacters",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeByteArrayOddCharacters"
                },
                {
                    "function name": "testEncodeHexByteArrayZeroes",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayZeroes"
                },
                {
                    "function name": "testDecodeBadCharacterPos1",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"
                }
            ],
            "date": "2014-11-10"
        },
        {
            "commit_id": 881,
            "hash": "8801ec748fbf50a357ac20629808433e16288dea",
            "commit_summary": "Split test method in two.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1637853 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [
                {
                    "function name": "testDecodeCharArrayEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeCharArrayEmpty"
                },
                {
                    "function name": "testDecodeByteArrayEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeByteArrayEmpty"
                }
            ],
            "date": "2014-11-10"
        },
        {
            "commit_id": 882,
            "hash": "c5154bc584847d19e75c421b71e2f3499164d2a9",
            "commit_summary": "[CODEC-194] Support java.nio.ByteBuffer in org.apache.commons.codec.binary.Hex.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1637888 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Hex.java",
                "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                "src/test/java/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [
                {
                    "function name": "decode",
                    "function params": [
                        "object"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.decode"
                },
                {
                    "function name": "encodeHex",
                    "function params": [
                        "data",
                        "toLowerCase"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHex"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "object"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encode"
                },
                {
                    "function name": "encodeHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHex"
                },
                {
                    "function name": "encodeHexString",
                    "function params": [
                        "data"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHexString"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "buffer"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.decode"
                },
                {
                    "function name": "encodeHex",
                    "function params": [
                        "data",
                        "toDigits"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHex"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "array"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encode"
                },
                {
                    "function name": "getByteBufferUtf8",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.getByteBufferUtf8"
                },
                {
                    "function name": "getByteBuffer",
                    "function params": [
                        "string",
                        "charset"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.getByteBuffer"
                },
                {
                    "function name": "testDecodeByteBufferObjectEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeByteBufferObjectEmpty"
                },
                {
                    "function name": "testDecodeByteArrayObjectEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeByteArrayObjectEmpty"
                },
                {
                    "function name": "testDecodeHexCharArrayOddCharacters5",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters5"
                },
                {
                    "function name": "testDecodeByteBufferEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeByteBufferEmpty"
                },
                {
                    "function name": "testDecodeHexCharArrayOddCharacters1",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters1"
                },
                {
                    "function name": "testGetCharsetName",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testGetCharsetName"
                },
                {
                    "function name": "testEncodeHexByteBufferZeroes",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferZeroes"
                },
                {
                    "function name": "testDecodeClassCastException",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"
                },
                {
                    "function name": "testEncodeHexByteBufferEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferEmpty"
                },
                {
                    "function name": "testGetCharset",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testGetCharset"
                },
                {
                    "function name": "testEncodeHexByteBufferHelloWorldUpperCaseHex",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldUpperCaseHex"
                },
                {
                    "function name": "testDecodeHexCharArrayOddCharacters3",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters3"
                },
                {
                    "function name": "testCustomCharset",
                    "function params": [
                        "name",
                        "parent"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testCustomCharset"
                },
                {
                    "function name": "testEncodeClassCastException",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"
                },
                {
                    "function name": "testEncodeByteBufferObjectEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeByteBufferObjectEmpty"
                },
                {
                    "function name": "testEncodeByteBufferEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeByteBufferEmpty"
                },
                {
                    "function name": "testDecodeByteArrayOddCharacters",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeByteArrayOddCharacters"
                },
                {
                    "function name": "testEncodeHexByteBufferHelloWorldLowerCaseHex",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldLowerCaseHex"
                },
                {
                    "function name": "testDecodeByteBufferOddCharacters",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeByteBufferOddCharacters"
                },
                {
                    "function name": "testEncodeByteArrayEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeByteArrayEmpty"
                },
                {
                    "function name": "testEncodeByteArrayObjectEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeByteArrayObjectEmpty"
                }
            ],
            "date": "2014-11-10"
        },
        {
            "commit_id": 883,
            "hash": "4063338a3c8c87657a75c3c45a8b69560fee0e57",
            "commit_summary": "Sort test methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1637889 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [
                {
                    "function name": "testDecodeByteBufferObjectEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeByteBufferObjectEmpty"
                },
                {
                    "function name": "testDecodeByteArrayObjectEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeByteArrayObjectEmpty"
                },
                {
                    "function name": "testEncodeHexByteArrayHelloWorldUpperCaseHex",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldUpperCaseHex"
                },
                {
                    "function name": "testDecodeByteBufferEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeByteBufferEmpty"
                },
                {
                    "function name": "testDecodeCharArrayEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeCharArrayEmpty"
                },
                {
                    "function name": "testEncodeHexByteArrayZeroes",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayZeroes"
                },
                {
                    "function name": "testEncodeHexByteBufferEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferEmpty"
                },
                {
                    "function name": "testEncodeByteBufferObjectEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeByteBufferObjectEmpty"
                },
                {
                    "function name": "testEncodeByteBufferEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeByteBufferEmpty"
                },
                {
                    "function name": "testEncodeHexByteBufferHelloWorldLowerCaseHex",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldLowerCaseHex"
                },
                {
                    "function name": "testEncodeByteArrayEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeByteArrayEmpty"
                },
                {
                    "function name": "testEncodeByteArrayObjectEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeByteArrayObjectEmpty"
                }
            ],
            "date": "2014-11-10"
        },
        {
            "commit_id": 884,
            "hash": "803e5eef54ae9033a4e180e9d7828dacd2db3dd0",
            "commit_summary": "[CODEC-193] Support java.nio.ByteBuffer in DigestUtils\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1637907 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "digest",
                    "function params": [
                        "messageDigest",
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.digest"
                },
                {
                    "function name": "sha512",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512"
                },
                {
                    "function name": "md5Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md5Hex"
                },
                {
                    "function name": "sha256",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha256"
                },
                {
                    "function name": "md5",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md5"
                },
                {
                    "function name": "md2Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md2Hex"
                },
                {
                    "function name": "sha256Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha256Hex"
                },
                {
                    "function name": "md2",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md2"
                },
                {
                    "function name": "updateDigest",
                    "function params": [
                        "messageDigest",
                        "valueToDigest"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.updateDigest"
                },
                {
                    "function name": "sha1Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha1Hex"
                },
                {
                    "function name": "sha384",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha384"
                },
                {
                    "function name": "sha1",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha1"
                },
                {
                    "function name": "sha384Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha384Hex"
                },
                {
                    "function name": "sha512Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512Hex"
                },
                {
                    "function name": "testMd5HexLengthForByteBuffer",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForByteBuffer"
                },
                {
                    "function name": "testSha1UpdateWithByteBuffer",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteBuffer"
                },
                {
                    "function name": "testMd5HexLengthForBytes",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForBytes"
                },
                {
                    "function name": "testMd5LengthForByteBuffer",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForByteBuffer"
                },
                {
                    "function name": "testSha384",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha384"
                },
                {
                    "function name": "testMd5LengthForBytes",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForBytes"
                },
                {
                    "function name": "testSha256",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha256"
                },
                {
                    "function name": "testMd2Hex",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"
                },
                {
                    "function name": "testMd5Hex",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"
                },
                {
                    "function name": "testSha512",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha512"
                },
                {
                    "function name": "testSha1Hex",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"
                }
            ],
            "date": "2014-11-10"
        },
        {
            "commit_id": 885,
            "hash": "b88b3870a996b61ae6a1f865586c97794a1f3038",
            "commit_summary": "Sort new methods from previous commit.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1637908 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [
                {
                    "function name": "sha",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha"
                },
                {
                    "function name": "sha512",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512"
                },
                {
                    "function name": "sha",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha"
                },
                {
                    "function name": "sha256",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha256"
                },
                {
                    "function name": "md5Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md5Hex"
                },
                {
                    "function name": "md2",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md2"
                },
                {
                    "function name": "sha1",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha1"
                },
                {
                    "function name": "sha384",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha384"
                },
                {
                    "function name": "sha1",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha1"
                }
            ],
            "date": "2014-11-10"
        },
        {
            "commit_id": 886,
            "hash": "1596d05f667f0eaee70f3c8478fcaf67eed55002",
            "commit_summary": "TODO 2.0.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1637909 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java"
            ],
            "functions": [],
            "date": "2014-11-10"
        },
        {
            "commit_id": 887,
            "hash": "9bc3701fc327a1730381bea688f62da60891fd40",
            "commit_summary": "[CODEC-195] Support SHA-224 in DigestUtils on Java 8.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1637936 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java",
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "sha224",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha224"
                },
                {
                    "function name": "sha224Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha224Hex"
                },
                {
                    "function name": "sha224Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha224Hex"
                },
                {
                    "function name": "sha224Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha224Hex"
                },
                {
                    "function name": "sha224",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha224"
                },
                {
                    "function name": "sha224",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha224"
                },
                {
                    "function name": "sha224Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha224Hex"
                },
                {
                    "function name": "getSha224Digest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getSha224Digest"
                },
                {
                    "function name": "sha224",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha224"
                },
                {
                    "function name": "testSha224",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha224"
                }
            ],
            "date": "2014-11-10"
        },
        {
            "commit_id": 888,
            "hash": "fb09a1d1244fe0331a05418f5ccd32b62f2200e7",
            "commit_summary": "[CODEC-183] BaseNCodecOutputStream only supports writing EOF on close().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1640000 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java"
            ],
            "functions": [
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.close"
                },
                {
                    "function name": "eof",
                    "function params": [],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.eof"
                }
            ],
            "date": "2014-11-16"
        },
        {
            "commit_id": 889,
            "hash": "b515228199914ea1767d707bf861b3e8efbaa41e",
            "commit_summary": "[CODEC-183] BaseNCodecOutputStream only supports writing EOF on close().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1640002 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java"
            ],
            "functions": [],
            "date": "2014-11-16"
        },
        {
            "commit_id": 890,
            "hash": "5ea4d8ad05fa39e7afadebd0f75538e2978ae1b0",
            "commit_summary": "Javdoc typo.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1667895 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/Soundex.java"
            ],
            "functions": [],
            "date": "2015-03-19"
        },
        {
            "commit_id": 891,
            "hash": "8fc193527df27beeeb638e6e812e8c4df6c72f46",
            "commit_summary": "\"Ashcroft\" is also coded as A261.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1668417 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/SoundexTest.java"
            ],
            "functions": [
                {
                    "function name": "testHWRuleEx1",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"
                }
            ],
            "date": "2015-03-22"
        },
        {
            "commit_id": 892,
            "hash": "28b7b958d39730fc278fd1919bf335c52133a1a2",
            "commit_summary": "[CODEC-199] Bug in HW rule in Soundex.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1668441 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/Soundex.java",
                "src/test/java/org/apache/commons/codec/language/SoundexTest.java"
            ],
            "functions": [
                {
                    "function name": "getMappingCode",
                    "function params": [
                        "str",
                        "index"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.getMappingCode"
                },
                {
                    "function name": "testHWRuleEx1",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"
                },
                {
                    "function name": "testWikipediaAmericanSoundex",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testWikipediaAmericanSoundex"
                }
            ],
            "date": "2015-03-22"
        },
        {
            "commit_id": 893,
            "hash": "9c881675d214b95fcf861b69b4204bcd7932f66b",
            "commit_summary": "[CODEC-199] Bug in HW rule in Soundex. Applying 2nd version of the patch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1669274 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/Soundex.java"
            ],
            "functions": [
                {
                    "function name": "soundex",
                    "function params": [
                        "str"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.soundex"
                }
            ],
            "date": "2015-03-26"
        },
        {
            "commit_id": 894,
            "hash": "38357dffa2dd39c91c4523beade08c12e8009acb",
            "commit_summary": "Fix up references\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1683545 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32.java"
            ],
            "functions": [],
            "date": "2015-06-04"
        },
        {
            "commit_id": 895,
            "hash": "c82fe35c48bd0082c16644d16d82d1be79d6b9d1",
            "commit_summary": "CODEC-200 - Base32.HEX_DECODE_TABLE contains the wrong value 32\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1683550 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java"
            ],
            "functions": [
                {
                    "function name": "testCodec200",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testCodec200"
                }
            ],
            "date": "2015-06-04"
        },
        {
            "commit_id": 896,
            "hash": "2ae03e1633ec0a79761b215e8eae2574106bec99",
            "commit_summary": "Reduce deprecation warning noise in test cases\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1683555 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/URLCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "testBase32Chunked",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32Chunked"
                },
                {
                    "function name": "testBase32Samples",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32Samples"
                },
                {
                    "function name": "testBase32HexSamples",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"
                },
                {
                    "function name": "testBase32SamplesNonDefaultPadding",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"
                },
                {
                    "function name": "testDecodePadOnlyChunked",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"
                },
                {
                    "function name": "testDecodePadOnly",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"
                },
                {
                    "function name": "testDecodeWithWhitespace",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"
                },
                {
                    "function name": "testObjectEncodeWithValidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"
                },
                {
                    "function name": "testDecodePadMarkerIndex2",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"
                },
                {
                    "function name": "testDecodePadMarkerIndex3",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"
                },
                {
                    "function name": "testIgnoringNonBase64InDecode",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"
                },
                {
                    "function name": "testKnownDecodings",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testKnownDecodings"
                },
                {
                    "function name": "testCodeInteger3",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodeInteger3"
                },
                {
                    "function name": "testCodeInteger4",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodeInteger4"
                },
                {
                    "function name": "testCodeInteger2",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodeInteger2"
                },
                {
                    "function name": "testObjectEncode",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testObjectEncode"
                },
                {
                    "function name": "testCodeInteger1",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodeInteger1"
                },
                {
                    "function name": "testKnownEncodings",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testKnownEncodings"
                },
                {
                    "function name": "testObjectDecodeWithValidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"
                },
                {
                    "function name": "testDecodeByteArray",
                    "function params": [],
                    "file name": "BinaryCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"
                },
                {
                    "function name": "testFromAsciiByteArray",
                    "function params": [],
                    "file name": "BinaryCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"
                },
                {
                    "function name": "assertDecodeObject",
                    "function params": [
                        "bits",
                        "encodeMe"
                    ],
                    "file name": "BinaryCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BinaryCodecTest.assertDecodeObject"
                },
                {
                    "function name": "testEncodeUrlWithNullBitSet",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testEncodeUrlWithNullBitSet",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"
                }
            ],
            "date": "2015-06-04"
        },
        {
            "commit_id": 897,
            "hash": "c87ec655d2ca8de325ba91736702a477233b565d",
            "commit_summary": "Use specific links\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1683786 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/Charsets.java"
            ],
            "functions": [],
            "date": "2015-06-05"
        },
        {
            "commit_id": 898,
            "hash": "158d178c58e892ba87d782ecf436d30c038d464e",
            "commit_summary": "No code change. Rearrange into 16 entries per row and add comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1683795 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [],
            "date": "2015-06-05"
        },
        {
            "commit_id": 899,
            "hash": "91901434bd199b104bac6eb89769f78d97f18f3e",
            "commit_summary": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1694610 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/CharSequenceUtils.java",
                "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "regionMatches",
                    "function params": [
                        "cs",
                        "ignoreCase",
                        "thisStart",
                        "substring",
                        "start",
                        "length"
                    ],
                    "file name": "CharSequenceUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/CharSequenceUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/CharSequenceUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.CharSequenceUtils.regionMatches"
                },
                {
                    "function name": "SomeLanguages",
                    "function params": [
                        "other"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.SomeLanguages"
                },
                {
                    "function name": "SomeLanguages",
                    "function params": [
                        "other"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.SomeLanguages"
                },
                {
                    "function name": "encodeQuotedPrintable",
                    "function params": [
                        "printable",
                        "bytes",
                        "strict"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable"
                },
                {
                    "function name": "encodeQuotedPrintable",
                    "function params": [
                        "printable",
                        "bytes"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable"
                },
                {
                    "function name": "encodeQuotedPrintable",
                    "function params": [
                        "printable",
                        "bytes",
                        "strict"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable"
                },
                {
                    "function name": "encodeQuotedPrintable",
                    "function params": [
                        "printable",
                        "bytes"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable"
                },
                {
                    "function name": "testProvidePaddingByte",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.testProvidePaddingByte"
                },
                {
                    "function name": "testDecodeByteBufferOddCharacters",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeByteBufferOddCharacters"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "source"
                    ],
                    "file name": "DaitchMokotoffSoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DaitchMokotoffSoundexTest.encode"
                },
                {
                    "function name": "soundex",
                    "function params": [
                        "source"
                    ],
                    "file name": "DaitchMokotoffSoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DaitchMokotoffSoundexTest.soundex"
                },
                {
                    "function name": "soundex",
                    "function params": [
                        "source"
                    ],
                    "file name": "DaitchMokotoffSoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DaitchMokotoffSoundexTest.soundex"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "source"
                    ],
                    "file name": "DaitchMokotoffSoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DaitchMokotoffSoundexTest.encode"
                },
                {
                    "function name": "testCompatibilityWithOriginalVersion",
                    "function params": [],
                    "file name": "PhoneticEngineRegressionTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion"
                },
                {
                    "function name": "testSoftLineBreakEncode",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"
                },
                {
                    "function name": "testSkipNotEncodedCRLF",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"
                },
                {
                    "function name": "testSoftLineBreakDecode",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"
                }
            ],
            "date": "2015-08-07"
        },
        {
            "commit_id": 900,
            "hash": "f983a961455efed4dbfbfb7623e43941ba8d31e3",
            "commit_summary": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1695153 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java"
            ],
            "functions": [
                {
                    "function name": "testBase32Chunked",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32Chunked"
                },
                {
                    "function name": "testSingleCharEncoding",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"
                },
                {
                    "function name": "testBase32Samples",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32Samples"
                },
                {
                    "function name": "testBase32SamplesNonDefaultPadding",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"
                },
                {
                    "function name": "testCodec200",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testCodec200"
                }
            ],
            "date": "2015-08-10"
        },
        {
            "commit_id": 901,
            "hash": "afc89ebca46a71a9a3a91c9ddea6e17b49282479",
            "commit_summary": "[CODEC-202] Add BaseNCodec.encode(byte[], int, int) input with offset and length parameters for Base64 and Base32.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1695158 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pArray",
                        "offset",
                        "length"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.encode"
                },
                {
                    "function name": "testBase64InBuffer",
                    "function params": [
                        "startPasSize",
                        "endPadSize"
                    ],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase64InBuffer"
                },
                {
                    "function name": "testBase64AtBufferStart",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase64AtBufferStart"
                },
                {
                    "function name": "testBase64AtBufferMiddle",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase64AtBufferMiddle"
                },
                {
                    "function name": "testBase64AtBufferEnd",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase64AtBufferEnd"
                },
                {
                    "function name": "testRfc4648Section10DecodeEncode",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"
                },
                {
                    "function name": "testBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testBase64"
                },
                {
                    "function name": "testNonBase64Test",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testNonBase64Test"
                },
                {
                    "function name": "testCodeInteger4",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodeInteger4"
                },
                {
                    "function name": "testSingletonsChunked",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"
                },
                {
                    "function name": "testKnownEncodings",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testKnownEncodings"
                },
                {
                    "function name": "testCodeInteger1",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodeInteger1"
                },
                {
                    "function name": "testDecodeEncode",
                    "function params": [
                        "encodedText"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testDecodeEncode"
                },
                {
                    "function name": "testEncodeOverMaxSize",
                    "function params": [
                        "maxSize"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"
                },
                {
                    "function name": "testObjectDecodeWithInvalidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"
                },
                {
                    "function name": "testDecodePadOnly",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"
                },
                {
                    "function name": "testChunkedEncodeMultipleOf76",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"
                },
                {
                    "function name": "testDecodeWithWhitespace",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"
                },
                {
                    "function name": "testEncodeDecode",
                    "function params": [
                        "plainText"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testEncodeDecode"
                },
                {
                    "function name": "testDecodePadMarkerIndex2",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"
                },
                {
                    "function name": "testIgnoringNonBase64InDecode",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"
                },
                {
                    "function name": "testKnownDecodings",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testKnownDecodings"
                },
                {
                    "function name": "testBase64InBuffer",
                    "function params": [
                        "startPasSize",
                        "endPadSize"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testBase64InBuffer"
                },
                {
                    "function name": "testIsArrayByteBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"
                },
                {
                    "function name": "testIsUrlSafe",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"
                },
                {
                    "function name": "testRfc4648Section10EncodeDecode",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"
                },
                {
                    "function name": "getRandom",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.getRandom"
                },
                {
                    "function name": "testHugeLineSeparator",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"
                },
                {
                    "function name": "testIsStringBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testIsStringBase64"
                },
                {
                    "function name": "testObjectEncode",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testObjectEncode"
                },
                {
                    "function name": "testRfc4648Section10Encode",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"
                },
                {
                    "function name": "testByteToStringVariations",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"
                },
                {
                    "function name": "testDecodePadOnlyChunked",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "data"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.toString"
                },
                {
                    "function name": "testBase64AtBufferMiddle",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testBase64AtBufferMiddle"
                },
                {
                    "function name": "testConstructor_Int_ByteArray_Boolean_UrlSafe",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"
                },
                {
                    "function name": "testRfc4648Section10DecodeWithCrLf",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"
                },
                {
                    "function name": "testTripletsChunked",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testTripletsChunked"
                },
                {
                    "function name": "testEncodeDecodeSmall",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"
                },
                {
                    "function name": "testConstructors",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testConstructors"
                },
                {
                    "function name": "testBase64AtBufferStart",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testBase64AtBufferStart"
                },
                {
                    "function name": "testCodeInteger3",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodeInteger3"
                },
                {
                    "function name": "testEncodeDecodeRandom",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"
                },
                {
                    "function name": "testRfc1421Section6Dot8ChunkSizeDefinition",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"
                },
                {
                    "function name": "testTriplets",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testTriplets"
                },
                {
                    "function name": "testBase64AtBufferEnd",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd"
                },
                {
                    "function name": "testUUID",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testUUID"
                },
                {
                    "function name": "testStringToByteVariations",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"
                },
                {
                    "function name": "testObjectDecodeWithValidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"
                },
                {
                    "function name": "testUrlSafe",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testUrlSafe"
                },
                {
                    "function name": "testCodec112",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodec112"
                },
                {
                    "function name": "testEncodeOverMaxSize",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"
                },
                {
                    "function name": "testCodeIntegerNull",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"
                },
                {
                    "function name": "testCodec68",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodec68"
                },
                {
                    "function name": "testObjectEncodeWithValidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"
                },
                {
                    "function name": "testDecodeWithInnerPad",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"
                },
                {
                    "function name": "testDecodePadMarkerIndex3",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"
                },
                {
                    "function name": "testPairs",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testPairs"
                },
                {
                    "function name": "testConstructor_Int_ByteArray_Boolean",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"
                },
                {
                    "function name": "testRfc2045Section2Dot1CrLfDefinition",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"
                },
                {
                    "function name": "testObjectEncodeWithInvalidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"
                },
                {
                    "function name": "testSingletons",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testSingletons"
                },
                {
                    "function name": "testCodeInteger2",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodeInteger2"
                },
                {
                    "function name": "testEmptyBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testEmptyBase64"
                },
                {
                    "function name": "testRfc4648Section10Decode",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"
                },
                {
                    "function name": "testCodeIntegerEdgeCases",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodeIntegerEdgeCases"
                },
                {
                    "function name": "testRfc2045Section6Dot8ChunkSizeDefinition",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"
                }
            ],
            "date": "2015-08-10"
        },
        {
            "commit_id": 902,
            "hash": "1b7b452c7e49efd2bf6fbca0b4239c7aedc993db",
            "commit_summary": "[CODEC-203] Add convenience method decodeHex(String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1701126 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Hex.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/java/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [
                {
                    "function name": "decodeHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.decodeHex"
                },
                {
                    "function name": "testUUID",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testUUID"
                },
                {
                    "function name": "testDecodeHexStringOddCharacters1",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters1"
                },
                {
                    "function name": "testEncodeDecodeHexCharArrayRandom",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeDecodeHexCharArrayRandom"
                },
                {
                    "function name": "testDecodeHexStringEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeHexStringEmpty"
                },
                {
                    "function name": "testDecodeHexCharArrayEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayEmpty"
                },
                {
                    "function name": "checkDecodeHexCharArrayOddCharacters",
                    "function params": [
                        "data"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.checkDecodeHexCharArrayOddCharacters"
                }
            ],
            "date": "2015-09-03"
        },
        {
            "commit_id": 903,
            "hash": "7388ec14401571d45af94906310e136463f7dd58",
            "commit_summary": "[CODEC-203] Add convenience method decodeHex(String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1701128 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "testByteToStringVariations",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"
                },
                {
                    "function name": "testStringToByteVariations",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"
                }
            ],
            "date": "2015-09-03"
        },
        {
            "commit_id": 904,
            "hash": "05f878016d583b58806e59de862fca60e2e69d67",
            "commit_summary": "Statement unnecessarily nested within else clause.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1725161 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/test/java/org/apache/commons/codec/binary/Codec105ErrorInputStream.java",
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java"
            ],
            "functions": [
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "parseRules",
                    "function params": [
                        "scanner",
                        "location",
                        "ruleMapping",
                        "asciiFoldings"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules"
                },
                {
                    "function name": "getFirst3Last3",
                    "function params": [
                        "name"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.getFirst3Last3"
                },
                {
                    "function name": "leftToRightThenRightToLeftProcessing",
                    "function params": [
                        "name1",
                        "name2"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing"
                },
                {
                    "function name": "removeVowels",
                    "function params": [
                        "name"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.removeVowels"
                },
                {
                    "function name": "transcodeRemaining",
                    "function params": [
                        "prev",
                        "curr",
                        "next",
                        "aNext"
                    ],
                    "file name": "Nysiis.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Nysiis.transcodeRemaining"
                },
                {
                    "function name": "parsePhoneme",
                    "function params": [
                        "ph"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.parsePhoneme"
                },
                {
                    "function name": "pattern",
                    "function params": [
                        "regex"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.pattern"
                },
                {
                    "function name": "parsePhonemeExpr",
                    "function params": [
                        "ph"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.parsePhonemeExpr"
                },
                {
                    "function name": "parseRules",
                    "function params": [
                        "scanner",
                        "location"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.parseRules"
                },
                {
                    "function name": "encodeByte",
                    "function params": [
                        "b",
                        "encode",
                        "buffer"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte"
                },
                {
                    "function name": "read",
                    "function params": [],
                    "file name": "Codec105ErrorInputStream.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Codec105ErrorInputStream.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Codec105ErrorInputStream.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Codec105ErrorInputStream.read"
                },
                {
                    "function name": "read",
                    "function params": [
                        "pos",
                        "len"
                    ],
                    "file name": "Codec105ErrorInputStream.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Codec105ErrorInputStream.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Codec105ErrorInputStream.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Codec105ErrorInputStream.read"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "args",
                        "concat",
                        "input"
                    ],
                    "file name": "PhoneticEngineRegressionTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.encode"
                }
            ],
            "date": "2016-01-18"
        },
        {
            "commit_id": 905,
            "hash": "ce54f3476745a68d02b1db11444b71c758b1d1bb",
            "commit_summary": "[CODEC-205] Add faster CRC32 implementation. Copied from Hadoop 2.6.3. See also [CODEC-171].\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1725163 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "update",
                    "function params": [
                        "b"
                    ],
                    "file name": "PureJavaCrc32.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32.update"
                },
                {
                    "function name": "reset",
                    "function params": [],
                    "file name": "PureJavaCrc32.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32.reset"
                },
                {
                    "function name": "PureJavaCrc32",
                    "function params": [],
                    "file name": "PureJavaCrc32.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32.PureJavaCrc32"
                },
                {
                    "function name": "getValue",
                    "function params": [],
                    "file name": "PureJavaCrc32.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32.getValue"
                },
                {
                    "function name": "update",
                    "function params": [
                        "b",
                        "offset",
                        "len"
                    ],
                    "file name": "PureJavaCrc32.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32.update"
                },
                {
                    "function name": "checkSame",
                    "function params": [],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.checkSame"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [
                        "crcs",
                        "bytes",
                        "size",
                        "out"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                },
                {
                    "function name": "checkOnBytes",
                    "function params": [
                        "bytes",
                        "print"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.checkOnBytes"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [
                        "value",
                        "mbps"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                },
                {
                    "function name": "testCorrectness",
                    "function params": [],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [
                        "crcs",
                        "out"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [
                        "out"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                },
                {
                    "function name": "Table",
                    "function params": [
                        "nBits",
                        "nTables",
                        "polynomial"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.Table"
                },
                {
                    "function name": "Table",
                    "function params": [],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.Table"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [
                        "s",
                        "width",
                        "out"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [
                        "clazz",
                        "numThreads",
                        "bytes",
                        "size"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                },
                {
                    "function name": "Table",
                    "function params": [
                        "nameformat"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.Table"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                },
                {
                    "function name": "Table",
                    "function params": [
                        "args"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.Table"
                }
            ],
            "date": "2016-01-18"
        },
        {
            "commit_id": 906,
            "hash": "ea130d0a0a0c38cc2f93eaaa587678f0ac4db735",
            "commit_summary": "Format tweak with header.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1725164 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java"
            ],
            "functions": [],
            "date": "2016-01-18"
        },
        {
            "commit_id": 907,
            "hash": "7f35bd3eed6182c040155d1b672b9e34f89667bb",
            "commit_summary": "Format nit.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1743731 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [],
            "date": "2016-05-13"
        },
        {
            "commit_id": 908,
            "hash": "1f0d32796cd7f4419069b1c6d738895c753c6916",
            "commit_summary": "Sort in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1743732 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "testMd5HexLengthForByteBuffer",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForByteBuffer"
                },
                {
                    "function name": "testMd5HexLengthForBytes",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForBytes"
                },
                {
                    "function name": "testMd5LengthForByteBuffer",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForByteBuffer"
                },
                {
                    "function name": "testMd5LengthForBytes",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForBytes"
                }
            ],
            "date": "2016-05-13"
        },
        {
            "commit_id": 909,
            "hash": "07cd4567d96f916c20af10e2779e44d21c9ac703",
            "commit_summary": "Format nit.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1743734 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "testSha512",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha512"
                }
            ],
            "date": "2016-05-13"
        },
        {
            "commit_id": 910,
            "hash": "edb4ce323e9aad278d707be09fe1ef24fdba630d",
            "commit_summary": "[CODEC-207] Charsets Javadoc breaks build when using Java 8.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1743751 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/Charsets.java"
            ],
            "functions": [],
            "date": "2016-05-13"
        },
        {
            "commit_id": 911,
            "hash": "895315e100486f5778f13106c4ea4f3440eb1298",
            "commit_summary": "[CODEC-206] Add java.io.File APIs to DigestUtils.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1743756 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "digest",
                    "function params": [
                        "digest",
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.digest"
                },
                {
                    "function name": "sha",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha"
                },
                {
                    "function name": "sha1",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha1"
                },
                {
                    "function name": "sha1Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha1Hex"
                },
                {
                    "function name": "md5Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md5Hex"
                },
                {
                    "function name": "sha512Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512Hex"
                },
                {
                    "function name": "md5",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md5"
                },
                {
                    "function name": "sha256Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha256Hex"
                },
                {
                    "function name": "sha512",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512"
                },
                {
                    "function name": "sha",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha"
                },
                {
                    "function name": "sha224",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha224"
                },
                {
                    "function name": "md5Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md5Hex"
                },
                {
                    "function name": "sha256",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha256"
                },
                {
                    "function name": "md5Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md5Hex"
                },
                {
                    "function name": "md2Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md2Hex"
                },
                {
                    "function name": "sha384Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha384Hex"
                },
                {
                    "function name": "md2",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md2"
                },
                {
                    "function name": "sha224Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha224Hex"
                },
                {
                    "function name": "updateDigest",
                    "function params": [
                        "digest",
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.updateDigest"
                },
                {
                    "function name": "sha384",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha384"
                },
                {
                    "function name": "testSha224",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha224"
                },
                {
                    "function name": "testSha224HexFile",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha224HexFile"
                },
                {
                    "function name": "assumeJava8",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.assumeJava8"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.setUp"
                },
                {
                    "function name": "testSha256HexFile",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha256HexFile"
                },
                {
                    "function name": "testSha384HexFile",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha384HexFile"
                },
                {
                    "function name": "testSha512HexByteBuffer",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha512HexByteBuffer"
                },
                {
                    "function name": "testSha512HexFile",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha512HexFile"
                },
                {
                    "function name": "testSha512",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha512"
                },
                {
                    "function name": "testMd2HexFile",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexFile"
                },
                {
                    "function name": "testSha1HexFile",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha1HexFile"
                },
                {
                    "function name": "testSha512HexInputStream",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha512HexInputStream"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.tearDown"
                },
                {
                    "function name": "testMd5HexFile",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexFile"
                }
            ],
            "date": "2016-05-13"
        },
        {
            "commit_id": 912,
            "hash": "4970841052d709afe55d975ac82eaa1c0d385477",
            "commit_summary": "[CODEC-208] Make some DigestUtils APIs public.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1743770 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [
                {
                    "function name": "digest",
                    "function params": [
                        "digest",
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.digest"
                },
                {
                    "function name": "digest",
                    "function params": [
                        "messageDigest",
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.digest"
                },
                {
                    "function name": "digest",
                    "function params": [
                        "digest",
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.digest"
                },
                {
                    "function name": "digest",
                    "function params": [
                        "messageDigest",
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.digest"
                },
                {
                    "function name": "getDigest",
                    "function params": [
                        "algorithm",
                        "defaultMessageDigest"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getDigest"
                },
                {
                    "function name": "digest",
                    "function params": [
                        "messageDigest",
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.digest"
                }
            ],
            "date": "2016-05-14"
        },
        {
            "commit_id": 913,
            "hash": "263fc1987ee6bfe8c09fdcb0f7339f49508978ad",
            "commit_summary": "[CODEC-209] Javadoc for SHA-224 DigestUtils methods should mention Java 1.8.0 restriction instead of 1.4.0.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1743772 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [],
            "date": "2016-05-14"
        },
        {
            "commit_id": 914,
            "hash": "a82070e546d2c2f871895d32cd2f6629480c02bc",
            "commit_summary": "[CODEC-211] Create enum MessageDigestAlgorithm and deprecate class MessageDigestAlgorithms\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1743778 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java",
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "getSha1Digest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getSha1Digest"
                },
                {
                    "function name": "getMd5Digest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getMd5Digest"
                },
                {
                    "function name": "digest",
                    "function params": [
                        "messageDigest",
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.digest"
                },
                {
                    "function name": "getSha384Digest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getSha384Digest"
                },
                {
                    "function name": "getMd2Digest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getMd2Digest"
                },
                {
                    "function name": "getSha512Digest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getSha512Digest"
                },
                {
                    "function name": "getSha256Digest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getSha256Digest"
                },
                {
                    "function name": "getSha224Digest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getSha224Digest"
                },
                {
                    "function name": "digest",
                    "function params": [
                        "data"
                    ],
                    "file name": "MessageDigestAlgorithm.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithm.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MessageDigestAlgorithm.digest"
                },
                {
                    "function name": "getMessageDigest",
                    "function params": [],
                    "file name": "MessageDigestAlgorithm.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithm.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MessageDigestAlgorithm.getMessageDigest"
                },
                {
                    "function name": "digest",
                    "function params": [
                        "data"
                    ],
                    "file name": "MessageDigestAlgorithm.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithm.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MessageDigestAlgorithm.digest"
                },
                {
                    "function name": "digest",
                    "function params": [
                        "data"
                    ],
                    "file name": "MessageDigestAlgorithm.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithm.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MessageDigestAlgorithm.digest"
                },
                {
                    "function name": "MessageDigestAlgorithm",
                    "function params": [
                        "algorithm"
                    ],
                    "file name": "MessageDigestAlgorithm.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithm.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MessageDigestAlgorithm.MessageDigestAlgorithm"
                },
                {
                    "function name": "isAvailable",
                    "function params": [],
                    "file name": "MessageDigestAlgorithm.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithm.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MessageDigestAlgorithm.isAvailable"
                },
                {
                    "function name": "getAlgorithm",
                    "function params": [],
                    "file name": "MessageDigestAlgorithm.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithm.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MessageDigestAlgorithm.getAlgorithm"
                },
                {
                    "function name": "digest",
                    "function params": [
                        "data"
                    ],
                    "file name": "MessageDigestAlgorithm.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithm.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MessageDigestAlgorithm.digest"
                },
                {
                    "function name": "getTestData",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.getTestData"
                },
                {
                    "function name": "getTestFile",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.getTestFile"
                },
                {
                    "function name": "assumeJava8",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.assumeJava8"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmTest.setUp"
                },
                {
                    "function name": "getTestData",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmTest.getTestData"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmTest.tearDown"
                },
                {
                    "function name": "testDigestInputStream",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmTest.testDigestInputStream"
                },
                {
                    "function name": "testDigestByteBuffer",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmTest.testDigestByteBuffer"
                },
                {
                    "function name": "data",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmTest.data"
                },
                {
                    "function name": "digestTestData",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmTest.digestTestData"
                },
                {
                    "function name": "MessageDigestAlgorithmTest",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmTest.MessageDigestAlgorithmTest"
                },
                {
                    "function name": "getTestFile",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmTest.getTestFile"
                },
                {
                    "function name": "testDigestFile",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmTest.testDigestFile"
                },
                {
                    "function name": "testAlgorithm",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmTest.testAlgorithm"
                },
                {
                    "function name": "testDigestByteArray",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmTest.testDigestByteArray"
                },
                {
                    "function name": "testGetMessageDigest",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmTest.testGetMessageDigest"
                }
            ],
            "date": "2016-05-14"
        },
        {
            "commit_id": 915,
            "hash": "82d967a3f9e3d4c1927ff682d0df7a09399df7b6",
            "commit_summary": "[CODEC-212] Create a minimal Digest command line utility: org.apache.commons.codec.digest.Digest.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1743780 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "run",
                    "function params": [],
                    "file name": "Digest.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Digest.run"
                },
                {
                    "function name": "run",
                    "function params": [
                        "prefix",
                        "messageDigest"
                    ],
                    "file name": "Digest.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Digest.run"
                },
                {
                    "function name": "run",
                    "function params": [
                        "prefix",
                        "messageDigestAlgorithm"
                    ],
                    "file name": "Digest.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Digest.run"
                },
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "Digest.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Digest.toString"
                },
                {
                    "function name": "run",
                    "function params": [
                        "digestAlgorithms"
                    ],
                    "file name": "Digest.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Digest.run"
                },
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "Digest.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Digest.main"
                },
                {
                    "function name": "run",
                    "function params": [
                        "prefix",
                        "messageDigest",
                        "files"
                    ],
                    "file name": "Digest.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Digest.run"
                },
                {
                    "function name": "println",
                    "function params": [
                        "prefix",
                        "digest"
                    ],
                    "file name": "Digest.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Digest.println"
                },
                {
                    "function name": "Digest",
                    "function params": [
                        "args"
                    ],
                    "file name": "Digest.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Digest.Digest"
                }
            ],
            "date": "2016-05-14"
        },
        {
            "commit_id": 916,
            "hash": "b120a8574071197ee494c6f272bf0f4d2e93c2c5",
            "commit_summary": "[CODEC-212] Create a minimal Digest command line utility: org.apache.commons.codec.digest.Digest. Minor tweak.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1743784 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Digest.java"
            ],
            "functions": [
                {
                    "function name": "run",
                    "function params": [],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Digest.run"
                }
            ],
            "date": "2016-05-14"
        },
        {
            "commit_id": 917,
            "hash": "e8c09f05be1310ea2ded05bdd808c46a1e4485e2",
            "commit_summary": "String.format does not support arrays\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1743804 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Digest.java"
            ],
            "functions": [
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Digest.toString"
                }
            ],
            "date": "2016-05-14"
        },
        {
            "commit_id": 918,
            "hash": "b184666c1975fa4050121c694e09a88060854eec",
            "commit_summary": "Avoid dead code warning \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1743806 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "testUUID",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testUUID"
                }
            ],
            "date": "2016-05-14"
        },
        {
            "commit_id": 919,
            "hash": "b83e111c619232be9ba0a7bba682ebc141b618b8",
            "commit_summary": "Suppress warning that cannot easily be fixed\nIt's test code, so not worth the effort\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1743808 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java"
            ],
            "functions": [
                {
                    "function name": "testComparatorWithDoubleMetaphone",
                    "function params": [],
                    "file name": "StringEncoderComparatorTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"
                }
            ],
            "date": "2016-05-14"
        },
        {
            "commit_id": 920,
            "hash": "6b4b2dff38d7598cee413e5894d6c44772b42144",
            "commit_summary": "Doc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1743810 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java"
            ],
            "functions": [],
            "date": "2016-05-14"
        },
        {
            "commit_id": 921,
            "hash": "2a6c6ca711f0f0d6aeef30853d5eb05bc68c2e85",
            "commit_summary": "Eliminate deprecation warning\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1743823 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java"
            ],
            "functions": [
                {
                    "function name": "sha512Crypt",
                    "function params": [
                        "keyBytes",
                        "salt"
                    ],
                    "file name": "Sha2Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt"
                },
                {
                    "function name": "sha256Crypt",
                    "function params": [
                        "keyBytes",
                        "salt"
                    ],
                    "file name": "Sha2Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt"
                }
            ],
            "date": "2016-05-14"
        },
        {
            "commit_id": 922,
            "hash": "fc18ae928f5dcfdb331e189f866e3ef96f676eee",
            "commit_summary": "[CODEC-195]No point in adding SHA_224 to a class which is now deprecated\n[CODEC-211]New code should use the enum instead\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1743826 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java"
            ],
            "functions": [],
            "date": "2016-05-14"
        },
        {
            "commit_id": 923,
            "hash": "190b24bcb395e1772624c7f7c3c0bc76876d47e2",
            "commit_summary": "[CODEC-213] Support JEP 287: SHA-3 Hash Algorithms\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1743938 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithm.java"
            ],
            "functions": [],
            "date": "2016-05-15"
        },
        {
            "commit_id": 924,
            "hash": "8ed787c3799bb9d194e948b54d68ebdabcf1a2ee",
            "commit_summary": "[CODEC-211] Create enum MessageDigestAlgorithm and deprecate class MessageDigestAlgorithms. Rename MessageDigestAlgorithm.getAlgorithm() to getName().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1743944 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Digest.java",
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithm.java",
                "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java"
            ],
            "functions": [
                {
                    "function name": "run",
                    "function params": [
                        "digestAlgorithms"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Digest.run"
                },
                {
                    "function name": "getName",
                    "function params": [],
                    "file name": "MessageDigestAlgorithm.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithm.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithm.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MessageDigestAlgorithm.getName"
                },
                {
                    "function name": "sha512Crypt",
                    "function params": [
                        "keyBytes",
                        "salt"
                    ],
                    "file name": "Sha2Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt"
                },
                {
                    "function name": "sha256Crypt",
                    "function params": [
                        "keyBytes",
                        "salt"
                    ],
                    "file name": "Sha2Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt"
                },
                {
                    "function name": "testAlgorithm",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmTest.testAlgorithm"
                },
                {
                    "function name": "testGetMessageDigest",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmTest.testGetMessageDigest"
                }
            ],
            "date": "2016-05-15"
        },
        {
            "commit_id": 925,
            "hash": "a9b17e3af5b608e9d807fed3344cebd5f624c098",
            "commit_summary": "[CODEC-211] Create enum MessageDigestAlgorithm and deprecate class MessageDigestAlgorithms. Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1743946 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java"
            ],
            "functions": [],
            "date": "2016-05-15"
        },
        {
            "commit_id": 926,
            "hash": "e7b0dde346e610fa273bd4ff2c82f6cf8e6de6c2",
            "commit_summary": "[CODEC-217] Add HmacAlgorithms.HMAC_SHA_224 (Java 8 only)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1743952 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java"
            ],
            "functions": [],
            "date": "2016-05-15"
        },
        {
            "commit_id": 927,
            "hash": "781bfadbdf3da963002e4c177c3436b7cb116c34",
            "commit_summary": "Javadoc: Remove extra line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1743985 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java"
            ],
            "functions": [],
            "date": "2016-05-16"
        },
        {
            "commit_id": 928,
            "hash": "01911a40eaebf2aefbac34cb2760f7f77ccd07a6",
            "commit_summary": "Use foreach for arrays\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744070 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Digest.java"
            ],
            "functions": [
                {
                    "function name": "run",
                    "function params": [
                        "digestAlgorithms"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Digest.run"
                },
                {
                    "function name": "run",
                    "function params": [
                        "prefix",
                        "messageDigest",
                        "files"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Digest.run"
                }
            ],
            "date": "2016-05-16"
        },
        {
            "commit_id": 929,
            "hash": "ec733cbbf25c103c2c661625717527448a42663d",
            "commit_summary": "Use foreach for arrays\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744073 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java"
            ],
            "functions": [
                {
                    "function name": "isInAlphabet",
                    "function params": [
                        "arrayOctet",
                        "allowWSPad"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.isInAlphabet"
                }
            ],
            "date": "2016-05-16"
        },
        {
            "commit_id": 930,
            "hash": "300578058c7d6db0671648cbc5bfca84fce6285d",
            "commit_summary": "Report invalid parameter\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744076 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Digest.java"
            ],
            "functions": [
                {
                    "function name": "run",
                    "function params": [
                        "prefix",
                        "messageDigest"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Digest.run"
                }
            ],
            "date": "2016-05-16"
        },
        {
            "commit_id": 931,
            "hash": "63950ad11917411d82d9adbd0ad1ccc4884ebb4d",
            "commit_summary": "More standard separator\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744089 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Digest.java"
            ],
            "functions": [
                {
                    "function name": "println",
                    "function params": [
                        "prefix",
                        "digest"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Digest.println"
                }
            ],
            "date": "2016-05-16"
        },
        {
            "commit_id": 932,
            "hash": "f207e1439536afd5099c142ee43f070a0bd43d42",
            "commit_summary": "English\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744115 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java"
            ],
            "functions": [],
            "date": "2016-05-16"
        },
        {
            "commit_id": 933,
            "hash": "1e48e151ea23f8891902834a4553a806c1312d60",
            "commit_summary": "[CODEC-218] Refactor HmacUtils methods into the HmacAlgorithms enum.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744132 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java",
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "HmacAlgorithms.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacAlgorithms.toString"
                },
                {
                    "function name": "hmac",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacAlgorithms.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacAlgorithms.hmac"
                },
                {
                    "function name": "hmacHex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacAlgorithms.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacAlgorithms.hmacHex"
                },
                {
                    "function name": "getName",
                    "function params": [],
                    "file name": "HmacAlgorithms.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacAlgorithms.getName"
                },
                {
                    "function name": "hmac",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacAlgorithms.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacAlgorithms.hmac"
                },
                {
                    "function name": "HmacAlgorithms",
                    "function params": [
                        "algorithm"
                    ],
                    "file name": "HmacAlgorithms.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacAlgorithms.HmacAlgorithms"
                },
                {
                    "function name": "hmac",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacAlgorithms.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacAlgorithms.hmac"
                },
                {
                    "function name": "isAvailable",
                    "function params": [],
                    "file name": "HmacAlgorithms.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacAlgorithms.isAvailable"
                },
                {
                    "function name": "getInitializedMac",
                    "function params": [
                        "key"
                    ],
                    "file name": "HmacAlgorithms.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacAlgorithms.getInitializedMac"
                },
                {
                    "function name": "hmacHex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacAlgorithms.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacAlgorithms.hmacHex"
                },
                {
                    "function name": "hmacHex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacAlgorithms.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacAlgorithms.hmacHex"
                },
                {
                    "function name": "getHmac",
                    "function params": [
                        "key"
                    ],
                    "file name": "HmacAlgorithms.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacAlgorithms.getHmac"
                },
                {
                    "function name": "hmacSha384Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha384Hex"
                },
                {
                    "function name": "hmacSha1Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha1Hex"
                },
                {
                    "function name": "hmacMd5Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacMd5Hex"
                },
                {
                    "function name": "hmacMd5",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacMd5"
                },
                {
                    "function name": "getHmacSha512",
                    "function params": [
                        "key"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.getHmacSha512"
                },
                {
                    "function name": "getInitializedMac",
                    "function params": [
                        "algorithm",
                        "key"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.getInitializedMac"
                },
                {
                    "function name": "getHmacSha256",
                    "function params": [
                        "key"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.getHmacSha256"
                },
                {
                    "function name": "hmacSha256",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha256"
                },
                {
                    "function name": "hmacSha1Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha1Hex"
                },
                {
                    "function name": "hmacSha1",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha1"
                },
                {
                    "function name": "hmacSha1Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha1Hex"
                },
                {
                    "function name": "hmacSha1",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha1"
                },
                {
                    "function name": "getHmacMd5",
                    "function params": [
                        "key"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.getHmacMd5"
                },
                {
                    "function name": "hmacSha512Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha512Hex"
                },
                {
                    "function name": "hmacSha512Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha512Hex"
                },
                {
                    "function name": "hmacSha384",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha384"
                },
                {
                    "function name": "hmacSha512",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha512"
                },
                {
                    "function name": "hmacSha512",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha512"
                },
                {
                    "function name": "hmacSha512",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha512"
                },
                {
                    "function name": "hmacSha256Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha256Hex"
                },
                {
                    "function name": "hmacMd5",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacMd5"
                },
                {
                    "function name": "hmacMd5Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacMd5Hex"
                },
                {
                    "function name": "hmacSha384",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha384"
                },
                {
                    "function name": "hmacSha256",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha256"
                },
                {
                    "function name": "hmacSha512Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha512Hex"
                },
                {
                    "function name": "getHmacSha1",
                    "function params": [
                        "key"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.getHmacSha1"
                },
                {
                    "function name": "hmacSha384",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha384"
                },
                {
                    "function name": "hmacSha384Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha384Hex"
                },
                {
                    "function name": "hmacSha1",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha1"
                },
                {
                    "function name": "hmacSha256Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha256Hex"
                },
                {
                    "function name": "hmacSha384Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha384Hex"
                },
                {
                    "function name": "hmacSha256",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha256"
                },
                {
                    "function name": "getHmacSha384",
                    "function params": [
                        "key"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.getHmacSha384"
                },
                {
                    "function name": "hmacSha256Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha256Hex"
                },
                {
                    "function name": "hmacMd5Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacMd5Hex"
                },
                {
                    "function name": "hmacMd5",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacMd5"
                },
                {
                    "function name": "data",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.data"
                },
                {
                    "function name": "testHmacHexFailString",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailString"
                },
                {
                    "function name": "testInitializedMac",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testInitializedMac"
                },
                {
                    "function name": "testAlgorithm",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testAlgorithm"
                },
                {
                    "function name": "testMacString",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacString"
                },
                {
                    "function name": "testHmacHexFailByteArray",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailByteArray"
                },
                {
                    "function name": "testHmacFailString",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailString"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.tearDown"
                },
                {
                    "function name": "HmacAlgorithmsTest",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.HmacAlgorithmsTest"
                },
                {
                    "function name": "testMacByteArary",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacByteArary"
                },
                {
                    "function name": "testMacHexInputStream",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexInputStream"
                },
                {
                    "function name": "getTestData",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.getTestData"
                },
                {
                    "function name": "testMacHexByteArray",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexByteArray"
                },
                {
                    "function name": "getTestFile",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.getTestFile"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.setUp"
                },
                {
                    "function name": "testMacHexString",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexString"
                },
                {
                    "function name": "testHmacFailInputStream",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailInputStream"
                },
                {
                    "function name": "testHmacHexFailInputStream",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailInputStream"
                },
                {
                    "function name": "testHmacFailByteArray",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailByteArray"
                },
                {
                    "function name": "testGetHmacNullKey",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testGetHmacNullKey"
                },
                {
                    "function name": "testMacInputStream",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacInputStream"
                },
                {
                    "function name": "testGetHmacEmptyKey",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testGetHmacEmptyKey"
                },
                {
                    "function name": "testSha512HMacFail",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail"
                },
                {
                    "function name": "testHmacMd5Hex",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex"
                },
                {
                    "function name": "testSha256HMac",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac"
                },
                {
                    "function name": "testHmacSha1UpdateWithByteArray",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray"
                },
                {
                    "function name": "testSha256HMacFail",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail"
                },
                {
                    "function name": "testInitializedMac",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac"
                },
                {
                    "function name": "testSha384HMac",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac"
                },
                {
                    "function name": "testSha1HMacFail",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail"
                },
                {
                    "function name": "testHmacSha1UpdateWithString",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString"
                },
                {
                    "function name": "testInitializedMacNullAlgo",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullAlgo"
                },
                {
                    "function name": "testMd5HMac",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac"
                },
                {
                    "function name": "testSha384HMacFail",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail"
                },
                {
                    "function name": "testHmacSha1UpdateWithInpustream",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream"
                },
                {
                    "function name": "testMd5HMacFail",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail"
                },
                {
                    "function name": "testGetHMac",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac"
                },
                {
                    "function name": "testHmacSha1Hex",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex"
                },
                {
                    "function name": "testSha1HMac",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac"
                },
                {
                    "function name": "testSha512HMac",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac"
                }
            ],
            "date": "2016-05-16"
        },
        {
            "commit_id": 934,
            "hash": "2b9c06f58c983bb915b220f02be99aefaccd0a1d",
            "commit_summary": "[CODEC-211] Create enum MessageDigestAlgorithm and deprecate class MessageDigestAlgorithms. Don't need these new File APIs anymore.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744134 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [
                {
                    "function name": "sha256Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha256Hex"
                },
                {
                    "function name": "md2",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md2"
                },
                {
                    "function name": "sha512",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512"
                },
                {
                    "function name": "sha224",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha224"
                },
                {
                    "function name": "sha1Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha1Hex"
                },
                {
                    "function name": "md5Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md5Hex"
                },
                {
                    "function name": "sha256",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha256"
                },
                {
                    "function name": "sha384Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha384Hex"
                },
                {
                    "function name": "md2Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md2Hex"
                },
                {
                    "function name": "sha1",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha1"
                },
                {
                    "function name": "sha512Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512Hex"
                },
                {
                    "function name": "md5",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md5"
                },
                {
                    "function name": "sha224Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha224Hex"
                },
                {
                    "function name": "sha384",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha384"
                }
            ],
            "date": "2016-05-16"
        },
        {
            "commit_id": 935,
            "hash": "c116dde41fd1c073f00093123f771c276e8af6d9",
            "commit_summary": "[CODEC-211] Create enum MessageDigestAlgorithm and deprecate class MessageDigestAlgorithms. Don't need these new File APIs anymore.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744139 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [],
            "date": "2016-05-16"
        },
        {
            "commit_id": 936,
            "hash": "e941b7e3c45e7df96dad9c49235553b1bf585b61",
            "commit_summary": "[CODEC-211] Create enum MessageDigestAlgorithm and deprecate class MessageDigestAlgorithms. Add \"Hex\" APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744140 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithm.java",
                "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java"
            ],
            "functions": [
                {
                    "function name": "digestHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "MessageDigestAlgorithm.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithm.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithm.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MessageDigestAlgorithm.digestHex"
                },
                {
                    "function name": "digestHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "MessageDigestAlgorithm.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithm.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithm.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MessageDigestAlgorithm.digestHex"
                },
                {
                    "function name": "digestHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "MessageDigestAlgorithm.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithm.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithm.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MessageDigestAlgorithm.digestHex"
                },
                {
                    "function name": "digestHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "MessageDigestAlgorithm.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithm.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithm.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MessageDigestAlgorithm.digestHex"
                },
                {
                    "function name": "update",
                    "function params": [
                        "b",
                        "off",
                        "len"
                    ],
                    "file name": "PureJavaCrc32C.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32C.update"
                },
                {
                    "function name": "reset",
                    "function params": [],
                    "file name": "PureJavaCrc32C.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32C.reset"
                },
                {
                    "function name": "update",
                    "function params": [
                        "b"
                    ],
                    "file name": "PureJavaCrc32C.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32C.update"
                },
                {
                    "function name": "getValue",
                    "function params": [],
                    "file name": "PureJavaCrc32C.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32C.getValue"
                },
                {
                    "function name": "PureJavaCrc32C",
                    "function params": [],
                    "file name": "PureJavaCrc32C.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32C.PureJavaCrc32C"
                },
                {
                    "function name": "testDigestFileHex",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmTest.testDigestFileHex"
                },
                {
                    "function name": "testDigestInputStreamHex",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmTest.testDigestInputStreamHex"
                },
                {
                    "function name": "testDigestByteArrayHex",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmTest.testDigestByteArrayHex"
                },
                {
                    "function name": "testDigestByteBufferHex",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmTest.testDigestByteBufferHex"
                },
                {
                    "function name": "testDigestInputStream",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmTest.testDigestInputStream"
                },
                {
                    "function name": "digestTestDataHex",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmTest.digestTestDataHex"
                },
                {
                    "function name": "MessageDigestAlgorithmTest",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmTest.MessageDigestAlgorithmTest"
                }
            ],
            "date": "2016-05-16"
        },
        {
            "commit_id": 937,
            "hash": "17fe32716cb4e6250cb0fcd6612388a1dbfae6a0",
            "commit_summary": "Checkstyle: Line has trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744144 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java"
            ],
            "functions": [],
            "date": "2016-05-16"
        },
        {
            "commit_id": 938,
            "hash": "d8695b95cadffa51b7ac83d1dd6fae4bc0bb56c7",
            "commit_summary": "Checkstyle: Line has trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744145 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Digest.java"
            ],
            "functions": [
                {
                    "function name": "println",
                    "function params": [
                        "prefix",
                        "digest"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Digest.println"
                }
            ],
            "date": "2016-05-16"
        },
        {
            "commit_id": 939,
            "hash": "c48289b1457f825240043b942ab621b59c5d2490",
            "commit_summary": "[CODEC-219] Don't deprecate Charsets Charset constants in favor of Java 7's java.nio.charset.StandardCharsets\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744153 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/Charsets.java"
            ],
            "functions": [],
            "date": "2016-05-16"
        },
        {
            "commit_id": 940,
            "hash": "321a2f3be27e395e7646393a31d0a1b0df4757b4",
            "commit_summary": "Oops, remove.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744163 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [],
            "date": "2016-05-16"
        },
        {
            "commit_id": 941,
            "hash": "fe6fad10e1a6cb264a4f6c6c04cab66c6ba818cb",
            "commit_summary": "Only Java 7+ has StandardCharsets\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744164 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/Charsets.java"
            ],
            "functions": [],
            "date": "2016-05-16"
        },
        {
            "commit_id": 942,
            "hash": "c7846ef59c410983b0f668e59791ecaa977d1fa6",
            "commit_summary": "Unnecessary now\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744165 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/URLCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "testEncodeUrlWithNullBitSet",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testEncodeUrlWithNullBitSet",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"
                }
            ],
            "date": "2016-05-16"
        },
        {
            "commit_id": 943,
            "hash": "7b67f1bbc2ed78561db2527e3035bcf1b49e2817",
            "commit_summary": "Unnecessary now\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744166 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                "src/test/java/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [],
            "date": "2016-05-16"
        },
        {
            "commit_id": 944,
            "hash": "f7e4944a048663e671d12519c4f8068ea0a489dc",
            "commit_summary": "Unnecessary now\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744167 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java"
            ],
            "functions": [],
            "date": "2016-05-16"
        },
        {
            "commit_id": 945,
            "hash": "f9d6655b42d8e1b1071f78cd7f1e38cbaa20350e",
            "commit_summary": "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744170 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java"
            ],
            "functions": [
                {
                    "function name": "values",
                    "function params": [],
                    "file name": "MessageDigestAlgorithms.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MessageDigestAlgorithms.values"
                }
            ],
            "date": "2016-05-16"
        },
        {
            "commit_id": 946,
            "hash": "858aa75ed257a24acb983df372f634c3fc6c49c7",
            "commit_summary": "Revert to constants\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744171 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java"
            ],
            "functions": [
                {
                    "function name": "sha512Crypt",
                    "function params": [
                        "keyBytes",
                        "salt"
                    ],
                    "file name": "Sha2Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt"
                },
                {
                    "function name": "sha256Crypt",
                    "function params": [
                        "keyBytes",
                        "salt"
                    ],
                    "file name": "Sha2Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt"
                }
            ],
            "date": "2016-05-16"
        },
        {
            "commit_id": 947,
            "hash": "83c4b1c364c075bbb2bc44ad64d8a282340de4ba",
            "commit_summary": "Revert CODEC-211\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744172 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Digest.java",
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java"
            ],
            "functions": [
                {
                    "function name": "run",
                    "function params": [
                        "digestAlgorithms"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Digest.run"
                },
                {
                    "function name": "run",
                    "function params": [],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Digest.run"
                },
                {
                    "function name": "run",
                    "function params": [
                        "prefix",
                        "messageDigestAlgorithm"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Digest.run"
                },
                {
                    "function name": "run",
                    "function params": [
                        "prefix",
                        "messageDigestAlgorithm"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Digest.run"
                },
                {
                    "function name": "run",
                    "function params": [
                        "digestAlgorithms"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Digest.run"
                },
                {
                    "function name": "getSha1Digest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getSha1Digest"
                },
                {
                    "function name": "getMd5Digest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getMd5Digest"
                },
                {
                    "function name": "sha1",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha1"
                },
                {
                    "function name": "sha1Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha1Hex"
                },
                {
                    "function name": "getSha224Digest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getSha224Digest"
                },
                {
                    "function name": "getMd2Digest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getMd2Digest"
                },
                {
                    "function name": "getSha256Digest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getSha256Digest"
                },
                {
                    "function name": "sha512Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512Hex"
                },
                {
                    "function name": "md5",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md5"
                },
                {
                    "function name": "sha256Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha256Hex"
                },
                {
                    "function name": "sha512",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512"
                },
                {
                    "function name": "sha224",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha224"
                },
                {
                    "function name": "isAvailable",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.isAvailable"
                },
                {
                    "function name": "md5Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md5Hex"
                },
                {
                    "function name": "getSha512Digest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getSha512Digest"
                },
                {
                    "function name": "sha256",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha256"
                },
                {
                    "function name": "sha384Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha384Hex"
                },
                {
                    "function name": "md2Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md2Hex"
                },
                {
                    "function name": "md2",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md2"
                },
                {
                    "function name": "getSha384Digest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getSha384Digest"
                },
                {
                    "function name": "sha224Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha224Hex"
                },
                {
                    "function name": "sha384",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha384"
                },
                {
                    "function name": "MessageDigestAlgorithmTest",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmTest.MessageDigestAlgorithmTest"
                },
                {
                    "function name": "testDigestFile",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmTest.testDigestFile"
                },
                {
                    "function name": "testAlgorithm",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmTest.testAlgorithm"
                },
                {
                    "function name": "testDigestByteArray",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmTest.testDigestByteArray"
                },
                {
                    "function name": "testGetMessageDigest",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmTest.testGetMessageDigest"
                },
                {
                    "function name": "testDigestInputStream",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmTest.testDigestInputStream"
                },
                {
                    "function name": "testDigestByteBuffer",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmTest.testDigestByteBuffer"
                },
                {
                    "function name": "data",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmTest.data"
                },
                {
                    "function name": "digestTestData",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmTest.digestTestData"
                },
                {
                    "function name": "MessageDigestAlgorithmTest",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmTest.MessageDigestAlgorithmTest"
                }
            ],
            "date": "2016-05-17"
        },
        {
            "commit_id": 948,
            "hash": "b1d11d9f15afd98f94d585d23074fe8a1da00c60",
            "commit_summary": "Javadoc corrections\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744239 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java"
            ],
            "functions": [],
            "date": "2016-05-17"
        },
        {
            "commit_id": 949,
            "hash": "ceb5ccba7bca5f00a5331945c7643c3d102e05a4",
            "commit_summary": "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744326 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [],
            "date": "2016-05-17"
        },
        {
            "commit_id": 950,
            "hash": "76a941217f9272693b5484ef360e8cf6491ef3a4",
            "commit_summary": "CODEC-218 remove unnecessary duplicate method HmacAlgorithms.getInitializedMac\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744329 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java",
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java"
            ],
            "functions": [
                {
                    "function name": "getInitializedMac",
                    "function params": [
                        "algorithm",
                        "key"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.getInitializedMac"
                }
            ],
            "date": "2016-05-17"
        },
        {
            "commit_id": 951,
            "hash": "768390f935f3916ce3cfe03e8e642087baf457cb",
            "commit_summary": "Typos aplenty\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744330 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java"
            ],
            "functions": [],
            "date": "2016-05-17"
        },
        {
            "commit_id": 952,
            "hash": "f9778af8a8ba8c6579ccd800f53a2cb67baa1c7b",
            "commit_summary": "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744331 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java"
            ],
            "functions": [],
            "date": "2016-05-17"
        },
        {
            "commit_id": 953,
            "hash": "a6130f9c8c04fc91ebcbe1af7bf8839ff1c7376f",
            "commit_summary": "Sort.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744340 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java"
            ],
            "functions": [
                {
                    "function name": "MessageDigestAlgorithms",
                    "function params": [],
                    "file name": "MessageDigestAlgorithms.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MessageDigestAlgorithms.MessageDigestAlgorithms"
                }
            ],
            "date": "2016-05-18"
        },
        {
            "commit_id": 954,
            "hash": "82c7bbf78e69c8f73a4cef61476c155d4681c3b1",
            "commit_summary": "Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744341 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java"
            ],
            "functions": [],
            "date": "2016-05-18"
        },
        {
            "commit_id": 955,
            "hash": "affe77a64dbf8c90b795ea0b2bb7a44bfbeef781",
            "commit_summary": "Javadoc. Longer lines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744342 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java"
            ],
            "functions": [
                {
                    "function name": "values",
                    "function params": [],
                    "file name": "MessageDigestAlgorithms.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MessageDigestAlgorithms.values"
                }
            ],
            "date": "2016-05-18"
        },
        {
            "commit_id": 956,
            "hash": "8bb467aa5ea9d916e82e6022cb492d1c829211f2",
            "commit_summary": "Avoid exception when File is a folder, just skip it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744343 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Digest.java"
            ],
            "functions": [
                {
                    "function name": "run",
                    "function params": [
                        "prefix",
                        "messageDigest",
                        "files"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Digest.run"
                }
            ],
            "date": "2016-05-18"
        },
        {
            "commit_id": 957,
            "hash": "8e1667fa9326aae9e63c4d44eb376b048ba8fa42",
            "commit_summary": "[CODEC-213] Support JEP 287: SHA-3 Hash Algorithms.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744344 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java"
            ],
            "functions": [
                {
                    "function name": "values",
                    "function params": [],
                    "file name": "MessageDigestAlgorithms.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MessageDigestAlgorithms.values"
                }
            ],
            "date": "2016-05-18"
        },
        {
            "commit_id": 958,
            "hash": "cbea3176308e86c6c5c82dbcb8fde367945ca1a0",
            "commit_summary": "Fix typo.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744345 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java"
            ],
            "functions": [],
            "date": "2016-05-18"
        },
        {
            "commit_id": 959,
            "hash": "7ff71807ce589931a56ae6f1306af43c6b8632e7",
            "commit_summary": "Javadocs\nFix typo in SHA3_224 value\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744380 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java"
            ],
            "functions": [],
            "date": "2016-05-18"
        },
        {
            "commit_id": 960,
            "hash": "1123f6d70b95773f95cb634d916b3399473eb0e5",
            "commit_summary": "Typo\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744384 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java"
            ],
            "functions": [],
            "date": "2016-05-18"
        },
        {
            "commit_id": 961,
            "hash": "bb1135e50c27938eeeeb6e6c1ffb3882dceb9f1e",
            "commit_summary": "MessageDigestAlgorithm => MessageDigestAlgorithms as the former has been dropped\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744385 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Digest.java",
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java"
            ],
            "functions": [
                {
                    "function name": "updateHmac",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.updateHmac"
                },
                {
                    "function name": "with",
                    "function params": [
                        "algo",
                        "key"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.with"
                },
                {
                    "function name": "HmacUtils",
                    "function params": [
                        "mac"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.HmacUtils"
                },
                {
                    "function name": "with",
                    "function params": [
                        "algo",
                        "key"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.with"
                },
                {
                    "function name": "doFinal",
                    "function params": [],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.doFinal"
                },
                {
                    "function name": "getMac",
                    "function params": [],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.getMac"
                }
            ],
            "date": "2016-05-18"
        },
        {
            "commit_id": 962,
            "hash": "f0299220ba7dc33b1865068db0c184147283a9e4",
            "commit_summary": "Rename to agree with class being tested\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744386 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "MessageDigestAlgorithmsTest",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.MessageDigestAlgorithmsTest"
                }
            ],
            "date": "2016-05-18"
        },
        {
            "commit_id": 963,
            "hash": "ee7ee35245d3863d16c884a8e1c381ea8ab3472b",
            "commit_summary": "Revert accidental commit r1744385\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744388 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java"
            ],
            "functions": [
                {
                    "function name": "updateHmac",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.updateHmac"
                }
            ],
            "date": "2016-05-18"
        },
        {
            "commit_id": 964,
            "hash": "4a6c36401518a45a709ade671d442e061138d3ec",
            "commit_summary": "Add test for values() array\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744391 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java"
            ],
            "functions": [
                {
                    "function name": "checkValues",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.checkValues"
                },
                {
                    "function name": "contains",
                    "function params": [
                        "key"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.contains"
                }
            ],
            "date": "2016-05-18"
        },
        {
            "commit_id": 965,
            "hash": "5590b9510bfec5b0803f6d6bc5f78fd851564c34",
            "commit_summary": "Why we create the array anew each time\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744392 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java"
            ],
            "functions": [
                {
                    "function name": "values",
                    "function params": [],
                    "file name": "MessageDigestAlgorithms.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MessageDigestAlgorithms.values"
                }
            ],
            "date": "2016-05-18"
        },
        {
            "commit_id": 966,
            "hash": "a07852203d041ab68438262d0803cae7659e4ee2",
            "commit_summary": "Javadocs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744395 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java"
            ],
            "functions": [],
            "date": "2016-05-18"
        },
        {
            "commit_id": 967,
            "hash": "c76e008480a8230cd2a21226a5fbd9e7ac50f39a",
            "commit_summary": "Unused\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744398 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java"
            ],
            "functions": [],
            "date": "2016-05-18"
        },
        {
            "commit_id": 968,
            "hash": "ae5df796be80dfafb523072e4efb30e34dbee46e",
            "commit_summary": "Ignore deprecation in test code that deliberately uses it\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744399 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java"
            ],
            "functions": [],
            "date": "2016-05-18"
        },
        {
            "commit_id": 969,
            "hash": "7e19596505676c5b300bddc39792289441634f02",
            "commit_summary": "Use same style as other SHA224 methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744406 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [
                {
                    "function name": "sha224",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha224"
                }
            ],
            "date": "2016-05-18"
        },
        {
            "commit_id": 970,
            "hash": "752d64769a5ec69b832d974dd679448ae45088e1",
            "commit_summary": "Standardise on 3rd person singular for both verbs in the sentence\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744408 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [],
            "date": "2016-05-18"
        },
        {
            "commit_id": 971,
            "hash": "55e9d25f779a3ba726a9904641e656de93a1fac3",
            "commit_summary": "CODEC-195 - Support SHA-224 in DigestUtils on Java 8\nDrop specific methods and provide sample code instead\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744409 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [
                {
                    "function name": "digest",
                    "function params": [
                        "digestName",
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.digest"
                },
                {
                    "function name": "digest",
                    "function params": [
                        "digestName",
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.digest"
                },
                {
                    "function name": "digest",
                    "function params": [
                        "digestName",
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.digest"
                },
                {
                    "function name": "digest",
                    "function params": [
                        "digestName",
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.digest"
                }
            ],
            "date": "2016-05-18"
        },
        {
            "commit_id": 972,
            "hash": "3b6468ac4f765262f68d3d289d25bea3da521c16",
            "commit_summary": "CODEC-206 Add java.io.File APIs to DigestUtils\nDrop algo-specific methods in favour of generic ones\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744410 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [
                {
                    "function name": "sha256Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha256Hex"
                },
                {
                    "function name": "md2",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md2"
                },
                {
                    "function name": "sha512",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512"
                },
                {
                    "function name": "sha1Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha1Hex"
                },
                {
                    "function name": "md5Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md5Hex"
                },
                {
                    "function name": "sha256",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha256"
                },
                {
                    "function name": "sha384Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha384Hex"
                },
                {
                    "function name": "md2Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md2Hex"
                },
                {
                    "function name": "sha1",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha1"
                },
                {
                    "function name": "sha512Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512Hex"
                },
                {
                    "function name": "md5",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md5"
                },
                {
                    "function name": "sha384",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha384"
                }
            ],
            "date": "2016-05-18"
        },
        {
            "commit_id": 973,
            "hash": "d47ef8f7b5447d0a0baa8be70c5183161e63068f",
            "commit_summary": "CODEC-193 Support java.nio.ByteBuffer in DigestUtils\nDrop algo-specific methods in favour of generic ones\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744411 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [
                {
                    "function name": "sha512",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512"
                },
                {
                    "function name": "md5Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md5Hex"
                },
                {
                    "function name": "sha256",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha256"
                },
                {
                    "function name": "md5",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md5"
                },
                {
                    "function name": "md2Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md2Hex"
                },
                {
                    "function name": "sha256Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha256Hex"
                },
                {
                    "function name": "md2",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md2"
                },
                {
                    "function name": "sha1Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha1Hex"
                },
                {
                    "function name": "sha384",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha384"
                },
                {
                    "function name": "sha1",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha1"
                },
                {
                    "function name": "sha384Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha384Hex"
                },
                {
                    "function name": "sha512Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512Hex"
                }
            ],
            "date": "2016-05-18"
        },
        {
            "commit_id": 974,
            "hash": "89b1661fde38bd12c4d83b9fbe696db0c8657a78",
            "commit_summary": "Drop tests for dropped methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744418 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "testSha224",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha224"
                },
                {
                    "function name": "testSha384",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha384"
                },
                {
                    "function name": "testSha256",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha256"
                },
                {
                    "function name": "testMd2Hex",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"
                },
                {
                    "function name": "testMd5Hex",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"
                },
                {
                    "function name": "testSha1Hex",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"
                }
            ],
            "date": "2016-05-18"
        },
        {
            "commit_id": 975,
            "hash": "f054152346cbd7c8afcdcdaf55c39f9967edacf1",
            "commit_summary": "oops- Needs to be hex\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744419 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "testSha224",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha224"
                }
            ],
            "date": "2016-05-18"
        },
        {
            "commit_id": 976,
            "hash": "346009fc677b252d052e9ee22c6a4cd2be10a032",
            "commit_summary": "CODEC-220 Fluent interface for DigestUtils\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744467 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "update",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.update"
                },
                {
                    "function name": "digest",
                    "function params": [
                        "digestName",
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.digest"
                },
                {
                    "function name": "update",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.update"
                },
                {
                    "function name": "done",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.done"
                },
                {
                    "function name": "digest",
                    "function params": [
                        "digestName",
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.digest"
                },
                {
                    "function name": "asHex",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.asHex"
                },
                {
                    "function name": "with",
                    "function params": [
                        "digest"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.with"
                },
                {
                    "function name": "update",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.update"
                },
                {
                    "function name": "update",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.update"
                },
                {
                    "function name": "getMessageDigest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getMessageDigest"
                },
                {
                    "function name": "with",
                    "function params": [
                        "name"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.with"
                },
                {
                    "function name": "DigestUtils",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.DigestUtils"
                },
                {
                    "function name": "DigestUtils",
                    "function params": [
                        "digest"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.DigestUtils"
                },
                {
                    "function name": "update",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.update"
                },
                {
                    "function name": "digest",
                    "function params": [
                        "digestName",
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.digest"
                },
                {
                    "function name": "digest",
                    "function params": [
                        "digestName",
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.digest"
                },
                {
                    "function name": "testSha224",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha224"
                }
            ],
            "date": "2016-05-18"
        },
        {
            "commit_id": 977,
            "hash": "a3816d270fdd2d9d5db285e21b74897df7f2a755",
            "commit_summary": "Typo\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744480 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [],
            "date": "2016-05-19"
        },
        {
            "commit_id": 978,
            "hash": "4c84e204cbce349f3c5722750561b91607d3fcae",
            "commit_summary": "CODEC-222 Fluent interface for HmacUtils\nInitial implementation\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744554 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java"
            ],
            "functions": [
                {
                    "function name": "update",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.update"
                },
                {
                    "function name": "key",
                    "function params": [
                        "key"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.key"
                },
                {
                    "function name": "use",
                    "function params": [
                        "algorithm"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.use"
                },
                {
                    "function name": "update",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.update"
                },
                {
                    "function name": "doFinalHex",
                    "function params": [],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.doFinalHex"
                },
                {
                    "function name": "use",
                    "function params": [
                        "algorithm"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.use"
                },
                {
                    "function name": "doFinal",
                    "function params": [],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.doFinal"
                },
                {
                    "function name": "use",
                    "function params": [
                        "mac"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.use"
                },
                {
                    "function name": "HmacUtils",
                    "function params": [
                        "mac"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.HmacUtils"
                },
                {
                    "function name": "update",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.update"
                },
                {
                    "function name": "HmacUtils",
                    "function params": [],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.HmacUtils"
                },
                {
                    "function name": "update",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.update"
                },
                {
                    "function name": "update",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.update"
                }
            ],
            "date": "2016-05-19"
        },
        {
            "commit_id": 979,
            "hash": "53fd5f39f2897a27e06526db41aa7a4499f4ce16",
            "commit_summary": "Does not make sense to test construction of a utility class\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744568 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java"
            ],
            "functions": [],
            "date": "2016-05-19"
        },
        {
            "commit_id": 980,
            "hash": "c353239c4fd22b8991e1488ce81218b1c9769bf9",
            "commit_summary": "No longer needed by Unit test code\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744569 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java"
            ],
            "functions": [
                {
                    "function name": "DigestUtils",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.DigestUtils"
                },
                {
                    "function name": "HmacUtils",
                    "function params": [],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.HmacUtils"
                }
            ],
            "date": "2016-05-19"
        },
        {
            "commit_id": 981,
            "hash": "3753e3c699e48f5879dce182f2bae12d409f3650",
            "commit_summary": "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744570 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [],
            "date": "2016-05-19"
        },
        {
            "commit_id": 982,
            "hash": "d2bfb078ea7660448481f3b8f91d2176b92708f8",
            "commit_summary": "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744575 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Digest.java"
            ],
            "functions": [],
            "date": "2016-05-19"
        },
        {
            "commit_id": 983,
            "hash": "516f6889c9153a59110d3ee9bdd907e95e10cc08",
            "commit_summary": "CODEC-215 Constructors must not call overrideable methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744596 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java"
            ],
            "functions": [
                {
                    "function name": "_reset",
                    "function params": [],
                    "file name": "PureJavaCrc32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32._reset"
                },
                {
                    "function name": "reset",
                    "function params": [],
                    "file name": "PureJavaCrc32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32.reset"
                },
                {
                    "function name": "PureJavaCrc32",
                    "function params": [],
                    "file name": "PureJavaCrc32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32.PureJavaCrc32"
                }
            ],
            "date": "2016-05-19"
        },
        {
            "commit_id": 984,
            "hash": "8bac2b6a1bd110cd171c89e75f68cd9a69624315",
            "commit_summary": "CODEC-221 HmacUtils.updateHmac calls reset() unnecessarily\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744597 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java"
            ],
            "functions": [],
            "date": "2016-05-19"
        },
        {
            "commit_id": 985,
            "hash": "7b6bf45d83c3ec028e686318b8d4f1a061723908",
            "commit_summary": "Moved standalone utility to separate package\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744598 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [],
            "date": "2016-05-19"
        },
        {
            "commit_id": 986,
            "hash": "5fe700afb8bcc989a6778f61fe6d15c0fa08f862",
            "commit_summary": "CODEC-213 not yet in Java 9\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744599 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java"
            ],
            "functions": [],
            "date": "2016-05-19"
        },
        {
            "commit_id": 987,
            "hash": "a2fb29d03eee1b396253804e6c0b21e4781e2487",
            "commit_summary": "Link to Git Tag\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744609 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java"
            ],
            "functions": [],
            "date": "2016-05-19"
        },
        {
            "commit_id": 988,
            "hash": "67e19adab2c2da1306020d251ac18689a4387a09",
            "commit_summary": "Match Javadocs to code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744619 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [],
            "date": "2016-05-19"
        },
        {
            "commit_id": 989,
            "hash": "b72dee3f2590f842283f1a383a384fb1e680d463",
            "commit_summary": "Remove unused exceptions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744620 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [
                {
                    "function name": "update",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.update"
                },
                {
                    "function name": "update",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.update"
                },
                {
                    "function name": "update",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.update"
                }
            ],
            "date": "2016-05-19"
        },
        {
            "commit_id": 990,
            "hash": "d80fbe4ae28502d01ac948239504ffe5065dca47",
            "commit_summary": "Add missing @throws.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744621 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [],
            "date": "2016-05-19"
        },
        {
            "commit_id": 991,
            "hash": "817666037d3c09b9138b161964b0fafc76d65998",
            "commit_summary": "CODEC-171 Add support for CRC32-C\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744643 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "update",
                    "function params": [
                        "b",
                        "off",
                        "len"
                    ],
                    "file name": "PureJavaCrc32C.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32C.update"
                },
                {
                    "function name": "reset",
                    "function params": [],
                    "file name": "PureJavaCrc32C.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32C.reset"
                },
                {
                    "function name": "update",
                    "function params": [
                        "b"
                    ],
                    "file name": "PureJavaCrc32C.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32C.update"
                },
                {
                    "function name": "getValue",
                    "function params": [],
                    "file name": "PureJavaCrc32C.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32C.getValue"
                },
                {
                    "function name": "PureJavaCrc32C",
                    "function params": [],
                    "file name": "PureJavaCrc32C.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32C.PureJavaCrc32C"
                },
                {
                    "function name": "testOnes",
                    "function params": [],
                    "file name": "PureJavaCrc32CTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32CTest.testOnes"
                },
                {
                    "function name": "testIncreasing",
                    "function params": [],
                    "file name": "PureJavaCrc32CTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32CTest.testIncreasing"
                },
                {
                    "function name": "testZeros",
                    "function params": [],
                    "file name": "PureJavaCrc32CTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32CTest.testZeros"
                },
                {
                    "function name": "testDecreasing",
                    "function params": [],
                    "file name": "PureJavaCrc32CTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing"
                },
                {
                    "function name": "check",
                    "function params": [
                        "expected"
                    ],
                    "file name": "PureJavaCrc32CTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32CTest.check"
                }
            ],
            "date": "2016-05-19"
        },
        {
            "commit_id": 992,
            "hash": "5b5e0759459062064777dbb70827b3f65692cb2f",
            "commit_summary": "Javadoc correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744646 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Crypt.java"
            ],
            "functions": [],
            "date": "2016-05-20"
        },
        {
            "commit_id": 993,
            "hash": "c3b831fa7e4ad148d8e3abe2a0e3c089029044ed",
            "commit_summary": "Treat parameter as a string if it's not a file or a directory\nShow file name rather than directory name when listing contents\nDon't append '-' for non-file digests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744708 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/cli/Digest.java"
            ],
            "functions": [
                {
                    "function name": "println",
                    "function params": [
                        "prefix",
                        "digest",
                        "fileName"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.cli.Digest.println"
                },
                {
                    "function name": "run",
                    "function params": [
                        "prefix",
                        "messageDigest",
                        "files"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.cli.Digest.run"
                },
                {
                    "function name": "println",
                    "function params": [
                        "prefix",
                        "digest"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.cli.Digest.println"
                },
                {
                    "function name": "run",
                    "function params": [
                        "prefix",
                        "messageDigest"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.cli.Digest.run"
                },
                {
                    "function name": "println",
                    "function params": [
                        "prefix",
                        "digest"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.cli.Digest.println"
                }
            ],
            "date": "2016-05-20"
        },
        {
            "commit_id": 994,
            "hash": "5a5bbc662104afe8f020d89d6e560f2897678984",
            "commit_summary": "Fix help now it supports a string\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744711 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/cli/Digest.java"
            ],
            "functions": [
                {
                    "function name": "Digest",
                    "function params": [
                        "args"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.cli.Digest.Digest"
                }
            ],
            "date": "2016-05-20"
        },
        {
            "commit_id": 995,
            "hash": "f8c39cfd773d797adc1b4ee19aa8fc17268946ec",
            "commit_summary": "Handle multiple arguments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744721 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/cli/Digest.java"
            ],
            "functions": [
                {
                    "function name": "Digest",
                    "function params": [
                        "args"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.cli.Digest.Digest"
                },
                {
                    "function name": "run",
                    "function params": [
                        "prefix",
                        "messageDigest"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.cli.Digest.run"
                }
            ],
            "date": "2016-05-20"
        },
        {
            "commit_id": 996,
            "hash": "61994fef1081c98b729a5e3bb8a1b6b5b9568a6d",
            "commit_summary": "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744723 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Hex.java"
            ],
            "functions": [],
            "date": "2016-05-20"
        },
        {
            "commit_id": 997,
            "hash": "c0fdc948182f1d21cc4eb1448f764e63b6c48792",
            "commit_summary": "Javadoc fixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744724 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/cli/Digest.java",
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java"
            ],
            "functions": [],
            "date": "2016-05-20"
        },
        {
            "commit_id": 998,
            "hash": "7817bfdadb9cda107955de03d3d15d64ab89b5dc",
            "commit_summary": "Tab police\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744726 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "testBase64AtBufferEnd",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase64AtBufferEnd"
                },
                {
                    "function name": "testBase64InBuffer",
                    "function params": [
                        "startPasSize",
                        "endPadSize"
                    ],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase64InBuffer"
                },
                {
                    "function name": "testBase64AtBufferMiddle",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase64AtBufferMiddle"
                },
                {
                    "function name": "testBase64AtBufferStart",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase64AtBufferStart"
                },
                {
                    "function name": "testRfc4648Section10DecodeEncode",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"
                },
                {
                    "function name": "testBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testBase64"
                },
                {
                    "function name": "testNonBase64Test",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testNonBase64Test"
                },
                {
                    "function name": "testCodeInteger4",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodeInteger4"
                },
                {
                    "function name": "testSingletonsChunked",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"
                },
                {
                    "function name": "testKnownEncodings",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testKnownEncodings"
                },
                {
                    "function name": "testCodeInteger1",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodeInteger1"
                },
                {
                    "function name": "testDecodeEncode",
                    "function params": [
                        "encodedText"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testDecodeEncode"
                },
                {
                    "function name": "testEncodeOverMaxSize",
                    "function params": [
                        "maxSize"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"
                },
                {
                    "function name": "testObjectDecodeWithInvalidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"
                },
                {
                    "function name": "testDecodePadOnly",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"
                },
                {
                    "function name": "testChunkedEncodeMultipleOf76",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"
                },
                {
                    "function name": "testDecodeWithWhitespace",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"
                },
                {
                    "function name": "testEncodeDecode",
                    "function params": [
                        "plainText"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testEncodeDecode"
                },
                {
                    "function name": "testDecodePadMarkerIndex2",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"
                },
                {
                    "function name": "testIgnoringNonBase64InDecode",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"
                },
                {
                    "function name": "testKnownDecodings",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testKnownDecodings"
                },
                {
                    "function name": "testBase64InBuffer",
                    "function params": [
                        "startPasSize",
                        "endPadSize"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testBase64InBuffer"
                },
                {
                    "function name": "testIsArrayByteBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"
                },
                {
                    "function name": "testIsUrlSafe",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"
                },
                {
                    "function name": "testRfc4648Section10EncodeDecode",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"
                },
                {
                    "function name": "getRandom",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.getRandom"
                },
                {
                    "function name": "testHugeLineSeparator",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"
                },
                {
                    "function name": "testIsStringBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testIsStringBase64"
                },
                {
                    "function name": "testObjectEncode",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testObjectEncode"
                },
                {
                    "function name": "testRfc4648Section10Encode",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"
                },
                {
                    "function name": "testByteToStringVariations",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"
                },
                {
                    "function name": "testDecodePadOnlyChunked",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "data"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.toString"
                },
                {
                    "function name": "testBase64AtBufferMiddle",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testBase64AtBufferMiddle"
                },
                {
                    "function name": "testConstructor_Int_ByteArray_Boolean_UrlSafe",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"
                },
                {
                    "function name": "testRfc4648Section10DecodeWithCrLf",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"
                },
                {
                    "function name": "testTripletsChunked",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testTripletsChunked"
                },
                {
                    "function name": "testEncodeDecodeSmall",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"
                },
                {
                    "function name": "testConstructors",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testConstructors"
                },
                {
                    "function name": "testBase64AtBufferStart",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testBase64AtBufferStart"
                },
                {
                    "function name": "testCodeInteger3",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodeInteger3"
                },
                {
                    "function name": "testEncodeDecodeRandom",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"
                },
                {
                    "function name": "testRfc1421Section6Dot8ChunkSizeDefinition",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"
                },
                {
                    "function name": "testTriplets",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testTriplets"
                },
                {
                    "function name": "testBase64AtBufferEnd",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd"
                },
                {
                    "function name": "testUUID",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testUUID"
                },
                {
                    "function name": "testStringToByteVariations",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"
                },
                {
                    "function name": "testObjectDecodeWithValidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"
                },
                {
                    "function name": "testUrlSafe",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testUrlSafe"
                },
                {
                    "function name": "testCodec112",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodec112"
                },
                {
                    "function name": "testEncodeOverMaxSize",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"
                },
                {
                    "function name": "testCodeIntegerNull",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"
                },
                {
                    "function name": "testCodec68",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodec68"
                },
                {
                    "function name": "testObjectEncodeWithValidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"
                },
                {
                    "function name": "testDecodeWithInnerPad",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"
                },
                {
                    "function name": "testDecodePadMarkerIndex3",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"
                },
                {
                    "function name": "testPairs",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testPairs"
                },
                {
                    "function name": "testConstructor_Int_ByteArray_Boolean",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"
                },
                {
                    "function name": "testRfc2045Section2Dot1CrLfDefinition",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"
                },
                {
                    "function name": "testObjectEncodeWithInvalidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"
                },
                {
                    "function name": "testSingletons",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testSingletons"
                },
                {
                    "function name": "testCodeInteger2",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodeInteger2"
                },
                {
                    "function name": "testEmptyBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testEmptyBase64"
                },
                {
                    "function name": "testRfc4648Section10Decode",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"
                },
                {
                    "function name": "testCodeIntegerEdgeCases",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodeIntegerEdgeCases"
                },
                {
                    "function name": "testRfc2045Section6Dot8ChunkSizeDefinition",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"
                },
                {
                    "function name": "testProvidePaddingByte",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.testProvidePaddingByte"
                }
            ],
            "date": "2016-05-20"
        },
        {
            "commit_id": 999,
            "hash": "ae70bfc75587321da4d6877420ac91f7a83b9c02",
            "commit_summary": "Checkstyle - trailing spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744727 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Hex.java",
                "src/main/java/org/apache/commons/codec/cli/Digest.java",
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java",
                "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java",
                "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "Digest",
                    "function params": [
                        "args"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.cli.Digest.Digest"
                },
                {
                    "function name": "update",
                    "function params": [
                        "b",
                        "offset",
                        "len"
                    ],
                    "file name": "PureJavaCrc32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32.update"
                },
                {
                    "function name": "update",
                    "function params": [
                        "b",
                        "off",
                        "len"
                    ],
                    "file name": "PureJavaCrc32C.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32C.update"
                },
                {
                    "function name": "testIncreasing",
                    "function params": [],
                    "file name": "PureJavaCrc32CTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32CTest.testIncreasing"
                },
                {
                    "function name": "testZeros",
                    "function params": [],
                    "file name": "PureJavaCrc32CTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32CTest.testZeros"
                },
                {
                    "function name": "testDecreasing",
                    "function params": [],
                    "file name": "PureJavaCrc32CTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing"
                },
                {
                    "function name": "checkOnBytes",
                    "function params": [
                        "bytes",
                        "print"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.checkOnBytes"
                },
                {
                    "function name": "testCorrectness",
                    "function params": [],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [
                        "clazz",
                        "numThreads",
                        "bytes",
                        "size"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                },
                {
                    "function name": "Table",
                    "function params": [],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.Table"
                },
                {
                    "function name": "Table",
                    "function params": [
                        "args"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.Table"
                },
                {
                    "function name": "testWikipediaAmericanSoundex",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testWikipediaAmericanSoundex"
                },
                {
                    "function name": "testTrailingSpecial",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"
                }
            ],
            "date": "2016-05-20"
        },
        {
            "commit_id": 1000,
            "hash": "8ab0ecd0af3932f40b931e1d84b2951f7777a305",
            "commit_summary": "Checkstyle\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744728 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/cli/Digest.java",
                "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java",
                "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java"
            ],
            "functions": [
                {
                    "function name": "values",
                    "function params": [],
                    "file name": "MessageDigestAlgorithms.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MessageDigestAlgorithms.values"
                },
                {
                    "function name": "update",
                    "function params": [
                        "b",
                        "offset",
                        "len"
                    ],
                    "file name": "PureJavaCrc32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32.update"
                },
                {
                    "function name": "update",
                    "function params": [
                        "b",
                        "off",
                        "len"
                    ],
                    "file name": "PureJavaCrc32C.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32C.update"
                }
            ],
            "date": "2016-05-20"
        },
        {
            "commit_id": 1001,
            "hash": "599e57b27c19953487dfa3828432b8ecc7cb8b38",
            "commit_summary": "Restore BC\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744742 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java"
            ],
            "functions": [
                {
                    "function name": "DigestUtils",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.DigestUtils"
                },
                {
                    "function name": "HmacUtils",
                    "function params": [],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.HmacUtils"
                }
            ],
            "date": "2016-05-20"
        },
        {
            "commit_id": 1002,
            "hash": "ba966190a1f61520201b7d62fdf69aa6515e2e73",
            "commit_summary": "Add AL header\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744744 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java"
            ],
            "functions": [],
            "date": "2016-05-20"
        },
        {
            "commit_id": 1003,
            "hash": "27388c817bf558af48568ce724b9de080e80e8f1",
            "commit_summary": "FindBugs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744746 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/cli/Digest.java",
                "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java"
            ],
            "functions": [
                {
                    "function name": "run",
                    "function params": [
                        "prefix",
                        "messageDigest"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.cli.Digest.run"
                },
                {
                    "function name": "md5Crypt",
                    "function params": [
                        "keyBytes",
                        "salt",
                        "prefix"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.md5Crypt"
                },
                {
                    "function name": "update",
                    "function params": [
                        "b",
                        "off",
                        "len"
                    ],
                    "file name": "PureJavaCrc32C.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32C.update"
                },
                {
                    "function name": "sha2Crypt",
                    "function params": [
                        "keyBytes",
                        "salt",
                        "saltPrefix",
                        "blocksize",
                        "algorithm"
                    ],
                    "file name": "Sha2Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt"
                },
                {
                    "function name": "getMinRating",
                    "function params": [
                        "sumLength"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating"
                }
            ],
            "date": "2016-05-20"
        },
        {
            "commit_id": 1004,
            "hash": "68ae60d779e3bf4a46064fc1b537057478a627e4",
            "commit_summary": "Unused\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744748 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java"
            ],
            "functions": [],
            "date": "2016-05-20"
        },
        {
            "commit_id": 1005,
            "hash": "c600de52e107d1fd3d5a9c1aa1bdbbd6754622a7",
            "commit_summary": "Findbugs: specify Locale\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744749 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java"
            ],
            "functions": [
                {
                    "function name": "removeDoubleConsonants",
                    "function params": [
                        "name"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.removeDoubleConsonants"
                }
            ],
            "date": "2016-05-20"
        },
        {
            "commit_id": 1006,
            "hash": "2286eac40b80248a8f68ceac1f9b0084c2b9e07d",
            "commit_summary": "Missing @since\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1744788 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [],
            "date": "2016-05-20"
        },
        {
            "commit_id": 1007,
            "hash": "8939061a3c0218dd3fd27f96f3e60e48f74622c6",
            "commit_summary": "Simplify - always require key when creating the instance\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1745052 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java"
            ],
            "functions": [
                {
                    "function name": "use",
                    "function params": [
                        "algorithm"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.use"
                },
                {
                    "function name": "use",
                    "function params": [
                        "algorithm",
                        "key"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.use"
                },
                {
                    "function name": "use",
                    "function params": [
                        "algorithm",
                        "key"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.use"
                },
                {
                    "function name": "HmacUtils",
                    "function params": [
                        "algorithm",
                        "key"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.HmacUtils"
                },
                {
                    "function name": "use",
                    "function params": [
                        "mac"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.use"
                },
                {
                    "function name": "use",
                    "function params": [
                        "algorithm"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.use"
                }
            ],
            "date": "2016-05-22"
        },
        {
            "commit_id": 1008,
            "hash": "cff360a340b48070d88a48f06e8748a916ce52e9",
            "commit_summary": "Inline the code from the enum\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1745057 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java"
            ],
            "functions": [
                {
                    "function name": "getHmacSha1",
                    "function params": [
                        "key"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.getHmacSha1"
                },
                {
                    "function name": "getHmacSha384",
                    "function params": [
                        "key"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.getHmacSha384"
                },
                {
                    "function name": "getHmacSha512",
                    "function params": [
                        "key"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.getHmacSha512"
                },
                {
                    "function name": "getInitializedMac",
                    "function params": [
                        "algorithm",
                        "key"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.getInitializedMac"
                },
                {
                    "function name": "getHmacMd5",
                    "function params": [
                        "key"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.getHmacMd5"
                },
                {
                    "function name": "getHmacSha256",
                    "function params": [
                        "key"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.getHmacSha256"
                }
            ],
            "date": "2016-05-22"
        },
        {
            "commit_id": 1009,
            "hash": "52cfbfd91e60db255c3285c90b94cb6e3a75fdb7",
            "commit_summary": "Simplify; merge update() and doFinal() methods so code looks more like original static methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1745063 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java"
            ],
            "functions": [
                {
                    "function name": "hmacHex",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacHex"
                },
                {
                    "function name": "hmacHex",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacHex"
                },
                {
                    "function name": "hmacHex",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacHex"
                },
                {
                    "function name": "hmac",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmac"
                },
                {
                    "function name": "hmac",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmac"
                },
                {
                    "function name": "hmac",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmac"
                },
                {
                    "function name": "hmac",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmac"
                },
                {
                    "function name": "hmacHex",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacHex"
                },
                {
                    "function name": "hmac",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmac"
                },
                {
                    "function name": "hmacHex",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacHex"
                }
            ],
            "date": "2016-05-22"
        },
        {
            "commit_id": 1010,
            "hash": "ae31e56476646b33b0c2a1f03bb095145a22097f",
            "commit_summary": "Use local code rather than depending on the enum methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1745098 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java"
            ],
            "functions": [
                {
                    "function name": "hmacSha384Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha384Hex"
                },
                {
                    "function name": "hmacSha1Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha1Hex"
                },
                {
                    "function name": "hmacMd5Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacMd5Hex"
                },
                {
                    "function name": "hmacMd5",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacMd5"
                },
                {
                    "function name": "hmacSha256",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha256"
                },
                {
                    "function name": "hmacSha1Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha1Hex"
                },
                {
                    "function name": "use",
                    "function params": [
                        "algorithm",
                        "key"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.use"
                },
                {
                    "function name": "hmacSha1",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha1"
                },
                {
                    "function name": "hmacSha1Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha1Hex"
                },
                {
                    "function name": "hmacSha1",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha1"
                },
                {
                    "function name": "use",
                    "function params": [
                        "algorithm",
                        "key"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.use"
                },
                {
                    "function name": "hmacSha512Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha512Hex"
                },
                {
                    "function name": "hmacSha512Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha512Hex"
                },
                {
                    "function name": "hmacSha384",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha384"
                },
                {
                    "function name": "hmacSha512",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha512"
                },
                {
                    "function name": "hmacSha512",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha512"
                },
                {
                    "function name": "hmacSha512",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha512"
                },
                {
                    "function name": "hmacSha256Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha256Hex"
                },
                {
                    "function name": "hmacMd5",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacMd5"
                },
                {
                    "function name": "hmacSha384",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha384"
                },
                {
                    "function name": "hmacMd5Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacMd5Hex"
                },
                {
                    "function name": "hmacSha256",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha256"
                },
                {
                    "function name": "hmacSha512Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha512Hex"
                },
                {
                    "function name": "hmacSha384",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha384"
                },
                {
                    "function name": "hmacSha384Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha384Hex"
                },
                {
                    "function name": "hmacSha1",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha1"
                },
                {
                    "function name": "hmacSha256Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha256Hex"
                },
                {
                    "function name": "hmacSha384Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha384Hex"
                },
                {
                    "function name": "hmacSha256",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha256"
                },
                {
                    "function name": "hmacSha256Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha256Hex"
                },
                {
                    "function name": "hmacMd5Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacMd5Hex"
                },
                {
                    "function name": "hmacMd5",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacMd5"
                }
            ],
            "date": "2016-05-22"
        },
        {
            "commit_id": 1011,
            "hash": "184b53f4c100e956a922d02ed1c94aabc24d26c0",
            "commit_summary": "Fix Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1745099 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java"
            ],
            "functions": [],
            "date": "2016-05-22"
        },
        {
            "commit_id": 1012,
            "hash": "0b683acf0a5910fdc4235d3103eccbfdebbb18ff",
            "commit_summary": "Simplify\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1745140 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "digest",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.digest"
                },
                {
                    "function name": "digestAsHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.digestAsHex"
                },
                {
                    "function name": "digest",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.digest"
                },
                {
                    "function name": "digestAsHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.digestAsHex"
                },
                {
                    "function name": "DigestUtils",
                    "function params": [
                        "digest"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.DigestUtils"
                },
                {
                    "function name": "digestAsHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.digestAsHex"
                },
                {
                    "function name": "digest",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.digest"
                },
                {
                    "function name": "digest",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.digest"
                },
                {
                    "function name": "digest",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.digest"
                },
                {
                    "function name": "digestAsHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.digestAsHex"
                },
                {
                    "function name": "digestAsHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.digestAsHex"
                },
                {
                    "function name": "DigestUtils",
                    "function params": [
                        "name"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.DigestUtils"
                },
                {
                    "function name": "testSha224",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha224"
                }
            ],
            "date": "2016-05-23"
        },
        {
            "commit_id": 1013,
            "hash": "861646b25a39dcdf79bcf5a7643bfeb28e137a8c",
            "commit_summary": "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1745141 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [],
            "date": "2016-05-23"
        },
        {
            "commit_id": 1014,
            "hash": "3ea4d5d580a78213504a4611fc7bbab58b93db0c",
            "commit_summary": "Oops, recursive call\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1745150 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java"
            ],
            "functions": [
                {
                    "function name": "getInitializedMac",
                    "function params": [
                        "algorithm",
                        "key"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.getInitializedMac"
                }
            ],
            "date": "2016-05-23"
        },
        {
            "commit_id": 1015,
            "hash": "b5955f5948a973a248731b774773bd225af39c82",
            "commit_summary": "Simplify\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1745152 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java"
            ],
            "functions": [
                {
                    "function name": "hmacSha384Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha384Hex"
                },
                {
                    "function name": "HmacUtils",
                    "function params": [
                        "algorithm",
                        "key"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.HmacUtils"
                },
                {
                    "function name": "hmacSha1Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha1Hex"
                },
                {
                    "function name": "hmacMd5Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacMd5Hex"
                },
                {
                    "function name": "hmacMd5",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacMd5"
                },
                {
                    "function name": "hmacSha256",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha256"
                },
                {
                    "function name": "hmacSha1Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha1Hex"
                },
                {
                    "function name": "hmacSha1",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha1"
                },
                {
                    "function name": "hmacSha1Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha1Hex"
                },
                {
                    "function name": "hmacSha1",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha1"
                },
                {
                    "function name": "HmacUtils",
                    "function params": [
                        "algorithm",
                        "key"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.HmacUtils"
                },
                {
                    "function name": "hmacSha512Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha512Hex"
                },
                {
                    "function name": "hmacSha512Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha512Hex"
                },
                {
                    "function name": "hmacSha384",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha384"
                },
                {
                    "function name": "HmacUtils",
                    "function params": [
                        "algorithm",
                        "key"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.HmacUtils"
                },
                {
                    "function name": "hmacSha512",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha512"
                },
                {
                    "function name": "hmacSha512",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha512"
                },
                {
                    "function name": "hmacSha512",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha512"
                },
                {
                    "function name": "hmacSha256Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha256Hex"
                },
                {
                    "function name": "HmacUtils",
                    "function params": [
                        "algorithm",
                        "key"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.HmacUtils"
                },
                {
                    "function name": "hmacMd5",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacMd5"
                },
                {
                    "function name": "hmacSha384",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha384"
                },
                {
                    "function name": "hmacMd5Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacMd5Hex"
                },
                {
                    "function name": "hmacSha256",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha256"
                },
                {
                    "function name": "hmacSha512Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha512Hex"
                },
                {
                    "function name": "hmacSha384",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha384"
                },
                {
                    "function name": "hmacSha384Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha384Hex"
                },
                {
                    "function name": "hmacSha1",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha1"
                },
                {
                    "function name": "hmacSha256Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha256Hex"
                },
                {
                    "function name": "hmacSha384Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha384Hex"
                },
                {
                    "function name": "hmacSha256",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha256"
                },
                {
                    "function name": "hmacSha256Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacSha256Hex"
                },
                {
                    "function name": "hmacMd5Hex",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacMd5Hex"
                },
                {
                    "function name": "hmacMd5",
                    "function params": [
                        "key",
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacMd5"
                }
            ],
            "date": "2016-05-23"
        },
        {
            "commit_id": 1016,
            "hash": "09db9daa292e74b6bcff84edf406aec41ecf536c",
            "commit_summary": "Check for algorithm availability\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1745171 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java"
            ],
            "functions": [
                {
                    "function name": "isAvailable",
                    "function params": [
                        "name"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.isAvailable"
                },
                {
                    "function name": "isAvailable",
                    "function params": [
                        "name"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.isAvailable"
                }
            ],
            "date": "2016-05-23"
        },
        {
            "commit_id": 1017,
            "hash": "410ab04290294dec74180043dc2aa635ca1e4e80",
            "commit_summary": "git-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1745172 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java"
            ],
            "functions": [
                {
                    "function name": "testHmacHexFailString",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailString"
                },
                {
                    "function name": "testAlgorithm",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testAlgorithm"
                },
                {
                    "function name": "testHmacHexFailByteArray",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailByteArray"
                },
                {
                    "function name": "testHmacFailString",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailString"
                },
                {
                    "function name": "HmacAlgorithmsTest",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.HmacAlgorithmsTest"
                },
                {
                    "function name": "testMacByteArary",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacByteArary"
                },
                {
                    "function name": "testMacHexInputStream",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexInputStream"
                },
                {
                    "function name": "testGetHmacEmptyKey",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testGetHmacEmptyKey"
                },
                {
                    "function name": "testMacHexByteArray",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexByteArray"
                },
                {
                    "function name": "testMacHexString",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexString"
                },
                {
                    "function name": "testHmacFailInputStream",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailInputStream"
                },
                {
                    "function name": "testHmacHexFailInputStream",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailInputStream"
                },
                {
                    "function name": "testHmacFailByteArray",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailByteArray"
                },
                {
                    "function name": "testGetHmacNullKey",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testGetHmacNullKey"
                },
                {
                    "function name": "testMacInputStream",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacInputStream"
                },
                {
                    "function name": "testMacString",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacString"
                }
            ],
            "date": "2016-05-23"
        },
        {
            "commit_id": 1018,
            "hash": "c7b540bae35372e92490fb47f75fac508fbf25ba",
            "commit_summary": "CODEC-218 Refactor HmacUtils methods into the HmacAlgorithms enum\nReverted, because not all algorithms can be supported by the enum\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1745174 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java"
            ],
            "functions": [],
            "date": "2016-05-23"
        },
        {
            "commit_id": 1019,
            "hash": "81ab00df47a43a7b95731032d3711bcf836b05b4",
            "commit_summary": "Remove bogus Javadoc tags.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1748130 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java"
            ],
            "functions": [],
            "date": "2016-06-13"
        },
        {
            "commit_id": 1020,
            "hash": "f42d538b261584ab2a1805af60610cc205e141c6",
            "commit_summary": "Add missing @param Javadoc tag.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1748131 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java"
            ],
            "functions": [],
            "date": "2016-06-13"
        },
        {
            "commit_id": 1021,
            "hash": "e99eda74d7308d0ac93ae18a5077772e16cbbbdc",
            "commit_summary": "Javadoc: Use the active voice.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1748132 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java"
            ],
            "functions": [],
            "date": "2016-06-13"
        },
        {
            "commit_id": 1022,
            "hash": "457eea0e5e32dd64c1bee30bff7fc4ea3a1421cf",
            "commit_summary": "Javadoc fixes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1751510 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java"
            ],
            "functions": [],
            "date": "2016-07-05"
        },
        {
            "commit_id": 1023,
            "hash": "b7e7b40a3328122549b31c007fa10bbddcb415eb",
            "commit_summary": "Remove unused field.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1751511 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/bm/LanguageGuessingTest.java"
            ],
            "functions": [
                {
                    "function name": "LanguageGuessingTest",
                    "function params": [
                        "name",
                        "language",
                        "exactness"
                    ],
                    "file name": "LanguageGuessingTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.LanguageGuessingTest.LanguageGuessingTest"
                },
                {
                    "function name": "LanguageGuessingTest",
                    "function params": [
                        "name",
                        "language"
                    ],
                    "file name": "LanguageGuessingTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.LanguageGuessingTest.LanguageGuessingTest"
                }
            ],
            "date": "2016-07-05"
        },
        {
            "commit_id": 1024,
            "hash": "1f799f62932c5551c99699f46f7de75c9a85dbeb",
            "commit_summary": "Remove unused exceptions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1751512 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [
                {
                    "function name": "testGetCharset",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testGetCharset"
                },
                {
                    "function name": "testEncodeByteBufferEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeByteBufferEmpty"
                },
                {
                    "function name": "testEncodeHexByteArrayEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayEmpty"
                },
                {
                    "function name": "testGetCharsetName",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testGetCharsetName"
                },
                {
                    "function name": "testEncodeByteArrayEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeByteArrayEmpty"
                },
                {
                    "function name": "testEncodeHexByteBufferEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferEmpty"
                }
            ],
            "date": "2016-07-05"
        },
        {
            "commit_id": 1025,
            "hash": "db6f9bf17c1cbf9e6ce518318fe4d14119b87d60",
            "commit_summary": "Remove unused field.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1751514 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/bm/LanguageGuessingTest.java"
            ],
            "functions": [
                {
                    "function name": "data",
                    "function params": [],
                    "file name": "LanguageGuessingTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.LanguageGuessingTest.data"
                }
            ],
            "date": "2016-07-05"
        },
        {
            "commit_id": 1026,
            "hash": "337ed8bef567b6b385491ece5c63ffa84f056609",
            "commit_summary": "Remove unused field.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1751515 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/bm/LanguageGuessingTest.java"
            ],
            "functions": [],
            "date": "2016-07-05"
        },
        {
            "commit_id": 1027,
            "hash": "cc279433f33ad0c00e80ff5af734062d92c8a3f7",
            "commit_summary": "Add missing (direct usage) tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1754052 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [
                {
                    "function name": "testEncodeHexByteString_ByteBufferOfZeroes",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferOfZeroes"
                },
                {
                    "function name": "testEncodeHex_ByteBufferOfZeroes",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHex_ByteBufferOfZeroes"
                },
                {
                    "function name": "testEncodeHexByteString_ByteArrayOfZeroes",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayOfZeroes"
                }
            ],
            "date": "2016-07-25"
        },
        {
            "commit_id": 1028,
            "hash": "f0028e1b90f8d10266f3fe26bafa0882a81ffe82",
            "commit_summary": "[CODEC-224] Add convenience API org.apache.commons.codec.binary.Hex.encodeHexString(byte[]|ByteBuffer, boolean).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1754055 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Hex.java",
                "src/test/java/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [
                {
                    "function name": "encodeHexString",
                    "function params": [
                        "data",
                        "toLowerCase"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHexString"
                },
                {
                    "function name": "encodeHexString",
                    "function params": [
                        "data",
                        "toLowerCase"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHexString"
                },
                {
                    "function name": "testEncodeHexByteString_ByteArrayBoolean_ToUpperCase",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayBoolean_ToUpperCase"
                },
                {
                    "function name": "testEncodeHexByteString_ByteBufferBoolean_ToLowerCase",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferBoolean_ToLowerCase"
                },
                {
                    "function name": "testEncodeHexByteString_ByteArrayBoolean_ToLowerCase",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayBoolean_ToLowerCase"
                },
                {
                    "function name": "testEncodeHexByteString_ByteBufferBoolean_ToUpperCase",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferBoolean_ToUpperCase"
                }
            ],
            "date": "2016-07-25"
        },
        {
            "commit_id": 1029,
            "hash": "efe3699122699151984e8499da9d42673a42851a",
            "commit_summary": "PR: CODEC-225\n\nFix minor resource leaks. GitHub PR\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1760691 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java"
            ],
            "functions": [
                {
                    "function name": "for",
                    "function params": [
                        "s"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.for"
                },
                {
                    "function name": "parseRules",
                    "function params": [
                        "scanner",
                        "location"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.parseRules"
                }
            ],
            "date": "2016-09-14"
        },
        {
            "commit_id": 1030,
            "hash": "d2f27093d7d95a07da901902f894d88b4ecc3e95",
            "commit_summary": "CODEC-229 StringUtils.newStringxxx(null) should return null, not NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1788755 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "newStringUsAscii",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.newStringUsAscii"
                },
                {
                    "function name": "newStringUtf16Be",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.newStringUtf16Be"
                },
                {
                    "function name": "newStringIso8859_1",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.newStringIso8859_1"
                },
                {
                    "function name": "newStringUtf16Le",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.newStringUtf16Le"
                },
                {
                    "function name": "newStringUtf16",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.newStringUtf16"
                },
                {
                    "function name": "testNewStringNullInput_CODEC229",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput_CODEC229"
                }
            ],
            "date": "2017-03-26"
        },
        {
            "commit_id": 1031,
            "hash": "33cc94708a0ded781e42af3a910fd70b69e8d605",
            "commit_summary": "Incorrect Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1788757 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/StringUtils.java"
            ],
            "functions": [],
            "date": "2017-03-26"
        },
        {
            "commit_id": 1032,
            "hash": "949ff4a9dd556f8285c477969e2c6f0706ac5bbd",
            "commit_summary": "Better Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1788758 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/StringUtils.java"
            ],
            "functions": [],
            "date": "2017-03-26"
        },
        {
            "commit_id": 1033,
            "hash": "5d3142a1639c7d8e792f3e72288f18e46ff3546a",
            "commit_summary": "Docn\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1788760 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [],
            "date": "2017-03-26"
        },
        {
            "commit_id": 1034,
            "hash": "ca30fae3acb59a5caef3c3c21eecae7c928827e0",
            "commit_summary": "CODEC-230 URLCodec.WWW_FORM_URL should be private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1788761 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.encode"
                },
                {
                    "function name": "for",
                    "function params": [
                        "i"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.for"
                },
                {
                    "function name": "for",
                    "function params": [
                        "i"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.for"
                },
                {
                    "function name": "encodeUrl",
                    "function params": [
                        "urlsafe",
                        "bytes"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.encodeUrl"
                },
                {
                    "function name": "for",
                    "function params": [
                        "i"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.for"
                }
            ],
            "date": "2017-03-26"
        },
        {
            "commit_id": 1035,
            "hash": "5ef5bd199a4e3df74479b4b363fa29b0b3092547",
            "commit_summary": "CODEC-231 StringUtils.equals(CharSequence cs1, CharSequence cs2) can fail with String Index OBE\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1788777 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "equals",
                    "function params": [
                        "cs1",
                        "cs2"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.equals"
                },
                {
                    "function name": "testEqualsCS1",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testEqualsCS1"
                },
                {
                    "function name": "testEqualsString",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testEqualsString"
                },
                {
                    "function name": "testEqualsCS2",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testEqualsCS2"
                }
            ],
            "date": "2017-03-26"
        },
        {
            "commit_id": 1036,
            "hash": "9e8eec78a71b7d1274043f55c9a5fc7811d53132",
            "commit_summary": "Centralise conversion to hex digit\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1788792 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                "src/main/java/org/apache/commons/codec/net/Utils.java"
            ],
            "functions": [
                {
                    "function name": "encodeQuotedPrintable",
                    "function params": [
                        "b",
                        "buffer"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable"
                },
                {
                    "function name": "encodeUrl",
                    "function params": [
                        "urlsafe",
                        "bytes"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.encodeUrl"
                },
                {
                    "function name": "hexDigit",
                    "function params": [
                        "b"
                    ],
                    "file name": "Utils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/Utils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/Utils.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.Utils.hexDigit"
                },
                {
                    "function name": "digit16",
                    "function params": [
                        "b"
                    ],
                    "file name": "Utils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/Utils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/Utils.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.Utils.digit16"
                }
            ],
            "date": "2017-03-26"
        },
        {
            "commit_id": 1037,
            "hash": "6a0a1876772e74a1d4a7c82669784f8bcca8397e",
            "commit_summary": "Pull Random instance creation out of loop\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1789013 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java"
            ],
            "functions": [
                {
                    "function name": "testCorrectness",
                    "function params": [],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness"
                }
            ],
            "date": "2017-03-27"
        },
        {
            "commit_id": 1038,
            "hash": "8c5c6b936ee6d1afb75cc2cbc151887937dbcca5",
            "commit_summary": "CODEC-232 URLCodec is neither immutable nor threadsafe\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1789142 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [],
            "date": "2017-03-28"
        },
        {
            "commit_id": 1039,
            "hash": "ae83747b2b049ba37605622116579e8186dd3422",
            "commit_summary": "CODEC-144 BaseNCodec: encodeToString and encodeAsString methods are identical\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1789156 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java"
            ],
            "functions": [],
            "date": "2017-03-28"
        },
        {
            "commit_id": 1040,
            "hash": "484698c5415bb578cb480845e2dfa930d3d49d9c",
            "commit_summary": "CODEC-145 Base64.encodeBase64String could better use newStringUsAscii (ditto encodeBase64URLSafeString)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1789158 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [
                {
                    "function name": "encodeBase64String",
                    "function params": [
                        "binaryData"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encodeBase64String"
                },
                {
                    "function name": "encodeBase64URLSafeString",
                    "function params": [
                        "binaryData"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString"
                }
            ],
            "date": "2017-03-28"
        },
        {
            "commit_id": 1041,
            "hash": "5ccd7e9f144dc08e16cdefedb0e2e6840a4d9731",
            "commit_summary": "Don't use @since with private methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1789539 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/StringUtils.java"
            ],
            "functions": [],
            "date": "2017-03-30"
        },
        {
            "commit_id": 1042,
            "hash": "d40adeba8a97d062b8fd3913bafaef579beef49c",
            "commit_summary": "When deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1789540 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java"
            ],
            "functions": [],
            "date": "2017-03-30"
        },
        {
            "commit_id": 1043,
            "hash": "8d55e2cc3e33280c9e9d01634298d12b47fc839b",
            "commit_summary": "Update Bug reference\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1789542 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/SoundexTest.java"
            ],
            "functions": [],
            "date": "2017-03-30"
        },
        {
            "commit_id": 1044,
            "hash": "8bb11519522dbe0192d6538a29b3356b25f5927d",
            "commit_summary": "Doc tweak\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1789720 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java"
            ],
            "functions": [],
            "date": "2017-03-31"
        },
        {
            "commit_id": 1045,
            "hash": "29a7e67999568a5c86b32ef513a90d5d090ad2b2",
            "commit_summary": "CODEC-199 Bug in HW rule in Soundex\nRevert to a fix which does not entail change to public API\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1789764 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/Soundex.java"
            ],
            "functions": [
                {
                    "function name": "soundex",
                    "function params": [
                        "str"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.soundex"
                },
                {
                    "function name": "map",
                    "function params": [
                        "ch"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.map"
                }
            ],
            "date": "2017-03-31"
        },
        {
            "commit_id": 1046,
            "hash": "87f142f5c85c9a7e86d02b4599e3973e773f3d41",
            "commit_summary": "CODEC-233 Soundex should support more algorithm variants\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1789911 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/Soundex.java",
                "src/test/java/org/apache/commons/codec/language/SoundexTest.java"
            ],
            "functions": [
                {
                    "function name": "soundex",
                    "function params": [
                        "str"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.soundex"
                },
                {
                    "function name": "map",
                    "function params": [
                        "ch"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.map"
                },
                {
                    "function name": "hasMarker",
                    "function params": [
                        "mapping"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.hasMarker"
                },
                {
                    "function name": "Soundex",
                    "function params": [
                        "mapping"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.Soundex"
                },
                {
                    "function name": "Soundex",
                    "function params": [
                        "mapping"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.Soundex"
                },
                {
                    "function name": "Soundex",
                    "function params": [],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.Soundex"
                },
                {
                    "function name": "Soundex",
                    "function params": [
                        "mapping",
                        "specialCaseHW"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.Soundex"
                },
                {
                    "function name": "testGenealogy",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testGenealogy"
                },
                {
                    "function name": "testSimplifiedSoundex",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testSimplifiedSoundex"
                }
            ],
            "date": "2017-04-02"
        },
        {
            "commit_id": 1047,
            "hash": "d664776d4cf41d7e1e46b92bd8a4e907cd3bd438",
            "commit_summary": "Indentation\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1789912 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [
                {
                    "function name": "sha",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha"
                }
            ],
            "date": "2017-04-02"
        },
        {
            "commit_id": 1048,
            "hash": "8e601f5773c71a005cbe6f3db7592387bad690b9",
            "commit_summary": "[CODEC-234] Base32.decode should support lowercase letters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1809441 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java"
            ],
            "functions": [
                {
                    "function name": "testBase32HexSamplesReverse",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32HexSamplesReverse"
                },
                {
                    "function name": "catch",
                    "function params": [
                        "de"
                    ],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.catch"
                },
                {
                    "function name": "testBase32HexSamplesReverseLowercase",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32HexSamplesReverseLowercase"
                },
                {
                    "function name": "testBase32BinarySamples",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32BinarySamples"
                },
                {
                    "function name": "testBase32BinarySamplesReverse",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32BinarySamplesReverse"
                }
            ],
            "date": "2017-09-23"
        },
        {
            "commit_id": 1049,
            "hash": "847a6d07793a198d28819731e5166f9ed3845164",
            "commit_summary": "CODEC-241 add support for XXHash32\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1810226 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "getValue",
                    "function params": [],
                    "file name": "XXHash32.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.XXHash32.getValue"
                },
                {
                    "function name": "getInt",
                    "function params": [
                        "buffer",
                        "idx"
                    ],
                    "file name": "XXHash32.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.XXHash32.getInt"
                },
                {
                    "function name": "initializeState",
                    "function params": [],
                    "file name": "XXHash32.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.XXHash32.initializeState"
                },
                {
                    "function name": "update",
                    "function params": [
                        "b"
                    ],
                    "file name": "XXHash32.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.XXHash32.update"
                },
                {
                    "function name": "reset",
                    "function params": [],
                    "file name": "XXHash32.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.XXHash32.reset"
                },
                {
                    "function name": "process",
                    "function params": [
                        "b",
                        "offset"
                    ],
                    "file name": "XXHash32.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.XXHash32.process"
                },
                {
                    "function name": "update",
                    "function params": [
                        "b",
                        "off",
                        "len"
                    ],
                    "file name": "XXHash32.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.XXHash32.update"
                },
                {
                    "function name": "XXHash32",
                    "function params": [],
                    "file name": "XXHash32.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.XXHash32.XXHash32"
                },
                {
                    "function name": "XXHash32",
                    "function params": [
                        "seed"
                    ],
                    "file name": "XXHash32.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.XXHash32.XXHash32"
                },
                {
                    "function name": "fromLittleEndian",
                    "function params": [
                        "bytes",
                        "off",
                        "length"
                    ],
                    "file name": "XXHash32.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.XXHash32.fromLittleEndian"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "buffersize"
                    ],
                    "file name": "XXHash32Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.XXHash32Test.copy"
                },
                {
                    "function name": "verifyChecksum",
                    "function params": [],
                    "file name": "XXHash32Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.XXHash32Test.verifyChecksum"
                },
                {
                    "function name": "XXHash32Test",
                    "function params": [
                        "path",
                        "c"
                    ],
                    "file name": "XXHash32Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.XXHash32Test.XXHash32Test"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input"
                    ],
                    "file name": "XXHash32Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.XXHash32Test.toByteArray"
                },
                {
                    "function name": "factory",
                    "function params": [],
                    "file name": "XXHash32Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.XXHash32Test.factory"
                }
            ],
            "date": "2017-09-30"
        },
        {
            "commit_id": 1050,
            "hash": "7f5616887127fbe0776d2e7ec6d351658d18c7c8",
            "commit_summary": "Add final modifier to private fields\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1811342 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java"
            ],
            "functions": [],
            "date": "2017-10-06"
        },
        {
            "commit_id": 1051,
            "hash": "c8c94f9a36adaffe058baa07fabb71e2223e6d1c",
            "commit_summary": "Add final modifier to method parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1811343 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/main/java/org/apache/commons/codec/cli/Digest.java",
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                "src/main/java/org/apache/commons/codec/language/Soundex.java",
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java",
                "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                "src/test/java/org/apache/commons/codec/language/SoundexTest.java"
            ],
            "functions": [
                {
                    "function name": "isInAlphabet",
                    "function params": [
                        "arrayOctet",
                        "allowWSPad"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.isInAlphabet"
                },
                {
                    "function name": "run",
                    "function params": [
                        "digestAlgorithms"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.cli.Digest.run"
                },
                {
                    "function name": "run",
                    "function params": [
                        "prefix",
                        "messageDigest",
                        "files"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.cli.Digest.run"
                },
                {
                    "function name": "run",
                    "function params": [
                        "prefix",
                        "messageDigest"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.cli.Digest.run"
                },
                {
                    "function name": "isAvailable",
                    "function params": [
                        "name"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.isAvailable"
                },
                {
                    "function name": "isAvailable",
                    "function params": [
                        "name"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.isAvailable"
                },
                {
                    "function name": "getValue",
                    "function params": [],
                    "file name": "PureJavaCrc32C.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32C.getValue"
                },
                {
                    "function name": "hasMarker",
                    "function params": [
                        "mapping"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.hasMarker"
                },
                {
                    "function name": "soundex",
                    "function params": [
                        "str"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.soundex"
                },
                {
                    "function name": "catch",
                    "function params": [
                        "de"
                    ],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.catch"
                },
                {
                    "function name": "catch",
                    "function params": [
                        "de"
                    ],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.catch"
                },
                {
                    "function name": "testBase64InBuffer",
                    "function params": [
                        "startPasSize",
                        "endPadSize"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testBase64InBuffer"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.setUp"
                },
                {
                    "function name": "checkValues",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.checkValues"
                },
                {
                    "function name": "contains",
                    "function params": [
                        "key"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.contains"
                },
                {
                    "function name": "check",
                    "function params": [
                        "expected"
                    ],
                    "file name": "PureJavaCrc32CTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32CTest.check"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [
                        "crcs",
                        "bytes",
                        "size",
                        "out"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                },
                {
                    "function name": "testCorrectness",
                    "function params": [],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [
                        "out"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [
                        "crcs",
                        "out"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                },
                {
                    "function name": "Table",
                    "function params": [],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.Table"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [
                        "clazz",
                        "numThreads",
                        "bytes",
                        "size"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                },
                {
                    "function name": "Table",
                    "function params": [
                        "args"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.Table"
                },
                {
                    "function name": "verifyChecksum",
                    "function params": [],
                    "file name": "XXHash32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.XXHash32Test.verifyChecksum"
                },
                {
                    "function name": "testGenealogy",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testGenealogy"
                },
                {
                    "function name": "testSimplifiedSoundex",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testSimplifiedSoundex"
                }
            ],
            "date": "2017-10-06"
        },
        {
            "commit_id": 1052,
            "hash": "ce44cfaa0a46b79c6c1e00c23f763a2a4b8a15cb",
            "commit_summary": "Add final modifier to method parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1811344 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/main/java/org/apache/commons/codec/binary/Hex.java",
                "src/main/java/org/apache/commons/codec/cli/Digest.java",
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                "src/main/java/org/apache/commons/codec/language/Soundex.java",
                "src/main/java/org/apache/commons/codec/net/Utils.java",
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java",
                "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "pArray",
                        "offset",
                        "length"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pArray",
                        "offset",
                        "length"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.encode"
                },
                {
                    "function name": "encodeHexString",
                    "function params": [
                        "data",
                        "toLowerCase"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHexString"
                },
                {
                    "function name": "encodeHexString",
                    "function params": [
                        "data",
                        "toLowerCase"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHexString"
                },
                {
                    "function name": "decodeHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.decodeHex"
                },
                {
                    "function name": "encodeHexString",
                    "function params": [
                        "data",
                        "toLowerCase"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHexString"
                },
                {
                    "function name": "decodeHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.decodeHex"
                },
                {
                    "function name": "encodeHexString",
                    "function params": [
                        "data",
                        "toLowerCase"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHexString"
                },
                {
                    "function name": "run",
                    "function params": [
                        "prefix",
                        "messageDigest"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.cli.Digest.run"
                },
                {
                    "function name": "run",
                    "function params": [
                        "prefix",
                        "messageDigestAlgorithm"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.cli.Digest.run"
                },
                {
                    "function name": "println",
                    "function params": [
                        "prefix",
                        "digest",
                        "fileName"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.cli.Digest.println"
                },
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.cli.Digest.main"
                },
                {
                    "function name": "run",
                    "function params": [
                        "prefix",
                        "messageDigest"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.cli.Digest.run"
                },
                {
                    "function name": "run",
                    "function params": [
                        "digestAlgorithms"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.cli.Digest.run"
                },
                {
                    "function name": "run",
                    "function params": [
                        "prefix",
                        "messageDigest",
                        "files"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.cli.Digest.run"
                },
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.cli.Digest.main"
                },
                {
                    "function name": "println",
                    "function params": [
                        "prefix",
                        "digest",
                        "fileName"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.cli.Digest.println"
                },
                {
                    "function name": "run",
                    "function params": [
                        "prefix",
                        "messageDigest",
                        "files"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.cli.Digest.run"
                },
                {
                    "function name": "run",
                    "function params": [
                        "prefix",
                        "messageDigestAlgorithm"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.cli.Digest.run"
                },
                {
                    "function name": "run",
                    "function params": [
                        "digestAlgorithms"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.cli.Digest.run"
                },
                {
                    "function name": "DigestUtils",
                    "function params": [
                        "name"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.DigestUtils"
                },
                {
                    "function name": "isAvailable",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.isAvailable"
                },
                {
                    "function name": "isAvailable",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.isAvailable"
                },
                {
                    "function name": "getDigest",
                    "function params": [
                        "algorithm",
                        "defaultMessageDigest"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getDigest"
                },
                {
                    "function name": "DigestUtils",
                    "function params": [
                        "digest"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.DigestUtils"
                },
                {
                    "function name": "DigestUtils",
                    "function params": [
                        "digest"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.DigestUtils"
                },
                {
                    "function name": "getDigest",
                    "function params": [
                        "algorithm",
                        "defaultMessageDigest"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getDigest"
                },
                {
                    "function name": "DigestUtils",
                    "function params": [
                        "name"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.DigestUtils"
                },
                {
                    "function name": "hmac",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmac"
                },
                {
                    "function name": "hmacHex",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacHex"
                },
                {
                    "function name": "hmacHex",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacHex"
                },
                {
                    "function name": "isAvailable",
                    "function params": [
                        "name"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.isAvailable"
                },
                {
                    "function name": "hmacHex",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacHex"
                },
                {
                    "function name": "isAvailable",
                    "function params": [
                        "name"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.isAvailable"
                },
                {
                    "function name": "isAvailable",
                    "function params": [
                        "name"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.isAvailable"
                },
                {
                    "function name": "hmac",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmac"
                },
                {
                    "function name": "hmac",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmac"
                },
                {
                    "function name": "hmacHex",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacHex"
                },
                {
                    "function name": "hmacHex",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacHex"
                },
                {
                    "function name": "hmacHex",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacHex"
                },
                {
                    "function name": "hmac",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmac"
                },
                {
                    "function name": "hmacHex",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacHex"
                },
                {
                    "function name": "hmac",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmac"
                },
                {
                    "function name": "hmac",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmac"
                },
                {
                    "function name": "hmac",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmac"
                },
                {
                    "function name": "hmacHex",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacHex"
                },
                {
                    "function name": "hmac",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmac"
                },
                {
                    "function name": "hmacHex",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacHex"
                },
                {
                    "function name": "isAvailable",
                    "function params": [
                        "name"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.isAvailable"
                },
                {
                    "function name": "hmacHex",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacHex"
                },
                {
                    "function name": "update",
                    "function params": [
                        "b"
                    ],
                    "file name": "PureJavaCrc32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32.update"
                },
                {
                    "function name": "update",
                    "function params": [
                        "b"
                    ],
                    "file name": "PureJavaCrc32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32.update"
                },
                {
                    "function name": "update",
                    "function params": [
                        "b"
                    ],
                    "file name": "PureJavaCrc32C.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32C.update"
                },
                {
                    "function name": "update",
                    "function params": [
                        "b",
                        "off",
                        "len"
                    ],
                    "file name": "PureJavaCrc32C.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32C.update"
                },
                {
                    "function name": "update",
                    "function params": [
                        "b",
                        "off",
                        "len"
                    ],
                    "file name": "PureJavaCrc32C.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32C.update"
                },
                {
                    "function name": "update",
                    "function params": [
                        "b"
                    ],
                    "file name": "PureJavaCrc32C.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32C.update"
                },
                {
                    "function name": "getInt",
                    "function params": [
                        "buffer",
                        "idx"
                    ],
                    "file name": "XXHash32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.XXHash32.getInt"
                },
                {
                    "function name": "update",
                    "function params": [
                        "b"
                    ],
                    "file name": "XXHash32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.XXHash32.update"
                },
                {
                    "function name": "fromLittleEndian",
                    "function params": [
                        "bytes",
                        "off",
                        "length"
                    ],
                    "file name": "XXHash32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.XXHash32.fromLittleEndian"
                },
                {
                    "function name": "update",
                    "function params": [
                        "b"
                    ],
                    "file name": "XXHash32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.XXHash32.update"
                },
                {
                    "function name": "process",
                    "function params": [
                        "b",
                        "offset"
                    ],
                    "file name": "XXHash32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.XXHash32.process"
                },
                {
                    "function name": "getInt",
                    "function params": [
                        "buffer",
                        "idx"
                    ],
                    "file name": "XXHash32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.XXHash32.getInt"
                },
                {
                    "function name": "update",
                    "function params": [
                        "b",
                        "off",
                        "len"
                    ],
                    "file name": "XXHash32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.XXHash32.update"
                },
                {
                    "function name": "update",
                    "function params": [
                        "b",
                        "off",
                        "len"
                    ],
                    "file name": "XXHash32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.XXHash32.update"
                },
                {
                    "function name": "XXHash32",
                    "function params": [
                        "seed"
                    ],
                    "file name": "XXHash32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.XXHash32.XXHash32"
                },
                {
                    "function name": "process",
                    "function params": [
                        "b",
                        "offset"
                    ],
                    "file name": "XXHash32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.XXHash32.process"
                },
                {
                    "function name": "XXHash32",
                    "function params": [
                        "seed"
                    ],
                    "file name": "XXHash32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.XXHash32.XXHash32"
                },
                {
                    "function name": "fromLittleEndian",
                    "function params": [
                        "bytes",
                        "off",
                        "length"
                    ],
                    "file name": "XXHash32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.XXHash32.fromLittleEndian"
                },
                {
                    "function name": "Soundex",
                    "function params": [
                        "mapping",
                        "specialCaseHW"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.Soundex"
                },
                {
                    "function name": "hasMarker",
                    "function params": [
                        "mapping"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.hasMarker"
                },
                {
                    "function name": "Soundex",
                    "function params": [
                        "mapping",
                        "specialCaseHW"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.Soundex"
                },
                {
                    "function name": "hasMarker",
                    "function params": [
                        "mapping"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.hasMarker"
                },
                {
                    "function name": "hexDigit",
                    "function params": [
                        "b"
                    ],
                    "file name": "Utils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/Utils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/Utils.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.Utils.hexDigit"
                },
                {
                    "function name": "hexDigit",
                    "function params": [
                        "b"
                    ],
                    "file name": "Utils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/Utils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/Utils.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.Utils.hexDigit"
                },
                {
                    "function name": "testBase64InBuffer",
                    "function params": [
                        "startPasSize",
                        "endPadSize"
                    ],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase64InBuffer"
                },
                {
                    "function name": "testBase64InBuffer",
                    "function params": [
                        "startPasSize",
                        "endPadSize"
                    ],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase64InBuffer"
                },
                {
                    "function name": "testBase64InBuffer",
                    "function params": [
                        "startPasSize",
                        "endPadSize"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testBase64InBuffer"
                },
                {
                    "function name": "testBase64InBuffer",
                    "function params": [
                        "startPasSize",
                        "endPadSize"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testBase64InBuffer"
                },
                {
                    "function name": "checkDecodeHexCharArrayOddCharacters",
                    "function params": [
                        "data"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.checkDecodeHexCharArrayOddCharacters"
                },
                {
                    "function name": "checkDecodeHexCharArrayOddCharacters",
                    "function params": [
                        "data"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.checkDecodeHexCharArrayOddCharacters"
                },
                {
                    "function name": "HmacAlgorithmsTest",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.HmacAlgorithmsTest"
                },
                {
                    "function name": "HmacAlgorithmsTest",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.HmacAlgorithmsTest"
                },
                {
                    "function name": "MessageDigestAlgorithmsTest",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.MessageDigestAlgorithmsTest"
                },
                {
                    "function name": "MessageDigestAlgorithmsTest",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.MessageDigestAlgorithmsTest"
                },
                {
                    "function name": "contains",
                    "function params": [
                        "key"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.contains"
                },
                {
                    "function name": "contains",
                    "function params": [
                        "key"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.contains"
                },
                {
                    "function name": "check",
                    "function params": [
                        "expected"
                    ],
                    "file name": "PureJavaCrc32CTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32CTest.check"
                },
                {
                    "function name": "check",
                    "function params": [
                        "expected"
                    ],
                    "file name": "PureJavaCrc32CTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32CTest.check"
                },
                {
                    "function name": "checkOnBytes",
                    "function params": [
                        "bytes",
                        "print"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.checkOnBytes"
                },
                {
                    "function name": "Table",
                    "function params": [
                        "nameformat"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.Table"
                },
                {
                    "function name": "checkOnBytes",
                    "function params": [
                        "bytes",
                        "print"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.checkOnBytes"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [
                        "s",
                        "width",
                        "out"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [
                        "value",
                        "mbps"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [
                        "out"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [
                        "out"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                },
                {
                    "function name": "Table",
                    "function params": [
                        "args"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.Table"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                },
                {
                    "function name": "Table",
                    "function params": [
                        "nBits",
                        "nTables",
                        "polynomial"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.Table"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [
                        "value",
                        "mbps"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [
                        "clazz",
                        "numThreads",
                        "bytes",
                        "size"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [
                        "clazz",
                        "numThreads",
                        "bytes",
                        "size"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                },
                {
                    "function name": "Table",
                    "function params": [
                        "nameformat"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.Table"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                },
                {
                    "function name": "Table",
                    "function params": [
                        "nBits",
                        "nTables",
                        "polynomial"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.Table"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [
                        "s",
                        "width",
                        "out"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                },
                {
                    "function name": "Table",
                    "function params": [
                        "args"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.Table"
                },
                {
                    "function name": "XXHash32Test",
                    "function params": [
                        "path",
                        "c"
                    ],
                    "file name": "XXHash32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.XXHash32Test.XXHash32Test"
                },
                {
                    "function name": "XXHash32Test",
                    "function params": [
                        "path",
                        "c"
                    ],
                    "file name": "XXHash32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.XXHash32Test.XXHash32Test"
                }
            ],
            "date": "2017-10-06"
        },
        {
            "commit_id": 1053,
            "hash": "b17739cb60bed7286f10d62969972303c490bbdb",
            "commit_summary": "Use for each loop.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1811345 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java"
            ],
            "functions": [
                {
                    "function name": "checkOnBytes",
                    "function params": [
                        "bytes",
                        "print"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.checkOnBytes"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [
                        "clazz",
                        "numThreads",
                        "bytes",
                        "size"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                }
            ],
            "date": "2017-10-06"
        },
        {
            "commit_id": 1054,
            "hash": "65782e92806986680757585bc0e995a7603625a9",
            "commit_summary": "Always use blocks.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1811346 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java"
            ],
            "functions": [
                {
                    "function name": "testBase32BinarySamples",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32BinarySamples"
                }
            ],
            "date": "2017-10-06"
        },
        {
            "commit_id": 1055,
            "hash": "b5c399eb3cb65fb6591865e1ee346e197b0882b8",
            "commit_summary": "Remove trailing white spaces on all lines\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1811347 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/main/java/org/apache/commons/codec/language/Soundex.java"
            ],
            "functions": [],
            "date": "2017-10-06"
        },
        {
            "commit_id": 1056,
            "hash": "c8235763b9c043e8b6b2a0630948c585a1fc514a",
            "commit_summary": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1811617 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java"
            ],
            "functions": [
                {
                    "function name": "checkOnBytes",
                    "function params": [
                        "bytes",
                        "print"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.checkOnBytes"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [
                        "clazz",
                        "numThreads",
                        "bytes",
                        "size"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                }
            ],
            "date": "2017-10-09"
        },
        {
            "commit_id": 1057,
            "hash": "dbbb4035cdb8669f42b42ab2a76460f4da8450c7",
            "commit_summary": "Add a HMAC_SHA_224 test on Java 8 only.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1811621 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java"
            ],
            "functions": [
                {
                    "function name": "data",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.data"
                }
            ],
            "date": "2017-10-09"
        },
        {
            "commit_id": 1058,
            "hash": "8765c05ded1a3ed31bb3da780203e84c3e6c7203",
            "commit_summary": "Add links to Java 9 docs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1811624 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java"
            ],
            "functions": [],
            "date": "2017-10-09"
        },
        {
            "commit_id": 1059,
            "hash": "87da2161026eed0f209589973a46925d5e0f1dd4",
            "commit_summary": "Do not use an unknown Javadoc tag, this make Javdoc 8 blow up.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1811782 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/XXHash32.java"
            ],
            "functions": [],
            "date": "2017-10-10"
        },
        {
            "commit_id": 1060,
            "hash": "28910eec203524b002f0dfeb8a391b88f835a7c0",
            "commit_summary": "[CODEC-244] Update from Java 6 to Java 7. Remove redundant type arguments.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1812843 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java"
            ],
            "functions": [
                {
                    "function name": "parseRules",
                    "function params": [
                        "scanner",
                        "location",
                        "ruleMapping",
                        "asciiFoldings"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules"
                },
                {
                    "function name": "soundex",
                    "function params": [
                        "source",
                        "branching"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex"
                },
                {
                    "function name": "loadFromResource",
                    "function params": [
                        "languageRulesResourceName",
                        "languages"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Lang.loadFromResource"
                },
                {
                    "function name": "guessLanguages",
                    "function params": [
                        "input"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Lang.guessLanguages"
                },
                {
                    "function name": "getInstance",
                    "function params": [
                        "languagesResourceName"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.getInstance"
                },
                {
                    "function name": "SomeLanguages",
                    "function params": [
                        "other"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.SomeLanguages"
                },
                {
                    "function name": "SomeLanguages",
                    "function params": [
                        "other"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.SomeLanguages"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [
                        "phonemeExpr",
                        "maxPhonemes"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "input",
                        "languageSet"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.encode"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [
                        "phoneme"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                },
                {
                    "function name": "applyFinalRules",
                    "function params": [
                        "phonemeBuilder",
                        "finalRules"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules"
                },
                {
                    "function name": "parsePhoneme",
                    "function params": [
                        "ph"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.parsePhoneme"
                },
                {
                    "function name": "for",
                    "function params": [
                        "s"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.for"
                },
                {
                    "function name": "getInstance",
                    "function params": [
                        "nameType",
                        "rt",
                        "langs"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.getInstance"
                },
                {
                    "function name": "parsePhonemeExpr",
                    "function params": [
                        "ph"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.parsePhonemeExpr"
                },
                {
                    "function name": "getInstance",
                    "function params": [
                        "nameType",
                        "rt",
                        "lang"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.getInstance"
                },
                {
                    "function name": "parseRules",
                    "function params": [
                        "scanner",
                        "location"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.parseRules"
                },
                {
                    "function name": "data",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.data"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [
                        "crcs",
                        "bytes",
                        "size",
                        "out"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                },
                {
                    "function name": "testSolrGENERIC",
                    "function params": [],
                    "file name": "PhoneticEngineRegressionTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC"
                },
                {
                    "function name": "testSolrSEPHARDIC",
                    "function params": [],
                    "file name": "PhoneticEngineRegressionTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"
                },
                {
                    "function name": "testSolrASHKENAZI",
                    "function params": [],
                    "file name": "PhoneticEngineRegressionTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"
                },
                {
                    "function name": "testCompatibilityWithOriginalVersion",
                    "function params": [],
                    "file name": "PhoneticEngineRegressionTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "args",
                        "concat",
                        "input"
                    ],
                    "file name": "PhoneticEngineRegressionTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.encode"
                }
            ],
            "date": "2017-10-21"
        },
        {
            "commit_id": 1061,
            "hash": "208d3dba9a64dd95f86fb105bcba4ed50ecceb30",
            "commit_summary": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1812844 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java"
            ],
            "functions": [
                {
                    "function name": "updateDigest",
                    "function params": [
                        "digest",
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.updateDigest"
                },
                {
                    "function name": "hmac",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmac"
                },
                {
                    "function name": "try",
                    "function params": [
                        "scanner"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.try"
                },
                {
                    "function name": "loadFromResource",
                    "function params": [
                        "languageRulesResourceName",
                        "languages"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Lang.loadFromResource"
                },
                {
                    "function name": "getInstance",
                    "function params": [
                        "languagesResourceName"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.getInstance"
                },
                {
                    "function name": "for",
                    "function params": [
                        "s"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.for"
                },
                {
                    "function name": "parseRules",
                    "function params": [
                        "scanner",
                        "location"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.parseRules"
                },
                {
                    "function name": "testMarkSupported",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"
                },
                {
                    "function name": "testSkipPastEnd",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"
                },
                {
                    "function name": "testRead0",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"
                },
                {
                    "function name": "testCodec105",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"
                },
                {
                    "function name": "testSkipToEnd",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"
                },
                {
                    "function name": "testCodec130",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"
                },
                {
                    "function name": "testReadOutOfBounds",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"
                },
                {
                    "function name": "testSkipNone",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"
                },
                {
                    "function name": "testAvailable",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"
                },
                {
                    "function name": "testReadNull",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"
                },
                {
                    "function name": "testSkipWrongArgument",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"
                },
                {
                    "function name": "testSkipBig",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"
                },
                {
                    "function name": "testWriteToNullCoverage",
                    "function params": [],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage"
                },
                {
                    "function name": "testWriteOutOfBounds",
                    "function params": [],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"
                },
                {
                    "function name": "testCodec105",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"
                },
                {
                    "function name": "testCodec101",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"
                },
                {
                    "function name": "testRead0",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"
                },
                {
                    "function name": "testInputStreamReader",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"
                },
                {
                    "function name": "testSkipPastEnd",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"
                },
                {
                    "function name": "testSkipBig",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"
                },
                {
                    "function name": "testMarkSupported",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"
                },
                {
                    "function name": "testReadNull",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"
                },
                {
                    "function name": "testSkipToEnd",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"
                },
                {
                    "function name": "testCodec130",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"
                },
                {
                    "function name": "testSkipNone",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"
                },
                {
                    "function name": "testSkipWrongArgument",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"
                },
                {
                    "function name": "testAvailable",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"
                },
                {
                    "function name": "testReadOutOfBounds",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"
                },
                {
                    "function name": "testWriteToNullCoverage",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"
                },
                {
                    "function name": "testWriteOutOfBounds",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"
                },
                {
                    "function name": "testCodec98NPE",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.setUp"
                },
                {
                    "function name": "Table",
                    "function params": [
                        "args"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.Table"
                },
                {
                    "function name": "verifyChecksum",
                    "function params": [],
                    "file name": "XXHash32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.XXHash32Test.verifyChecksum"
                }
            ],
            "date": "2017-10-21"
        },
        {
            "commit_id": 1062,
            "hash": "52f45c2e9f12193a265623541cc3950f0b39a2f6",
            "commit_summary": "Remove exceptions not thrown from method signatures in tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1812845 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java"
            ],
            "functions": [
                {
                    "function name": "testSha224",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha224"
                },
                {
                    "function name": "testSha512",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha512"
                },
                {
                    "function name": "testHmacHexFailString",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailString"
                },
                {
                    "function name": "testInitializedMac",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testInitializedMac"
                },
                {
                    "function name": "testAlgorithm",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testAlgorithm"
                },
                {
                    "function name": "testHmacHexFailByteArray",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailByteArray"
                },
                {
                    "function name": "testHmacFailString",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailString"
                },
                {
                    "function name": "testMacByteArary",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacByteArary"
                },
                {
                    "function name": "testMacHexByteArray",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexByteArray"
                },
                {
                    "function name": "testMacHexString",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexString"
                },
                {
                    "function name": "testHmacFailByteArray",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailByteArray"
                },
                {
                    "function name": "testMacString",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacString"
                },
                {
                    "function name": "testSha512HMacFail",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail"
                },
                {
                    "function name": "testInitializedMacNullKey",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey"
                },
                {
                    "function name": "testHmacSha1UpdateWithByteArray",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray"
                },
                {
                    "function name": "testSha256HMacFail",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail"
                },
                {
                    "function name": "testInitializedMac",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac"
                },
                {
                    "function name": "testSha1HMacFail",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail"
                },
                {
                    "function name": "testHmacSha1UpdateWithString",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString"
                },
                {
                    "function name": "testInitializedMacNullAlgo",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullAlgo"
                },
                {
                    "function name": "testSha384HMacFail",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail"
                },
                {
                    "function name": "testMd5HMacFail",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail"
                },
                {
                    "function name": "testGetHMac",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac"
                },
                {
                    "function name": "testAlgorithm",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testAlgorithm"
                },
                {
                    "function name": "testDigestByteArray",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestByteArray"
                },
                {
                    "function name": "digestTestData",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.digestTestData"
                },
                {
                    "function name": "testDigestByteBuffer",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestByteBuffer"
                },
                {
                    "function name": "testGetMessageDigest",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testGetMessageDigest"
                }
            ],
            "date": "2017-10-21"
        },
        {
            "commit_id": 1063,
            "hash": "2d678c28b3a09b89308f7d8231712f8733357acf",
            "commit_summary": "lvar hides another.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1812846 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java"
            ],
            "functions": [
                {
                    "function name": "PerformanceTest",
                    "function params": [
                        "clazz",
                        "numThreads",
                        "bytes",
                        "size"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                }
            ],
            "date": "2017-10-21"
        },
        {
            "commit_id": 1064,
            "hash": "fea1da48fef9e28026704e9cadaeba3e0ecbf6dd",
            "commit_summary": "BinaryEncoderAbstractTest#testEncodeNull: fail if expected exception is not thrown\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1812883 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/BinaryEncoderAbstractTest.java"
            ],
            "functions": [
                {
                    "function name": "testEncodeNull",
                    "function params": [],
                    "file name": "BinaryEncoderAbstractTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.BinaryEncoderAbstractTest.testEncodeNull"
                }
            ],
            "date": "2017-10-22"
        },
        {
            "commit_id": 1065,
            "hash": "c7a5a6afd5d2f7d8c3d518ca625b7d8a1445934a",
            "commit_summary": "[CODEC-244] Update from Java 6 to Java 7.\n\nuse System#lineSeparator\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1812884 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java"
            ],
            "functions": [
                {
                    "function name": "testIsDoubleMetaphoneEqualExtended3",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"
                }
            ],
            "date": "2017-10-22"
        },
        {
            "commit_id": 1066,
            "hash": "76920b7fb6d6ea5a794512161bb29d3e8ea2625e",
            "commit_summary": "Do not hide other name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1813200 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "str",
                        "charset"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "str",
                        "charsetName"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "str",
                        "charset"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str",
                        "charsetName"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.encode"
                }
            ],
            "date": "2017-10-24"
        },
        {
            "commit_id": 1067,
            "hash": "0fdd249cadaecd32a39d25301f5242f9a92ed351",
            "commit_summary": "Fix checkstyle issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1813613 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                "src/main/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [
                {
                    "function name": "decode",
                    "function params": [
                        "str",
                        "charsetName"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.decode"
                }
            ],
            "date": "2017-10-28"
        },
        {
            "commit_id": 1068,
            "hash": "924540abc919d32a8aaa92c6f18906f01e64e167",
            "commit_summary": "[CODEC-240] Add Percent-Encoding Codec (described in RFC3986 and RFC7578).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1814505 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "PercentCodec",
                    "function params": [
                        "alwaysEncodeChars",
                        "plusForSpace"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.PercentCodec"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.decode"
                },
                {
                    "function name": "PercentCodec",
                    "function params": [],
                    "file name": "PercentCodec.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.PercentCodec"
                },
                {
                    "function name": "expectedDecodingBytes",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.expectedDecodingBytes"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.encode"
                },
                {
                    "function name": "inAlwaysEncodeCharsRange",
                    "function params": [
                        "c"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.inAlwaysEncodeCharsRange"
                },
                {
                    "function name": "expectedEncodingBytes",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.expectedEncodingBytes"
                },
                {
                    "function name": "isAsciiChar",
                    "function params": [
                        "c"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.isAsciiChar"
                },
                {
                    "function name": "containsSpace",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.containsSpace"
                },
                {
                    "function name": "doEncode",
                    "function params": [
                        "bytes",
                        "expectedLength",
                        "willEncode"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.doEncode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.decode"
                },
                {
                    "function name": "insertAlwaysEncodeChar",
                    "function params": [
                        "b"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.insertAlwaysEncodeChar"
                },
                {
                    "function name": "insertAlwaysEncodeChars",
                    "function params": [
                        "alwaysEncodeChars"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.insertAlwaysEncodeChars"
                },
                {
                    "function name": "canEncode",
                    "function params": [
                        "c"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.canEncode"
                },
                {
                    "function name": "testSafeCharEncodeDecodeObject",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testSafeCharEncodeDecodeObject"
                },
                {
                    "function name": "testPercentEncoderDecoderWithNullOrEmptyInput",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testPercentEncoderDecoderWithNullOrEmptyInput"
                },
                {
                    "function name": "testConfigurablePercentEncoder",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testConfigurablePercentEncoder"
                },
                {
                    "function name": "testDecodeUnsupportedObject",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testDecodeUnsupportedObject"
                },
                {
                    "function name": "testDecodeInvalidEncodedResultDecoding",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testDecodeInvalidEncodedResultDecoding"
                },
                {
                    "function name": "testUnsafeCharEncodeDecode",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testUnsafeCharEncodeDecode"
                },
                {
                    "function name": "testDecodeNullObject",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testDecodeNullObject"
                },
                {
                    "function name": "testEncodeNullObject",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testEncodeNullObject"
                },
                {
                    "function name": "testBasicEncodeDecode",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testBasicEncodeDecode"
                },
                {
                    "function name": "testEncodeUnsupportedObject",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testEncodeUnsupportedObject"
                },
                {
                    "function name": "testPercentEncoderDecoderWithPlusForSpace",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testPercentEncoderDecoderWithPlusForSpace"
                }
            ],
            "date": "2017-11-07"
        },
        {
            "commit_id": 1069,
            "hash": "c87b885cdfdfdf9cd5dc87267301b95842c7d7fb",
            "commit_summary": "[CODEC-240] Add Percent-Encoding Codec (described in RFC3986 and RFC7578). No need to nest.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1814506 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/PercentCodec.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.encode"
                }
            ],
            "date": "2017-11-07"
        },
        {
            "commit_id": 1070,
            "hash": "0842a997e840cd2a7c18121b67f21f334a343a0a",
            "commit_summary": "[CODEC-240] Add Percent-Encoding Codec (described in RFC3986 and RFC7578). Don't hide.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1814507 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/PercentCodec.java"
            ],
            "functions": [
                {
                    "function name": "insertAlwaysEncodeChars",
                    "function params": [
                        "alwaysEncodeChars"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.insertAlwaysEncodeChars"
                },
                {
                    "function name": "insertAlwaysEncodeChars",
                    "function params": [
                        "alwaysEncodeCharsArray"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.insertAlwaysEncodeChars"
                }
            ],
            "date": "2017-11-07"
        },
        {
            "commit_id": 1071,
            "hash": "83e83029dc3b2623adef53d0b8f3a572f633d9a4",
            "commit_summary": "[CODEC-240] Add Percent-Encoding Codec (described in RFC3986 and RFC7578). Fix @since.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1814508 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/PercentCodec.java"
            ],
            "functions": [],
            "date": "2017-11-07"
        },
        {
            "commit_id": 1072,
            "hash": "de8a7fa6ea01e46ca0869dc8bcb259d3a1487eab",
            "commit_summary": "[CODEC-240] Add Percent-Encoding Codec (described in RFC3986 and RFC7578). Fix Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1814509 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java"
            ],
            "functions": [],
            "date": "2017-11-07"
        },
        {
            "commit_id": 1073,
            "hash": "b64e6546559e371c729b4b45a26d4c63897ec2f1",
            "commit_summary": "Don't hide.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1814510 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "str",
                        "charset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "str",
                        "sourceCharset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str",
                        "sourceCharset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "str",
                        "charset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "str",
                        "sourceCharset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str",
                        "sourceCharset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "str",
                        "charset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str",
                        "charset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                }
            ],
            "date": "2017-11-07"
        },
        {
            "commit_id": 1074,
            "hash": "aabe13f3861bc7727611043a05ae7d09b4cbdfb6",
            "commit_summary": "Rename param.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1814511 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java"
            ],
            "functions": [
                {
                    "function name": "decode",
                    "function params": [
                        "str",
                        "sourceCharset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "sourceStr",
                        "sourceCharset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str",
                        "sourceCharset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "str",
                        "sourceCharset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str",
                        "sourceCharset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "sourceStr",
                        "sourceCharset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "sourceStr",
                        "sourceCharset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "sourceStr"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "sourceStr"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "str"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "sourceStr",
                        "sourceCharset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                }
            ],
            "date": "2017-11-07"
        },
        {
            "commit_id": 1075,
            "hash": "b4c6086c71a30edcfd23991ec4afacab3f0c2eee",
            "commit_summary": "Javadoc tweaks.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1814512 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java"
            ],
            "functions": [],
            "date": "2017-11-07"
        },
        {
            "commit_id": 1076,
            "hash": "f779eecbfceb73b3179c14ca067e4285281e0a6b",
            "commit_summary": "Better name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1814513 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/QCodec.java"
            ],
            "functions": [
                {
                    "function name": "doEncoding",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.doEncoding"
                },
                {
                    "function name": "doDecoding",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.doDecoding"
                }
            ],
            "date": "2017-11-07"
        },
        {
            "commit_id": 1077,
            "hash": "95083b50042f370097f344906fe47d42b76f16ae",
            "commit_summary": "[CODEC-240] Add Percent-Encoding Codec (described in RFC3986 and RFC7578). Format.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1814514 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/PercentCodec.java"
            ],
            "functions": [],
            "date": "2017-11-07"
        },
        {
            "commit_id": 1078,
            "hash": "043178c583cec0271bd00aab4eeb93145dec327d",
            "commit_summary": "[CODEC-240] Add Percent-Encoding Codec (described in RFC3986 and RFC7578). Add and ignore testBasicSpace().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1814515 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "testBasicSpace",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testBasicSpace"
                }
            ],
            "date": "2017-11-07"
        },
        {
            "commit_id": 1079,
            "hash": "8edd3ec573649443c2dc0747cf3cddc1608d43d6",
            "commit_summary": "[CODEC-240] Add Percent-Encoding Codec (described in RFC3986 and RFC7578). Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1814516 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "testSafeCharEncodeDecodeObject",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testSafeCharEncodeDecodeObject"
                },
                {
                    "function name": "testDecodeUnsupportedObject",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testDecodeUnsupportedObject"
                },
                {
                    "function name": "testDecodeInvalidEncodedResultDecoding",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testDecodeInvalidEncodedResultDecoding"
                },
                {
                    "function name": "testUnsafeCharEncodeDecode",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testUnsafeCharEncodeDecode"
                },
                {
                    "function name": "testDecodeNullObject",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testDecodeNullObject"
                },
                {
                    "function name": "testEncodeNullObject",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testEncodeNullObject"
                },
                {
                    "function name": "testEncodeUnsupportedObject",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testEncodeUnsupportedObject"
                }
            ],
            "date": "2017-11-07"
        },
        {
            "commit_id": 1080,
            "hash": "809bc2171b4563fb642687e87bb68741c1dd5026",
            "commit_summary": "[CODEC-240] Add Percent-Encoding Codec (described in RFC3986 and RFC7578). Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1814517 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/PercentCodec.java"
            ],
            "functions": [],
            "date": "2017-11-07"
        },
        {
            "commit_id": 1081,
            "hash": "46649dc97546418e1d6d2362d74dca92a8eb401f",
            "commit_summary": "[CODEC-240] Add Percent-Encoding Codec (described in RFC3986 and RFC7578). Use JRE constant for Charset.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1814518 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "testSafeCharEncodeDecodeObject",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testSafeCharEncodeDecodeObject"
                },
                {
                    "function name": "testConfigurablePercentEncoder",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testConfigurablePercentEncoder"
                },
                {
                    "function name": "testUnsafeCharEncodeDecode",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testUnsafeCharEncodeDecode"
                },
                {
                    "function name": "testBasicEncodeDecode",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testBasicEncodeDecode"
                },
                {
                    "function name": "testPercentEncoderDecoderWithPlusForSpace",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testPercentEncoderDecoderWithPlusForSpace"
                },
                {
                    "function name": "testBasicSpace",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testBasicSpace"
                }
            ],
            "date": "2017-11-07"
        },
        {
            "commit_id": 1082,
            "hash": "a011e57eb7b9fd47b33a582e0b59015b5eee7d72",
            "commit_summary": "Better names (don't hide) and Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1814521 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/BCodec.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "strSource"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "strSource",
                        "sourceCharset"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "value",
                        "charset"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "strSource",
                        "sourceCharset"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "value"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "value",
                        "charset"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.encode"
                }
            ],
            "date": "2017-11-07"
        },
        {
            "commit_id": 1083,
            "hash": "832cd7177f5daf0deeb5025e2b9441cb88933d1a",
            "commit_summary": "Don't hide.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1814522 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/QCodec.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "str",
                        "charset"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str",
                        "charset"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str",
                        "sourceCharset"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str",
                        "sourceCharset"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.encode"
                }
            ],
            "date": "2017-11-07"
        },
        {
            "commit_id": 1084,
            "hash": "e08c12f7216dd5abd1933cb8c033873bd9f10f33",
            "commit_summary": "Better names (don't hide.)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1814523 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/QCodec.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "sourceStr",
                        "sourceCharset"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "sourceStr"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "sourceStr",
                        "sourceCharset"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str",
                        "sourceCharset"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str",
                        "sourceCharset"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.encode"
                }
            ],
            "date": "2017-11-07"
        },
        {
            "commit_id": 1085,
            "hash": "bc33e591299beaca214024500133568d39a74416",
            "commit_summary": "Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1814524 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/QCodec.java"
            ],
            "functions": [],
            "date": "2017-11-07"
        },
        {
            "commit_id": 1086,
            "hash": "cada569118232d662146c04b9fc78f7d0d055f6d",
            "commit_summary": "[CODEC-244] Update from Java 6 to Java 7. Update JRE Javadoc links.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1814525 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/CharEncoding.java",
                "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                "src/main/java/org/apache/commons/codec/net/BCodec.java",
                "src/main/java/org/apache/commons/codec/net/QCodec.java",
                "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java"
            ],
            "functions": [],
            "date": "2017-11-07"
        },
        {
            "commit_id": 1087,
            "hash": "ff57a627511793d7c95c5354b3cf4247859c0b52",
            "commit_summary": "Use ThreadLocalRandom instead of Random and pull out its instantiation from the loop. Preallocate StringBuilder as well.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1814628 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/B64.java"
            ],
            "functions": [
                {
                    "function name": "getRandomSalt",
                    "function params": [
                        "num"
                    ],
                    "file name": "B64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/B64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/B64.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.B64.getRandomSalt"
                }
            ],
            "date": "2017-11-08"
        },
        {
            "commit_id": 1088,
            "hash": "8707fddee27d10bded0b3f814845b4a7dddf2776",
            "commit_summary": "Use ThreadLocalRandom instead of Random and update Javadocs for all public APIs in this UnixCrypt.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1814679 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java"
            ],
            "functions": [
                {
                    "function name": "crypt",
                    "function params": [
                        "original",
                        "salt"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.crypt"
                }
            ],
            "date": "2017-11-09"
        },
        {
            "commit_id": 1089,
            "hash": "3d9bb608a1fa4f77c243b41386d977561c7ca53f",
            "commit_summary": "Update Javadocs to mention generating salts with ThreadLocalRandom internally and suggest using SecureRandom.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1814680 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java"
            ],
            "functions": [],
            "date": "2017-11-09"
        },
        {
            "commit_id": 1090,
            "hash": "94103690e20ce71be389195e37930494e3b942e0",
            "commit_summary": "Fix Javadoc: These APIs actually throw IllegalArgumentException, not RuntimeException.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1814681 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java"
            ],
            "functions": [],
            "date": "2017-11-09"
        },
        {
            "commit_id": 1091,
            "hash": "2c66bceaa7c11e0c44522dd28624b79914953407",
            "commit_summary": "Update Javadocs to mention generating salts with ThreadLocalRandom internally and suggest using SecureRandom.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1814682 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Crypt.java"
            ],
            "functions": [],
            "date": "2017-11-09"
        },
        {
            "commit_id": 1092,
            "hash": "2eabe0ca39e77503cd29e48bf0856410c5ef4762",
            "commit_summary": "Fix Javadoc: These APIs actually throw IllegalArgumentException, not RuntimeException.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1814683 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java"
            ],
            "functions": [],
            "date": "2017-11-09"
        },
        {
            "commit_id": 1093,
            "hash": "5e6b2cedbb6137c556f66db09285aa2cffd3cf0a",
            "commit_summary": "Remove obsolete Javadoc comments since this version of Commons Codec no longer runs on Java versions older than 1.4.0.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1814684 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [],
            "date": "2017-11-09"
        },
        {
            "commit_id": 1094,
            "hash": "8bc1d8d383f7cf4d829eca6112830f201246685d",
            "commit_summary": "Caverphone1#encode: correct comment (closes #12)\n\npatch submitted by RubbaBoy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1830496 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/Caverphone1.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "source"
                    ],
                    "file name": "Caverphone1.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Caverphone1.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Caverphone1.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Caverphone1.encode"
                }
            ],
            "date": "2018-04-29"
        },
        {
            "commit_id": 1095,
            "hash": "8d6b7fbc86b09a9f16e22720f1e814ca355a81d5",
            "commit_summary": "Remove trailing white spaces on all lines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1831874 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java"
            ],
            "functions": [],
            "date": "2018-05-18"
        },
        {
            "commit_id": 1096,
            "hash": "3eef2f7fa643a9a11bd917d687ce1eebf92f27ca",
            "commit_summary": "[CODEC-246] ColognePhoneticTest.testIsEncodeEquals missing assertions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1832450 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java"
            ],
            "functions": [
                {
                    "function name": "testIsEncodeEquals",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"
                }
            ],
            "date": "2018-05-29"
        },
        {
            "commit_id": 1097,
            "hash": "67e76550408b235e5cd635bc1c87b42205626b17",
            "commit_summary": "[CODEC-246] ColognePhoneticTest.testIsEncodeEquals missing assertions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1832451 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java"
            ],
            "functions": [
                {
                    "function name": "testIsEncodeEqualsCodec246",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEqualsCodec246"
                },
                {
                    "function name": "testIsEncodeEquals",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"
                }
            ],
            "date": "2018-05-29"
        },
        {
            "commit_id": 1098,
            "hash": "02011f8ab0c62deb8566b574a310a978bb70aa10",
            "commit_summary": "[CODEC-246] ColognePhoneticTest.testIsEncodeEquals missing assertions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1832543 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java"
            ],
            "functions": [
                {
                    "function name": "testIsEncodeEquals",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"
                }
            ],
            "date": "2018-05-30"
        },
        {
            "commit_id": 1099,
            "hash": "fc4ce44a1021192bc3d818038cbeb1d3e65938f3",
            "commit_summary": "Now that Java 9 and 10 are out, update the Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1833626 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java"
            ],
            "functions": [],
            "date": "2018-06-16"
        },
        {
            "commit_id": 1100,
            "hash": "4703e76dcbe4a636ac0651e2a328c5461943ff2c",
            "commit_summary": "Unused import\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1842086 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java"
            ],
            "functions": [],
            "date": "2018-09-27"
        },
        {
            "commit_id": 1101,
            "hash": "a9690db48eadd3643adc34cafd6ccc5d4a5bf589",
            "commit_summary": "Add test for small sharp s (Eszett) and lower-case versions\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1842088 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java"
            ],
            "functions": [
                {
                    "function name": "testExamples",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testExamples"
                },
                {
                    "function name": "testEdgeCases",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"
                }
            ],
            "date": "2018-09-27"
        },
        {
            "commit_id": 1102,
            "hash": "e9a2edc877ebf928ad0c056273f64cdc861ba609",
            "commit_summary": "Add test to try and check all possible combinations are covered.\nAdd tests for two missing combinations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1842102 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java"
            ],
            "functions": [
                {
                    "function name": "testExamples",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testExamples"
                },
                {
                    "function name": "checkEncoding",
                    "function params": [
                        "expected",
                        "source"
                    ],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.checkEncoding"
                },
                {
                    "function name": "testCanFail",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testCanFail"
                },
                {
                    "function name": "finishTests",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.finishTests"
                },
                {
                    "function name": "hasTestCase",
                    "function params": [
                        "re"
                    ],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.hasTestCase"
                }
            ],
            "date": "2018-09-27"
        },
        {
            "commit_id": 1103,
            "hash": "7994250e15ca77dd3150a2bb95619b935d249e5f",
            "commit_summary": "Unused\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1842103 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java"
            ],
            "functions": [
                {
                    "function name": "finishTests",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.finishTests"
                }
            ],
            "date": "2018-09-27"
        },
        {
            "commit_id": 1104,
            "hash": "74989844d7692245f9e19b0e803d748c73e91e41",
            "commit_summary": "Simplify by using switch on char value; also don't convert to String unnecessarily\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1842176 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [
                {
                    "function name": "colognePhonetic",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.colognePhonetic"
                },
                {
                    "function name": "preprocess",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.preprocess"
                }
            ],
            "date": "2018-09-27"
        },
        {
            "commit_id": 1105,
            "hash": "4d1c77bae99174b67a462bd5a44950ae08f46796",
            "commit_summary": "Simplify - don't cache dynamic length\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1842178 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [
                {
                    "function name": "colognePhonetic",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.colognePhonetic"
                }
            ],
            "date": "2018-09-27"
        },
        {
            "commit_id": 1106,
            "hash": "203918573c29676b179b673aa7e41366dc4215d9",
            "commit_summary": "Document magic character values\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1842189 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [
                {
                    "function name": "colognePhonetic",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.colognePhonetic"
                }
            ],
            "date": "2018-09-27"
        },
        {
            "commit_id": 1107,
            "hash": "90211fccfc48dc36b7cd81a1ce18e1506a6f15a7",
            "commit_summary": "Allow command-line testing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1842239 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java"
            ],
            "functions": [
                {
                    "function name": "main",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.main"
                }
            ],
            "date": "2018-09-28"
        },
        {
            "commit_id": 1108,
            "hash": "cdfb36943f298e780f3e75b762af7268a9b0f8e9",
            "commit_summary": "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1842284 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/PercentCodec.java"
            ],
            "functions": [],
            "date": "2018-09-28"
        },
        {
            "commit_id": 1109,
            "hash": "bdc616d069ba48f0bfdfcb3f550f7afc87759a89",
            "commit_summary": "Fix up spurious space in Javadoc output\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1842286 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [],
            "date": "2018-09-28"
        },
        {
            "commit_id": 1110,
            "hash": "e246d2ac01f1ac741aa4673aed3d028e08a63c73",
            "commit_summary": "Test characters above Z\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1842287 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java"
            ],
            "functions": [
                {
                    "function name": "testEdgeCases",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"
                }
            ],
            "date": "2018-09-28"
        },
        {
            "commit_id": 1111,
            "hash": "0b2a0c932d089de9f19e2ea9b278c5d09a239099",
            "commit_summary": "Drop accidental debug commit\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1842289 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [
                {
                    "function name": "colognePhonetic",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.colognePhonetic"
                }
            ],
            "date": "2018-09-28"
        },
        {
            "commit_id": 1112,
            "hash": "36fccb4325f924bf46babd4d8d60226f8dd3f154",
            "commit_summary": "CODEC-250 Wrong value calculated by Cologne Phonetic if a special character is placed between equal letters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1842290 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java"
            ],
            "functions": [
                {
                    "function name": "colognePhonetic",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.colognePhonetic"
                },
                {
                    "function name": "testSpecialCharsBetweenSameLetters",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testSpecialCharsBetweenSameLetters"
                }
            ],
            "date": "2018-09-28"
        },
        {
            "commit_id": 1113,
            "hash": "5ce931b904d1f2961078b99049c293c11e779fec",
            "commit_summary": "Use localised SuppressWarning annotations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1842322 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java"
            ],
            "functions": [],
            "date": "2018-09-29"
        },
        {
            "commit_id": 1114,
            "hash": "38c14f702af2184a2b7387d724159348d9194931",
            "commit_summary": "[CODEC-246] Add SHA-3 methods in DigestUtils.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1848800 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "sha3_224Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha3_224Hex"
                },
                {
                    "function name": "sha3_512Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha3_512Hex"
                },
                {
                    "function name": "sha3_256",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha3_256"
                },
                {
                    "function name": "digestAsHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.digestAsHex"
                },
                {
                    "function name": "sha3_384",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha3_384"
                },
                {
                    "function name": "sha3_224",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha3_224"
                },
                {
                    "function name": "sha3_256",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha3_256"
                },
                {
                    "function name": "sha3_384Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha3_384Hex"
                },
                {
                    "function name": "sha3_384Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha3_384Hex"
                },
                {
                    "function name": "getSha3_512Digest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getSha3_512Digest"
                },
                {
                    "function name": "sha3_256",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha3_256"
                },
                {
                    "function name": "digestAsHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.digestAsHex"
                },
                {
                    "function name": "sha3_224Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha3_224Hex"
                },
                {
                    "function name": "sha3_512Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha3_512Hex"
                },
                {
                    "function name": "getSha3_384Digest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getSha3_384Digest"
                },
                {
                    "function name": "digest",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.digest"
                },
                {
                    "function name": "sha3_384",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha3_384"
                },
                {
                    "function name": "sha3_384Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha3_384Hex"
                },
                {
                    "function name": "sha3_256Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha3_256Hex"
                },
                {
                    "function name": "getSha3_224Digest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getSha3_224Digest"
                },
                {
                    "function name": "getSha3_256Digest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getSha3_256Digest"
                },
                {
                    "function name": "sha3_224Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha3_224Hex"
                },
                {
                    "function name": "sha3_512Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha3_512Hex"
                },
                {
                    "function name": "sha3_512",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha3_512"
                },
                {
                    "function name": "sha3_224",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha3_224"
                },
                {
                    "function name": "isAvailable",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.isAvailable"
                },
                {
                    "function name": "sha3_256Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha3_256Hex"
                },
                {
                    "function name": "sha3_512",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha3_512"
                },
                {
                    "function name": "sha3_384",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha3_384"
                },
                {
                    "function name": "getMessageDigest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getMessageDigest"
                },
                {
                    "function name": "sha3_256Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha3_256Hex"
                },
                {
                    "function name": "sha3_224",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha3_224"
                },
                {
                    "function name": "sha3_512",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha3_512"
                },
                {
                    "function name": "testSha3_256",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha3_256"
                },
                {
                    "function name": "testSha3_224",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha3_224"
                },
                {
                    "function name": "testSha384HexInputStream",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha384HexInputStream"
                },
                {
                    "function name": "testSha3_256HexInputStream",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha3_256HexInputStream"
                },
                {
                    "function name": "testSha3_384",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha3_384"
                },
                {
                    "function name": "testSha3_384HexInputStream",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha3_384HexInputStream"
                },
                {
                    "function name": "testSha3_224HexInputStream",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha3_224HexInputStream"
                },
                {
                    "function name": "assumeJava9",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.assumeJava9"
                },
                {
                    "function name": "testSha256HexInputStream",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha256HexInputStream"
                },
                {
                    "function name": "testSha3_512HexInputStream",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha3_512HexInputStream"
                },
                {
                    "function name": "testSha3_512",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha3_512"
                }
            ],
            "date": "2018-12-12"
        },
        {
            "commit_id": 1115,
            "hash": "163d643d1176e0dc9334ee83e21b9ce21d24fc1a",
            "commit_summary": "Make Javadoc 11 happy with HTML 5 compliance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1848803 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [],
            "date": "2018-12-12"
        },
        {
            "commit_id": 1116,
            "hash": "dd5d7c43d0de8743b12ac11af93e8d58f6c05c12",
            "commit_summary": "CODEC-252: B64 salt generator: Random -> ThreadLocal<SecureRandom>",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/B64.java"
            ],
            "functions": [
                {
                    "function name": "getRandomSalt",
                    "function params": [
                        "num"
                    ],
                    "file name": "B64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/B64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/B64.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.B64.getRandomSalt"
                }
            ],
            "date": "2019-02-04"
        },
        {
            "commit_id": 1117,
            "hash": "9737fb2ec07c202957d5e868100507d37e03fa73",
            "commit_summary": "CODEC-252: more extensions to accommodating different Random's",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/B64.java",
                "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java"
            ],
            "functions": [
                {
                    "function name": "getRandomSalt",
                    "function params": [
                        "num"
                    ],
                    "file name": "B64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/B64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/B64.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.B64.getRandomSalt"
                },
                {
                    "function name": "getRandomSalt",
                    "function params": [
                        "num",
                        "random"
                    ],
                    "file name": "B64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/B64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/B64.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.B64.getRandomSalt"
                },
                {
                    "function name": "md5Crypt",
                    "function params": [
                        "keyBytes",
                        "salt",
                        "prefix",
                        "random"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.md5Crypt"
                },
                {
                    "function name": "md5Crypt",
                    "function params": [
                        "keyBytes",
                        "random"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.md5Crypt"
                },
                {
                    "function name": "md5Crypt",
                    "function params": [
                        "keyBytes",
                        "salt",
                        "prefix"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.md5Crypt"
                },
                {
                    "function name": "apr1Crypt",
                    "function params": [
                        "keyBytes",
                        "random"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.apr1Crypt"
                },
                {
                    "function name": "sha512Crypt",
                    "function params": [
                        "keyBytes",
                        "salt",
                        "random"
                    ],
                    "file name": "Sha2Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt"
                },
                {
                    "function name": "sha256Crypt",
                    "function params": [
                        "keyBytes",
                        "salt",
                        "random"
                    ],
                    "file name": "Sha2Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt"
                },
                {
                    "function name": "testApr1CryptExplicitCall",
                    "function params": [],
                    "file name": "Apr1CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall"
                },
                {
                    "function name": "testApr1CryptBytesWithThreadLocalRandom",
                    "function params": [],
                    "file name": "Apr1CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytesWithThreadLocalRandom"
                },
                {
                    "function name": "testMd5CryptExplicitCallWithThreadLocalRandom",
                    "function params": [],
                    "file name": "Md5CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCallWithThreadLocalRandom"
                },
                {
                    "function name": "testMd5CryptExplicitCall",
                    "function params": [],
                    "file name": "Md5CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"
                },
                {
                    "function name": "testSha2CryptRoundsThreadLocalRandom",
                    "function params": [],
                    "file name": "Sha256CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom"
                },
                {
                    "function name": "testSha512CryptExplicitCallThreadLocalRandom",
                    "function params": [],
                    "file name": "Sha512CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCallThreadLocalRandom"
                }
            ],
            "date": "2019-02-04"
        },
        {
            "commit_id": 1118,
            "hash": "ab83ed53d64e10b627443b0e627c3b5bc1593be2",
            "commit_summary": "CODEC-253: simplify B64",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/B64.java"
            ],
            "functions": [
                {
                    "function name": "getRandomSalt",
                    "function params": [
                        "num"
                    ],
                    "file name": "B64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/B64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/B64.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.B64.getRandomSalt"
                },
                {
                    "function name": "getRandomSalt",
                    "function params": [
                        "num",
                        "random"
                    ],
                    "file name": "B64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/B64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/B64.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.B64.getRandomSalt"
                }
            ],
            "date": "2019-02-05"
        },
        {
            "commit_id": 1119,
            "hash": "a3c23febce6c254f2e77197ed38ec3c6db72645a",
            "commit_summary": "Redundant specification of type arguments.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java"
            ],
            "functions": [
                {
                    "function name": "soundex",
                    "function params": [
                        "source",
                        "branching"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex"
                }
            ],
            "date": "2019-02-08"
        },
        {
            "commit_id": 1120,
            "hash": "a760cba7207fe6bc5cffe7471344681f673e0f90",
            "commit_summary": "Don't need @SuppressWarnings(\"unchecked\")",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java"
            ],
            "functions": [
                {
                    "function name": "soundex",
                    "function params": [
                        "source",
                        "branching"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex"
                }
            ],
            "date": "2019-02-08"
        },
        {
            "commit_id": 1121,
            "hash": "2e0213a7a228dd4e8cdc2a97ca34929deda0168c",
            "commit_summary": "Refactor commons code.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java"
            ],
            "functions": [
                {
                    "function name": "getInputStream",
                    "function params": [
                        "name"
                    ],
                    "file name": "Resources.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/Resources.java",
                    "full name": "src.main.java.org.apache.commons.codec.Resources.getInputStream"
                },
                {
                    "function name": "try",
                    "function params": [
                        "scanner"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.try"
                },
                {
                    "function name": "try",
                    "function params": [
                        "scanner"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.try"
                },
                {
                    "function name": "loadFromResource",
                    "function params": [
                        "languageRulesResourceName",
                        "languages"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Lang.loadFromResource"
                },
                {
                    "function name": "getInstance",
                    "function params": [
                        "languagesResourceName"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.getInstance"
                },
                {
                    "function name": "SomeLanguages",
                    "function params": [
                        "other"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.SomeLanguages"
                },
                {
                    "function name": "createScanner",
                    "function params": [
                        "nameType",
                        "rt",
                        "lang"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.createScanner"
                },
                {
                    "function name": "createScanner",
                    "function params": [
                        "lang"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.createScanner"
                }
            ],
            "date": "2019-02-08"
        },
        {
            "commit_id": 1122,
            "hash": "c39aa6fd604c0645414d26774b7b0247c3f0d8bd",
            "commit_summary": "Provide direct access to table as an array instead of a String lookup to\navoid Java-level boundary checks.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/B64.java",
                "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                "src/test/java/org/apache/commons/codec/digest/B64Test.java"
            ],
            "functions": [
                {
                    "function name": "getRandomSalt",
                    "function params": [
                        "num"
                    ],
                    "file name": "B64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/B64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/B64.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.B64.getRandomSalt"
                },
                {
                    "function name": "b64from24bit",
                    "function params": [
                        "b2",
                        "b1",
                        "b0",
                        "outLen",
                        "buffer"
                    ],
                    "file name": "B64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/B64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/B64.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.B64.b64from24bit"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "original",
                        "salt"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.crypt"
                },
                {
                    "function name": "testB64T",
                    "function params": [],
                    "file name": "B64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/B64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/B64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.B64Test.testB64T"
                }
            ],
            "date": "2019-02-08"
        },
        {
            "commit_id": 1123,
            "hash": "6c941863e7d1397ae7cf43ee16ea87329edfc279",
            "commit_summary": "SecureRandom.getInstanceStrong() -> new SecureRandom()",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/B64.java",
                "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java"
            ],
            "functions": [
                {
                    "function name": "getRandomSalt",
                    "function params": [
                        "num"
                    ],
                    "file name": "B64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/B64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/B64.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.B64.getRandomSalt"
                }
            ],
            "date": "2019-02-09"
        },
        {
            "commit_id": 1124,
            "hash": "c74ed13a8b14421a5eb1bdc83430d413545682dd",
            "commit_summary": "Javadoc: Add @since 1.12/",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java"
            ],
            "functions": [],
            "date": "2019-02-15"
        },
        {
            "commit_id": 1125,
            "hash": "e9f1cd80e7f31a8fa4840ad0e62c6fd95869540f",
            "commit_summary": "Remove unused import",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/B64.java"
            ],
            "functions": [],
            "date": "2019-02-16"
        },
        {
            "commit_id": 1126,
            "hash": "6ab7e0cd7e725cabba6d45ca9963859f7416c395",
            "commit_summary": "Remove test code that used deprecated constructors for Numbers (calling valueOf) now",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java",
                "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/URLCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "testEncodeWithInvalidObject",
                    "function params": [],
                    "file name": "StringEncoderAbstractTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.StringEncoderAbstractTest.testEncodeWithInvalidObject"
                },
                {
                    "function name": "testComparatorWithDoubleMetaphoneAndInvalidInput",
                    "function params": [],
                    "file name": "StringEncoderComparatorTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testEncodeObjects"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testEncodeObjects"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"
                }
            ],
            "date": "2019-02-16"
        },
        {
            "commit_id": 1127,
            "hash": "8e5084631769bd7973110cf2e40dd374baaeec19",
            "commit_summary": "Fix generics warning when creating a list",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java"
            ],
            "functions": [
                {
                    "function name": "soundex",
                    "function params": [
                        "source",
                        "branching"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex"
                }
            ],
            "date": "2019-02-16"
        },
        {
            "commit_id": 1128,
            "hash": "6a706a66c58bc45e81c8f013126802c33cec6d73",
            "commit_summary": "Make ESCAPE_CHAR as static as in other classes (QuotedPrintableCodec, URLCodec)",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/PercentCodec.java"
            ],
            "functions": [],
            "date": "2019-02-16"
        },
        {
            "commit_id": 1129,
            "hash": "680a648b5bfc8d3d40f213e054809aa51cbde699",
            "commit_summary": "Fix checkstyle issues",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/Resources.java",
                "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java"
            ],
            "functions": [
                {
                    "function name": "colognePhonetic",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.colognePhonetic"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "sourceStr",
                        "sourceCharset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                }
            ],
            "date": "2019-02-16"
        },
        {
            "commit_id": 1130,
            "hash": "ac7e904531c4509ecb9158e4b31cce95ed938119",
            "commit_summary": "Fix javadoc (and Travis build)",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java"
            ],
            "functions": [],
            "date": "2019-02-16"
        },
        {
            "commit_id": 1131,
            "hash": "7b2ab4a2659b987b823c7cb0a163c766557da802",
            "commit_summary": "[CODEC-257] Update from Java 7 to Java 8.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.encode"
                },
                {
                    "function name": "Branch",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch"
                },
                {
                    "function name": "Branch",
                    "function params": [
                        "other"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch"
                },
                {
                    "function name": "soundex",
                    "function params": [
                        "source"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex"
                },
                {
                    "function name": "for",
                    "function params": [
                        "rule"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.for"
                },
                {
                    "function name": "try",
                    "function params": [
                        "scanner"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.try"
                },
                {
                    "function name": "DaitchMokotoffSoundex",
                    "function params": [
                        "folding"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.DaitchMokotoffSoundex"
                },
                {
                    "function name": "Rule",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule"
                },
                {
                    "function name": "soundex",
                    "function params": [
                        "source",
                        "branching"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex"
                },
                {
                    "function name": "cleanup",
                    "function params": [
                        "input"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.cleanup"
                },
                {
                    "function name": "Branch",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch"
                },
                {
                    "function name": "Rule",
                    "function params": [
                        "pattern",
                        "replacementAtStart",
                        "replacementBeforeVowel",
                        "replacementDefault"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "source"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.encode"
                },
                {
                    "function name": "DaitchMokotoffSoundex",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.DaitchMokotoffSoundex"
                },
                {
                    "function name": "Branch",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch"
                },
                {
                    "function name": "Branch",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch"
                },
                {
                    "function name": "Rule",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule"
                },
                {
                    "function name": "Rule",
                    "function params": [
                        "context",
                        "atStart"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule"
                },
                {
                    "function name": "Rule",
                    "function params": [
                        "ch"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule"
                },
                {
                    "function name": "Branch",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch"
                },
                {
                    "function name": "stripQuotes",
                    "function params": [
                        "str"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes"
                },
                {
                    "function name": "Branch",
                    "function params": [
                        "replacement",
                        "forceAppend"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch"
                },
                {
                    "function name": "parseRules",
                    "function params": [
                        "scanner",
                        "location",
                        "ruleMapping",
                        "asciiFoldings"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules"
                },
                {
                    "function name": "Rule",
                    "function params": [
                        "context"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule"
                },
                {
                    "function name": "testExamples",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testExamples"
                },
                {
                    "function name": "testIsEncodeEquals",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"
                },
                {
                    "function name": "testAabjoe",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe"
                },
                {
                    "function name": "testCanFail",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testCanFail"
                },
                {
                    "function name": "main",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.main"
                },
                {
                    "function name": "testSpecialCharsBetweenSameLetters",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testSpecialCharsBetweenSameLetters"
                },
                {
                    "function name": "testAychlmajrForCodec122",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122"
                },
                {
                    "function name": "createStringEncoder",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.createStringEncoder"
                },
                {
                    "function name": "testVariationsMeyer",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"
                },
                {
                    "function name": "testAaclan",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"
                },
                {
                    "function name": "testHyphen",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"
                },
                {
                    "function name": "finishTests",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.finishTests"
                },
                {
                    "function name": "hasTestCase",
                    "function params": [
                        "re"
                    ],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.hasTestCase"
                },
                {
                    "function name": "checkEncoding",
                    "function params": [
                        "expected",
                        "source"
                    ],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.checkEncoding"
                },
                {
                    "function name": "testVariationsMella",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"
                },
                {
                    "function name": "testEdgeCases",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"
                }
            ],
            "date": "2019-03-22"
        },
        {
            "commit_id": 1132,
            "hash": "04d9492912de085abf6fe176b79b7e6d923a529a",
            "commit_summary": "Javadoc tweaks.",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java"
            ],
            "functions": [],
            "date": "2019-05-05"
        },
        {
            "commit_id": 1133,
            "hash": "0c667320394a25367f2009696abdcedbe2b19d49",
            "commit_summary": "Javadoc tweaks based on ML review.",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java"
            ],
            "functions": [],
            "date": "2019-05-06"
        },
        {
            "commit_id": 1134,
            "hash": "89bf8c4835873dea14d9e0162ee3c6f8bd965fd0",
            "commit_summary": "Remove Subversion's \"@version $Id$\".",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/BinaryDecoder.java",
                "src/main/java/org/apache/commons/codec/BinaryEncoder.java",
                "src/main/java/org/apache/commons/codec/CharEncoding.java",
                "src/main/java/org/apache/commons/codec/Decoder.java",
                "src/main/java/org/apache/commons/codec/DecoderException.java",
                "src/main/java/org/apache/commons/codec/Encoder.java",
                "src/main/java/org/apache/commons/codec/EncoderException.java",
                "src/main/java/org/apache/commons/codec/StringDecoder.java",
                "src/main/java/org/apache/commons/codec/StringEncoder.java",
                "src/main/java/org/apache/commons/codec/StringEncoderComparator.java",
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                "src/main/java/org/apache/commons/codec/binary/Hex.java",
                "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                "src/main/java/org/apache/commons/codec/digest/B64.java",
                "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java",
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java",
                "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/main/java/org/apache/commons/codec/language/Soundex.java",
                "src/main/java/org/apache/commons/codec/language/SoundexUtils.java",
                "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                "src/main/java/org/apache/commons/codec/language/bm/NameType.java",
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                "src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java",
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                "src/main/java/org/apache/commons/codec/language/bm/RuleType.java",
                "src/main/java/org/apache/commons/codec/net/BCodec.java",
                "src/main/java/org/apache/commons/codec/net/QCodec.java",
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                "src/main/java/org/apache/commons/codec/net/Utils.java",
                "src/test/java/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                "src/test/java/org/apache/commons/codec/CharEncodingTest.java",
                "src/test/java/org/apache/commons/codec/DecoderExceptionTest.java",
                "src/test/java/org/apache/commons/codec/EncoderExceptionTest.java",
                "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java",
                "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java",
                "src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                "src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java",
                "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/RFC1522CodecTest.java",
                "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/UtilsTest.java"
            ],
            "functions": [],
            "date": "2019-05-16"
        },
        {
            "commit_id": 1135,
            "hash": "216ae1bc55002b7aca764398c1e6da750f0030d4",
            "commit_summary": "Remove Subversion's \"@version $Id$\".",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/Charsets.java",
                "src/main/java/org/apache/commons/codec/language/AbstractCaverphone.java",
                "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                "src/main/java/org/apache/commons/codec/language/Caverphone1.java",
                "src/main/java/org/apache/commons/codec/language/Caverphone2.java",
                "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base32TestData.java",
                "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64TestData.java",
                "src/test/java/org/apache/commons/codec/binary/Codec105ErrorInputStream.java",
                "src/test/java/org/apache/commons/codec/language/Caverphone1Test.java"
            ],
            "functions": [],
            "date": "2019-05-16"
        },
        {
            "commit_id": 1136,
            "hash": "0bf5b8a05a535895916a57817b226aec0e05ba13",
            "commit_summary": "Javadoc: Use paragraph tags.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/CharEncoding.java",
                "src/main/java/org/apache/commons/codec/Charsets.java",
                "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java"
            ],
            "functions": [],
            "date": "2019-05-19"
        },
        {
            "commit_id": 1137,
            "hash": "48b615756d1d770091ea3322eefc08011ee8b113",
            "commit_summary": "CODEC-134: Update commons-codec to reject decoding any impossible string encoding for Base32 and Base64. (#19)\n\n[CODEC-134] Squash and merge.\r\n\r\n* CODEC-134: Update to reject decoding strings that are not possible in the given encoding for Base32 and Base64.\r\n\r\n* CODEC-134: Fix tabs instead of spaces.\r\n\r\n* CODEC-134: Update such that the right shift is not indirectly accomplished via a method call.\r\n\r\n* CODEC-134: Fix spaces versus tabs (again).\r\n\r\n* CODEC-134: Add test to cover missed exception case in BCodec.java.\r\n\r\n* CODEC-134: Update changes.xml to describe change.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/net/BCodec.java",
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64TestData.java",
                "src/test/java/org/apache/commons/codec/net/BCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "validateCharacter",
                    "function params": [
                        "numBits",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.validateCharacter"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "validateCharacter",
                    "function params": [
                        "numBitsToDrop",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.validateCharacter"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "value"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.decode"
                },
                {
                    "function name": "testImpossibleCases",
                    "function params": [
                        "codec",
                        "impossible_cases"
                    ],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testImpossibleCases"
                },
                {
                    "function name": "testBase32HexImpossibleSamples",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32HexImpossibleSamples"
                },
                {
                    "function name": "testBase32ImpossibleSamples",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32ImpossibleSamples"
                },
                {
                    "function name": "testBase32ImpossibleChunked",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32ImpossibleChunked"
                },
                {
                    "function name": "testBase64ImpossibleSamples",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testBase64ImpossibleSamples"
                },
                {
                    "function name": "testBase64ImpossibleSamples",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testBase64ImpossibleSamples"
                }
            ],
            "date": "2019-05-20"
        },
        {
            "commit_id": 1138,
            "hash": "d85f343423638ea0a2a8da26df9851704b36dbd1",
            "commit_summary": "Javadoc: Use \"file name\" instead of \"filename\".",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/cli/Digest.java"
            ],
            "functions": [
                {
                    "function name": "println",
                    "function params": [
                        "prefix",
                        "digest",
                        "fileName"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.cli.Digest.println"
                }
            ],
            "date": "2019-05-30"
        },
        {
            "commit_id": 1139,
            "hash": "9f177fdb5f637bd33328368de42ee4eff6f65508",
            "commit_summary": "Javadoc and comments.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java"
            ],
            "functions": [
                {
                    "function name": "mark",
                    "function params": [
                        "readLimit"
                    ],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecInputStream.mark"
                }
            ],
            "date": "2019-05-31"
        },
        {
            "commit_id": 1140,
            "hash": "387eba9bd25764fdaa3abb90c98e3e564f3f5a53",
            "commit_summary": "Move Javadoc to correct location",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [],
            "date": "2019-06-17"
        },
        {
            "commit_id": 1141,
            "hash": "16a0eeac59ab35bf49a7de70eb4dc70b0c61752d",
            "commit_summary": "Alphabetize for easier comparison with published algorithm",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [
                {
                    "function name": "colognePhonetic",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.colognePhonetic"
                }
            ],
            "date": "2019-06-17"
        },
        {
            "commit_id": 1142,
            "hash": "4f8662a758688b845d741a932e28cc8d4fc11b96",
            "commit_summary": "CODEC-254 - ColognePhonetic does not treat the letter H correct",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java"
            ],
            "functions": [
                {
                    "function name": "colognePhonetic",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.colognePhonetic"
                },
                {
                    "function name": "testExamples",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testExamples"
                },
                {
                    "function name": "testIsEncodeEquals",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"
                },
                {
                    "function name": "testAabjoe",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe"
                },
                {
                    "function name": "testCanFail",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testCanFail"
                },
                {
                    "function name": "main",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.main"
                },
                {
                    "function name": "testSpecialCharsBetweenSameLetters",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testSpecialCharsBetweenSameLetters"
                },
                {
                    "function name": "testAychlmajrForCodec122",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122"
                },
                {
                    "function name": "createStringEncoder",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.createStringEncoder"
                },
                {
                    "function name": "testVariationsMeyer",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"
                },
                {
                    "function name": "testAaclan",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"
                },
                {
                    "function name": "testHyphen",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"
                },
                {
                    "function name": "finishTests",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.finishTests"
                },
                {
                    "function name": "hasTestCase",
                    "function params": [
                        "re"
                    ],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.hasTestCase"
                },
                {
                    "function name": "checkEncoding",
                    "function params": [
                        "expected",
                        "source"
                    ],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.checkEncoding"
                },
                {
                    "function name": "testVariationsMella",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"
                },
                {
                    "function name": "testEdgeCases",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"
                }
            ],
            "date": "2019-06-17"
        },
        {
            "commit_id": 1143,
            "hash": "128c93c26e963dafe1165e593d4351402a0206d3",
            "commit_summary": "Obsolete comment",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [
                {
                    "function name": "colognePhonetic",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.colognePhonetic"
                }
            ],
            "date": "2019-06-17"
        },
        {
            "commit_id": 1144,
            "hash": "79722429dad5256ac0d3871d4ef2977b4e7a383d",
            "commit_summary": "CODEC-255 ColognePhonetic handles x incorrectly",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java"
            ],
            "functions": [
                {
                    "function name": "CologneOutputBuffer",
                    "function params": [
                        "buffSize"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.CologneOutputBuffer"
                },
                {
                    "function name": "colognePhonetic",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.colognePhonetic"
                },
                {
                    "function name": "CologneOutputBuffer",
                    "function params": [
                        "code"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.CologneOutputBuffer"
                },
                {
                    "function name": "testExamples",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testExamples"
                }
            ],
            "date": "2019-06-18"
        },
        {
            "commit_id": 1145,
            "hash": "7b27ec64b98131ff2bd2e53c9e22638c54b2ede5",
            "commit_summary": "Normalise EOL (no other changes)",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/cli/Digest.java",
                "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java"
            ],
            "functions": [
                {
                    "function name": "run",
                    "function params": [],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.cli.Digest.run"
                },
                {
                    "function name": "run",
                    "function params": [
                        "prefix",
                        "messageDigest",
                        "files"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.cli.Digest.run"
                },
                {
                    "function name": "run",
                    "function params": [
                        "prefix",
                        "messageDigestAlgorithm"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.cli.Digest.run"
                },
                {
                    "function name": "println",
                    "function params": [
                        "prefix",
                        "digest",
                        "fileName"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.cli.Digest.println"
                },
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.cli.Digest.toString"
                },
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.cli.Digest.main"
                },
                {
                    "function name": "run",
                    "function params": [
                        "prefix",
                        "messageDigest"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.cli.Digest.run"
                },
                {
                    "function name": "run",
                    "function params": [
                        "digestAlgorithms"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.cli.Digest.run"
                },
                {
                    "function name": "Digest",
                    "function params": [
                        "args"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.cli.Digest.Digest"
                },
                {
                    "function name": "println",
                    "function params": [
                        "prefix",
                        "digest"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.cli.Digest.println"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.encode"
                },
                {
                    "function name": "Branch",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch"
                },
                {
                    "function name": "Branch",
                    "function params": [
                        "other"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch"
                },
                {
                    "function name": "soundex",
                    "function params": [
                        "source"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex"
                },
                {
                    "function name": "for",
                    "function params": [
                        "rule"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.for"
                },
                {
                    "function name": "try",
                    "function params": [
                        "scanner"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.try"
                },
                {
                    "function name": "DaitchMokotoffSoundex",
                    "function params": [
                        "folding"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.DaitchMokotoffSoundex"
                },
                {
                    "function name": "Rule",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule"
                },
                {
                    "function name": "soundex",
                    "function params": [
                        "source",
                        "branching"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex"
                },
                {
                    "function name": "cleanup",
                    "function params": [
                        "input"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.cleanup"
                },
                {
                    "function name": "Branch",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch"
                },
                {
                    "function name": "Rule",
                    "function params": [
                        "pattern",
                        "replacementAtStart",
                        "replacementBeforeVowel",
                        "replacementDefault"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "source"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.encode"
                },
                {
                    "function name": "DaitchMokotoffSoundex",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.DaitchMokotoffSoundex"
                },
                {
                    "function name": "Branch",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch"
                },
                {
                    "function name": "Branch",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch"
                },
                {
                    "function name": "Rule",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule"
                },
                {
                    "function name": "Rule",
                    "function params": [
                        "context",
                        "atStart"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule"
                },
                {
                    "function name": "Rule",
                    "function params": [
                        "ch"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule"
                },
                {
                    "function name": "Branch",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch"
                },
                {
                    "function name": "stripQuotes",
                    "function params": [
                        "str"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes"
                },
                {
                    "function name": "Branch",
                    "function params": [
                        "replacement",
                        "forceAppend"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch"
                },
                {
                    "function name": "parseRules",
                    "function params": [
                        "scanner",
                        "location",
                        "ruleMapping",
                        "asciiFoldings"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules"
                },
                {
                    "function name": "Rule",
                    "function params": [
                        "context"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule"
                },
                {
                    "function name": "data",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.data"
                },
                {
                    "function name": "testHmacHexFailString",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailString"
                },
                {
                    "function name": "testInitializedMac",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testInitializedMac"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.tearDown"
                },
                {
                    "function name": "HmacAlgorithmsTest",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.HmacAlgorithmsTest"
                },
                {
                    "function name": "testHmacFailInputStream",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailInputStream"
                },
                {
                    "function name": "testHmacHexFailInputStream",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailInputStream"
                },
                {
                    "function name": "testGetHmacNullKey",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testGetHmacNullKey"
                },
                {
                    "function name": "testGetHmacEmptyKey",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testGetHmacEmptyKey"
                },
                {
                    "function name": "testAlgorithm",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testAlgorithm"
                },
                {
                    "function name": "testHmacHexFailByteArray",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailByteArray"
                },
                {
                    "function name": "testHmacFailString",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailString"
                },
                {
                    "function name": "testMacByteArary",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacByteArary"
                },
                {
                    "function name": "testMacHexInputStream",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexInputStream"
                },
                {
                    "function name": "testMacHexByteArray",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexByteArray"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.setUp"
                },
                {
                    "function name": "testMacHexString",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexString"
                },
                {
                    "function name": "testHmacFailByteArray",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailByteArray"
                },
                {
                    "function name": "testMacInputStream",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacInputStream"
                },
                {
                    "function name": "testMacString",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacString"
                },
                {
                    "function name": "testAlgorithm",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testAlgorithm"
                },
                {
                    "function name": "checkValues",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.checkValues"
                },
                {
                    "function name": "getTestData",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.getTestData"
                },
                {
                    "function name": "getTestFile",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.getTestFile"
                },
                {
                    "function name": "testDigestByteArray",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestByteArray"
                },
                {
                    "function name": "digestTestData",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.digestTestData"
                },
                {
                    "function name": "contains",
                    "function params": [
                        "key"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.contains"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.setUp"
                },
                {
                    "function name": "testGetMessageDigest",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testGetMessageDigest"
                },
                {
                    "function name": "MessageDigestAlgorithmsTest",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.MessageDigestAlgorithmsTest"
                },
                {
                    "function name": "testDigestFile",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestFile"
                },
                {
                    "function name": "data",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.data"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.tearDown"
                },
                {
                    "function name": "testDigestInputStream",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestInputStream"
                },
                {
                    "function name": "testDigestByteBuffer",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestByteBuffer"
                },
                {
                    "function name": "checkSame",
                    "function params": [],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.checkSame"
                },
                {
                    "function name": "Table",
                    "function params": [
                        "nameformat"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.Table"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [
                        "s",
                        "width",
                        "out"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                },
                {
                    "function name": "testCorrectness",
                    "function params": [],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [
                        "out"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                },
                {
                    "function name": "Table",
                    "function params": [],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.Table"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [
                        "clazz",
                        "numThreads",
                        "bytes",
                        "size"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                },
                {
                    "function name": "Table",
                    "function params": [
                        "nBits",
                        "nTables",
                        "polynomial"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.Table"
                },
                {
                    "function name": "Table",
                    "function params": [
                        "args"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.Table"
                },
                {
                    "function name": "checkOnBytes",
                    "function params": [
                        "bytes",
                        "print"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.checkOnBytes"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [
                        "crcs",
                        "bytes",
                        "size",
                        "out"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [
                        "crcs",
                        "out"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [
                        "value",
                        "mbps"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                }
            ],
            "date": "2019-06-18"
        },
        {
            "commit_id": 1146,
            "hash": "e42727d6c6307b63ead9eb865fb1d874dc01e4eb",
            "commit_summary": "Allow code to work on Java7 for now",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java"
            ],
            "functions": [
                {
                    "function name": "soundex",
                    "function params": [
                        "source",
                        "branching"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex"
                }
            ],
            "date": "2019-06-20"
        },
        {
            "commit_id": 1147,
            "hash": "45a195e0776e2dfb85022f034aec3af191cf7dca",
            "commit_summary": "Replace SVN with GitBox URL.",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [],
            "date": "2019-07-07"
        },
        {
            "commit_id": 1148,
            "hash": "2bcdfd86643761c239ec40e6e1e2f05855a07f95",
            "commit_summary": "CODEC-236: MurmurHash2 and MurmurHash3 implementations. (#22)\n\n* CODEC-236: MurmurHash2 and MurmurHash3 implementations.\r\n\r\n* CODEC-236: Removed author tag.\r\n\r\n* CODEC-236: Added javadoc and increased unit test coverage.",
            "modified_files": [],
            "functions": [
                {
                    "function name": "MurmurHash2",
                    "function params": [],
                    "file name": "MurmurHash2.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.MurmurHash2"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "text",
                        "from",
                        "length"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.hash32"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "text"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.hash32"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "text"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.hash64"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "text",
                        "from",
                        "length"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.hash64"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data",
                        "length"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.hash64"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.hash32"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data",
                        "length"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.hash32"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.hash64"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "fmix32",
                    "function params": [
                        "length",
                        "hash"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.fmix32"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "mix32",
                    "function params": [
                        "k",
                        "hash"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.mix32"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data",
                        "offset",
                        "length"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "IncrementalHash32",
                    "function params": [],
                    "file name": "MurmurHash3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.IncrementalHash32"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "l0",
                        "l1"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "fmix64",
                    "function params": [
                        "h"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.fmix64"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "MurmurHash3",
                    "function params": [],
                    "file name": "MurmurHash3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.MurmurHash3"
                },
                {
                    "function name": "IncrementalHash32",
                    "function params": [
                        "hash"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.IncrementalHash32"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "l0",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data",
                        "length"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "l0",
                        "l1",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "orBytes",
                    "function params": [
                        "b1",
                        "b2",
                        "b3",
                        "b4"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.orBytes"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "hash128",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash128"
                },
                {
                    "function name": "hash128",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash128"
                },
                {
                    "function name": "IncrementalHash32",
                    "function params": [
                        "data",
                        "offset",
                        "length"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.IncrementalHash32"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "l0"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "hash128",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash128"
                },
                {
                    "function name": "testHash32ByteArrayInt",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash32ByteArrayInt"
                },
                {
                    "function name": "testHash32StringIntInt",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash32StringIntInt"
                },
                {
                    "function name": "testHash64StringIntInt",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash64StringIntInt"
                },
                {
                    "function name": "testHash64ByteArrayIntInt",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash64ByteArrayIntInt"
                },
                {
                    "function name": "testHash64String",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash64String"
                },
                {
                    "function name": "testHash32ByteArrayIntInt",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash32ByteArrayIntInt"
                },
                {
                    "function name": "testHash64ByteArrayInt",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash64ByteArrayInt"
                },
                {
                    "function name": "testHash32String",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash32String"
                },
                {
                    "function name": "testTwoLongOrdered",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testTwoLongOrdered"
                },
                {
                    "function name": "test128_Long",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.test128_Long"
                },
                {
                    "function name": "testIncremental",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testIncremental"
                },
                {
                    "function name": "test32_String",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.test32_String"
                },
                {
                    "function name": "testSingleLongOrdered",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testSingleLongOrdered"
                },
                {
                    "function name": "test64",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.test64"
                },
                {
                    "function name": "testHashCodeM3_64",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHashCodeM3_64"
                },
                {
                    "function name": "test128_Short",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.test128_Short"
                },
                {
                    "function name": "testTwoLongRandom",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testTwoLongRandom"
                },
                {
                    "function name": "test128_Int",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.test128_Int"
                },
                {
                    "function name": "testSingleLongRandom",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testSingleLongRandom"
                },
                {
                    "function name": "test128_Double",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.test128_Double"
                },
                {
                    "function name": "test128_String",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.test128_String"
                }
            ],
            "date": "2019-07-12"
        },
        {
            "commit_id": 1149,
            "hash": "8b7244416c276eaaa05cf7133bd2b85de13190de",
            "commit_summary": "Remove Java 8 code.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java"
            ],
            "functions": [
                {
                    "function name": "hash64",
                    "function params": [
                        "data",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.hash64"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "l0",
                        "l1",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "l0",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                }
            ],
            "date": "2019-07-12"
        },
        {
            "commit_id": 1150,
            "hash": "d2f2830524d59fd62049629097f8a27a0d51aa24",
            "commit_summary": "Remove Java 8 code.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java"
            ],
            "functions": [
                {
                    "function name": "testTwoLongOrdered",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testTwoLongOrdered"
                },
                {
                    "function name": "test128_Long",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.test128_Long"
                },
                {
                    "function name": "testSingleLongOrdered",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testSingleLongOrdered"
                },
                {
                    "function name": "test64",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.test64"
                },
                {
                    "function name": "test128_Short",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.test128_Short"
                },
                {
                    "function name": "testTwoLongRandom",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testTwoLongRandom"
                },
                {
                    "function name": "test128_Int",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.test128_Int"
                },
                {
                    "function name": "testSingleLongRandom",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testSingleLongRandom"
                },
                {
                    "function name": "test128_Double",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.test128_Double"
                }
            ],
            "date": "2019-07-12"
        },
        {
            "commit_id": 1151,
            "hash": "eaf9ae1465d4d8298601c7f605bfca5e28e602d3",
            "commit_summary": "Add Javadoc links for Java 10, 11, 12.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java"
            ],
            "functions": [],
            "date": "2019-07-12"
        },
        {
            "commit_id": 1152,
            "hash": "e0a85c7fac564d8d8818bb7aa4da4f532fca41ab",
            "commit_summary": "Remove trailing white spaces.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/CharEncoding.java",
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java"
            ],
            "functions": [],
            "date": "2019-07-12"
        },
        {
            "commit_id": 1153,
            "hash": "4ddf436b19e0c44221c849d3a5f94feab6ca0a85",
            "commit_summary": "Use blocks for if statements.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                "src/test/java/org/apache/commons/codec/net/BCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "IncrementalHash32",
                    "function params": [
                        "data",
                        "offset",
                        "length"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.IncrementalHash32"
                },
                {
                    "function name": "testHash32ByteArrayIntInt",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash32ByteArrayIntInt"
                },
                {
                    "function name": "testHash32ByteArrayInt",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash32ByteArrayInt"
                },
                {
                    "function name": "test32_String",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.test32_String"
                },
                {
                    "function name": "test128_String",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.test128_String"
                }
            ],
            "date": "2019-07-12"
        },
        {
            "commit_id": 1154,
            "hash": "30e5768186f73552b5f1634a76cf2c12bf26b5bb",
            "commit_summary": "Use final.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "validateCharacter",
                    "function params": [
                        "numBits",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.validateCharacter"
                },
                {
                    "function name": "validateCharacter",
                    "function params": [
                        "numBits",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.validateCharacter"
                },
                {
                    "function name": "validateCharacter",
                    "function params": [
                        "numBitsToDrop",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.validateCharacter"
                },
                {
                    "function name": "validateCharacter",
                    "function params": [
                        "numBitsToDrop",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.validateCharacter"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "text",
                        "from",
                        "length"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.hash32"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "text",
                        "from",
                        "length"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.hash64"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.hash64"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data",
                        "length"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.hash64"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data",
                        "length"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.hash64"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.hash64"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.hash32"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data",
                        "length"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.hash32"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "text",
                        "from",
                        "length"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.hash32"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.hash32"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data",
                        "length"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.hash32"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "text",
                        "from",
                        "length"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.hash64"
                },
                {
                    "function name": "fmix32",
                    "function params": [
                        "length",
                        "hash"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.fmix32"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "l0",
                        "l1",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "hash128",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash128"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "l0",
                        "l1"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "l0",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "orBytes",
                    "function params": [
                        "b1",
                        "b2",
                        "b3",
                        "b4"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.orBytes"
                },
                {
                    "function name": "orBytes",
                    "function params": [
                        "b1",
                        "b2",
                        "b3",
                        "b4"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.orBytes"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "hash128",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash128"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "l0",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "IncrementalHash32",
                    "function params": [
                        "data",
                        "offset",
                        "length"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.IncrementalHash32"
                },
                {
                    "function name": "hash128",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash128"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "fmix32",
                    "function params": [
                        "length",
                        "hash"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.fmix32"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data",
                        "length"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "l0"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data",
                        "offset",
                        "length"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "l0",
                        "l1"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "hash128",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash128"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "IncrementalHash32",
                    "function params": [
                        "hash"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.IncrementalHash32"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data",
                        "length"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "IncrementalHash32",
                    "function params": [
                        "hash"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.IncrementalHash32"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "l0",
                        "l1",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "hash128",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash128"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data",
                        "offset",
                        "length"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "hash128",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash128"
                },
                {
                    "function name": "IncrementalHash32",
                    "function params": [
                        "data",
                        "offset",
                        "length"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.IncrementalHash32"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "l0"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "sha256Crypt",
                    "function params": [
                        "keyBytes",
                        "salt",
                        "random"
                    ],
                    "file name": "Sha2Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt"
                },
                {
                    "function name": "sha256Crypt",
                    "function params": [
                        "keyBytes",
                        "salt",
                        "random"
                    ],
                    "file name": "Sha2Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt"
                },
                {
                    "function name": "colognePhonetic",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.colognePhonetic"
                },
                {
                    "function name": "colognePhonetic",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.colognePhonetic"
                },
                {
                    "function name": "preprocess",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.preprocess"
                },
                {
                    "function name": "preprocess",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.preprocess"
                },
                {
                    "function name": "insertAlwaysEncodeChars",
                    "function params": [
                        "alwaysEncodeCharsArray"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.insertAlwaysEncodeChars"
                },
                {
                    "function name": "doEncode",
                    "function params": [
                        "bytes",
                        "expectedLength",
                        "willEncode"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.doEncode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.encode"
                },
                {
                    "function name": "doEncode",
                    "function params": [
                        "bytes",
                        "expectedLength",
                        "willEncode"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.doEncode"
                },
                {
                    "function name": "expectedDecodingBytes",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.expectedDecodingBytes"
                },
                {
                    "function name": "testImpossibleCases",
                    "function params": [
                        "codec",
                        "impossible_cases"
                    ],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testImpossibleCases"
                },
                {
                    "function name": "testImpossibleCases",
                    "function params": [
                        "codec",
                        "impossible_cases"
                    ],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testImpossibleCases"
                },
                {
                    "function name": "testBase64ImpossibleSamples",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testBase64ImpossibleSamples"
                },
                {
                    "function name": "testApr1CryptBytesWithThreadLocalRandom",
                    "function params": [],
                    "file name": "Apr1CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytesWithThreadLocalRandom"
                },
                {
                    "function name": "testMd5CryptExplicitCallWithThreadLocalRandom",
                    "function params": [],
                    "file name": "Md5CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCallWithThreadLocalRandom"
                },
                {
                    "function name": "testHash32ByteArrayInt",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash32ByteArrayInt"
                },
                {
                    "function name": "testHash32StringIntInt",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash32StringIntInt"
                },
                {
                    "function name": "testHash64StringIntInt",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash64StringIntInt"
                },
                {
                    "function name": "testHash64ByteArrayIntInt",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash64ByteArrayIntInt"
                },
                {
                    "function name": "testHash64String",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash64String"
                },
                {
                    "function name": "testHash32ByteArrayIntInt",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash32ByteArrayIntInt"
                },
                {
                    "function name": "testHash64ByteArrayInt",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash64ByteArrayInt"
                },
                {
                    "function name": "testHash32String",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash32String"
                },
                {
                    "function name": "testTwoLongOrdered",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testTwoLongOrdered"
                },
                {
                    "function name": "testIncremental",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testIncremental"
                },
                {
                    "function name": "testSingleLongOrdered",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testSingleLongOrdered"
                },
                {
                    "function name": "test64",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.test64"
                },
                {
                    "function name": "testHashCodeM3_64",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHashCodeM3_64"
                },
                {
                    "function name": "test128_Short",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.test128_Short"
                },
                {
                    "function name": "test128_Long",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.test128_Long"
                },
                {
                    "function name": "test32_String",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.test32_String"
                },
                {
                    "function name": "testTwoLongRandom",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testTwoLongRandom"
                },
                {
                    "function name": "test128_Int",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.test128_Int"
                },
                {
                    "function name": "testSingleLongRandom",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testSingleLongRandom"
                },
                {
                    "function name": "test128_Double",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.test128_Double"
                },
                {
                    "function name": "test128_String",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.test128_String"
                },
                {
                    "function name": "testSha2CryptRoundsThreadLocalRandom",
                    "function params": [],
                    "file name": "Sha256CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom"
                },
                {
                    "function name": "testSha512CryptExplicitCallThreadLocalRandom",
                    "function params": [],
                    "file name": "Sha512CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCallThreadLocalRandom"
                },
                {
                    "function name": "finishTests",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.finishTests"
                },
                {
                    "function name": "hasTestCase",
                    "function params": [
                        "re"
                    ],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.hasTestCase"
                },
                {
                    "function name": "main",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.main"
                },
                {
                    "function name": "checkEncoding",
                    "function params": [
                        "expected",
                        "source"
                    ],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.checkEncoding"
                },
                {
                    "function name": "hasTestCase",
                    "function params": [
                        "re"
                    ],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.hasTestCase"
                },
                {
                    "function name": "main",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.main"
                },
                {
                    "function name": "checkEncoding",
                    "function params": [
                        "expected",
                        "source"
                    ],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.checkEncoding"
                },
                {
                    "function name": "testBase64ImpossibleSamples",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testBase64ImpossibleSamples"
                },
                {
                    "function name": "testSafeCharEncodeDecodeObject",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testSafeCharEncodeDecodeObject"
                },
                {
                    "function name": "testPercentEncoderDecoderWithNullOrEmptyInput",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testPercentEncoderDecoderWithNullOrEmptyInput"
                },
                {
                    "function name": "testConfigurablePercentEncoder",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testConfigurablePercentEncoder"
                },
                {
                    "function name": "testDecodeUnsupportedObject",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testDecodeUnsupportedObject"
                },
                {
                    "function name": "testDecodeInvalidEncodedResultDecoding",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testDecodeInvalidEncodedResultDecoding"
                },
                {
                    "function name": "testUnsafeCharEncodeDecode",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testUnsafeCharEncodeDecode"
                },
                {
                    "function name": "testEncodeUnsupportedObject",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testEncodeUnsupportedObject"
                },
                {
                    "function name": "testDecodeNullObject",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testDecodeNullObject"
                },
                {
                    "function name": "testEncodeNullObject",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testEncodeNullObject"
                },
                {
                    "function name": "testBasicEncodeDecode",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testBasicEncodeDecode"
                },
                {
                    "function name": "testPercentEncoderDecoderWithPlusForSpace",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testPercentEncoderDecoderWithPlusForSpace"
                },
                {
                    "function name": "testBasicSpace",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testBasicSpace"
                }
            ],
            "date": "2019-07-12"
        },
        {
            "commit_id": 1155,
            "hash": "3fd5dcdd3ff86b8528463a19c7b93fe0a460ec36",
            "commit_summary": "[CODEC-236] Broken direct java.nio.ByteBuffer support in\norg.apache.commons.codec.binary.Hex. Closes #23.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Hex.java",
                "src/test/java/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [
                {
                    "function name": "encodeHex",
                    "function params": [
                        "byteBuffer",
                        "toDigits"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHex"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "object"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encode"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "byteBuffer"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.toByteArray"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "buffer"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.decode"
                },
                {
                    "function name": "encodeHex",
                    "function params": [
                        "data",
                        "toDigits"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHex"
                },
                {
                    "function name": "allocate",
                    "function params": [
                        "capacity"
                    ],
                    "file name": "AllocateDirectHexTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/AllocateDirectHexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.AllocateDirectHexTest.allocate"
                },
                {
                    "function name": "allocate",
                    "function params": [
                        "capacity"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.allocate"
                },
                {
                    "function name": "testDecodeByteBufferObjectEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeByteBufferObjectEmpty"
                },
                {
                    "function name": "testEncodeByteBufferObjectEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeByteBufferObjectEmpty"
                },
                {
                    "function name": "testEncodeByteBufferEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeByteBufferEmpty"
                },
                {
                    "function name": "testDecodeByteBufferEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeByteBufferEmpty"
                },
                {
                    "function name": "testEncodeHexByteString_ByteBufferOfZeroes",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferOfZeroes"
                },
                {
                    "function name": "testEncodeHex_ByteBufferOfZeroes",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHex_ByteBufferOfZeroes"
                },
                {
                    "function name": "testDecodeByteBufferOddCharacters",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeByteBufferOddCharacters"
                },
                {
                    "function name": "testEncodeHexByteBufferEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferEmpty"
                }
            ],
            "date": "2019-07-19"
        },
        {
            "commit_id": 1156,
            "hash": "9253700b7308dc43f063c87014dce5ee80ee33e0",
            "commit_summary": "Remove trailing white spaces.",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [],
            "date": "2019-07-20"
        },
        {
            "commit_id": 1157,
            "hash": "3e6fb93250fb951ccd3b9597cd19b1c2243a77b1",
            "commit_summary": "Use final.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Hex.java"
            ],
            "functions": [
                {
                    "function name": "toByteArray",
                    "function params": [
                        "byteBuffer"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.toByteArray"
                }
            ],
            "date": "2019-07-20"
        },
        {
            "commit_id": 1158,
            "hash": "fe39ffc076712fc8cd55c96fc5cb0eee2efe4847",
            "commit_summary": "Remove unnecessary type casts.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java"
            ],
            "functions": [
                {
                    "function name": "hash64",
                    "function params": [
                        "data",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.hash64"
                },
                {
                    "function name": "hash128",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash128"
                }
            ],
            "date": "2019-07-20"
        },
        {
            "commit_id": 1159,
            "hash": "3ebef4ad92e31697fb52ca7cc71904c68654c2c8",
            "commit_summary": "Fix broken Javadoc",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [],
            "date": "2019-08-01"
        },
        {
            "commit_id": 1160,
            "hash": "40be3f770c8a1e87342d14a6b730b7d99fef8e71",
            "commit_summary": "Replaced tabs with 4 spaces",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java"
            ],
            "functions": [
                {
                    "function name": "hash32",
                    "function params": [
                        "text"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.hash32"
                },
                {
                    "function name": "MurmurHash2",
                    "function params": [],
                    "file name": "MurmurHash2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.MurmurHash2"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "text"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.hash64"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data",
                        "length"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.hash64"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.hash64"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "text",
                        "from",
                        "length"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.hash32"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.hash32"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data",
                        "length"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.hash32"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "text",
                        "from",
                        "length"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.hash64"
                },
                {
                    "function name": "fmix32",
                    "function params": [
                        "length",
                        "hash"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.fmix32"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "l0",
                        "l1",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "hash128",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash128"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "mix32",
                    "function params": [
                        "k",
                        "hash"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.mix32"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "l0",
                        "l1"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "orBytes",
                    "function params": [
                        "b1",
                        "b2",
                        "b3",
                        "b4"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.orBytes"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "hash128",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash128"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "l0",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "IncrementalHash32",
                    "function params": [
                        "data",
                        "offset",
                        "length"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.IncrementalHash32"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data",
                        "length"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "l0"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "IncrementalHash32",
                    "function params": [],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.IncrementalHash32"
                },
                {
                    "function name": "hash128",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash128"
                },
                {
                    "function name": "fmix64",
                    "function params": [
                        "h"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.fmix64"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "MurmurHash3",
                    "function params": [],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.MurmurHash3"
                },
                {
                    "function name": "IncrementalHash32",
                    "function params": [
                        "hash"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.IncrementalHash32"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data",
                        "offset",
                        "length"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "testHash32ByteArrayInt",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash32ByteArrayInt"
                },
                {
                    "function name": "testHash32StringIntInt",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash32StringIntInt"
                },
                {
                    "function name": "testHash64StringIntInt",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash64StringIntInt"
                },
                {
                    "function name": "testHash64ByteArrayIntInt",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash64ByteArrayIntInt"
                },
                {
                    "function name": "testHash64String",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash64String"
                },
                {
                    "function name": "testHash32ByteArrayIntInt",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash32ByteArrayIntInt"
                },
                {
                    "function name": "testHash64ByteArrayInt",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash64ByteArrayInt"
                },
                {
                    "function name": "testHash32String",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash32String"
                },
                {
                    "function name": "testTwoLongOrdered",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testTwoLongOrdered"
                },
                {
                    "function name": "testIncremental",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testIncremental"
                },
                {
                    "function name": "testSingleLongOrdered",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testSingleLongOrdered"
                },
                {
                    "function name": "test64",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.test64"
                },
                {
                    "function name": "testHashCodeM3_64",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHashCodeM3_64"
                },
                {
                    "function name": "test128_Short",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.test128_Short"
                },
                {
                    "function name": "test128_Long",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.test128_Long"
                },
                {
                    "function name": "test32_String",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.test32_String"
                },
                {
                    "function name": "testTwoLongRandom",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testTwoLongRandom"
                },
                {
                    "function name": "test128_Int",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.test128_Int"
                },
                {
                    "function name": "testSingleLongRandom",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testSingleLongRandom"
                },
                {
                    "function name": "test128_Double",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.test128_Double"
                },
                {
                    "function name": "test128_String",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.test128_String"
                }
            ],
            "date": "2019-11-14"
        },
        {
            "commit_id": 1161,
            "hash": "b5ce7fae5bb6794d41216756f080a087cb956e90",
            "commit_summary": "Fully documented MurmurHash3.\n\nThis attempts no code changes.\n\nThe highly modified class passes the current tests.\n\nmvn clirr:clirr report shows no changes.\nDefault mvn goal passes:\nmvn clean verify apache-rat:check clirr:check javadoc:javadoc\n\n- Documented all public constants.\n- Documented IncrementalHash32 class.\n- Added <p> tags to paragraphs.\n- Renamed input variables for consistency across all method.\n- Renamed internal variables in the hash32, 64, 128 methods so the\nsimilarities in the methods are obvious.\n- prefix joavadoc @params and @returns with 'The' consistently\n- Added code examples for the methods that hash primitives for the\nequivalent using a ByteBuffer to encode the bytes.\n- Fix links in the class header.\n- Documented sign extension bugs in hash32 and hash128.\n- Documented hash64 is not from the reference code and does not match\npart of hash128.\n- Documented hash64 as may be released in a future version.\n- Refactored combination of bytes to little endian int/long into\nmethods.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java"
            ],
            "functions": [
                {
                    "function name": "hash32",
                    "function params": [
                        "data1",
                        "data2"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "fmix32",
                    "function params": [
                        "length",
                        "hash"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.fmix32"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data1",
                        "data2",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "hash128",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash128"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "l0",
                        "l1",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "l0"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "getLittleEndianLong",
                    "function params": [
                        "data",
                        "index"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.getLittleEndianLong"
                },
                {
                    "function name": "IncrementalHash32",
                    "function params": [],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.IncrementalHash32"
                },
                {
                    "function name": "fmix64",
                    "function params": [
                        "h"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.fmix64"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "l0",
                        "l1"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "fmix64",
                    "function params": [
                        "hash"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.fmix64"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "IncrementalHash32",
                    "function params": [
                        "hash"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.IncrementalHash32"
                },
                {
                    "function name": "IncrementalHash32",
                    "function params": [
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.IncrementalHash32"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "fmix32",
                    "function params": [
                        "hash"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.fmix32"
                },
                {
                    "function name": "hash128",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash128"
                },
                {
                    "function name": "IncrementalHash32",
                    "function params": [
                        "data",
                        "offset",
                        "length"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.IncrementalHash32"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "l0",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "IncrementalHash32",
                    "function params": [
                        "data",
                        "offset",
                        "length"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.IncrementalHash32"
                },
                {
                    "function name": "IncrementalHash32",
                    "function params": [
                        "b1",
                        "b2",
                        "b3",
                        "b4"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.IncrementalHash32"
                },
                {
                    "function name": "getLittleEndianInt",
                    "function params": [
                        "data",
                        "index"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.getLittleEndianInt"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                }
            ],
            "date": "2019-11-21"
        },
        {
            "commit_id": 1162,
            "hash": "2d744c87c2c498510f84b5a91dc14ec703d7b022",
            "commit_summary": "Rewrite of MurmurHash3Test using random byte data.\n\nMany tests only sparsely check coverage of the processing of byte[]\ndata. The new tests check all lengths of byte[] data that would generate\ntrailing bytes of length 0-15.\n\nChecking of the processing of offset bytes is now performed.\n\nAchieve more coverage of IncrementalHash32 using tests for trailing and\nleading bytes not forming a 4 byte block.\n\nReference data is from the Python mmh3 library (which calls the original\nc++ source code). Code examples demonstrate how to generate test data.\n\nAdds tests to demonstrate known sign extension bugs.",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java"
            ],
            "functions": [
                {
                    "function name": "testHash32LongLongSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32LongLongSeed"
                },
                {
                    "function name": "testHash32LongSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32LongSeed"
                },
                {
                    "function name": "testHash32Long",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32Long"
                },
                {
                    "function name": "for",
                    "function params": [
                        "i"
                    ],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.for"
                },
                {
                    "function name": "testHash64",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash64"
                },
                {
                    "function name": "testHash128",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash128"
                },
                {
                    "function name": "testHash64InNotEqualToHash128",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash64InNotEqualToHash128"
                },
                {
                    "function name": "assertIncrementalHash32",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.assertIncrementalHash32"
                },
                {
                    "function name": "testHash32LongLong",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32LongLong"
                },
                {
                    "function name": "testIncrementalHash32",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testIncrementalHash32"
                },
                {
                    "function name": "testHash128WithOffsetLengthAndSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash128WithOffsetLengthAndSeed"
                },
                {
                    "function name": "testHash32WithLengthAndSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32WithLengthAndSeed"
                },
                {
                    "function name": "negativeBytes",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.negativeBytes"
                },
                {
                    "function name": "testHash32WithOffsetLengthAndSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32WithOffsetLengthAndSeed"
                },
                {
                    "function name": "testHash32",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32"
                },
                {
                    "function name": "testHash32WithLength",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32WithLength"
                },
                {
                    "function name": "testHash64WithPrimitives",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash64WithPrimitives"
                },
                {
                    "function name": "testHash64WithOffsetAndLength",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash64WithOffsetAndLength"
                },
                {
                    "function name": "createLongTestData",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.createLongTestData"
                },
                {
                    "function name": "testHash32With1TrailingSignedByteIsInvalid",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32With1TrailingSignedByteIsInvalid"
                },
                {
                    "function name": "testHash32String",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32String"
                },
                {
                    "function name": "testHash128String",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash128String"
                }
            ],
            "date": "2019-11-21"
        },
        {
            "commit_id": 1163,
            "hash": "1490fbf959fc0e7bc5d8be43250689ebf625942d",
            "commit_summary": "[CODEC-269] Allow repeat calls to IncrementalHash32.end().\n\nRepeat calls with no additional data should create the same hash.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java"
            ],
            "functions": [
                {
                    "function name": "IncrementalHash32",
                    "function params": [],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.IncrementalHash32"
                },
                {
                    "function name": "assertIncrementalHash32",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.assertIncrementalHash32"
                }
            ],
            "date": "2019-11-21"
        },
        {
            "commit_id": 1164,
            "hash": "1645ab953ce98bffaff2424cd0b3d2501e21b04f",
            "commit_summary": "[CODEC-267] Add hash32x86 methods to fix sign extension error.\n\nAdds a new API to preserve behavioural compatibility with the released\nversion:\n\nhash32x86(byte[])\nhash32x86(byte[], int offset, int length, int seed)\nIncrementalHash32x64\n\nThe methods with the sign extension bug have been deprecated.\n\nThe new API methods use zero as the default seed.\n\nmvn clirr:check is OK with adding a new class IncrementalHash32x64 as\nthe parent of IncrementalHash32.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java"
            ],
            "functions": [
                {
                    "function name": "IncrementalHash32",
                    "function params": [
                        "hash",
                        "unprocessedLength",
                        "unprocessed",
                        "totalLen"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.IncrementalHash32"
                },
                {
                    "function name": "IncrementalHash32x86",
                    "function params": [],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.IncrementalHash32x86"
                },
                {
                    "function name": "IncrementalHash32x86",
                    "function params": [
                        "hash",
                        "unprocessedLength",
                        "unprocessed",
                        "totalLen"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.IncrementalHash32x86"
                },
                {
                    "function name": "hash32x86",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32x86"
                },
                {
                    "function name": "hash32x86",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32x86"
                },
                {
                    "function name": "testHash32x86WithTrailingNegativeSignedBytes",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32x86WithTrailingNegativeSignedBytes"
                },
                {
                    "function name": "testhash32x86",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testhash32x86"
                },
                {
                    "function name": "testHash32WithTrailingNegativeSignedBytesIsInvalid",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32WithTrailingNegativeSignedBytesIsInvalid"
                },
                {
                    "function name": "testHash32x86WithOffsetLengthAndSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32x86WithOffsetLengthAndSeed"
                },
                {
                    "function name": "assertIncrementalHash32x86",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.assertIncrementalHash32x86"
                },
                {
                    "function name": "testIncrementalHash32x86",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testIncrementalHash32x86"
                }
            ],
            "date": "2019-11-21"
        },
        {
            "commit_id": 1165,
            "hash": "82b108f3df4b8db2a2ce56afce19a2b0a97c5539",
            "commit_summary": "[CODEC-264] Add hash128x64 methods to fix sign extension error.\n\nAdds a new API to preserve behavioural compatibility with the released\nversion:\n\nhash128x64(byte[])\nhash128x64(byte[], int offset, int length, int seed)\n\nThe methods with the sign extension bug have been deprecated.\n\nThe new API methods use zero as the default seed.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java"
            ],
            "functions": [
                {
                    "function name": "hash128",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash128"
                },
                {
                    "function name": "hash128x64",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash128x64"
                },
                {
                    "function name": "hash128x64",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash128x64"
                },
                {
                    "function name": "hash128x64",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash128x64"
                },
                {
                    "function name": "testHash128x64WithOffsetLengthAndSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash128x64WithOffsetLengthAndSeed"
                },
                {
                    "function name": "testHash128x64",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash128x64"
                }
            ],
            "date": "2019-11-21"
        },
        {
            "commit_id": 1166,
            "hash": "64f1b4d91477670a393fb1afb5169dde97998d84",
            "commit_summary": "Fix javadoc examples.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java"
            ],
            "functions": [],
            "date": "2019-11-21"
        },
        {
            "commit_id": 1167,
            "hash": "486d8a8ae45e9d9e0e44ffb6048e536491c59c1a",
            "commit_summary": "MurmurHash3: Added random block sizes to incremental hash test.",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java"
            ],
            "functions": [
                {
                    "function name": "createRandomBlocks",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.createRandomBlocks"
                },
                {
                    "function name": "testIncrementalHash32",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testIncrementalHash32"
                },
                {
                    "function name": "testIncrementalHash32x86",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testIncrementalHash32x86"
                }
            ],
            "date": "2019-11-21"
        },
        {
            "commit_id": 1168,
            "hash": "ae6c7c436066e70c0f61f7f004ee2823f1c04d4e",
            "commit_summary": "MurmurHash3: Modify tests to call the method described in the javadoc.",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java"
            ],
            "functions": [
                {
                    "function name": "testHash32LongLongSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32LongLongSeed"
                },
                {
                    "function name": "testHash32LongSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32LongSeed"
                },
                {
                    "function name": "testHash32Long",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32Long"
                },
                {
                    "function name": "testHash64WithPrimitives",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash64WithPrimitives"
                },
                {
                    "function name": "testHash32LongLong",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32LongLong"
                }
            ],
            "date": "2019-11-21"
        },
        {
            "commit_id": 1169,
            "hash": "c143ceee9d8af23d3ca6a2746b3115f70e74d241",
            "commit_summary": "Javadoc formatting.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java"
            ],
            "functions": [],
            "date": "2019-11-21"
        },
        {
            "commit_id": 1170,
            "hash": "91cdc1680dd16161406376548d175847132ea3ef",
            "commit_summary": "Close javadoc <pre> and </p> tags.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java"
            ],
            "functions": [],
            "date": "2019-11-21"
        },
        {
            "commit_id": 1171,
            "hash": "48b23313e7c7428fc421942352c8dba4d1e35200",
            "commit_summary": "Fix MurmurHash2 code in-line with MurmurHash3.\n\nThis updates the documentation and code so the two can be compared.\n\nNo binary functionality is changed.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java"
            ],
            "functions": [
                {
                    "function name": "getLittleEndianInt",
                    "function params": [
                        "data",
                        "index"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.getLittleEndianInt"
                },
                {
                    "function name": "getLittleEndianLong",
                    "function params": [
                        "data",
                        "index"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.getLittleEndianLong"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.hash64"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.hash32"
                }
            ],
            "date": "2019-11-21"
        },
        {
            "commit_id": 1172,
            "hash": "a1fb8486705ff6cea89b0670036c0574d407c339",
            "commit_summary": "MurmurHashTest2: Use Assert.equals and conditional Assert.fail.",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java"
            ],
            "functions": [
                {
                    "function name": "testHash32ByteArrayInt",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash32ByteArrayInt"
                },
                {
                    "function name": "testHash32StringIntInt",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash32StringIntInt"
                },
                {
                    "function name": "testHash64StringIntInt",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash64StringIntInt"
                },
                {
                    "function name": "testHash64ByteArrayIntInt",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash64ByteArrayIntInt"
                },
                {
                    "function name": "testHash64String",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash64String"
                },
                {
                    "function name": "testHash32ByteArrayIntInt",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash32ByteArrayIntInt"
                },
                {
                    "function name": "testHash64ByteArrayInt",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash64ByteArrayInt"
                },
                {
                    "function name": "testHash32String",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash32String"
                }
            ],
            "date": "2019-11-21"
        },
        {
            "commit_id": 1173,
            "hash": "03e54974626c4abc6004eeecb5db600222389eb9",
            "commit_summary": "Added @since 1.14 to MurmurHash3 additions.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java"
            ],
            "functions": [],
            "date": "2019-11-21"
        },
        {
            "commit_id": 1174,
            "hash": "31e094ab90d238cfbd98b9ed8c715d997f58123a",
            "commit_summary": "Javadoc clean-up.\n\nRemoved 'offset' from javadoc examples.\nChange 32 bit to 32-bit.\nChange 64 bit to 64-bit.\nChange descriptions to match those in MurmurHash3.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java"
            ],
            "functions": [],
            "date": "2019-11-21"
        },
        {
            "commit_id": 1175,
            "hash": "5204e89987d2cb9de75207226f97452578eb024f",
            "commit_summary": "Moved magic numbers to constants.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java"
            ],
            "functions": [
                {
                    "function name": "hash64",
                    "function params": [
                        "data",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.hash64"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.hash32"
                }
            ],
            "date": "2019-11-21"
        },
        {
            "commit_id": 1176,
            "hash": "1b9889762a86ae50657d5ce0048cbf9c5f62ffa7",
            "commit_summary": "Explicit test for hash128x64 with negative seed.",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java"
            ],
            "functions": [
                {
                    "function name": "testHash128x64WithOffsetLengthAndNegativeSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash128x64WithOffsetLengthAndNegativeSeed"
                },
                {
                    "function name": "testHash128x64WithOffsetLengthAndSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash128x64WithOffsetLengthAndSeed"
                }
            ],
            "date": "2019-11-24"
        },
        {
            "commit_id": 1177,
            "hash": "7b1961506509391ec847bb1dc3783a87f8069057",
            "commit_summary": "[CODEC-270] Add more impossible base32/64 test cases.\n\nThese currently are parsed by the code as valid but should not be.\n\nFixed the BCodec test impossible cases to contain the correct RFC 1522\nheader.",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/java/org/apache/commons/codec/net/BCodecTest.java"
            ],
            "functions": [],
            "date": "2019-11-24"
        },
        {
            "commit_id": 1178,
            "hash": "52396f8136b0328b17afd715b1c3f5a1f7e94608",
            "commit_summary": "[CODEC-270] Fix masked check of the final bits to discard.\n\nThe mask must check all the bits to discard are zero.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "validateCharacter",
                    "function params": [
                        "numBits",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.validateCharacter"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.decode"
                },
                {
                    "function name": "validateCharacter",
                    "function params": [
                        "emptyBitsMask",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.validateCharacter"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "validateCharacter",
                    "function params": [
                        "emptyBitsMask",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.validateCharacter"
                },
                {
                    "function name": "validateCharacter",
                    "function params": [
                        "numBitsToDrop",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.validateCharacter"
                },
                {
                    "function name": "testBase32DecodingOfTrailing35Bits",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32DecodingOfTrailing35Bits"
                },
                {
                    "function name": "testBase32DecodingOfTrailing10Bits",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32DecodingOfTrailing10Bits"
                },
                {
                    "function name": "testBase32DecodingOfTrailing25Bits",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32DecodingOfTrailing25Bits"
                },
                {
                    "function name": "assertBase32DecodingOfTrailingBits",
                    "function params": [
                        "nbits"
                    ],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.assertBase32DecodingOfTrailingBits"
                },
                {
                    "function name": "testBase32DecodingOfTrailing15Bits",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32DecodingOfTrailing15Bits"
                },
                {
                    "function name": "testBase32DecodingOfTrailing20Bits",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32DecodingOfTrailing20Bits"
                },
                {
                    "function name": "testBase32DecodingOfTrailing30Bits",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32DecodingOfTrailing30Bits"
                },
                {
                    "function name": "assertBase64DecodingOfTrailingBits",
                    "function params": [
                        "nbits"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.assertBase64DecodingOfTrailingBits"
                },
                {
                    "function name": "testBase64DecodingOfTrailing18Bits",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testBase64DecodingOfTrailing18Bits"
                },
                {
                    "function name": "testBase64DecodingOfTrailing12Bits",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testBase64DecodingOfTrailing12Bits"
                }
            ],
            "date": "2019-11-25"
        },
        {
            "commit_id": 1179,
            "hash": "242d3fec8cc32e08a01f03b03962161febb06425",
            "commit_summary": "Remove javadoc references to non-visible fields.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                "src/main/java/org/apache/commons/codec/language/Soundex.java",
                "src/main/java/org/apache/commons/codec/net/QCodec.java"
            ],
            "functions": [],
            "date": "2019-11-28"
        },
        {
            "commit_id": 1180,
            "hash": "ff3f026094b8211c4ab372f22b669487d0a619b1",
            "commit_summary": "Fix javadoc errors in test classes.",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/language/Caverphone1Test.java",
                "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java",
                "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java"
            ],
            "functions": [],
            "date": "2019-11-28"
        },
        {
            "commit_id": 1181,
            "hash": "9bd2cda3bcf4cc55ed1396c9c3c6415328c7b32e",
            "commit_summary": "Ignore cobertura instrumentation fields.\n\nThese fields break the test when using:\n\nmvn test cobertura:cobertura",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java"
            ],
            "functions": [
                {
                    "function name": "checkValues",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.checkValues"
                }
            ],
            "date": "2019-11-30"
        },
        {
            "commit_id": 1182,
            "hash": "0956493bcb3fe40ca37d66768ec7817f8a1f410b",
            "commit_summary": "[CODEC-265] BaseNCodec to expand buffer using overflow conscious code.\n\nAdd a test to encode a 1 Gigabyte byte[].\n\nAdded overflow conscious code for buffer expansion.\n\nThis is based on java.util.ArrayList but modified to use a local copy of\nJDK 1.8 Integer.compareUnsigned(int, int).\n\nUnlike the java.util.ArrayList if the minCapcity exceeds the head room\nfor the maximum array size, the capacity returned is the required\nminCapcity and not Integer.MAX_VALUE.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "resizeBuffer",
                    "function params": [
                        "context",
                        "minCapacity"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.resizeBuffer"
                },
                {
                    "function name": "resizeBuffer",
                    "function params": [
                        "context"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.resizeBuffer"
                },
                {
                    "function name": "createPositiveCapacity",
                    "function params": [
                        "minCapacity"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.createPositiveCapacity"
                },
                {
                    "function name": "compareUnsigned",
                    "function params": [
                        "x",
                        "y"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.compareUnsigned"
                },
                {
                    "function name": "ensureBufferSize",
                    "function params": [
                        "size",
                        "context"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize"
                },
                {
                    "function name": "testCodec265",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodec265"
                },
                {
                    "function name": "assumeCanAllocateBufferSize",
                    "function params": [
                        "size"
                    ],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.assumeCanAllocateBufferSize"
                },
                {
                    "function name": "NoOpBaseNCodec",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.NoOpBaseNCodec"
                },
                {
                    "function name": "NoOpBaseNCodec",
                    "function params": [
                        "pArray",
                        "i",
                        "length",
                        "context"
                    ],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.NoOpBaseNCodec"
                },
                {
                    "function name": "testEnsureBufferSize",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.testEnsureBufferSize"
                },
                {
                    "function name": "NoOpBaseNCodec",
                    "function params": [
                        "pArray",
                        "i",
                        "length",
                        "context"
                    ],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.NoOpBaseNCodec"
                },
                {
                    "function name": "getPresumableFreeMemory",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.getPresumableFreeMemory"
                },
                {
                    "function name": "assertEnsureBufferSizeExpandsToMaxBufferSize",
                    "function params": [
                        "exceedMaxBufferSize"
                    ],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.assertEnsureBufferSizeExpandsToMaxBufferSize"
                },
                {
                    "function name": "testEnsureBufferSizeExpandsToMaxBufferSize",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.testEnsureBufferSizeExpandsToMaxBufferSize"
                },
                {
                    "function name": "NoOpBaseNCodec",
                    "function params": [
                        "value"
                    ],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.NoOpBaseNCodec"
                },
                {
                    "function name": "testEnsureBufferSizeExpandsToBeyondMaxBufferSize",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.testEnsureBufferSizeExpandsToBeyondMaxBufferSize"
                },
                {
                    "function name": "testEnsureBufferSizeThrowsOnOverflow",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.testEnsureBufferSizeThrowsOnOverflow"
                }
            ],
            "date": "2019-12-02"
        },
        {
            "commit_id": 1183,
            "hash": "9a84b3a53b37204c6ae9549ba41037c60f15479b",
            "commit_summary": "[CODEC-265] Reinstate Base64 HugeLineSeparator test.\n\nThe fix for better memory allocation in CODEC-265 fixes the encoding\nusing a line separator bigger than the default buffer size.",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [],
            "date": "2019-12-02"
        },
        {
            "commit_id": 1184,
            "hash": "df4a27c9b87d7d2afec56492f96c7e549a32fbf5",
            "commit_summary": "[CODEC-268] Deprecate MurmurHash4.hash64\n\nThis is not part of the MurmurHash3 implementation. It was ported from\nApache Hive. The hash collision properties are unknown for this method.\n\nUpdated the javadoc to make it clear that the method does not return a\nhash that matches either part of the 128-bit hash function.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java"
            ],
            "functions": [],
            "date": "2019-12-03"
        },
        {
            "commit_id": 1185,
            "hash": "6d544a50c9d7d3717bd9f3261db830db76ba2b64",
            "commit_summary": "Remove trailing whitespace",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java"
            ],
            "functions": [
                {
                    "function name": "testCodec265",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodec265"
                }
            ],
            "date": "2019-12-03"
        },
        {
            "commit_id": 1186,
            "hash": "9125e28ceaca3d3adc2a4e9ab5775334af1f25bb",
            "commit_summary": "[CODEC-268] Deprecate the NULL_HASHCODE.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java"
            ],
            "functions": [],
            "date": "2019-12-03"
        },
        {
            "commit_id": 1187,
            "hash": "7ade1367c6856043b2bea455c3dbe96fb78e2813",
            "commit_summary": "[CODEC-268] Deprecate hash methods using String.getBytes()\n\nA character encoding should be used to get the string bytes.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java"
            ],
            "functions": [],
            "date": "2019-12-03"
        },
        {
            "commit_id": 1188,
            "hash": "fc9a12fcca1e80adfe12280a944adcb864ae1f78",
            "commit_summary": "Update hash32 primitive helper methods to refer to hash32x86.\n\nSince the sign extension bug in hash32 is not relevant the javadoc can\npoint to the hash32x86 implementation which does not have the bug.\n\nThe result is the same. The unit tests have been updated to show this.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java"
            ],
            "functions": [
                {
                    "function name": "testHash32LongLongSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32LongLongSeed"
                },
                {
                    "function name": "testHash32LongSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32LongSeed"
                },
                {
                    "function name": "testHash32Long",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32Long"
                },
                {
                    "function name": "testHash32LongLong",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32LongLong"
                }
            ],
            "date": "2019-12-03"
        },
        {
            "commit_id": 1189,
            "hash": "3ab9ce4b76848afd2da7dca3e37c46259dd70866",
            "commit_summary": "Remove extra blank line.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java"
            ],
            "functions": [],
            "date": "2019-12-03"
        },
        {
            "commit_id": 1190,
            "hash": "625cedf140f383f3f5c4f992906a4bb6b809dfd7",
            "commit_summary": "[CODEC-272] Add RandomAccessFile digest methods #31.\n\n- This is a slightly different version from\nhttps://github.com/apache/commons-codec/pull/31/\n- Refactor updateDigest(MessageDigest,RandomAccessFile) into an new\nprivate updateDigest(MessageDigest,FileChannel) as possible public\ncandidate.\n- Do NOT seek to 0 on a RandomAccessFile before calling updateDigest():\nWe do not do this for ByteBuffer input, so do not do it here and be\nconsistent to assume that when the caller says 'digest this' then do it\nfrom where the input stands (like a stream).\n- Add methods in the file to keep methods in alphabetical order.\n- Closes #31.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java"
            ],
            "functions": [
                {
                    "function name": "sha3_224Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha3_224Hex"
                },
                {
                    "function name": "sha3_384Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha3_384Hex"
                },
                {
                    "function name": "sha3_512Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha3_512Hex"
                },
                {
                    "function name": "updateDigest",
                    "function params": [
                        "digest",
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.updateDigest"
                },
                {
                    "function name": "sha3_224Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha3_224Hex"
                },
                {
                    "function name": "digest",
                    "function params": [
                        "messageDigest",
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.digest"
                },
                {
                    "function name": "sha3_256Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha3_256Hex"
                },
                {
                    "function name": "sha3_384Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha3_384Hex"
                },
                {
                    "function name": "sha3_256Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha3_256Hex"
                },
                {
                    "function name": "updateDigest",
                    "function params": [
                        "digest",
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.updateDigest"
                },
                {
                    "function name": "sha3_512Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha3_512Hex"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.setUp"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.tearDown"
                },
                {
                    "function name": "getTestRandomAccessFile",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.getTestRandomAccessFile"
                },
                {
                    "function name": "getTestRandomAccessFile",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.getTestRandomAccessFile"
                },
                {
                    "function name": "testNonBlockingDigestRandomAccessFile",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testNonBlockingDigestRandomAccessFile"
                }
            ],
            "date": "2019-12-04"
        },
        {
            "commit_id": 1191,
            "hash": "a3a4eddd3e6180385ca38efd9ff4965c07995e64",
            "commit_summary": "[CODEC-272] Add RandomAccessFile digest methods #31.\n\n- This is a slightly different version from\nhttps://github.com/apache/commons-codec/pull/31/\n- Refactor updateDigest(MessageDigest,RandomAccessFile) into an new\nprivate updateDigest(MessageDigest,FileChannel) as possible public\ncandidate.\n- Do NOT seek to 0 on a RandomAccessFile before calling updateDigest():\nWe do not do this for ByteBuffer input, so do not do it here and be\nconsistent to assume that when the caller says 'digest this' then do it\nfrom where the input stands (like a stream).\n- Add methods in the file to keep methods in alphabetical order.\n- Closes #31.",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java"
            ],
            "functions": [
                {
                    "function name": "testNonBlockingDigestRandomAccessFile",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testNonBlockingDigestRandomAccessFile"
                }
            ],
            "date": "2019-12-04"
        },
        {
            "commit_id": 1192,
            "hash": "a84f53d38f93504036fed5cf3fd42f57a8637b16",
            "commit_summary": "[CODEC-259] Hex: Only use ByteBuffer.array() if length equals remaining",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Hex.java",
                "src/test/java/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [
                {
                    "function name": "toByteArray",
                    "function params": [
                        "byteBuffer"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.toByteArray"
                },
                {
                    "function name": "testDecodeByteBufferWithLimit",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeByteBufferWithLimit"
                },
                {
                    "function name": "testEncodeHexByteString_ByteBufferWithLimitBoolean_ToLowerCase",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferWithLimitBoolean_ToLowerCase"
                },
                {
                    "function name": "checkDecodeHexByteBufferOddCharacters",
                    "function params": [
                        "data"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.checkDecodeHexByteBufferOddCharacters"
                },
                {
                    "function name": "testEncodeHexByteString_ByteBufferOfZeroesWithLimit",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferOfZeroesWithLimit"
                },
                {
                    "function name": "testDecodeByteBufferWithLimitOddCharacters",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeByteBufferWithLimitOddCharacters"
                },
                {
                    "function name": "testEncodeHex_ByteBufferWithLimit",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHex_ByteBufferWithLimit"
                },
                {
                    "function name": "testDecodeByteBufferOddCharacters",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeByteBufferOddCharacters"
                },
                {
                    "function name": "testEncodeByteBufferAllocatedButEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeByteBufferAllocatedButEmpty"
                },
                {
                    "function name": "testDecodeByteBufferAllocatedButEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeByteBufferAllocatedButEmpty"
                },
                {
                    "function name": "testEncodeHexByteString_ByteBufferWithLimitBoolean_ToUpperCase",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferWithLimitBoolean_ToUpperCase"
                }
            ],
            "date": "2019-12-05"
        },
        {
            "commit_id": 1193,
            "hash": "2311c5e58e6922825d7ecb53ef596b7a8c156bf1",
            "commit_summary": "[CODEC-259] Hex: consume all ByteBuffer.remaining() bytes.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Hex.java",
                "src/test/java/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [
                {
                    "function name": "toByteArray",
                    "function params": [
                        "byteBuffer"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.toByteArray"
                },
                {
                    "function name": "testEncodeHexByteString_ByteBufferBoolean_ToLowerCase",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferBoolean_ToLowerCase"
                },
                {
                    "function name": "testDecodeByteBufferWithLimit",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeByteBufferWithLimit"
                },
                {
                    "function name": "testEncodeHexByteString_ByteBufferWithLimitBoolean_ToLowerCase",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferWithLimitBoolean_ToLowerCase"
                },
                {
                    "function name": "testDecodeByteBufferWithLimitOddCharacters",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeByteBufferWithLimitOddCharacters"
                },
                {
                    "function name": "testEncodeHexByteString_ByteBufferBoolean_ToUpperCase",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferBoolean_ToUpperCase"
                },
                {
                    "function name": "testEncodeHexByteBufferHelloWorldUpperCaseHex",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldUpperCaseHex"
                },
                {
                    "function name": "testEncodeHexByteString_ByteBufferOfZeroesWithLimit",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferOfZeroesWithLimit"
                },
                {
                    "function name": "testEncodeHex_ByteBufferWithLimit",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHex_ByteBufferWithLimit"
                },
                {
                    "function name": "testEncodeHexByteBufferHelloWorldLowerCaseHex",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldLowerCaseHex"
                },
                {
                    "function name": "testDecodeByteBufferOddCharacters",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeByteBufferOddCharacters"
                },
                {
                    "function name": "testEncodeByteBufferAllocatedButEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeByteBufferAllocatedButEmpty"
                },
                {
                    "function name": "testDecodeByteBufferAllocatedButEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeByteBufferAllocatedButEmpty"
                },
                {
                    "function name": "testEncodeHexByteString_ByteBufferWithLimitBoolean_ToUpperCase",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferWithLimitBoolean_ToUpperCase"
                }
            ],
            "date": "2019-12-05"
        },
        {
            "commit_id": 1194,
            "hash": "a9e682daaa528ff66465de557cb70c107a196302",
            "commit_summary": "[CODEC-259] getByteBufferUtf8() method to use allocate(int).\n\nThis allows the AllocateDirectHexTest class to test the methods that\nrequire a ByteBuffer allocated with a UTF-8 string with a direct byte\nbuffer.",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [
                {
                    "function name": "testEncodeHexByteBufferHelloWorldUpperCaseHex",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldUpperCaseHex"
                },
                {
                    "function name": "testEncodeHexByteBufferHelloWorldLowerCaseHex",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldLowerCaseHex"
                },
                {
                    "function name": "testDecodeByteBufferWithLimit",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeByteBufferWithLimit"
                },
                {
                    "function name": "getByteBufferUtf8",
                    "function params": [
                        "string"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.getByteBufferUtf8"
                }
            ],
            "date": "2019-12-05"
        },
        {
            "commit_id": 1195,
            "hash": "6cf348211a23835128465a22c9148138fb99c060",
            "commit_summary": "[CODEC-259] Test StringUtils.getByteBufferUtf8.\n\nThis method was only used in Hex. Its usage has been removed so this\nsimple test ensures the method does what it is documented to do.",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "testByteBufferUtf8",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testByteBufferUtf8"
                }
            ],
            "date": "2019-12-05"
        },
        {
            "commit_id": 1196,
            "hash": "d7a4a0290ecaf06be09c1a0c9c35c0a38994c63d",
            "commit_summary": "[CODEC-261]: Test Hex encode of a read-only ByteBuffer.\n\nThe test passes and this is no longer an issue.",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [
                {
                    "function name": "testEncodeHexReadOnlyByteBuffer",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexReadOnlyByteBuffer"
                }
            ],
            "date": "2019-12-05"
        },
        {
            "commit_id": 1197,
            "hash": "1b7ca880bef55ce8050e0b8dd5ead26f9a41950f",
            "commit_summary": "Javadoc: Replace <code></code> HTML tags with Javadoc {@code} notation.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/CharEncoding.java",
                "src/main/java/org/apache/commons/codec/Charsets.java",
                "src/main/java/org/apache/commons/codec/DecoderException.java",
                "src/main/java/org/apache/commons/codec/Encoder.java",
                "src/main/java/org/apache/commons/codec/EncoderException.java",
                "src/main/java/org/apache/commons/codec/StringEncoderComparator.java",
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                "src/main/java/org/apache/commons/codec/binary/CharSequenceUtils.java",
                "src/main/java/org/apache/commons/codec/binary/Hex.java",
                "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                "src/main/java/org/apache/commons/codec/language/AbstractCaverphone.java",
                "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                "src/main/java/org/apache/commons/codec/language/Soundex.java",
                "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                "src/main/java/org/apache/commons/codec/language/bm/NameType.java",
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                "src/main/java/org/apache/commons/codec/net/BCodec.java",
                "src/main/java/org/apache/commons/codec/net/QCodec.java",
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                "src/main/java/org/apache/commons/codec/net/Utils.java",
                "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java"
            ],
            "functions": [],
            "date": "2019-12-09"
        },
        {
            "commit_id": 1198,
            "hash": "dddc6f10f7bc658d94a03ed3ff0aba0b276084b5",
            "commit_summary": "Remove trailing white spaces on all lines.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/test/java/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [],
            "date": "2019-12-18"
        },
        {
            "commit_id": 1199,
            "hash": "85e68226ed1a382e5a4e757ae944ef63b3e7b787",
            "commit_summary": "Use Objects.requireNonNull() instead of custom check. Minor formatting.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java"
            ],
            "functions": [
                {
                    "function name": "encodeInteger",
                    "function params": [
                        "bigInt"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encodeInteger"
                },
                {
                    "function name": "encodeInteger",
                    "function params": [
                        "bigInteger"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encodeInteger"
                },
                {
                    "function name": "read",
                    "function params": [
                        "offset",
                        "len"
                    ],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecInputStream.read"
                },
                {
                    "function name": "read",
                    "function params": [
                        "offset",
                        "len"
                    ],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecInputStream.read"
                },
                {
                    "function name": "write",
                    "function params": [
                        "offset",
                        "len"
                    ],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "offset",
                        "len"
                    ],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.write"
                },
                {
                    "function name": "RulesApplication",
                    "function params": [
                        "finalRules",
                        "input",
                        "phonemeBuilder",
                        "i",
                        "maxPhonemes"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication"
                },
                {
                    "function name": "applyFinalRules",
                    "function params": [
                        "phonemeBuilder",
                        "finalRules"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules"
                }
            ],
            "date": "2019-12-25"
        },
        {
            "commit_id": 1200,
            "hash": "0ec741ff0b60221c47f047d5ca6266d00fc3050c",
            "commit_summary": "Javadoc.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java"
            ],
            "functions": [],
            "date": "2019-12-26"
        },
        {
            "commit_id": 1201,
            "hash": "17d8f331a0dafd731a99254a2dd2b6aba2fc0317",
            "commit_summary": "Use final.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java"
            ],
            "functions": [
                {
                    "function name": "compareUnsigned",
                    "function params": [
                        "x",
                        "y"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.compareUnsigned"
                },
                {
                    "function name": "compareUnsigned",
                    "function params": [
                        "x",
                        "y"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.compareUnsigned"
                },
                {
                    "function name": "createPositiveCapacity",
                    "function params": [
                        "minCapacity"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.createPositiveCapacity"
                },
                {
                    "function name": "createPositiveCapacity",
                    "function params": [
                        "minCapacity"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.createPositiveCapacity"
                },
                {
                    "function name": "IncrementalHash32",
                    "function params": [
                        "hash",
                        "unprocessedLength",
                        "unprocessed",
                        "totalLen"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.IncrementalHash32"
                },
                {
                    "function name": "IncrementalHash32x86",
                    "function params": [
                        "hash",
                        "unprocessedLength",
                        "unprocessed",
                        "totalLen"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.IncrementalHash32x86"
                },
                {
                    "function name": "IncrementalHash32",
                    "function params": [
                        "hash",
                        "unprocessedLength",
                        "unprocessed",
                        "totalLen"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.IncrementalHash32"
                },
                {
                    "function name": "IncrementalHash32x86",
                    "function params": [
                        "hash",
                        "unprocessedLength",
                        "unprocessed",
                        "totalLen"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.IncrementalHash32x86"
                },
                {
                    "function name": "assertBase32DecodingOfTrailingBits",
                    "function params": [
                        "nbits"
                    ],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.assertBase32DecodingOfTrailingBits"
                },
                {
                    "function name": "assertBase32DecodingOfTrailingBits",
                    "function params": [
                        "nbits"
                    ],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.assertBase32DecodingOfTrailingBits"
                },
                {
                    "function name": "assertBase64DecodingOfTrailingBits",
                    "function params": [
                        "nbits"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.assertBase64DecodingOfTrailingBits"
                },
                {
                    "function name": "testCodec265",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodec265"
                },
                {
                    "function name": "assertBase64DecodingOfTrailingBits",
                    "function params": [
                        "nbits"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.assertBase64DecodingOfTrailingBits"
                },
                {
                    "function name": "assumeCanAllocateBufferSize",
                    "function params": [
                        "size"
                    ],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.assumeCanAllocateBufferSize"
                },
                {
                    "function name": "assumeCanAllocateBufferSize",
                    "function params": [
                        "size"
                    ],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.assumeCanAllocateBufferSize"
                },
                {
                    "function name": "NoOpBaseNCodec",
                    "function params": [
                        "pArray",
                        "i",
                        "length",
                        "context"
                    ],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.NoOpBaseNCodec"
                },
                {
                    "function name": "NoOpBaseNCodec",
                    "function params": [
                        "pArray",
                        "i",
                        "length",
                        "context"
                    ],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.NoOpBaseNCodec"
                },
                {
                    "function name": "NoOpBaseNCodec",
                    "function params": [
                        "pArray",
                        "i",
                        "length",
                        "context"
                    ],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.NoOpBaseNCodec"
                },
                {
                    "function name": "assertEnsureBufferSizeExpandsToMaxBufferSize",
                    "function params": [
                        "exceedMaxBufferSize"
                    ],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.assertEnsureBufferSizeExpandsToMaxBufferSize"
                },
                {
                    "function name": "assertEnsureBufferSizeExpandsToMaxBufferSize",
                    "function params": [
                        "exceedMaxBufferSize"
                    ],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.assertEnsureBufferSizeExpandsToMaxBufferSize"
                },
                {
                    "function name": "NoOpBaseNCodec",
                    "function params": [
                        "value"
                    ],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.NoOpBaseNCodec"
                },
                {
                    "function name": "NoOpBaseNCodec",
                    "function params": [
                        "value"
                    ],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.NoOpBaseNCodec"
                },
                {
                    "function name": "NoOpBaseNCodec",
                    "function params": [
                        "pArray",
                        "i",
                        "length",
                        "context"
                    ],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.NoOpBaseNCodec"
                },
                {
                    "function name": "getByteBufferUtf8",
                    "function params": [
                        "string"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.getByteBufferUtf8"
                },
                {
                    "function name": "getByteBufferUtf8",
                    "function params": [
                        "string"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.getByteBufferUtf8"
                },
                {
                    "function name": "negativeBytes",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.negativeBytes"
                },
                {
                    "function name": "assertIncrementalHash32x86",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.assertIncrementalHash32x86"
                },
                {
                    "function name": "negativeBytes",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.negativeBytes"
                },
                {
                    "function name": "createRandomBlocks",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.createRandomBlocks"
                },
                {
                    "function name": "assertIncrementalHash32x86",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.assertIncrementalHash32x86"
                },
                {
                    "function name": "assertIncrementalHash32",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.assertIncrementalHash32"
                },
                {
                    "function name": "createRandomBlocks",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.createRandomBlocks"
                },
                {
                    "function name": "assertIncrementalHash32",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.assertIncrementalHash32"
                }
            ],
            "date": "2019-12-26"
        },
        {
            "commit_id": 1202,
            "hash": "251d41c38fe917c9ee371f581ecf9ec651c6384e",
            "commit_summary": "Better param name.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [
                {
                    "function name": "updateDigest",
                    "function params": [
                        "digest",
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.updateDigest"
                },
                {
                    "function name": "updateDigest",
                    "function params": [
                        "digest",
                        "inputStream"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.updateDigest"
                },
                {
                    "function name": "updateDigest",
                    "function params": [
                        "digest",
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.updateDigest"
                }
            ],
            "date": "2019-12-26"
        },
        {
            "commit_id": 1203,
            "hash": "6471942097893c67004e4990d77002a9071a7f84",
            "commit_summary": "Sort members.",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java"
            ],
            "functions": [
                {
                    "function name": "data",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.data"
                },
                {
                    "function name": "contains",
                    "function params": [
                        "key"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.contains"
                },
                {
                    "function name": "testDigestInputStream",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestInputStream"
                },
                {
                    "function name": "testGetMessageDigest",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testGetMessageDigest"
                }
            ],
            "date": "2019-12-26"
        },
        {
            "commit_id": 1204,
            "hash": "e772d31a5d0db091bdb68d12b3c2fe79ba979bda",
            "commit_summary": "[CODEC-273] Add Path APIs to org.apache.commons.codec.digest.DigestUtils\nsimilar to File APIs.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java"
            ],
            "functions": [
                {
                    "function name": "digest",
                    "function params": [
                        "messageDigest",
                        "data",
                        "options"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.digest"
                },
                {
                    "function name": "updateDigest",
                    "function params": [
                        "digest",
                        "path",
                        "options"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.updateDigest"
                },
                {
                    "function name": "digestAsHex",
                    "function params": [
                        "data",
                        "options"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.digestAsHex"
                },
                {
                    "function name": "digest",
                    "function params": [
                        "data",
                        "options"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.digest"
                },
                {
                    "function name": "testSha224_FileAsHex",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha224_FileAsHex"
                },
                {
                    "function name": "testSha3_224",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha3_224"
                },
                {
                    "function name": "getTestPath",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.getTestPath"
                },
                {
                    "function name": "testMd2Hex",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"
                },
                {
                    "function name": "testMd5Hex",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"
                },
                {
                    "function name": "testSha3_384",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha3_384"
                },
                {
                    "function name": "testSha3_256",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha3_256"
                },
                {
                    "function name": "testSha224_PathAsHex",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha224_PathAsHex"
                },
                {
                    "function name": "testSha224_StringAsHex",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha224_StringAsHex"
                },
                {
                    "function name": "testSha3_512",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha3_512"
                },
                {
                    "function name": "getTestPath",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.getTestPath"
                },
                {
                    "function name": "testDigestPathOpenOptionsEmpty",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestPathOpenOptionsEmpty"
                },
                {
                    "function name": "testDigestFile",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestFile"
                },
                {
                    "function name": "testDigestPath",
                    "function params": [
                        "options"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestPath"
                },
                {
                    "function name": "testDigestPathStandardOpenOptionRead",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestPathStandardOpenOptionRead"
                }
            ],
            "date": "2019-12-26"
        },
        {
            "commit_id": 1205,
            "hash": "b436b6d95473b468c66d7814db086a4d8a83b154",
            "commit_summary": "Javadoc.\n\n- Remove Java 6 reference.\n- Add Java 13 reference.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java"
            ],
            "functions": [],
            "date": "2019-12-27"
        },
        {
            "commit_id": 1206,
            "hash": "01b69110b181aa30406d18f1a689d07780c3b4a8",
            "commit_summary": "[CODEC-274] Add SHA-512/224 and SHA-512/256 to DigestUtils for Java 9\nand up.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java",
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "sha512_224Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512_224Hex"
                },
                {
                    "function name": "sha512_256",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512_256"
                },
                {
                    "function name": "sha512_224Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512_224Hex"
                },
                {
                    "function name": "sha512_224Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512_224Hex"
                },
                {
                    "function name": "getSha512_256Digest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getSha512_256Digest"
                },
                {
                    "function name": "sha512_256",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512_256"
                },
                {
                    "function name": "sha512_256Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512_256Hex"
                },
                {
                    "function name": "sha512_224",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512_224"
                },
                {
                    "function name": "sha512_256Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512_256Hex"
                },
                {
                    "function name": "sha512_256Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512_256Hex"
                },
                {
                    "function name": "sha512_256",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512_256"
                },
                {
                    "function name": "sha512_224",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512_224"
                },
                {
                    "function name": "sha512_224",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512_224"
                },
                {
                    "function name": "getSha512_224Digest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getSha512_224Digest"
                },
                {
                    "function name": "values",
                    "function params": [],
                    "file name": "MessageDigestAlgorithms.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MessageDigestAlgorithms.values"
                },
                {
                    "function name": "testSha512_224",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha512_224"
                },
                {
                    "function name": "testSha512_256",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha512_256"
                }
            ],
            "date": "2019-12-27"
        },
        {
            "commit_id": 1207,
            "hash": "95212bededf8fbe748d67716928d21c5000982a0",
            "commit_summary": "Improve test coverage.",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "testIsAvailable",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testIsAvailable"
                },
                {
                    "function name": "testMd5Hex",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"
                },
                {
                    "function name": "testSha224_FileAsHex",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha224_FileAsHex"
                },
                {
                    "function name": "testDigestAs",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testDigestAs"
                }
            ],
            "date": "2019-12-27"
        },
        {
            "commit_id": 1208,
            "hash": "be0c8dad01c2c2cc65cf13c0d712e48512133c81",
            "commit_summary": "Sort methods.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "sha512Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512Hex"
                },
                {
                    "function name": "sha512_224Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512_224Hex"
                },
                {
                    "function name": "sha512_256",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512_256"
                },
                {
                    "function name": "sha512_224",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512_224"
                },
                {
                    "function name": "sha512_256Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512_256Hex"
                },
                {
                    "function name": "sha512_224",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512_224"
                },
                {
                    "function name": "sha512",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512"
                },
                {
                    "function name": "sha512_224Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512_224Hex"
                },
                {
                    "function name": "sha512_224Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512_224Hex"
                },
                {
                    "function name": "sha512_256",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512_256"
                },
                {
                    "function name": "sha512_256Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512_256Hex"
                },
                {
                    "function name": "getSha512Digest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getSha512Digest"
                },
                {
                    "function name": "sha512Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512Hex"
                },
                {
                    "function name": "sha512_256",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512_256"
                },
                {
                    "function name": "sha512",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512"
                },
                {
                    "function name": "digestAsHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.digestAsHex"
                },
                {
                    "function name": "sha512Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512Hex"
                },
                {
                    "function name": "digestAsHex",
                    "function params": [
                        "data",
                        "options"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.digestAsHex"
                },
                {
                    "function name": "testIsAvailable",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testIsAvailable"
                },
                {
                    "function name": "testSha384HexInputStream",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha384HexInputStream"
                },
                {
                    "function name": "testSha3_384",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha3_384"
                },
                {
                    "function name": "testSha3_384HexInputStream",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha3_384HexInputStream"
                },
                {
                    "function name": "testSha3_256",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha3_256"
                },
                {
                    "function name": "testSha224_PathAsHex",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha224_PathAsHex"
                },
                {
                    "function name": "testSha3_224",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha3_224"
                },
                {
                    "function name": "testSha3_256HexInputStream",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha3_256HexInputStream"
                },
                {
                    "function name": "testSha224_StringAsHex",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha224_StringAsHex"
                },
                {
                    "function name": "testDigestAs",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testDigestAs"
                },
                {
                    "function name": "testSha3_224HexInputStream",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha3_224HexInputStream"
                },
                {
                    "function name": "testSha256HexInputStream",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha256HexInputStream"
                },
                {
                    "function name": "testSha3_512HexInputStream",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha3_512HexInputStream"
                },
                {
                    "function name": "testSha3_512",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha3_512"
                }
            ],
            "date": "2019-12-27"
        },
        {
            "commit_id": 1209,
            "hash": "3af20694785c9fa9983cba8d3c981f6bf3a2ee5f",
            "commit_summary": "Improve test code coverage.",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "testGetMessageDigest",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testGetMessageDigest"
                },
                {
                    "function name": "testSha224_FileAsHex",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha224_FileAsHex"
                }
            ],
            "date": "2019-12-27"
        },
        {
            "commit_id": 1210,
            "hash": "8df3283fb569acca817e787ec20e4bcfa33b2dae",
            "commit_summary": "Javadoc typos.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java"
            ],
            "functions": [],
            "date": "2019-12-27"
        },
        {
            "commit_id": 1211,
            "hash": "48bc987144a579618a914e853c09616d816dd25d",
            "commit_summary": "Avoid negative length additions to incremental hash.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java"
            ],
            "functions": [
                {
                    "function name": "IncrementalHash32x86",
                    "function params": [
                        "data",
                        "offset",
                        "length"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.IncrementalHash32x86"
                }
            ],
            "date": "2019-12-27"
        },
        {
            "commit_id": 1212,
            "hash": "799159ffa7cc4cdb98a9018c94523bb0bc32a223",
            "commit_summary": "Javadoc.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [],
            "date": "2019-12-27"
        },
        {
            "commit_id": 1213,
            "hash": "1cf4d19069c64d0493f8b92178ffdb728c0c0ac2",
            "commit_summary": "Change AssertionError to IllegalStateException",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java"
            ],
            "functions": [
                {
                    "function name": "IncrementalHash32x86",
                    "function params": [
                        "data",
                        "offset",
                        "length"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.IncrementalHash32x86"
                }
            ],
            "date": "2019-12-28"
        },
        {
            "commit_id": 1214,
            "hash": "4bc2c28a190e7cc774dda60038c74865c9058946",
            "commit_summary": "Standardize on US English spelling.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "testEnsureBufferSize",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.testEnsureBufferSize"
                }
            ],
            "date": "2019-12-27"
        },
        {
            "commit_id": 1215,
            "hash": "e4de423b8a197cf1f178256a2b65b28a6f8fe355",
            "commit_summary": "Javadoc \"homepage\" -> \"home page\"",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java"
            ],
            "functions": [],
            "date": "2019-12-27"
        },
        {
            "commit_id": 1216,
            "hash": "95bc7e1345ead598bbdb757785c0c11077a315f5",
            "commit_summary": "Make the length check overflow safe.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java"
            ],
            "functions": [
                {
                    "function name": "IncrementalHash32x86",
                    "function params": [
                        "data",
                        "offset",
                        "length"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.IncrementalHash32x86"
                }
            ],
            "date": "2019-12-28"
        },
        {
            "commit_id": 1217,
            "hash": "e91852735aae750523ab6e425c3b31e9653d6934",
            "commit_summary": "Added javadoc messages concerning hash64 seed and sign extension. (#34)",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java"
            ],
            "functions": [],
            "date": "2019-12-28"
        },
        {
            "commit_id": 1218,
            "hash": "58870e51143bbeede31bf39715bbaab50c6b5775",
            "commit_summary": "Minor Javadoc tweaks.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java"
            ],
            "functions": [],
            "date": "2019-12-29"
        },
        {
            "commit_id": 1219,
            "hash": "a327e2cda7c0aa08051dec7af006591d5ad79eac",
            "commit_summary": "Fix Javadoc tags.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java"
            ],
            "functions": [],
            "date": "2019-12-29"
        },
        {
            "commit_id": 1220,
            "hash": "ef6023c551fc6144fa1f8ac776236dfd712a7a39",
            "commit_summary": "Fix Checkstyle issues.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java",
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "updateDigest",
                    "function params": [
                        "digest",
                        "path",
                        "options"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.updateDigest"
                },
                {
                    "function name": "updateDigest",
                    "function params": [
                        "digest",
                        "inputStream"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.updateDigest"
                },
                {
                    "function name": "digest",
                    "function params": [
                        "messageDigest",
                        "data",
                        "options"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.digest"
                }
            ],
            "date": "2019-12-29"
        },
        {
            "commit_id": 1221,
            "hash": "f40005ad5a9c892fa8d216b12029a49062224351",
            "commit_summary": "[CODEC-276] Reliance on default encoding in MurmurHash2 and MurmurHash3.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java"
            ],
            "functions": [
                {
                    "function name": "hash32",
                    "function params": [
                        "text"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.hash32"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "text"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.hash64"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "hash128",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash128"
                },
                {
                    "function name": "testHash64WithOffsetAndLength",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash64WithOffsetAndLength"
                },
                {
                    "function name": "testHash64",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash64"
                },
                {
                    "function name": "testHash32String",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32String"
                },
                {
                    "function name": "testHash128String",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash128String"
                }
            ],
            "date": "2019-12-29"
        },
        {
            "commit_id": 1222,
            "hash": "f3fe3afb3f301f236328801bfcd272de57dbccd5",
            "commit_summary": "[CODEC-276] Reliance on default encoding in MurmurHash2 and MurmurHash3.\n\nUpdate Javadoc with fix from Alex Herbert.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java"
            ],
            "functions": [],
            "date": "2019-12-30"
        },
        {
            "commit_id": 1223,
            "hash": "b207c452cd354583fa8c4bf10dfa9e70f24dbe55",
            "commit_summary": "[CODEC-276] Reliance on default encoding in MurmurHash2 and MurmurHash3.\n\nReuse our StringUtils.getBytesUtf8(text).",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java"
            ],
            "functions": [
                {
                    "function name": "hash32",
                    "function params": [
                        "text"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.hash32"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "text"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.hash64"
                }
            ],
            "date": "2019-12-30"
        },
        {
            "commit_id": 1224,
            "hash": "3397682996c8dc618469b4ca910dd130540451e3",
            "commit_summary": "[CODEC-276] Reliance on default encoding in MurmurHash2 and MurmurHash3.\n\nReuse our StringUtils.getBytesUtf8(text).",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java"
            ],
            "functions": [
                {
                    "function name": "hash32",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "hash128",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash128"
                },
                {
                    "function name": "testHash64WithOffsetAndLength",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash64WithOffsetAndLength"
                },
                {
                    "function name": "testHash64",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash64"
                },
                {
                    "function name": "testHash32String",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32String"
                },
                {
                    "function name": "testHash128String",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash128String"
                }
            ],
            "date": "2019-12-30"
        },
        {
            "commit_id": 1225,
            "hash": "6f27ca6680174e91122aa98c188c47407370ca19",
            "commit_summary": "[CODEC-276] Reliance on default encoding in MurmurHash2 and MurmurHash3.\n\nStandardize on US English spelling.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java"
            ],
            "functions": [],
            "date": "2019-12-30"
        },
        {
            "commit_id": 1226,
            "hash": "ae0da813d949a850a5937e73b7f57a673a712040",
            "commit_summary": "[CODEC-277] Don't reload standard Charsets in\norg.apache.commons.codec.Charsets.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/Charsets.java"
            ],
            "functions": [],
            "date": "2019-12-30"
        },
        {
            "commit_id": 1227,
            "hash": "5241656633c0b1f098deea410119a3435f41ea59",
            "commit_summary": "[CODEC-277] Don't reload standard Charsets in\norg.apache.commons.codec.Charsets.\n\nUse Java 7's java.nio.charset.StandardCharsets instead of our Charsets.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Hex.java",
                "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                "src/main/java/org/apache/commons/codec/net/BCodec.java",
                "src/main/java/org/apache/commons/codec/net/QCodec.java",
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/URLCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "getBytesIso8859_1",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.getBytesIso8859_1"
                },
                {
                    "function name": "newStringUsAscii",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.newStringUsAscii"
                },
                {
                    "function name": "newStringUtf16Be",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.newStringUtf16Be"
                },
                {
                    "function name": "newStringIso8859_1",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.newStringIso8859_1"
                },
                {
                    "function name": "newStringUtf16Le",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.newStringUtf16Le"
                },
                {
                    "function name": "newStringUtf16",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.newStringUtf16"
                },
                {
                    "function name": "getBytesUtf16Be",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.getBytesUtf16Be"
                },
                {
                    "function name": "getBytesUsAscii",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.getBytesUsAscii"
                },
                {
                    "function name": "getBytesUtf16",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.getBytesUtf16"
                },
                {
                    "function name": "getBytesUtf8",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.getBytesUtf8"
                },
                {
                    "function name": "newStringUtf8",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.newStringUtf8"
                },
                {
                    "function name": "getByteBufferUtf8",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.getByteBufferUtf8"
                },
                {
                    "function name": "getBytesUtf16Le",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.getBytesUtf16Le"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "key",
                        "salt"
                    ],
                    "file name": "Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Crypt.crypt"
                },
                {
                    "function name": "md5Crypt",
                    "function params": [
                        "keyBytes",
                        "salt",
                        "prefix",
                        "random"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.md5Crypt"
                },
                {
                    "function name": "apr1Crypt",
                    "function params": [
                        "keyBytes",
                        "salt"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.apr1Crypt"
                },
                {
                    "function name": "apr1Crypt",
                    "function params": [
                        "keyBytes"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.apr1Crypt"
                },
                {
                    "function name": "sha2Crypt",
                    "function params": [
                        "keyBytes",
                        "salt",
                        "saltPrefix",
                        "blocksize",
                        "algorithm"
                    ],
                    "file name": "Sha2Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "original",
                        "salt"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.crypt"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "original"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.crypt"
                },
                {
                    "function name": "BCodec",
                    "function params": [],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.BCodec"
                },
                {
                    "function name": "QCodec",
                    "function params": [],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.QCodec"
                },
                {
                    "function name": "QuotedPrintableCodec",
                    "function params": [
                        "strict"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec"
                },
                {
                    "function name": "QuotedPrintableCodec",
                    "function params": [],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec"
                },
                {
                    "function name": "testUtf8",
                    "function params": [],
                    "file name": "CharsetsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharsetsTest.testUtf8"
                },
                {
                    "function name": "testUtf16Le",
                    "function params": [],
                    "file name": "CharsetsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharsetsTest.testUtf16Le"
                },
                {
                    "function name": "testUtf16",
                    "function params": [],
                    "file name": "CharsetsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharsetsTest.testUtf16"
                },
                {
                    "function name": "testIso8859_1",
                    "function params": [],
                    "file name": "CharsetsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharsetsTest.testIso8859_1"
                },
                {
                    "function name": "testUtf16Be",
                    "function params": [],
                    "file name": "CharsetsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharsetsTest.testUtf16Be"
                },
                {
                    "function name": "testUsAscii",
                    "function params": [],
                    "file name": "CharsetsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharsetsTest.testUsAscii"
                },
                {
                    "function name": "utf8",
                    "function params": [
                        "s"
                    ],
                    "file name": "Base64Codec13Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Codec13Test.utf8"
                },
                {
                    "function name": "testGetCharset",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testGetCharset"
                },
                {
                    "function name": "testGetCharsetName",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testGetCharsetName"
                },
                {
                    "function name": "testApr1CryptBytes",
                    "function params": [],
                    "file name": "Apr1CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes"
                },
                {
                    "function name": "testApr1CryptBytesWithThreadLocalRandom",
                    "function params": [],
                    "file name": "Apr1CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytesWithThreadLocalRandom"
                },
                {
                    "function name": "testMd5CryptBytes",
                    "function params": [],
                    "file name": "Md5CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"
                },
                {
                    "function name": "testSha256CryptBytes",
                    "function params": [],
                    "file name": "Sha256CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"
                },
                {
                    "function name": "testSha2CryptRounds",
                    "function params": [],
                    "file name": "Sha256CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"
                },
                {
                    "function name": "testSha2CryptRoundsThreadLocalRandom",
                    "function params": [],
                    "file name": "Sha256CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom"
                },
                {
                    "function name": "testSha2CryptRounds",
                    "function params": [],
                    "file name": "Sha512CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"
                },
                {
                    "function name": "testSha512CryptBytes",
                    "function params": [],
                    "file name": "Sha512CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes"
                },
                {
                    "function name": "testSha2CryptWrongSalt",
                    "function params": [],
                    "file name": "Sha512CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"
                },
                {
                    "function name": "testUnixCryptBytes",
                    "function params": [],
                    "file name": "UnixCryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testEncodeUrlWithNullBitSet",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"
                },
                {
                    "function name": "testEncodeUrlWithNullBitSet",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"
                }
            ],
            "date": "2019-12-30"
        },
        {
            "commit_id": 1228,
            "hash": "84efbacaee58c6232223f6125682de89c09e5ba9",
            "commit_summary": "[CODEC-277] Don't reload standard Charsets in\norg.apache.commons.codec.Charsets.\n\nOops, still need to test Charsets.",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/CharsetsTest.java"
            ],
            "functions": [
                {
                    "function name": "testUtf8",
                    "function params": [],
                    "file name": "CharsetsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharsetsTest.testUtf8"
                },
                {
                    "function name": "testUtf16Le",
                    "function params": [],
                    "file name": "CharsetsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharsetsTest.testUtf16Le"
                },
                {
                    "function name": "testUtf16",
                    "function params": [],
                    "file name": "CharsetsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharsetsTest.testUtf16"
                },
                {
                    "function name": "testIso8859_1",
                    "function params": [],
                    "file name": "CharsetsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharsetsTest.testIso8859_1"
                },
                {
                    "function name": "testUtf16Be",
                    "function params": [],
                    "file name": "CharsetsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharsetsTest.testUtf16Be"
                },
                {
                    "function name": "testUsAscii",
                    "function params": [],
                    "file name": "CharsetsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharsetsTest.testUsAscii"
                }
            ],
            "date": "2019-12-30"
        },
        {
            "commit_id": 1229,
            "hash": "1a30728418f1d015453c0ad6521de56f4728e7bd",
            "commit_summary": "[CODEC-278] Deprecate Charset constants in\norg.apache.commons.codec.Charsets in favor of\njava.nio.charset.StandardCharsets.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/Charsets.java",
                "src/main/java/org/apache/commons/codec/binary/Hex.java",
                "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/test/java/org/apache/commons/codec/CharsetsTest.java"
            ],
            "functions": [],
            "date": "2019-12-30"
        },
        {
            "commit_id": 1230,
            "hash": "a387ac85030cf161b41472212dafc41e85fc393f",
            "commit_summary": "Test incremental hash with huge length array added to unprocessed bytes.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java"
            ],
            "functions": [
                {
                    "function name": "IncrementalHash32x86",
                    "function params": [
                        "data",
                        "offset",
                        "length"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.IncrementalHash32x86"
                },
                {
                    "function name": "testIncrementalHashWithUnprocessedBytesAndHugeLengthArray",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testIncrementalHashWithUnprocessedBytesAndHugeLengthArray"
                }
            ],
            "date": "2019-12-30"
        },
        {
            "commit_id": 1231,
            "hash": "33491ff84299cc1a48031fba066e6e69f21e1861",
            "commit_summary": "Overflow safe position counter in XXHash32.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/XXHash32.java"
            ],
            "functions": [
                {
                    "function name": "getValue",
                    "function params": [],
                    "file name": "XXHash32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.XXHash32.getValue"
                },
                {
                    "function name": "update",
                    "function params": [
                        "b",
                        "off",
                        "len"
                    ],
                    "file name": "XXHash32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.XXHash32.update"
                },
                {
                    "function name": "reset",
                    "function params": [],
                    "file name": "XXHash32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.XXHash32.reset"
                },
                {
                    "function name": "process",
                    "function params": [
                        "b",
                        "offset"
                    ],
                    "file name": "XXHash32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.XXHash32.process"
                }
            ],
            "date": "2019-12-30"
        },
        {
            "commit_id": 1232,
            "hash": "bc82d82d2a70200f5c7a084908f3587fbe8cc204",
            "commit_summary": "Update the method to get the little-endian int.\n\nThe previous version used a generic method for variable length bytes\nalways with a fixed length of 4.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/XXHash32.java"
            ],
            "functions": [
                {
                    "function name": "getInt",
                    "function params": [
                        "buffer",
                        "idx"
                    ],
                    "file name": "XXHash32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.XXHash32.getInt"
                }
            ],
            "date": "2019-12-30"
        },
        {
            "commit_id": 1233,
            "hash": "88e729ecddb4869b61c19f06623d19d347c4e42b",
            "commit_summary": "Test for incremental XXHash32.",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java"
            ],
            "functions": [
                {
                    "function name": "verifyIncrementalChecksum",
                    "function params": [],
                    "file name": "XXHash32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.XXHash32Test.verifyIncrementalChecksum"
                }
            ],
            "date": "2019-12-30"
        },
        {
            "commit_id": 1234,
            "hash": "08bfd445e88464a0d1b3de1f01f0f5903be2118f",
            "commit_summary": "Test XXHash32 with huge length array added to unprocessed bytes.",
            "modified_files": [],
            "functions": [
                {
                    "function name": "testIncrementalHashWithUnprocessedBytesAndHugeLengthArray",
                    "function params": [],
                    "file name": "XXHash32OverflowTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/XXHash32OverflowTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.XXHash32OverflowTest.testIncrementalHashWithUnprocessedBytesAndHugeLengthArray"
                }
            ],
            "date": "2019-12-30"
        },
        {
            "commit_id": 1235,
            "hash": "4c5b1b745dad5176b27ab3f305553a19db535fa0",
            "commit_summary": "Add reference file for XXHash32 using a small number of bytes.\n\nThis hits the edge cases for completing the hash with leftover bytes and\nno processing in the main update method.",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java"
            ],
            "functions": [
                {
                    "function name": "factory",
                    "function params": [],
                    "file name": "XXHash32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.XXHash32Test.factory"
                }
            ],
            "date": "2019-12-30"
        },
        {
            "commit_id": 1236,
            "hash": "5fcf0987924255f93445cbb6b0babad6109b608c",
            "commit_summary": "Some Checkstyle fixes.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/Charsets.java",
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java"
            ],
            "functions": [
                {
                    "function name": "toCharset",
                    "function params": [
                        "charset"
                    ],
                    "file name": "Charsets.java",
                    "file old path": "src/main/java/org/apache/commons/codec/Charsets.java",
                    "file new path": "src/main/java/org/apache/commons/codec/Charsets.java",
                    "full name": "src.main.java.org.apache.commons.codec.Charsets.toCharset"
                },
                {
                    "function name": "toCharset",
                    "function params": [
                        "charset"
                    ],
                    "file name": "Charsets.java",
                    "file old path": "src/main/java/org/apache/commons/codec/Charsets.java",
                    "file new path": "src/main/java/org/apache/commons/codec/Charsets.java",
                    "full name": "src.main.java.org.apache.commons.codec.Charsets.toCharset"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "input",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "input",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.encode"
                },
                {
                    "function name": "Base32InputStream",
                    "function params": [
                        "in",
                        "doEncode",
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base32InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32InputStream.Base32InputStream"
                },
                {
                    "function name": "Base32InputStream",
                    "function params": [
                        "input",
                        "doEncode",
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base32InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32InputStream.Base32InputStream"
                },
                {
                    "function name": "Base32OutputStream",
                    "function params": [
                        "out",
                        "doEncode",
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base32OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream"
                },
                {
                    "function name": "Base32OutputStream",
                    "function params": [
                        "ouput",
                        "doEncode",
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base32OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream"
                },
                {
                    "function name": "BaseNCodecInputStream",
                    "function params": [
                        "input",
                        "baseNCodec",
                        "doEncode"
                    ],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecInputStream.BaseNCodecInputStream"
                },
                {
                    "function name": "BaseNCodecInputStream",
                    "function params": [
                        "in",
                        "baseNCodec",
                        "doEncode"
                    ],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecInputStream.BaseNCodecInputStream"
                },
                {
                    "function name": "BaseNCodecOutputStream",
                    "function params": [
                        "out",
                        "basedCodec",
                        "doEncode"
                    ],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.BaseNCodecOutputStream"
                },
                {
                    "function name": "BaseNCodecOutputStream",
                    "function params": [
                        "output",
                        "basedCodec",
                        "doEncode"
                    ],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.BaseNCodecOutputStream"
                }
            ],
            "date": "2019-12-30"
        },
        {
            "commit_id": 1237,
            "hash": "f5a61f0cd029f18666163f414f848ba0e1b39976",
            "commit_summary": "[CODEC-264]: Ensure hash128 maintains the sign extension bug.\n\nThe hash128(...) method was calling the public hash128x86(...) method\nwith an int seed when it should have called the private hash128x86(...)\nwith a long seed. Thus it did not have the sign extension error. The\ninternal method has been renamed to avoid a name clash with the public\nAPI. The old hash128() behaviour is now restored as the seed is passed\nto the hash method with implicit long conversion.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java"
            ],
            "functions": [
                {
                    "function name": "hash128x64Internal",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash128x64Internal"
                },
                {
                    "function name": "hash128",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash128"
                },
                {
                    "function name": "hash128x64",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash128x64"
                },
                {
                    "function name": "hash128x64",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash128x64"
                },
                {
                    "function name": "testHash128",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash128"
                },
                {
                    "function name": "testHash128WithOffsetLengthAndNegativeSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash128WithOffsetLengthAndNegativeSeed"
                }
            ],
            "date": "2020-01-18"
        },
        {
            "commit_id": 1238,
            "hash": "3c212236e30fce82ed34f1eba0f667054face92b",
            "commit_summary": "[CODEC-280] Added strict decoding property to BaseNCodec. (#35)\n\n* [CODEC-280] Added strict decoding property to BaseNCodec.\r\n\r\nThe default is lenient encoding. Any trailing bits that cannot be\r\ninterpreted as part of the encoding are discarded. Combinations of\r\ntrailing characters that cannot be created by a valid encoding are\r\npartially interpreted.\r\n\r\nIf set to strict encoding the codec will raise an exception when\r\ntrailing bits are present that are not part of a valid encoding.\r\n\r\nAdded tests to show that in lenient mode re-encoding will create a\r\ndifferent byte array.\r\n\r\nIn strict mode the re-encoding should create the same byte array as the\r\noriginal (with appropriate pad characters on the input).\r\n\r\n* [CODEC-280] Added strict decoding property to BCodec.\r\n\r\n* [CODEC-280] Removed unused import @Ignore from BCodecTest",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/main/java/org/apache/commons/codec/net/BCodec.java",
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/java/org/apache/commons/codec/net/BCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "decode",
                    "function params": [
                        "input",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.decode"
                },
                {
                    "function name": "validateTrailingCharacters",
                    "function params": [],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.validateTrailingCharacters"
                },
                {
                    "function name": "validateCharacter",
                    "function params": [
                        "emptyBitsMask",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.validateCharacter"
                },
                {
                    "function name": "validateTrailingCharacter",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.validateTrailingCharacter"
                },
                {
                    "function name": "validateCharacter",
                    "function params": [
                        "emptyBitsMask",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.validateCharacter"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "isStrictDecoding",
                    "function params": [],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.isStrictDecoding"
                },
                {
                    "function name": "setStrictDecoding",
                    "function params": [
                        "strictDecoding"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.setStrictDecoding"
                },
                {
                    "function name": "doDecoding",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.doDecoding"
                },
                {
                    "function name": "setStrictDecoding",
                    "function params": [
                        "strictDecoding"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.setStrictDecoding"
                },
                {
                    "function name": "isStrictDecoding",
                    "function params": [],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.isStrictDecoding"
                },
                {
                    "function name": "testImpossibleCases",
                    "function params": [
                        "codec",
                        "impossible_cases"
                    ],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testImpossibleCases"
                },
                {
                    "function name": "testBase32DecodingOfTrailing5Bits",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32DecodingOfTrailing5Bits"
                },
                {
                    "function name": "assertBase32DecodingOfTrailingBits",
                    "function params": [
                        "nbits"
                    ],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.assertBase32DecodingOfTrailingBits"
                },
                {
                    "function name": "testBase64DecodingOfTrailing6Bits",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testBase64DecodingOfTrailing6Bits"
                },
                {
                    "function name": "assertBase64DecodingOfTrailingBits",
                    "function params": [
                        "nbits"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.assertBase64DecodingOfTrailingBits"
                },
                {
                    "function name": "testBase64ImpossibleSamples",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testBase64ImpossibleSamples"
                },
                {
                    "function name": "testBase64ImpossibleSamples",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testBase64ImpossibleSamples"
                }
            ],
            "date": "2020-01-28"
        },
        {
            "commit_id": 1239,
            "hash": "126f90424cc8f62d928686ec20c6c8bd944b527b",
            "commit_summary": "Remove unused imports. Use final.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/main/java/org/apache/commons/codec/binary/Hex.java",
                "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                "src/test/java/org/apache/commons/codec/digest/XXHash32OverflowTest.java"
            ],
            "functions": [
                {
                    "function name": "testIncrementalHashWithUnprocessedBytesAndHugeLengthArray",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testIncrementalHashWithUnprocessedBytesAndHugeLengthArray"
                },
                {
                    "function name": "testIncrementalHashWithUnprocessedBytesAndHugeLengthArray",
                    "function params": [],
                    "file name": "XXHash32OverflowTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/XXHash32OverflowTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/XXHash32OverflowTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.XXHash32OverflowTest.testIncrementalHashWithUnprocessedBytesAndHugeLengthArray"
                }
            ],
            "date": "2020-01-28"
        },
        {
            "commit_id": 1240,
            "hash": "bf561f5153183bef3946fdc4c9e68aae3dda260f",
            "commit_summary": "Fix typo in Hex.toByteArray javadoc.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Hex.java"
            ],
            "functions": [],
            "date": "2020-03-17"
        },
        {
            "commit_id": 1241,
            "hash": "9efd4f252443a6b7efe8b2a06b29b0bb8710330d",
            "commit_summary": "Standardize on American English spelling of 'behavior'.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                "src/main/java/org/apache/commons/codec/net/BCodec.java",
                "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java"
            ],
            "functions": [
                {
                    "function name": "hash128",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash128"
                }
            ],
            "date": "2020-03-30"
        },
        {
            "commit_id": 1242,
            "hash": "a6b2f1329beec2cd9abb86dc2ea80300e9ccb77b",
            "commit_summary": "CODEC-289: Add strict decoding to BaseNCodecInput/OutputStream",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "isStrictDecoding",
                    "function params": [],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecInputStream.isStrictDecoding"
                },
                {
                    "function name": "setStrictDecoding",
                    "function params": [
                        "strictDecoding"
                    ],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecInputStream.setStrictDecoding"
                },
                {
                    "function name": "isStrictDecoding",
                    "function params": [],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.isStrictDecoding"
                },
                {
                    "function name": "setStrictDecoding",
                    "function params": [
                        "strictDecoding"
                    ],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.setStrictDecoding"
                },
                {
                    "function name": "testStrictDecoding",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testStrictDecoding"
                },
                {
                    "function name": "testStrictDecoding",
                    "function params": [],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testStrictDecoding"
                },
                {
                    "function name": "testStrictDecoding",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testStrictDecoding"
                },
                {
                    "function name": "testStrictDecoding",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testStrictDecoding"
                }
            ],
            "date": "2020-05-09"
        },
        {
            "commit_id": 1243,
            "hash": "9f1b740a17f0d54366edfb45df0636b8e302666a",
            "commit_summary": "Reimplement the new-in-1.15 BaseNCodec's and friends' strict vs. lenient\ndecoding as final instance variables and with an enum instead of a\nboolean. Introduce the last amount of new constructors.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                "src/main/java/org/apache/commons/codec/net/BCodec.java",
                "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/java/org/apache/commons/codec/net/BCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "Base32",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "useHex",
                        "padding"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.Base32"
                },
                {
                    "function name": "Base32",
                    "function params": [
                        "useHex",
                        "pad"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.Base32"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "input",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.encode"
                },
                {
                    "function name": "Base32",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "useHex",
                        "pad"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.Base32"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "input",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.decode"
                },
                {
                    "function name": "Base32",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "useHex",
                        "padding",
                        "decodingPolicy"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.Base32"
                },
                {
                    "function name": "Base32",
                    "function params": [
                        "useHex",
                        "padding"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.Base32"
                },
                {
                    "function name": "Base32InputStream",
                    "function params": [
                        "input",
                        "doEncode",
                        "lineLength",
                        "lineSeparator",
                        "decodingPolicy"
                    ],
                    "file name": "Base32InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32InputStream.Base32InputStream"
                },
                {
                    "function name": "Base32OutputStream",
                    "function params": [
                        "ouput",
                        "doEncode",
                        "lineLength",
                        "lineSeparator",
                        "decodingPolicy"
                    ],
                    "file name": "Base32OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encode"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "urlSafe",
                        "decodingPolicy"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "urlSafe"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "Base64InputStream",
                    "function params": [
                        "in",
                        "doEncode",
                        "lineLength",
                        "lineSeparator",
                        "decodingPolicy"
                    ],
                    "file name": "Base64InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64InputStream.Base64InputStream"
                },
                {
                    "function name": "Base64OutputStream",
                    "function params": [
                        "out",
                        "doEncode",
                        "lineLength",
                        "lineSeparator",
                        "decodingPolicy"
                    ],
                    "file name": "Base64OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream"
                },
                {
                    "function name": "getCodecPolicy",
                    "function params": [],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.getCodecPolicy"
                },
                {
                    "function name": "getChunkSeparator",
                    "function params": [],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.getChunkSeparator"
                },
                {
                    "function name": "BaseNCodec",
                    "function params": [
                        "unencodedBlockSize",
                        "encodedBlockSize",
                        "lineLength",
                        "chunkSeparatorLength",
                        "pad"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.BaseNCodec"
                },
                {
                    "function name": "BaseNCodec",
                    "function params": [
                        "unencodedBlockSize",
                        "encodedBlockSize",
                        "lineLength",
                        "chunkSeparatorLength",
                        "pad",
                        "decodingPolicy"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.BaseNCodec"
                },
                {
                    "function name": "isStrictDecoding",
                    "function params": [],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.isStrictDecoding"
                },
                {
                    "function name": "doDecoding",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.doDecoding"
                },
                {
                    "function name": "isStrictDecoding",
                    "function params": [],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.isStrictDecoding"
                },
                {
                    "function name": "BCodec",
                    "function params": [
                        "charset"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.BCodec"
                },
                {
                    "function name": "BCodec",
                    "function params": [
                        "charset",
                        "decodingPolicy"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.BCodec"
                },
                {
                    "function name": "testStrictDecoding",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testStrictDecoding"
                },
                {
                    "function name": "testStrictDecoding",
                    "function params": [],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testStrictDecoding"
                },
                {
                    "function name": "testBase32OutputStreamByteByByte",
                    "function params": [],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"
                },
                {
                    "function name": "testBase32OutputStreamByChunk",
                    "function params": [],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"
                },
                {
                    "function name": "testBase32EmptyOutputStream",
                    "function params": [
                        "chunkSize"
                    ],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStream"
                },
                {
                    "function name": "testBase32ImpossibleSamples",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32ImpossibleSamples"
                },
                {
                    "function name": "testBase32ImpossibleChunked",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32ImpossibleChunked"
                },
                {
                    "function name": "testImpossibleCases",
                    "function params": [
                        "codec",
                        "impossible_cases"
                    ],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testImpossibleCases"
                },
                {
                    "function name": "assertBase32DecodingOfTrailingBits",
                    "function params": [
                        "nbits"
                    ],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.assertBase32DecodingOfTrailingBits"
                },
                {
                    "function name": "testBase32HexImpossibleSamples",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32HexImpossibleSamples"
                },
                {
                    "function name": "testStrictDecoding",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testStrictDecoding"
                },
                {
                    "function name": "testBase64EmptyOutputStream",
                    "function params": [
                        "chunkSize"
                    ],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStream"
                },
                {
                    "function name": "testBase64OutputStreamByteByByte",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"
                },
                {
                    "function name": "testBase64OutputStreamByChunk",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"
                },
                {
                    "function name": "testStrictDecoding",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testStrictDecoding"
                },
                {
                    "function name": "assertBase64DecodingOfTrailingBits",
                    "function params": [
                        "nbits"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.assertBase64DecodingOfTrailingBits"
                },
                {
                    "function name": "testBase64ImpossibleSamples",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testBase64ImpossibleSamples"
                },
                {
                    "function name": "testBase64ImpossibleSamplesStrict",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testBase64ImpossibleSamplesStrict"
                },
                {
                    "function name": "testBase64ImpossibleSamplesLenient",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testBase64ImpossibleSamplesLenient"
                },
                {
                    "function name": "testBase64ImpossibleSamplesDefault",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testBase64ImpossibleSamplesDefault"
                }
            ],
            "date": "2020-05-17"
        },
        {
            "commit_id": 1244,
            "hash": "e09b236f8850133dd9687d4a0e345e2ffbf79cd1",
            "commit_summary": "Sort methods in AB order.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                "src/main/java/org/apache/commons/codec/binary/Hex.java",
                "src/main/java/org/apache/commons/codec/binary/StringUtils.java"
            ],
            "functions": [
                {
                    "function name": "validateTrailingCharacters",
                    "function params": [],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.validateTrailingCharacters"
                },
                {
                    "function name": "Base32",
                    "function params": [
                        "useHex"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.Base32"
                },
                {
                    "function name": "Base32",
                    "function params": [
                        "pad"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.Base32"
                },
                {
                    "function name": "Base32",
                    "function params": [
                        "useHex",
                        "padding"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.Base32"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "urlSafe",
                        "decodingPolicy"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "urlSafe"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "encodeBase64String",
                    "function params": [
                        "binaryData"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encodeBase64String"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "encodeBase64",
                    "function params": [
                        "binaryData",
                        "isChunked",
                        "urlSafe"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encodeBase64"
                },
                {
                    "function name": "encodeBase64URLSafe",
                    "function params": [
                        "binaryData"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encodeBase64URLSafe"
                },
                {
                    "function name": "isUrlSafe",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.isUrlSafe"
                },
                {
                    "function name": "decodeBase64",
                    "function params": [
                        "base64String"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.decodeBase64"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "urlSafe"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "validateTrailingCharacter",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.validateTrailingCharacter"
                },
                {
                    "function name": "encodeBase64Chunked",
                    "function params": [
                        "binaryData"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encodeBase64Chunked"
                },
                {
                    "function name": "encodeBase64URLSafeString",
                    "function params": [
                        "binaryData"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString"
                },
                {
                    "function name": "encodeBase64",
                    "function params": [
                        "binaryData"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encodeBase64"
                },
                {
                    "function name": "encodeInteger",
                    "function params": [
                        "bigInteger"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encodeInteger"
                },
                {
                    "function name": "decodeInteger",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.decodeInteger"
                },
                {
                    "function name": "toIntegerBytes",
                    "function params": [
                        "bigInt"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.toIntegerBytes"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encode"
                },
                {
                    "function name": "Base64",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "decodeBase64",
                    "function params": [
                        "base64Data"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.decodeBase64"
                },
                {
                    "function name": "encodeBase64",
                    "function params": [
                        "binaryData",
                        "isChunked",
                        "urlSafe",
                        "maxResultSize"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encodeBase64"
                },
                {
                    "function name": "encodeBase64",
                    "function params": [
                        "binaryData",
                        "isChunked"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encodeBase64"
                },
                {
                    "function name": "isBase64",
                    "function params": [
                        "base64"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.isBase64"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.decode"
                },
                {
                    "function name": "isWhiteSpace",
                    "function params": [
                        "byteToCheck"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace"
                },
                {
                    "function name": "encodeAsString",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.encodeAsString"
                },
                {
                    "function name": "getEncodedLength",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.getEncodedLength"
                },
                {
                    "function name": "getDefaultBufferSize",
                    "function params": [],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.getDefaultBufferSize"
                },
                {
                    "function name": "resizeBuffer",
                    "function params": [
                        "context",
                        "minCapacity"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.resizeBuffer"
                },
                {
                    "function name": "getCodecPolicy",
                    "function params": [],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.getCodecPolicy"
                },
                {
                    "function name": "compareUnsigned",
                    "function params": [
                        "x",
                        "y"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.compareUnsigned"
                },
                {
                    "function name": "hasData",
                    "function params": [
                        "context"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.hasData"
                },
                {
                    "function name": "createPositiveCapacity",
                    "function params": [
                        "minCapacity"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.createPositiveCapacity"
                },
                {
                    "function name": "readResults",
                    "function params": [
                        "b",
                        "bPos",
                        "bAvail",
                        "context"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.readResults"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.encode"
                },
                {
                    "function name": "ensureBufferSize",
                    "function params": [
                        "size",
                        "context"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize"
                },
                {
                    "function name": "containsAlphabetOrPad",
                    "function params": [
                        "arrayOctet"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.containsAlphabetOrPad"
                },
                {
                    "function name": "getChunkSeparator",
                    "function params": [],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.getChunkSeparator"
                },
                {
                    "function name": "encodeToString",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.encodeToString"
                },
                {
                    "function name": "isStrictDecoding",
                    "function params": [],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.isStrictDecoding"
                },
                {
                    "function name": "isStrictDecoding",
                    "function params": [],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecInputStream.isStrictDecoding"
                },
                {
                    "function name": "eof",
                    "function params": [],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.eof"
                },
                {
                    "function name": "isStrictDecoding",
                    "function params": [],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.isStrictDecoding"
                },
                {
                    "function name": "write",
                    "function params": [
                        "offset",
                        "len"
                    ],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.write"
                },
                {
                    "function name": "flush",
                    "function params": [],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.flush"
                },
                {
                    "function name": "write",
                    "function params": [
                        "i"
                    ],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.write"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.close"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "raw"
                    ],
                    "file name": "BinaryCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BinaryCodec.encode"
                },
                {
                    "function name": "fromAscii",
                    "function params": [
                        "ascii"
                    ],
                    "file name": "BinaryCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BinaryCodec.fromAscii"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "ascii"
                    ],
                    "file name": "BinaryCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BinaryCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "raw"
                    ],
                    "file name": "BinaryCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BinaryCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "ascii"
                    ],
                    "file name": "BinaryCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BinaryCodec.decode"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "ascii"
                    ],
                    "file name": "BinaryCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BinaryCodec.toByteArray"
                },
                {
                    "function name": "fromAscii",
                    "function params": [
                        "ascii"
                    ],
                    "file name": "BinaryCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BinaryCodec.fromAscii"
                },
                {
                    "function name": "encodeHex",
                    "function params": [
                        "data",
                        "toLowerCase"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHex"
                },
                {
                    "function name": "encodeHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHex"
                },
                {
                    "function name": "decodeHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.decodeHex"
                },
                {
                    "function name": "encodeHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHex"
                },
                {
                    "function name": "getBytes",
                    "function params": [
                        "string",
                        "charset"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.getBytes"
                }
            ],
            "date": "2020-05-17"
        },
        {
            "commit_id": 1245,
            "hash": "b0acbb1eefcab1b0e1ef6ee32169cd6b3c10648b",
            "commit_summary": "Better Javadoc.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java"
            ],
            "functions": [],
            "date": "2020-05-17"
        },
        {
            "commit_id": 1246,
            "hash": "961fecfbfaa17219fd7e0a7e3c67c1ce985d9073",
            "commit_summary": "Better Javadoc.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java"
            ],
            "functions": [],
            "date": "2020-05-17"
        },
        {
            "commit_id": 1247,
            "hash": "bc69ad939243c73d24105e540bde038c0acc3e03",
            "commit_summary": "Formatting.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/cli/Digest.java"
            ],
            "functions": [
                {
                    "function name": "run",
                    "function params": [
                        "prefix",
                        "messageDigest"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.cli.Digest.run"
                }
            ],
            "date": "2020-05-17"
        },
        {
            "commit_id": 1248,
            "hash": "6333e5048aa77fd6472d857717e3be71576ebc20",
            "commit_summary": "Javadoc.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java"
            ],
            "functions": [],
            "date": "2020-05-18"
        },
        {
            "commit_id": 1249,
            "hash": "5b2b313b67cf5b6e79f9600e3f014d95c7f08ae5",
            "commit_summary": "Javadoc: Close HTML tags.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/BCodec.java",
                "src/main/java/org/apache/commons/codec/net/QCodec.java",
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/main/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [],
            "date": "2020-05-18"
        },
        {
            "commit_id": 1250,
            "hash": "38f7f12d20a32279823c0870be6238932e06fdcb",
            "commit_summary": "Reuse constructor.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/BCodec.java"
            ],
            "functions": [
                {
                    "function name": "BCodec",
                    "function params": [
                        "charset"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.BCodec"
                }
            ],
            "date": "2020-05-18"
        },
        {
            "commit_id": 1251,
            "hash": "d9d80a61b3a432592c9413ee2fd8680704cd1eb0",
            "commit_summary": "No need for local var.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java"
            ],
            "functions": [
                {
                    "function name": "encodeText",
                    "function params": [
                        "text",
                        "charset"
                    ],
                    "file name": "RFC1522Codec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.RFC1522Codec.encodeText"
                }
            ],
            "date": "2020-05-18"
        },
        {
            "commit_id": 1252,
            "hash": "00c22c317b085e68e6c29b54730a4238d6bef310",
            "commit_summary": "Move test fixtures to a component specific folder.",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java"
            ],
            "functions": [
                {
                    "function name": "testSha224_FileAsHex",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha224_FileAsHex"
                },
                {
                    "function name": "testSha224_PathAsHex",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha224_PathAsHex"
                },
                {
                    "function name": "testDigestAs",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testDigestAs"
                },
                {
                    "function name": "factory",
                    "function params": [],
                    "file name": "XXHash32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.XXHash32Test.factory"
                }
            ],
            "date": "2020-05-19"
        },
        {
            "commit_id": 1253,
            "hash": "a8f56b472ccfd3c38a56229ce680c5325a9a3d3f",
            "commit_summary": "Fix javadoc typo for CodecPolicy.LENIENT enum value.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/CodecPolicy.java"
            ],
            "functions": [],
            "date": "2020-06-29"
        },
        {
            "commit_id": 1254,
            "hash": "f19ec7891da4f591910e3a28d6ba87c6bbacba38",
            "commit_summary": "Bugfix - buffer must always hold at least 'size' bytes",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java"
            ],
            "functions": [
                {
                    "function name": "ensureBufferSize",
                    "function params": [
                        "size",
                        "context"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize"
                }
            ],
            "date": "2020-06-29"
        },
        {
            "commit_id": 1255,
            "hash": "081756b86e25ec5ea7bc786e88a7d56b76f88ef9",
            "commit_summary": "Add Base16 Input and Output Streams",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Hex.java",
                "src/test/java/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [
                {
                    "function name": "Base16",
                    "function params": [
                        "charset"
                    ],
                    "file name": "Base16.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.Base16"
                },
                {
                    "function name": "isBase16",
                    "function params": [
                        "arrayChars"
                    ],
                    "file name": "Base16.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.isBase16"
                },
                {
                    "function name": "isBase16",
                    "function params": [
                        "arrayChars"
                    ],
                    "file name": "Base16.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.isBase16"
                },
                {
                    "function name": "Base16",
                    "function params": [],
                    "file name": "Base16.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.Base16"
                },
                {
                    "function name": "isBase16",
                    "function params": [
                        "c"
                    ],
                    "file name": "Base16.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.isBase16"
                },
                {
                    "function name": "decodeBase16",
                    "function params": [
                        "base16String"
                    ],
                    "file name": "Base16.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.decodeBase16"
                },
                {
                    "function name": "encodeBase16",
                    "function params": [
                        "binaryData"
                    ],
                    "file name": "Base16.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.encodeBase16"
                },
                {
                    "function name": "isInAlphabet",
                    "function params": [
                        "value"
                    ],
                    "file name": "Base16.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.isInAlphabet"
                },
                {
                    "function name": "decodeBase16",
                    "function params": [
                        "base16Data"
                    ],
                    "file name": "Base16.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.decodeBase16"
                },
                {
                    "function name": "isBase16",
                    "function params": [
                        "base16"
                    ],
                    "file name": "Base16.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.isBase16"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "context"
                    ],
                    "file name": "Base16.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "context"
                    ],
                    "file name": "Base16.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.encode"
                },
                {
                    "function name": "Base16",
                    "function params": [
                        "toLowerCase",
                        "charset"
                    ],
                    "file name": "Base16.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.Base16"
                },
                {
                    "function name": "encodeBase16",
                    "function params": [
                        "binaryData",
                        "toLowerCase",
                        "charset",
                        "maxResultSize"
                    ],
                    "file name": "Base16.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.encodeBase16"
                },
                {
                    "function name": "Base16InputStream",
                    "function params": [
                        "in"
                    ],
                    "file name": "Base16InputStream.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16InputStream.Base16InputStream"
                },
                {
                    "function name": "Base16InputStream",
                    "function params": [
                        "in",
                        "doEncode"
                    ],
                    "file name": "Base16InputStream.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16InputStream.Base16InputStream"
                },
                {
                    "function name": "Base16InputStream",
                    "function params": [
                        "in",
                        "doEncode",
                        "toLowerCase",
                        "charset"
                    ],
                    "file name": "Base16InputStream.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16InputStream.Base16InputStream"
                },
                {
                    "function name": "Base16OutputStream",
                    "function params": [
                        "out"
                    ],
                    "file name": "Base16OutputStream.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16OutputStream.Base16OutputStream"
                },
                {
                    "function name": "Base16OutputStream",
                    "function params": [
                        "out",
                        "doEncode"
                    ],
                    "file name": "Base16OutputStream.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16OutputStream.Base16OutputStream"
                },
                {
                    "function name": "Base16OutputStream",
                    "function params": [
                        "out",
                        "doEncode",
                        "toLowerCase",
                        "charset"
                    ],
                    "file name": "Base16OutputStream.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16OutputStream.Base16OutputStream"
                },
                {
                    "function name": "encodeHex",
                    "function params": [
                        "data",
                        "dataOffset",
                        "dataLen",
                        "toDigits",
                        "out",
                        "outOffset"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHex"
                },
                {
                    "function name": "encodeHex",
                    "function params": [
                        "data",
                        "dataOffset",
                        "dataLen",
                        "toLowerCase",
                        "out",
                        "outOffset"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHex"
                },
                {
                    "function name": "encodeHex",
                    "function params": [
                        "data",
                        "dataOffset",
                        "dataLen",
                        "toLowerCase"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHex"
                },
                {
                    "function name": "decodeHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.decodeHex"
                },
                {
                    "function name": "encodeHex",
                    "function params": [
                        "data",
                        "toDigits"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHex"
                },
                {
                    "function name": "decodeHex",
                    "function params": [
                        "data",
                        "out",
                        "outOffset"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.decodeHex"
                },
                {
                    "function name": "testSkipNone",
                    "function params": [],
                    "file name": "Base16InputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16InputStreamTest.testSkipNone"
                },
                {
                    "function name": "testSkipWrongArgument",
                    "function params": [],
                    "file name": "Base16InputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16InputStreamTest.testSkipWrongArgument"
                },
                {
                    "function name": "testRead0",
                    "function params": [],
                    "file name": "Base16InputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16InputStreamTest.testRead0"
                },
                {
                    "function name": "testMarkSupported",
                    "function params": [],
                    "file name": "Base16InputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16InputStreamTest.testMarkSupported"
                },
                {
                    "function name": "testBase16InputStreamByChunk",
                    "function params": [],
                    "file name": "Base16InputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16InputStreamTest.testBase16InputStreamByChunk"
                },
                {
                    "function name": "testBase16InputStreamByteByByte",
                    "function params": [],
                    "file name": "Base16InputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16InputStreamTest.testBase16InputStreamByteByByte"
                },
                {
                    "function name": "testAvailable",
                    "function params": [],
                    "file name": "Base16InputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16InputStreamTest.testAvailable"
                },
                {
                    "function name": "testSkipBig",
                    "function params": [],
                    "file name": "Base16InputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16InputStreamTest.testSkipBig"
                },
                {
                    "function name": "testReadNull",
                    "function params": [],
                    "file name": "Base16InputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16InputStreamTest.testReadNull"
                },
                {
                    "function name": "testSkipPastEnd",
                    "function params": [],
                    "file name": "Base16InputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16InputStreamTest.testSkipPastEnd"
                },
                {
                    "function name": "testBase16EmptyInputStream",
                    "function params": [],
                    "file name": "Base16InputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16InputStreamTest.testBase16EmptyInputStream"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded"
                    ],
                    "file name": "Base16InputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16InputStreamTest.testByChunk"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded"
                    ],
                    "file name": "Base16InputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16InputStreamTest.testByteByByte"
                },
                {
                    "function name": "testSkipToEnd",
                    "function params": [],
                    "file name": "Base16InputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16InputStreamTest.testSkipToEnd"
                },
                {
                    "function name": "testReadOutOfBounds",
                    "function params": [],
                    "file name": "Base16InputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16InputStreamTest.testReadOutOfBounds"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded"
                    ],
                    "file name": "Base16OutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16OutputStreamTest.testByChunk"
                },
                {
                    "function name": "testBase16EmptyOutputStream",
                    "function params": [],
                    "file name": "Base16OutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16OutputStreamTest.testBase16EmptyOutputStream"
                },
                {
                    "function name": "testBase16OutputStreamByteByByte",
                    "function params": [],
                    "file name": "Base16OutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16OutputStreamTest.testBase16OutputStreamByteByByte"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded"
                    ],
                    "file name": "Base16OutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16OutputStreamTest.testByteByByte"
                },
                {
                    "function name": "testWriteOutOfBounds",
                    "function params": [],
                    "file name": "Base16OutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16OutputStreamTest.testWriteOutOfBounds"
                },
                {
                    "function name": "testBase16OutputStreamByChunk",
                    "function params": [],
                    "file name": "Base16OutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16OutputStreamTest.testBase16OutputStreamByChunk"
                },
                {
                    "function name": "testWriteToNullCoverage",
                    "function params": [],
                    "file name": "Base16OutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16OutputStreamTest.testWriteToNullCoverage"
                },
                {
                    "function name": "testSingletons",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testSingletons"
                },
                {
                    "function name": "testByteToStringVariations",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testByteToStringVariations"
                },
                {
                    "function name": "testConstructor_Charset",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testConstructor_Charset"
                },
                {
                    "function name": "testObjectDecodeWithInvalidParameter",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testObjectDecodeWithInvalidParameter"
                },
                {
                    "function name": "testCodec265_over",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testCodec265_over"
                },
                {
                    "function name": "getRandom",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.getRandom"
                },
                {
                    "function name": "testEmptyBase16",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testEmptyBase16"
                },
                {
                    "function name": "testPairs",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testPairs"
                },
                {
                    "function name": "testBase16AtBufferStart",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testBase16AtBufferStart"
                },
                {
                    "function name": "testObjectEncodeWithValidParameter",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testObjectEncodeWithValidParameter"
                },
                {
                    "function name": "testTriplets",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testTriplets"
                },
                {
                    "function name": "testConstructor_Boolean_Charset",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testConstructor_Boolean_Charset"
                },
                {
                    "function name": "testBase16",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testBase16"
                },
                {
                    "function name": "testNonBase16Test",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testNonBase16Test"
                },
                {
                    "function name": "testEncodeDecodeSmall",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testEncodeDecodeSmall"
                },
                {
                    "function name": "testKnownEncodings",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testKnownEncodings"
                },
                {
                    "function name": "testBase16InBuffer",
                    "function params": [
                        "startPasSize",
                        "endPadSize"
                    ],
                    "file name": "Base16Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testBase16InBuffer"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "data"
                    ],
                    "file name": "Base16Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.toString"
                },
                {
                    "function name": "testBase16AtBufferMiddle",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testBase16AtBufferMiddle"
                },
                {
                    "function name": "testBase16AtBufferEnd",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testBase16AtBufferEnd"
                },
                {
                    "function name": "testEncodeOverMaxSize",
                    "function params": [
                        "maxSize"
                    ],
                    "file name": "Base16Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testEncodeOverMaxSize"
                },
                {
                    "function name": "testStringToByteVariations",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testStringToByteVariations"
                },
                {
                    "function name": "testCodec68",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testCodec68"
                },
                {
                    "function name": "testEncodeOverMaxSize",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testEncodeOverMaxSize"
                },
                {
                    "function name": "testObjectDecodeWithValidParameter",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testObjectDecodeWithValidParameter"
                },
                {
                    "function name": "testDecodeSingleBytes",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testDecodeSingleBytes"
                },
                {
                    "function name": "testConstructors",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testConstructors"
                },
                {
                    "function name": "testEncodeDecodeRandom",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testEncodeDecodeRandom"
                },
                {
                    "function name": "testIsArrayByteBase16",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testIsArrayByteBase16"
                },
                {
                    "function name": "testObjectEncode",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testObjectEncode"
                },
                {
                    "function name": "testObjectEncodeWithInvalidParameter",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testObjectEncodeWithInvalidParameter"
                },
                {
                    "function name": "testIsInAlphabet",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testIsInAlphabet"
                },
                {
                    "function name": "testIsStringBase16",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testIsStringBase16"
                },
                {
                    "function name": "testKnownDecodings",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testKnownDecodings"
                },
                {
                    "function name": "streamToBytes",
                    "function params": [
                        "is"
                    ],
                    "file name": "Base16TestData.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16TestData.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16TestData.streamToBytes"
                },
                {
                    "function name": "randomData",
                    "function params": [
                        "size"
                    ],
                    "file name": "Base16TestData.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16TestData.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16TestData.randomData"
                },
                {
                    "function name": "testDecodeHexCharArrayOutBufferUnderSized",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOutBufferUnderSized"
                },
                {
                    "function name": "testDecodeHexCharArrayOutBufferUnderSizedByOffset",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOutBufferUnderSizedByOffset"
                },
                {
                    "function name": "testEncodeDecodeHexCharArrayRandomToOutput",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeDecodeHexCharArrayRandomToOutput"
                }
            ],
            "date": "2020-06-29"
        },
        {
            "commit_id": 1256,
            "hash": "564c47cbcbe3ade57c106ed83fa83d910d30d408",
            "commit_summary": "Add support for strict decoding - addresses review comments by @garydgregory and @aherbert",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base16.java",
                "src/test/java/org/apache/commons/codec/binary/Base16Test.java"
            ],
            "functions": [
                {
                    "function name": "validateTrailingCharacter",
                    "function params": [],
                    "file name": "Base16.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.validateTrailingCharacter"
                },
                {
                    "function name": "Base16",
                    "function params": [
                        "toLowerCase",
                        "charset",
                        "decodingPolicy"
                    ],
                    "file name": "Base16.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.Base16"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "context"
                    ],
                    "file name": "Base16.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.decode"
                },
                {
                    "function name": "testLenientDecoding",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testLenientDecoding"
                },
                {
                    "function name": "testStrictDecoding",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testStrictDecoding"
                }
            ],
            "date": "2020-06-29"
        },
        {
            "commit_id": 1257,
            "hash": "1b594c035d79b579819753938f5e53d9435b38b8",
            "commit_summary": "Fix typos",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [
                {
                    "function name": "validateTrailingCharacters",
                    "function params": [],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.validateTrailingCharacters"
                },
                {
                    "function name": "validateTrailingCharacter",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.validateTrailingCharacter"
                }
            ],
            "date": "2020-06-29"
        },
        {
            "commit_id": 1258,
            "hash": "019ee2c989d21bb5de8e26a12bbf87f2f870fa7e",
            "commit_summary": "Refactored to use a Lookup Table",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base16.java",
                "src/main/java/org/apache/commons/codec/binary/Base16InputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base16OutputStream.java",
                "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base16Test.java"
            ],
            "functions": [
                {
                    "function name": "Base16",
                    "function params": [
                        "charset"
                    ],
                    "file name": "Base16.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.Base16"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "context"
                    ],
                    "file name": "Base16.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "context"
                    ],
                    "file name": "Base16.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.encode"
                },
                {
                    "function name": "validateTrailingCharacter",
                    "function params": [],
                    "file name": "Base16.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.validateTrailingCharacter"
                },
                {
                    "function name": "Base16",
                    "function params": [
                        "toLowerCase",
                        "charset",
                        "decodingPolicy"
                    ],
                    "file name": "Base16.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.Base16"
                },
                {
                    "function name": "Base16",
                    "function params": [
                        "lowerCase"
                    ],
                    "file name": "Base16.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.Base16"
                },
                {
                    "function name": "Base16",
                    "function params": [
                        "lowerCase",
                        "decodingPolicy"
                    ],
                    "file name": "Base16.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.Base16"
                },
                {
                    "function name": "Base16",
                    "function params": [],
                    "file name": "Base16.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.Base16"
                },
                {
                    "function name": "isInAlphabet",
                    "function params": [
                        "value"
                    ],
                    "file name": "Base16.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.isInAlphabet"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "context"
                    ],
                    "file name": "Base16.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.decode"
                },
                {
                    "function name": "Base16",
                    "function params": [
                        "toLowerCase",
                        "charset"
                    ],
                    "file name": "Base16.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.Base16"
                },
                {
                    "function name": "isInAlphabet",
                    "function params": [
                        "octet"
                    ],
                    "file name": "Base16.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.isInAlphabet"
                },
                {
                    "function name": "Base16InputStream",
                    "function params": [
                        "in",
                        "doEncode",
                        "lowerCase"
                    ],
                    "file name": "Base16InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16InputStream.Base16InputStream"
                },
                {
                    "function name": "Base16InputStream",
                    "function params": [
                        "in",
                        "doEncode"
                    ],
                    "file name": "Base16InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16InputStream.Base16InputStream"
                },
                {
                    "function name": "Base16InputStream",
                    "function params": [
                        "in",
                        "doEncode",
                        "toLowerCase",
                        "charset"
                    ],
                    "file name": "Base16InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16InputStream.Base16InputStream"
                },
                {
                    "function name": "Base16InputStream",
                    "function params": [
                        "in",
                        "doEncode",
                        "lowerCase",
                        "decodingPolicy"
                    ],
                    "file name": "Base16InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16InputStream.Base16InputStream"
                },
                {
                    "function name": "Base16OutputStream",
                    "function params": [
                        "out",
                        "doEncode",
                        "lowerCase"
                    ],
                    "file name": "Base16OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16OutputStream.Base16OutputStream"
                },
                {
                    "function name": "Base16OutputStream",
                    "function params": [
                        "out",
                        "doEncode",
                        "lowerCase",
                        "decodingPolicy"
                    ],
                    "file name": "Base16OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16OutputStream.Base16OutputStream"
                },
                {
                    "function name": "Base16OutputStream",
                    "function params": [
                        "out",
                        "doEncode"
                    ],
                    "file name": "Base16OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16OutputStream.Base16OutputStream"
                },
                {
                    "function name": "Base16OutputStream",
                    "function params": [
                        "out",
                        "doEncode",
                        "toLowerCase",
                        "charset"
                    ],
                    "file name": "Base16OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16OutputStream.Base16OutputStream"
                },
                {
                    "function name": "testBase16InputStreamByChunk",
                    "function params": [],
                    "file name": "Base16InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16InputStreamTest.testBase16InputStreamByChunk"
                },
                {
                    "function name": "testBase16InputStreamByteByByte",
                    "function params": [],
                    "file name": "Base16InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16InputStreamTest.testBase16InputStreamByteByByte"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "lowerCase"
                    ],
                    "file name": "Base16InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16InputStreamTest.testByChunk"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "lowerCase"
                    ],
                    "file name": "Base16InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16InputStreamTest.testByteByByte"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded"
                    ],
                    "file name": "Base16InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16InputStreamTest.testByChunk"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded"
                    ],
                    "file name": "Base16InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16InputStreamTest.testByteByByte"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "lowerCase"
                    ],
                    "file name": "Base16OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16OutputStreamTest.testByChunk"
                },
                {
                    "function name": "testBase16OutputStreamByteByByte",
                    "function params": [],
                    "file name": "Base16OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16OutputStreamTest.testBase16OutputStreamByteByByte"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "lowerCase"
                    ],
                    "file name": "Base16OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16OutputStreamTest.testByteByByte"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded"
                    ],
                    "file name": "Base16OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16OutputStreamTest.testByteByByte"
                },
                {
                    "function name": "testBase16OutputStreamByChunk",
                    "function params": [],
                    "file name": "Base16OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16OutputStreamTest.testBase16OutputStreamByChunk"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded"
                    ],
                    "file name": "Base16OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16OutputStreamTest.testByChunk"
                },
                {
                    "function name": "testSingletons",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testSingletons"
                },
                {
                    "function name": "testByteToStringVariations",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testByteToStringVariations"
                },
                {
                    "function name": "testCodec265_over",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testCodec265_over"
                },
                {
                    "function name": "testEmptyBase16",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testEmptyBase16"
                },
                {
                    "function name": "testLenientDecoding",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testLenientDecoding"
                },
                {
                    "function name": "testObjectEncodeWithValidParameter",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testObjectEncodeWithValidParameter"
                },
                {
                    "function name": "testTriplets",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testTriplets"
                },
                {
                    "function name": "testBase16",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testBase16"
                },
                {
                    "function name": "testNonBase16Test",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testNonBase16Test"
                },
                {
                    "function name": "testEncodeDecodeSmall",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testEncodeDecodeSmall"
                },
                {
                    "function name": "testKnownEncodings",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testKnownEncodings"
                },
                {
                    "function name": "testStrictDecoding",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testStrictDecoding"
                },
                {
                    "function name": "testBase16InBuffer",
                    "function params": [
                        "startPasSize",
                        "endPadSize"
                    ],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testBase16InBuffer"
                },
                {
                    "function name": "testStringToByteVariations",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testStringToByteVariations"
                },
                {
                    "function name": "testCodec68",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testCodec68"
                },
                {
                    "function name": "testObjectDecodeWithValidParameter",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testObjectDecodeWithValidParameter"
                },
                {
                    "function name": "testDecodeSingleBytes",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testDecodeSingleBytes"
                },
                {
                    "function name": "testConstructors",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testConstructors"
                },
                {
                    "function name": "testEncodeDecodeRandom",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testEncodeDecodeRandom"
                },
                {
                    "function name": "testDecodeSingleBytesOptimisation",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testDecodeSingleBytesOptimisation"
                },
                {
                    "function name": "testObjectEncode",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testObjectEncode"
                },
                {
                    "function name": "testConstructor_LowerCase",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testConstructor_LowerCase"
                },
                {
                    "function name": "testIsInAlphabet",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testIsInAlphabet"
                },
                {
                    "function name": "testConstructor_LowerCase_DecodingPolicy",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testConstructor_LowerCase_DecodingPolicy"
                },
                {
                    "function name": "testPairs",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testPairs"
                },
                {
                    "function name": "testKnownDecodings",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testKnownDecodings"
                }
            ],
            "date": "2020-06-29"
        },
        {
            "commit_id": 1259,
            "hash": "97272858836aa93f28f2f675c8c1d124cf753e25",
            "commit_summary": "Throw IllegalArgumentException for characters outside of alphabet",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base16.java",
                "src/test/java/org/apache/commons/codec/binary/Base16Test.java"
            ],
            "functions": [
                {
                    "function name": "decodeOctet",
                    "function params": [
                        "octet"
                    ],
                    "file name": "Base16.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.decodeOctet"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "context"
                    ],
                    "file name": "Base16.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.decode"
                },
                {
                    "function name": "testNonBase16Test",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testNonBase16Test"
                },
                {
                    "function name": "testDecodeSingleBytesOptimisation",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testDecodeSingleBytesOptimisation"
                }
            ],
            "date": "2020-06-29"
        },
        {
            "commit_id": 1260,
            "hash": "77fa03c451ab7ead39bdb9dcc610251dbf2751f6",
            "commit_summary": "Expand on the functionality in the Javadoc",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base16.java"
            ],
            "functions": [],
            "date": "2020-06-29"
        },
        {
            "commit_id": 1261,
            "hash": "196f32e5011d6709e48c5d255bf8079c71b1c0e6",
            "commit_summary": "Abstract common test code into BaseNTestData",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base16TestData.java",
                "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base32TestData.java",
                "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64TestData.java"
            ],
            "functions": [
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "lowerCase"
                    ],
                    "file name": "Base16InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16InputStreamTest.testByChunk"
                },
                {
                    "function name": "testBase16InputStreamByChunk",
                    "function params": [],
                    "file name": "Base16InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16InputStreamTest.testBase16InputStreamByChunk"
                },
                {
                    "function name": "testBase16InputStreamByteByByte",
                    "function params": [],
                    "file name": "Base16InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16InputStreamTest.testBase16InputStreamByteByByte"
                },
                {
                    "function name": "testBase16OutputStreamByteByByte",
                    "function params": [],
                    "file name": "Base16OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16OutputStreamTest.testBase16OutputStreamByteByByte"
                },
                {
                    "function name": "testBase16OutputStreamByChunk",
                    "function params": [],
                    "file name": "Base16OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16OutputStreamTest.testBase16OutputStreamByChunk"
                },
                {
                    "function name": "testConstructor_LowerCase_DecodingPolicy",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testConstructor_LowerCase_DecodingPolicy"
                },
                {
                    "function name": "testConstructor_LowerCase",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testConstructor_LowerCase"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "separator"
                    ],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testByChunk"
                },
                {
                    "function name": "testStrictDecoding",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testStrictDecoding"
                },
                {
                    "function name": "testBase32InputStreamByChunk",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"
                },
                {
                    "function name": "testCodec130",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"
                },
                {
                    "function name": "testBase32InputStreamByteByByte",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"
                },
                {
                    "function name": "testBase32OutputStreamByChunk",
                    "function params": [],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"
                },
                {
                    "function name": "testBase32OutputStreamByteByByte",
                    "function params": [],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"
                },
                {
                    "function name": "testRandomBytesHex",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"
                },
                {
                    "function name": "testRandomBytes",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testRandomBytes"
                },
                {
                    "function name": "testRandomBytesChunked",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"
                },
                {
                    "function name": "testBase64InputStreamByteByByte",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"
                },
                {
                    "function name": "testStrictDecoding",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testStrictDecoding"
                },
                {
                    "function name": "testCodec130",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"
                },
                {
                    "function name": "testCodec98NPE",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"
                },
                {
                    "function name": "testBase64InputStreamByChunk",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "separator"
                    ],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testByChunk"
                },
                {
                    "function name": "testBase64OutputStreamByChunk",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"
                },
                {
                    "function name": "testBase64OutputStreamByteByByte",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"
                },
                {
                    "function name": "testConstructor_Int_ByteArray_Boolean",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"
                },
                {
                    "function name": "testEncodeOverMaxSize",
                    "function params": [
                        "maxSize"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"
                },
                {
                    "function name": "testConstructor_Int_ByteArray_Boolean_UrlSafe",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"
                },
                {
                    "function name": "testChunkedEncodeMultipleOf76",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"
                },
                {
                    "function name": "testUrlSafe",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testUrlSafe"
                },
                {
                    "function name": "bytesContain",
                    "function params": [
                        "bytes",
                        "c"
                    ],
                    "file name": "BaseNTestData.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNTestData.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNTestData.bytesContain"
                },
                {
                    "function name": "streamToBytes",
                    "function params": [
                        "in"
                    ],
                    "file name": "BaseNTestData.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNTestData.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNTestData.streamToBytes"
                },
                {
                    "function name": "streamToBytes",
                    "function params": [
                        "in",
                        "buf"
                    ],
                    "file name": "BaseNTestData.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNTestData.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNTestData.streamToBytes"
                },
                {
                    "function name": "resizeArray",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "BaseNTestData.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNTestData.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNTestData.resizeArray"
                },
                {
                    "function name": "fill",
                    "function params": [
                        "buf",
                        "offset",
                        "in"
                    ],
                    "file name": "BaseNTestData.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNTestData.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNTestData.fill"
                },
                {
                    "function name": "randomData",
                    "function params": [
                        "codec",
                        "size"
                    ],
                    "file name": "BaseNTestData.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNTestData.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNTestData.randomData"
                }
            ],
            "date": "2020-06-29"
        },
        {
            "commit_id": 1262,
            "hash": "0b672eb12df68545c9703e32e9bf74d6993cb464",
            "commit_summary": "Imporve array equality assertions in tests",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java"
            ],
            "functions": [
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "separator"
                    ],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testByteByByte"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "separator"
                    ],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testByChunk"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "separator"
                    ],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testByteByByte"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "separator"
                    ],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testByChunk"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "separator"
                    ],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testByteByByte"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "separator"
                    ],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testByChunk"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "separator"
                    ],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testByChunk"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "separator"
                    ],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testByteByByte"
                }
            ],
            "date": "2020-06-29"
        },
        {
            "commit_id": 1263,
            "hash": "065b10626510274312ff260b4ac1cd9fc964fa24",
            "commit_summary": "Address code-review comments by @aherbert",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base16.java",
                "src/test/java/org/apache/commons/codec/binary/Base16Test.java"
            ],
            "functions": [
                {
                    "function name": "decode",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "context"
                    ],
                    "file name": "Base16.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.decode"
                },
                {
                    "function name": "decodeOctet",
                    "function params": [
                        "octet"
                    ],
                    "file name": "Base16.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.decodeOctet"
                },
                {
                    "function name": "isInAlphabet",
                    "function params": [
                        "octet"
                    ],
                    "file name": "Base16.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.isInAlphabet"
                },
                {
                    "function name": "testByteToStringVariations",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testByteToStringVariations"
                },
                {
                    "function name": "testDecodeSingleBytesOptimisation",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testDecodeSingleBytesOptimisation"
                },
                {
                    "function name": "testStringToByteVariations",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testStringToByteVariations"
                },
                {
                    "function name": "testConstructor_LowerCase",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testConstructor_LowerCase"
                },
                {
                    "function name": "testConstructor_LowerCase_DecodingPolicy",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testConstructor_LowerCase_DecodingPolicy"
                }
            ],
            "date": "2020-06-29"
        },
        {
            "commit_id": 1264,
            "hash": "4024b4039a886ca1de2325ce04638c8e4ee340a5",
            "commit_summary": "Address out-of-bounds for array size with int wrap-around",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base16.java",
                "src/test/java/org/apache/commons/codec/binary/Base16Test.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "context"
                    ],
                    "file name": "Base16.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.encode"
                },
                {
                    "function name": "checkEncodeLengthBounds",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.checkEncodeLengthBounds"
                }
            ],
            "date": "2020-06-29"
        },
        {
            "commit_id": 1265,
            "hash": "a1712d88f39180f5d60f642907843297f4521558",
            "commit_summary": "Add missing cases suggested by @aherbert",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base16Test.java"
            ],
            "functions": [
                {
                    "function name": "testIsInAlphabet",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testIsInAlphabet"
                }
            ],
            "date": "2020-06-29"
        },
        {
            "commit_id": 1266,
            "hash": "068654372f77a595fba00bf3b145902af1a596b4",
            "commit_summary": "Remove test as requested by @aherbert",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base16Test.java"
            ],
            "functions": [],
            "date": "2020-06-29"
        },
        {
            "commit_id": 1267,
            "hash": "427998a47a25c4bbc6098c7418cafffcfed53f53",
            "commit_summary": "Revert changes to Hex classes, will be moved to separate PR",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Hex.java",
                "src/test/java/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [
                {
                    "function name": "encodeHex",
                    "function params": [
                        "data",
                        "dataOffset",
                        "dataLen",
                        "toDigits",
                        "out",
                        "outOffset"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHex"
                },
                {
                    "function name": "encodeHex",
                    "function params": [
                        "data",
                        "dataOffset",
                        "dataLen",
                        "toLowerCase",
                        "out",
                        "outOffset"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHex"
                },
                {
                    "function name": "encodeHex",
                    "function params": [
                        "data",
                        "dataOffset",
                        "dataLen",
                        "toLowerCase"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHex"
                },
                {
                    "function name": "decodeHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.decodeHex"
                },
                {
                    "function name": "encodeHex",
                    "function params": [
                        "data",
                        "toDigits"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHex"
                },
                {
                    "function name": "decodeHex",
                    "function params": [
                        "data",
                        "out",
                        "outOffset"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.decodeHex"
                }
            ],
            "date": "2020-06-29"
        },
        {
            "commit_id": 1268,
            "hash": "467b85c190dcca2b3c2016cda303be0432757b5b",
            "commit_summary": "Remove redundant comments that refer to removed code",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base32TestData.java"
            ],
            "functions": [],
            "date": "2020-06-30"
        },
        {
            "commit_id": 1269,
            "hash": "919e2f3229d04ff8bbb18de3b0cfb70948092e34",
            "commit_summary": "Add javadoc <p> tags",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base16.java"
            ],
            "functions": [],
            "date": "2020-06-30"
        },
        {
            "commit_id": 1270,
            "hash": "2c969a83454605e204e3e6977f563961f227f185",
            "commit_summary": "CODEC-291: Hex Encode/Decode with existing arrays\n\nSquashed commit of the following:\n\ncommit 878d96cec17ce487775306d40171922383d1210a\nAuthor: Adam Retter <adam.retter@googlemail.com>\nDate:   Fri Jul 3 17:53:41 2020 +0200\n\n    Add missing tests\n\ncommit c1bcf38f3cbf03979bc3de09916a53194156da8c\nAuthor: Adam Retter <adam.retter@googlemail.com>\nDate:   Tue Jun 30 19:08:20 2020 +0200\n\n    Make public methods\n\ncommit 45533a1876f3a68f5040e6645d3db2f6c6f6e875\nAuthor: Adam Retter <adam.retter@googlemail.com>\nDate:   Mon Jun 29 22:26:15 2020 +0200\n\n    Add additional encode/decode functions for writing data to existing arrays",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Hex.java",
                "src/test/java/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [
                {
                    "function name": "encodeHex",
                    "function params": [
                        "data",
                        "dataOffset",
                        "dataLen",
                        "toDigits",
                        "out",
                        "outOffset"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHex"
                },
                {
                    "function name": "encodeHex",
                    "function params": [
                        "data",
                        "dataOffset",
                        "dataLen",
                        "toLowerCase",
                        "out",
                        "outOffset"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHex"
                },
                {
                    "function name": "encodeHex",
                    "function params": [
                        "data",
                        "dataOffset",
                        "dataLen",
                        "toLowerCase"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHex"
                },
                {
                    "function name": "decodeHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.decodeHex"
                },
                {
                    "function name": "encodeHex",
                    "function params": [
                        "data",
                        "toDigits"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHex"
                },
                {
                    "function name": "decodeHex",
                    "function params": [
                        "data",
                        "out",
                        "outOffset"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.decodeHex"
                },
                {
                    "function name": "testGetCharset",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testGetCharset"
                },
                {
                    "function name": "testDecodeHexCharArrayOutBufferUnderSizedByOffset",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOutBufferUnderSizedByOffset"
                },
                {
                    "function name": "testEncodeDecodeHexCharArrayRandomToOutput",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeDecodeHexCharArrayRandomToOutput"
                },
                {
                    "function name": "testEncodeHexPartialInputOverbounds",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexPartialInputOverbounds"
                },
                {
                    "function name": "testEncodeHexPartialInput",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexPartialInput"
                },
                {
                    "function name": "testDecodeHexCharArrayOutBufferUnderSized",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOutBufferUnderSized"
                },
                {
                    "function name": "testGetCharsetName",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testGetCharsetName"
                },
                {
                    "function name": "testEncodeHexPartialInputUnderbounds",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexPartialInputUnderbounds"
                },
                {
                    "function name": "getByteBufferUtf8",
                    "function params": [
                        "string"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.getByteBufferUtf8"
                }
            ],
            "date": "2020-07-15"
        },
        {
            "commit_id": 1271,
            "hash": "e249d8da7801f428fe7f5f6de8eae621eebb4e31",
            "commit_summary": "Hex javadoc and exception messages",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Hex.java"
            ],
            "functions": [
                {
                    "function name": "decodeHex",
                    "function params": [
                        "data",
                        "out",
                        "outOffset"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.decodeHex"
                }
            ],
            "date": "2020-07-15"
        },
        {
            "commit_id": 1272,
            "hash": "40e1bfe4c7641ca15903f57353e38955c31d07f6",
            "commit_summary": "Demote new method from protected to private",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Hex.java"
            ],
            "functions": [
                {
                    "function name": "encodeHex",
                    "function params": [
                        "data",
                        "dataOffset",
                        "dataLen",
                        "toDigits",
                        "out",
                        "outOffset"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHex"
                }
            ],
            "date": "2020-07-15"
        },
        {
            "commit_id": 1273,
            "hash": "453407674f8018cd67d7fc5fc359409bd95095a3",
            "commit_summary": "Remove static import",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [
                {
                    "function name": "testGetCharset",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testGetCharset"
                },
                {
                    "function name": "getByteBufferUtf8",
                    "function params": [
                        "string"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.getByteBufferUtf8"
                },
                {
                    "function name": "testEncodeHexPartialInput",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexPartialInput"
                },
                {
                    "function name": "testGetCharsetName",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testGetCharsetName"
                },
                {
                    "function name": "testEncodeHexPartialInputUnderbounds",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexPartialInputUnderbounds"
                },
                {
                    "function name": "testEncodeHexPartialInputOverbounds",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexPartialInputOverbounds"
                }
            ],
            "date": "2020-07-15"
        },
        {
            "commit_id": 1274,
            "hash": "34c9feb3c79e6d4866e30db59b593c9d66229f61",
            "commit_summary": "Use ThreadLocalRandom.current()",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [
                {
                    "function name": "testEncodeDecodeHexCharArrayRandom",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeDecodeHexCharArrayRandom"
                },
                {
                    "function name": "testEncodeDecodeHexCharArrayRandomToOutput",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeDecodeHexCharArrayRandomToOutput"
                }
            ],
            "date": "2020-07-15"
        },
        {
            "commit_id": 1275,
            "hash": "54b109f25c86865a12dc782e468338f1b67ccc38",
            "commit_summary": "Javadoc",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java"
            ],
            "functions": [],
            "date": "2020-07-15"
        },
        {
            "commit_id": 1276,
            "hash": "46bef82372c2d42904cbfd004c5ac6ae3377f720",
            "commit_summary": "[CODEC-292] Misspelling in comments 'They' -> 'The'",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java"
            ],
            "functions": [],
            "date": "2020-08-04"
        },
        {
            "commit_id": 1277,
            "hash": "fab180b25ed319261de0024cd1a736af284d039c",
            "commit_summary": "Add missing @since 1.15 tags",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/main/java/org/apache/commons/codec/binary/Hex.java"
            ],
            "functions": [],
            "date": "2020-08-27"
        },
        {
            "commit_id": 1278,
            "hash": "4c542d7c7a2f9072803d42bcde9748bd36a80ffe",
            "commit_summary": "Add CharSequenceUtilsTest\n\nThe tests are ported from commons lang. The CharSequenceUtils class is\nbased on an old version and some tests fail. The method is package\nprivate and the cases that fail are not exercised in the codec code.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/CharSequenceUtils.java"
            ],
            "functions": [
                {
                    "function name": "TestData",
                    "function params": [
                        "source",
                        "ignoreCase",
                        "toffset",
                        "other",
                        "ooffset",
                        "len",
                        "expected"
                    ],
                    "file name": "CharSequenceUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/CharSequenceUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.CharSequenceUtilsTest.TestData"
                },
                {
                    "function name": "testRegionMatches",
                    "function params": [],
                    "file name": "CharSequenceUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/CharSequenceUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.CharSequenceUtilsTest.testRegionMatches"
                },
                {
                    "function name": "TestData",
                    "function params": [
                        "source",
                        "ignoreCase",
                        "toffset",
                        "other",
                        "ooffset",
                        "len",
                        "throwable"
                    ],
                    "file name": "CharSequenceUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/CharSequenceUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.CharSequenceUtilsTest.TestData"
                },
                {
                    "function name": "RunTest",
                    "function params": [
                        "data",
                        "id"
                    ],
                    "file name": "CharSequenceUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/CharSequenceUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.CharSequenceUtilsTest.RunTest"
                },
                {
                    "function name": "TestData",
                    "function params": [],
                    "file name": "CharSequenceUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/CharSequenceUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.CharSequenceUtilsTest.TestData"
                },
                {
                    "function name": "testConstructor",
                    "function params": [],
                    "file name": "CharSequenceUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/binary/CharSequenceUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.CharSequenceUtilsTest.testConstructor"
                }
            ],
            "date": "2020-08-27"
        },
        {
            "commit_id": 1279,
            "hash": "536587931cb77538709c57455165379a74e2f04f",
            "commit_summary": "Test the codec policy property",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "testLenientDecoding",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testLenientDecoding"
                },
                {
                    "function name": "testStrictDecoding",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testStrictDecoding"
                },
                {
                    "function name": "assertBase32DecodingOfTrailingBits",
                    "function params": [
                        "nbits"
                    ],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.assertBase32DecodingOfTrailingBits"
                },
                {
                    "function name": "assertBase64DecodingOfTrailingBits",
                    "function params": [
                        "nbits"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.assertBase64DecodingOfTrailingBits"
                }
            ],
            "date": "2020-08-27"
        },
        {
            "commit_id": 1280,
            "hash": "e42dfe1ff2f273926fd759abea82b1c7b3021985",
            "commit_summary": "Fix test names",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java"
            ],
            "functions": [
                {
                    "function name": "testBase32AtBufferStart",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32AtBufferStart"
                },
                {
                    "function name": "testBase32InBuffer",
                    "function params": [
                        "startPasSize",
                        "endPadSize"
                    ],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32InBuffer"
                },
                {
                    "function name": "testBase32AtBufferEnd",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32AtBufferEnd"
                },
                {
                    "function name": "testBase32AtBufferMiddle",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32AtBufferMiddle"
                }
            ],
            "date": "2020-08-27"
        },
        {
            "commit_id": 1281,
            "hash": "3535c17eccb2251fc518aa545a800b4922c8dc35",
            "commit_summary": "Test encode of null and empty array with an offset",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "testEmptyBase16",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testEmptyBase16"
                },
                {
                    "function name": "testEmptyBase32",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testEmptyBase32"
                },
                {
                    "function name": "testEmptyBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testEmptyBase64"
                }
            ],
            "date": "2020-08-27"
        },
        {
            "commit_id": 1282,
            "hash": "9ac33a12a500bbc3ea40685aac61c95169443957",
            "commit_summary": "Test all constructors",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java"
            ],
            "functions": [
                {
                    "function name": "testConstructors",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testConstructors"
                }
            ],
            "date": "2020-08-27"
        },
        {
            "commit_id": 1283,
            "hash": "f39003c953df152ff737474d2d2f27b611963a1c",
            "commit_summary": "Test isInAlphabet",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java"
            ],
            "functions": [
                {
                    "function name": "testIsInAlphabet",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testIsInAlphabet"
                },
                {
                    "function name": "testConstructors",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testConstructors"
                }
            ],
            "date": "2020-08-28"
        },
        {
            "commit_id": 1284,
            "hash": "fa0562e71e2661768c4d2e324ff978aa2af1be08",
            "commit_summary": "Test Context toString has debugging info",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "testContextToString",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.testContextToString"
                }
            ],
            "date": "2020-08-28"
        },
        {
            "commit_id": 1285,
            "hash": "d470c55714a656f3562b71c391cc67afa0e02ef0",
            "commit_summary": "Fix checkstyle",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base16.java",
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/main/java/org/apache/commons/codec/binary/CharSequenceUtils.java",
                "src/main/java/org/apache/commons/codec/binary/Hex.java",
                "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java",
                "src/test/java/org/apache/commons/codec/binary/CharSequenceUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "decode",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "context"
                    ],
                    "file name": "Base16.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.decode"
                },
                {
                    "function name": "validateTrailingCharacters",
                    "function params": [],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.validateTrailingCharacters"
                },
                {
                    "function name": "Base32",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "useHex",
                        "padding",
                        "decodingPolicy"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.Base32"
                },
                {
                    "function name": "validateCharacter",
                    "function params": [
                        "emptyBitsMask",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.validateCharacter"
                },
                {
                    "function name": "validateTrailingCharacter",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.validateTrailingCharacter"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "urlSafe",
                        "decodingPolicy"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "validateCharacter",
                    "function params": [
                        "emptyBitsMask",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.validateCharacter"
                },
                {
                    "function name": "BaseNCodec",
                    "function params": [
                        "unencodedBlockSize",
                        "encodedBlockSize",
                        "lineLength",
                        "chunkSeparatorLength",
                        "pad",
                        "decodingPolicy"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.BaseNCodec"
                },
                {
                    "function name": "values",
                    "function params": [],
                    "file name": "MessageDigestAlgorithms.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MessageDigestAlgorithms.values"
                },
                {
                    "function name": "RunTest",
                    "function params": [
                        "data",
                        "id"
                    ],
                    "file name": "CharSequenceUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/CharSequenceUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/CharSequenceUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.CharSequenceUtilsTest.RunTest"
                }
            ],
            "date": "2020-09-01"
        },
        {
            "commit_id": 1286,
            "hash": "738b50de4d72083a93b8ff57c83b112f5ecd882f",
            "commit_summary": "Improve variable name to describe the bug in Codec 101.",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64TestData.java"
            ],
            "functions": [
                {
                    "function name": "testInputStreamReader",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"
                },
                {
                    "function name": "testCodec101",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"
                }
            ],
            "date": "2020-09-04"
        },
        {
            "commit_id": 1287,
            "hash": "e2eb50c655264735ad9ff2f2991b0346afe4a207",
            "commit_summary": "Remove unused import",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base64TestData.java"
            ],
            "functions": [],
            "date": "2020-09-04"
        },
        {
            "commit_id": 1288,
            "hash": "316fb263de53a58deba557971784c702ebce3aee",
            "commit_summary": "Fix checkstyle for test sources",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64TestData.java",
                "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                "src/test/java/org/apache/commons/codec/digest/XXHash32OverflowTest.java",
                "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java"
            ],
            "functions": [
                {
                    "function name": "testCodeInteger3",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodeInteger3"
                },
                {
                    "function name": "testCodeInteger4",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodeInteger4"
                },
                {
                    "function name": "testNonBase64Test",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testNonBase64Test"
                },
                {
                    "function name": "checkOnBytes",
                    "function params": [
                        "bytes",
                        "print"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.checkOnBytes"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [
                        "crcs",
                        "bytes",
                        "size",
                        "out"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                },
                {
                    "function name": "testOOM",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"
                }
            ],
            "date": "2020-09-04"
        },
        {
            "commit_id": 1289,
            "hash": "0a4e73ccf9b471815503a20ebf752354292c7732",
            "commit_summary": "Use uppercase for long literal suffix.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java"
            ],
            "functions": [
                {
                    "function name": "getValue",
                    "function params": [],
                    "file name": "XXHash32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.XXHash32.getValue"
                }
            ],
            "date": "2020-09-20"
        },
        {
            "commit_id": 1290,
            "hash": "c4e813f8d822a09cba989abbd2ddc448a0d9ae86",
            "commit_summary": "Add elements of a collections without a loop.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/Languages.java"
            ],
            "functions": [
                {
                    "function name": "SomeLanguages",
                    "function params": [
                        "other"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.SomeLanguages"
                },
                {
                    "function name": "SomeLanguages",
                    "function params": [
                        "other"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.SomeLanguages"
                }
            ],
            "date": "2020-11-20"
        },
        {
            "commit_id": 1291,
            "hash": "0a4b0c69986d28db87568689bab3a62acb2e7bf5",
            "commit_summary": "Use a switch instead of a cascading if-else.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                "src/main/java/org/apache/commons/codec/language/Nysiis.java"
            ],
            "functions": [
                {
                    "function name": "colognePhonetic",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.colognePhonetic"
                },
                {
                    "function name": "transcodeRemaining",
                    "function params": [
                        "prev",
                        "curr",
                        "next",
                        "aNext"
                    ],
                    "file name": "Nysiis.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Nysiis.transcodeRemaining"
                }
            ],
            "date": "2020-11-20"
        },
        {
            "commit_id": 1292,
            "hash": "7ca5b56e35c8f518f4826cfad55828e20b626679",
            "commit_summary": "Use Arrays.fill().",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java"
            ],
            "functions": [
                {
                    "function name": "crypt",
                    "function params": [
                        "original",
                        "salt"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.crypt"
                },
                {
                    "function name": "testOnes",
                    "function params": [],
                    "file name": "PureJavaCrc32CTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32CTest.testOnes"
                },
                {
                    "function name": "testZeros",
                    "function params": [],
                    "file name": "PureJavaCrc32CTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32CTest.testZeros"
                }
            ],
            "date": "2020-11-20"
        },
        {
            "commit_id": 1293,
            "hash": "2bacd0ba46293bd6c71a09b68e034b303ab5f40d",
            "commit_summary": "Remove redundant calls to super().",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/DecoderException.java",
                "src/main/java/org/apache/commons/codec/EncoderException.java",
                "src/main/java/org/apache/commons/codec/language/AbstractCaverphone.java",
                "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                "src/main/java/org/apache/commons/codec/net/QCodec.java",
                "src/main/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [
                {
                    "function name": "DecoderException",
                    "function params": [],
                    "file name": "DecoderException.java",
                    "file old path": "src/main/java/org/apache/commons/codec/DecoderException.java",
                    "file new path": "src/main/java/org/apache/commons/codec/DecoderException.java",
                    "full name": "src.main.java.org.apache.commons.codec.DecoderException.DecoderException"
                },
                {
                    "function name": "EncoderException",
                    "function params": [],
                    "file name": "EncoderException.java",
                    "file old path": "src/main/java/org/apache/commons/codec/EncoderException.java",
                    "file new path": "src/main/java/org/apache/commons/codec/EncoderException.java",
                    "full name": "src.main.java.org.apache.commons.codec.EncoderException.EncoderException"
                },
                {
                    "function name": "AbstractCaverphone",
                    "function params": [],
                    "file name": "AbstractCaverphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/AbstractCaverphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/AbstractCaverphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.AbstractCaverphone.AbstractCaverphone"
                },
                {
                    "function name": "Caverphone",
                    "function params": [],
                    "file name": "Caverphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Caverphone.Caverphone"
                },
                {
                    "function name": "DoubleMetaphone",
                    "function params": [],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphone"
                },
                {
                    "function name": "Metaphone",
                    "function params": [],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.Metaphone"
                },
                {
                    "function name": "QCodec",
                    "function params": [
                        "charset"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.QCodec"
                },
                {
                    "function name": "URLCodec",
                    "function params": [
                        "charset"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.URLCodec"
                }
            ],
            "date": "2020-11-20"
        },
        {
            "commit_id": 1294,
            "hash": "6b634fe49d399184214ec951537ad0bd1f11e6c4",
            "commit_summary": "No need to initialize to default.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java"
            ],
            "functions": [
                {
                    "function name": "isEncodeEquals",
                    "function params": [
                        "name1",
                        "name2"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals"
                }
            ],
            "date": "2020-11-20"
        },
        {
            "commit_id": 1295,
            "hash": "9d0d9919a8813df04e2cc126086e3f824872420f",
            "commit_summary": "Use final.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                "src/test/java/org/apache/commons/codec/binary/CharSequenceUtilsTest.java",
                "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java"
            ],
            "functions": [
                {
                    "function name": "Base32",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "useHex",
                        "padding",
                        "decodingPolicy"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.Base32"
                },
                {
                    "function name": "Base32",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "useHex",
                        "padding",
                        "decodingPolicy"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.Base32"
                },
                {
                    "function name": "isEncodeEquals",
                    "function params": [
                        "name1",
                        "name2"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals"
                },
                {
                    "function name": "RunTest",
                    "function params": [
                        "data",
                        "id"
                    ],
                    "file name": "CharSequenceUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/CharSequenceUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/CharSequenceUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.CharSequenceUtilsTest.RunTest"
                },
                {
                    "function name": "testDigestPath",
                    "function params": [
                        "options"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestPath"
                },
                {
                    "function name": "testDigestPath",
                    "function params": [
                        "options"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestPath"
                }
            ],
            "date": "2020-11-20"
        },
        {
            "commit_id": 1296,
            "hash": "a7824cdffa9a1d0d0bb150aed3942f87556ba760",
            "commit_summary": "Remove redundant modifiers like private on enum constructors.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java"
            ],
            "functions": [
                {
                    "function name": "HmacAlgorithms",
                    "function params": [
                        "algorithm"
                    ],
                    "file name": "HmacAlgorithms.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacAlgorithms.HmacAlgorithms"
                }
            ],
            "date": "2020-11-21"
        },
        {
            "commit_id": 1297,
            "hash": "8ecd358f0f3d2c743f80a9d6bcc8e490d192b1e4",
            "commit_summary": "Always use blocks.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [
                {
                    "function name": "colognePhonetic",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.colognePhonetic"
                }
            ],
            "date": "2020-11-21"
        },
        {
            "commit_id": 1298,
            "hash": "889d94fab06e26d5023d8709e4a4696a266491bd",
            "commit_summary": "Use for-each.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [
                {
                    "function name": "isBase64",
                    "function params": [
                        "arrayOctet"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.isBase64"
                }
            ],
            "date": "2020-11-21"
        },
        {
            "commit_id": 1299,
            "hash": "457c7928d97fedb7be887333435603e3bb557190",
            "commit_summary": "Use final.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [
                {
                    "function name": "isBase64",
                    "function params": [
                        "arrayOctet"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.isBase64"
                }
            ],
            "date": "2020-11-21"
        },
        {
            "commit_id": 1300,
            "hash": "c43c22baa008349dd08536e7e62752c46de99cff",
            "commit_summary": "Remove trailing spaces",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/Nysiis.java"
            ],
            "functions": [
                {
                    "function name": "transcodeRemaining",
                    "function params": [
                        "prev",
                        "curr",
                        "next",
                        "aNext"
                    ],
                    "file name": "Nysiis.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Nysiis.transcodeRemaining"
                }
            ],
            "date": "2020-11-26"
        },
        {
            "commit_id": 1301,
            "hash": "931476423fb042062d17291cd6155bfb4b68fcaf",
            "commit_summary": "Remove duplicate \"from\"s in javadoc comments",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java"
            ],
            "functions": [],
            "date": "2020-11-26"
        },
        {
            "commit_id": 1302,
            "hash": "62d55fdd9ff6ae56789b38808a60b49aa30a18ce",
            "commit_summary": "CODEC-295 - Minor improvement (#67)",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                "src/main/java/org/apache/commons/codec/binary/Hex.java",
                "src/main/java/org/apache/commons/codec/cli/Digest.java",
                "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java"
            ],
            "functions": [
                {
                    "function name": "toAsciiBytes",
                    "function params": [
                        "raw"
                    ],
                    "file name": "BinaryCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes"
                },
                {
                    "function name": "fromAscii",
                    "function params": [
                        "ascii"
                    ],
                    "file name": "BinaryCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BinaryCodec.fromAscii"
                },
                {
                    "function name": "fromAscii",
                    "function params": [
                        "ascii"
                    ],
                    "file name": "BinaryCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BinaryCodec.fromAscii"
                },
                {
                    "function name": "toAsciiChars",
                    "function params": [
                        "raw"
                    ],
                    "file name": "BinaryCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BinaryCodec.toAsciiChars"
                },
                {
                    "function name": "encodeHex",
                    "function params": [
                        "data",
                        "toDigits"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHex"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "object"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encode"
                },
                {
                    "function name": "Digest",
                    "function params": [
                        "args"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.cli.Digest.Digest"
                },
                {
                    "function name": "md5Crypt",
                    "function params": [
                        "keyBytes",
                        "salt",
                        "prefix",
                        "random"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.md5Crypt"
                },
                {
                    "function name": "IncrementalHash32x86",
                    "function params": [
                        "data",
                        "offset",
                        "length"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.IncrementalHash32x86"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "original",
                        "salt"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.crypt"
                },
                {
                    "function name": "metaphone",
                    "function params": [
                        "txt"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.metaphone"
                },
                {
                    "function name": "Phoneme",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "endsWith",
                    "function params": [
                        "input",
                        "suffix"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.endsWith"
                },
                {
                    "function name": "pattern",
                    "function params": [
                        "regex"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.pattern"
                },
                {
                    "function name": "parseRules",
                    "function params": [
                        "scanner",
                        "location"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.parseRules"
                },
                {
                    "function name": "encodeQuotedPrintable",
                    "function params": [
                        "printable",
                        "bytes",
                        "strict"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable"
                },
                {
                    "function name": "testBase16InBuffer",
                    "function params": [
                        "startPasSize",
                        "endPadSize"
                    ],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testBase16InBuffer"
                },
                {
                    "function name": "testBase32BinarySamples",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32BinarySamples"
                },
                {
                    "function name": "testBase64InBuffer",
                    "function params": [
                        "startPasSize",
                        "endPadSize"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testBase64InBuffer"
                },
                {
                    "function name": "testEmptyArguments",
                    "function params": [],
                    "file name": "DigestTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/cli/DigestTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.cli.DigestTest.testEmptyArguments"
                },
                {
                    "function name": "testNullArguments",
                    "function params": [],
                    "file name": "DigestTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/cli/DigestTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.cli.DigestTest.testNullArguments"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "args",
                        "concat",
                        "input"
                    ],
                    "file name": "PhoneticEngineRegressionTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.encode"
                }
            ],
            "date": "2020-12-13"
        },
        {
            "commit_id": 1303,
            "hash": "35e9cf2538714d71b3091a8c1c216b4416220909",
            "commit_summary": "Normalize spelling to US English in comments.",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java"
            ],
            "functions": [
                {
                    "function name": "testConstructors",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testConstructors"
                }
            ],
            "date": "2020-12-17"
        },
        {
            "commit_id": 1304,
            "hash": "2a1fc6b85977f9aa34c4a26234b68f3e5edb8f72",
            "commit_summary": "Simplify array cloning.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/main/java/org/apache/commons/codec/language/Soundex.java"
            ],
            "functions": [
                {
                    "function name": "Base32",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "useHex",
                        "padding",
                        "decodingPolicy"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.Base32"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "urlSafe",
                        "decodingPolicy"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "RefinedSoundex",
                    "function params": [
                        "mapping"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.RefinedSoundex.RefinedSoundex"
                },
                {
                    "function name": "Soundex",
                    "function params": [
                        "mapping"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.Soundex"
                }
            ],
            "date": "2021-01-02"
        },
        {
            "commit_id": 1305,
            "hash": "05a0b1f55efc69a1a249b87163ca19d47fca9f57",
            "commit_summary": "Collapse multiple identical catch clauses into one.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                "src/test/java/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [
                {
                    "function name": "getInitializedMac",
                    "function params": [
                        "algorithm",
                        "key"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.getInitializedMac"
                },
                {
                    "function name": "charsetSanityCheck",
                    "function params": [
                        "name"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.charsetSanityCheck"
                }
            ],
            "date": "2021-01-08"
        },
        {
            "commit_id": 1306,
            "hash": "7b3e0ca1db1beef70cf4731a9c4f40fcd58be296",
            "commit_summary": "Use isEmpty().\n\nPrefix internal class name with Abstract.\nFix Checkstyle XML.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/Caverphone1.java",
                "src/main/java/org/apache/commons/codec/language/Caverphone2.java",
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/main/java/org/apache/commons/codec/language/Soundex.java",
                "src/main/java/org/apache/commons/codec/language/SoundexUtils.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "source"
                    ],
                    "file name": "Caverphone1.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Caverphone1.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Caverphone1.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Caverphone1.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "source"
                    ],
                    "file name": "Caverphone2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Caverphone2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Caverphone2.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Caverphone2.encode"
                },
                {
                    "function name": "colognePhonetic",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.colognePhonetic"
                },
                {
                    "function name": "CologneBuffer",
                    "function params": [],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.CologneBuffer"
                },
                {
                    "function name": "parseRules",
                    "function params": [
                        "scanner",
                        "location",
                        "ruleMapping",
                        "asciiFoldings"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules"
                },
                {
                    "function name": "cleanInput",
                    "function params": [
                        "input"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.cleanInput"
                },
                {
                    "function name": "nysiis",
                    "function params": [
                        "str"
                    ],
                    "file name": "Nysiis.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Nysiis.nysiis"
                },
                {
                    "function name": "soundex",
                    "function params": [
                        "str"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.RefinedSoundex.soundex"
                },
                {
                    "function name": "soundex",
                    "function params": [
                        "str"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.soundex"
                },
                {
                    "function name": "clean",
                    "function params": [
                        "str"
                    ],
                    "file name": "SoundexUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/SoundexUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/SoundexUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.SoundexUtils.clean"
                }
            ],
            "date": "2021-01-17"
        },
        {
            "commit_id": 1307,
            "hash": "c59862d16e19236ed6f215d739d6abbd637494fc",
            "commit_summary": "Use isEmpty().",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java"
            ],
            "functions": [
                {
                    "function name": "loadFromResource",
                    "function params": [
                        "languageRulesResourceName",
                        "languages"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Lang.loadFromResource"
                },
                {
                    "function name": "parseRules",
                    "function params": [
                        "scanner",
                        "location"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.parseRules"
                }
            ],
            "date": "2021-01-17"
        },
        {
            "commit_id": 1308,
            "hash": "56c0a128fdc4f09b21b0febc4fde749d31283319",
            "commit_summary": "Use isEmpty().",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java"
            ],
            "functions": [
                {
                    "function name": "colognePhonetic",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.colognePhonetic"
                },
                {
                    "function name": "getInstance",
                    "function params": [
                        "languagesResourceName"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.getInstance"
                },
                {
                    "function name": "testOOM",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"
                }
            ],
            "date": "2021-01-17"
        },
        {
            "commit_id": 1309,
            "hash": "8bfca5c4228bb05e94d8027aadefaba92ff124c7",
            "commit_summary": "- Make private elements final where possible.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java"
            ],
            "functions": [
                {
                    "function name": "pattern",
                    "function params": [
                        "regex"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.pattern"
                }
            ],
            "date": "2021-01-17"
        },
        {
            "commit_id": 1310,
            "hash": "7ea3a6a035e879587f88938c166322ecc151b049",
            "commit_summary": "Specify scale fully in internal name.",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java"
            ],
            "functions": [
                {
                    "function name": "PerformanceTest",
                    "function params": [
                        "clazz",
                        "numThreads",
                        "bytes",
                        "size"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                }
            ],
            "date": "2021-02-02"
        },
        {
            "commit_id": 1311,
            "hash": "46969d4fca4db97eaa3d9b49ff918a50a6b5c6b7",
            "commit_summary": "Use the scale in the var name.",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/bm/CacheSubSequencePerformanceTest.java"
            ],
            "functions": [
                {
                    "function name": "test",
                    "function params": [
                        "input",
                        "times"
                    ],
                    "file name": "CacheSubSequencePerformanceTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/CacheSubSequencePerformanceTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/CacheSubSequencePerformanceTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.CacheSubSequencePerformanceTest.test"
                }
            ],
            "date": "2021-02-02"
        },
        {
            "commit_id": 1312,
            "hash": "3638abaf6cdb3ba83787e2b6f630e81f014c77d5",
            "commit_summary": "Normalize to US English spelling.",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "testEnsureBufferSize",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.testEnsureBufferSize"
                }
            ],
            "date": "2021-02-08"
        },
        {
            "commit_id": 1313,
            "hash": "f2a6b4b7ab0567c2c49f0d6a053c671989db3c4d",
            "commit_summary": "Use String.replace() instead of replaceAll() when we don't need a Regex.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/Caverphone1.java",
                "src/main/java/org/apache/commons/codec/language/Caverphone2.java",
                "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "source"
                    ],
                    "file name": "Caverphone1.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Caverphone1.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Caverphone1.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Caverphone1.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "source"
                    ],
                    "file name": "Caverphone2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Caverphone2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Caverphone2.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Caverphone2.encode"
                },
                {
                    "function name": "removeVowels",
                    "function params": [
                        "name"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.removeVowels"
                },
                {
                    "function name": "testBase64InputStreamByChunk",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"
                },
                {
                    "function name": "testBase64InputStreamByteByByte",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"
                },
                {
                    "function name": "testBase64OutputStreamByChunk",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"
                },
                {
                    "function name": "testBase64OutputStreamByteByByte",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"
                },
                {
                    "function name": "testConstructor_Int_ByteArray_Boolean_UrlSafe",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"
                },
                {
                    "function name": "testChunkedEncodeMultipleOf76",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"
                }
            ],
            "date": "2021-02-28"
        },
        {
            "commit_id": 1314,
            "hash": "482df6cabfb288acb6ab3e4a732fdb93aecfa7c2",
            "commit_summary": "No need to nest in else.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Hex.java",
                "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                "src/main/java/org/apache/commons/codec/net/BCodec.java",
                "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                "src/main/java/org/apache/commons/codec/net/QCodec.java",
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/main/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [
                {
                    "function name": "decode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.decode"
                },
                {
                    "function name": "read",
                    "function params": [
                        "offset",
                        "len"
                    ],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecInputStream.read"
                },
                {
                    "function name": "write",
                    "function params": [
                        "offset",
                        "len"
                    ],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.write"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "object"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.decode"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "keyBytes",
                        "salt"
                    ],
                    "file name": "Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Crypt.crypt"
                },
                {
                    "function name": "soundex",
                    "function params": [
                        "source",
                        "branching"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex"
                },
                {
                    "function name": "conditionCH0",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.conditionCH0"
                },
                {
                    "function name": "handleCH",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleCH"
                },
                {
                    "function name": "conditionL0",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.conditionL0"
                },
                {
                    "function name": "conditionC0",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.conditionC0"
                },
                {
                    "function name": "isEncodeEquals",
                    "function params": [
                        "name1",
                        "name2"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals"
                },
                {
                    "function name": "soundex",
                    "function params": [
                        "str"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.RefinedSoundex.soundex"
                },
                {
                    "function name": "SomeLanguages",
                    "function params": [
                        "other"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.SomeLanguages"
                },
                {
                    "function name": "SomeLanguages",
                    "function params": [
                        "other"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.SomeLanguages"
                },
                {
                    "function name": "patternAndContextMatches",
                    "function params": [
                        "input",
                        "i"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.patternAndContextMatches"
                },
                {
                    "function name": "pattern",
                    "function params": [
                        "regex"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.pattern"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "value"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "value"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.decode"
                }
            ],
            "date": "2021-03-05"
        },
        {
            "commit_id": 1315,
            "hash": "921e2cdedac9ef6ee4ac78cef2c9bbeb1913a53d",
            "commit_summary": "CODEC-296: Add support for Blake3 family of hashes",
            "modified_files": [],
            "functions": [
                {
                    "function name": "EngineState",
                    "function params": [],
                    "file name": "Blake3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.EngineState"
                },
                {
                    "function name": "Blake3",
                    "function params": [
                        "key",
                        "flags"
                    ],
                    "file name": "Blake3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.Blake3"
                },
                {
                    "function name": "EngineState",
                    "function params": [
                        "out",
                        "offset",
                        "length"
                    ],
                    "file name": "Blake3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.EngineState"
                },
                {
                    "function name": "absorb",
                    "function params": [
                        "in"
                    ],
                    "file name": "Blake3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.absorb"
                },
                {
                    "function name": "parentChainingValue",
                    "function params": [
                        "leftChildCV",
                        "rightChildCV",
                        "key",
                        "flags"
                    ],
                    "file name": "Blake3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.parentChainingValue"
                },
                {
                    "function name": "ChunkState",
                    "function params": [
                        "key",
                        "chunkCounter",
                        "flags"
                    ],
                    "file name": "Blake3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.ChunkState"
                },
                {
                    "function name": "EngineState",
                    "function params": [
                        "cv"
                    ],
                    "file name": "Blake3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.EngineState"
                },
                {
                    "function name": "packInt",
                    "function params": [
                        "value",
                        "dst",
                        "off",
                        "len"
                    ],
                    "file name": "Blake3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.packInt"
                },
                {
                    "function name": "EngineState",
                    "function params": [
                        "in",
                        "offset",
                        "length"
                    ],
                    "file name": "Blake3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.EngineState"
                },
                {
                    "function name": "squeeze",
                    "function params": [
                        "out",
                        "offset",
                        "length"
                    ],
                    "file name": "Blake3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.squeeze"
                },
                {
                    "function name": "Output",
                    "function params": [],
                    "file name": "Blake3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.Output"
                },
                {
                    "function name": "round",
                    "function params": [
                        "state",
                        "msg",
                        "schedule"
                    ],
                    "file name": "Blake3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.round"
                },
                {
                    "function name": "ChunkState",
                    "function params": [
                        "input",
                        "offset",
                        "length"
                    ],
                    "file name": "Blake3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.ChunkState"
                },
                {
                    "function name": "unpackInts",
                    "function params": [
                        "buf",
                        "nrInts"
                    ],
                    "file name": "Blake3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.unpackInts"
                },
                {
                    "function name": "squeeze",
                    "function params": [
                        "out"
                    ],
                    "file name": "Blake3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.squeeze"
                },
                {
                    "function name": "initKeyDerivationFunction",
                    "function params": [
                        "kdfContext"
                    ],
                    "file name": "Blake3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.initKeyDerivationFunction"
                },
                {
                    "function name": "keyedHash",
                    "function params": [
                        "key",
                        "data"
                    ],
                    "file name": "Blake3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.keyedHash"
                },
                {
                    "function name": "g",
                    "function params": [
                        "state",
                        "a",
                        "b",
                        "c",
                        "d",
                        "mx",
                        "my"
                    ],
                    "file name": "Blake3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.g"
                },
                {
                    "function name": "Output",
                    "function params": [
                        "inputChainingValue",
                        "blockWords",
                        "counter",
                        "blockLength",
                        "flags"
                    ],
                    "file name": "Blake3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.Output"
                },
                {
                    "function name": "EngineState",
                    "function params": [
                        "firstCV",
                        "totalChunks"
                    ],
                    "file name": "Blake3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.EngineState"
                },
                {
                    "function name": "parentOutput",
                    "function params": [
                        "leftChildCV",
                        "rightChildCV",
                        "key",
                        "flags"
                    ],
                    "file name": "Blake3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.parentOutput"
                },
                {
                    "function name": "EngineState",
                    "function params": [
                        "key",
                        "flags"
                    ],
                    "file name": "Blake3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.EngineState"
                },
                {
                    "function name": "ChunkState",
                    "function params": [],
                    "file name": "Blake3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.ChunkState"
                },
                {
                    "function name": "squeeze",
                    "function params": [
                        "nrBytes"
                    ],
                    "file name": "Blake3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.squeeze"
                },
                {
                    "function name": "Output",
                    "function params": [
                        "out",
                        "offset",
                        "length"
                    ],
                    "file name": "Blake3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.Output"
                },
                {
                    "function name": "initHash",
                    "function params": [],
                    "file name": "Blake3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.initHash"
                },
                {
                    "function name": "ChunkState",
                    "function params": [],
                    "file name": "Blake3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.ChunkState"
                },
                {
                    "function name": "hash",
                    "function params": [
                        "data"
                    ],
                    "file name": "Blake3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.hash"
                },
                {
                    "function name": "compress",
                    "function params": [
                        "chainingValue",
                        "blockWords",
                        "blockLength",
                        "counter",
                        "flags"
                    ],
                    "file name": "Blake3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.compress"
                },
                {
                    "function name": "reset",
                    "function params": [],
                    "file name": "Blake3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.reset"
                },
                {
                    "function name": "initKeyedHash",
                    "function params": [
                        "key"
                    ],
                    "file name": "Blake3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.initKeyedHash"
                },
                {
                    "function name": "EngineState",
                    "function params": [],
                    "file name": "Blake3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.EngineState"
                },
                {
                    "function name": "ChunkState",
                    "function params": [],
                    "file name": "Blake3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.ChunkState"
                },
                {
                    "function name": "absorb",
                    "function params": [
                        "in",
                        "offset",
                        "length"
                    ],
                    "file name": "Blake3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.absorb"
                },
                {
                    "function name": "unpackInt",
                    "function params": [
                        "buf",
                        "off"
                    ],
                    "file name": "Blake3.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.unpackInt"
                },
                {
                    "function name": "shouldThrowIllegalArgumentExceptionWhenIncorrectKeySize",
                    "function params": [],
                    "file name": "Blake3Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3Test.shouldThrowIllegalArgumentExceptionWhenIncorrectKeySize"
                },
                {
                    "function name": "assertThrowsProperExceptionWithKeySize",
                    "function params": [
                        "keySize"
                    ],
                    "file name": "Blake3Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3Test.assertThrowsProperExceptionWithKeySize"
                },
                {
                    "function name": "keyedHashArbitraryOutputLength",
                    "function params": [],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.keyedHashArbitraryOutputLength"
                },
                {
                    "function name": "keyedHashTruncatedOutput",
                    "function params": [],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.keyedHashTruncatedOutput"
                },
                {
                    "function name": "Blake3TestVectorsTest",
                    "function params": [
                        "inputLength",
                        "hash",
                        "keyedHash",
                        "deriveKey"
                    ],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.Blake3TestVectorsTest"
                },
                {
                    "function name": "testCases",
                    "function params": [],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.testCases"
                },
                {
                    "function name": "hashTruncatedOutput",
                    "function params": [],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.hashTruncatedOutput"
                },
                {
                    "function name": "keyDerivation",
                    "function params": [],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.keyDerivation"
                },
                {
                    "function name": "hashArbitraryOutputLength",
                    "function params": [],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.hashArbitraryOutputLength"
                }
            ],
            "date": "2021-03-06"
        },
        {
            "commit_id": 1316,
            "hash": "b71233be7601e9710b6871e8743d34e86561b898",
            "commit_summary": "Fix checkstyle nits",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java"
            ],
            "functions": [
                {
                    "function name": "compress",
                    "function params": [
                        "chainingValue",
                        "blockWords",
                        "blockLength",
                        "counter",
                        "flags"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.compress"
                },
                {
                    "function name": "g",
                    "function params": [
                        "state",
                        "a",
                        "b",
                        "c",
                        "d",
                        "mx",
                        "my"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.g"
                },
                {
                    "function name": "parentOutput",
                    "function params": [
                        "leftChildCV",
                        "rightChildCV",
                        "key",
                        "flags"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.parentOutput"
                },
                {
                    "function name": "Output",
                    "function params": [
                        "out",
                        "offset",
                        "length"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.Output"
                },
                {
                    "function name": "Blake3TestVectorsTest",
                    "function params": [
                        "inputLength",
                        "hash",
                        "keyedHash",
                        "deriveKey"
                    ],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.Blake3TestVectorsTest"
                }
            ],
            "date": "2021-03-06"
        },
        {
            "commit_id": 1317,
            "hash": "0ed8bd7dfff38ce00409a2040e5ef65e869b42f0",
            "commit_summary": "Improve javadoc, naming, magic constants",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java"
            ],
            "functions": [
                {
                    "function name": "initKeyDerivationFunction",
                    "function params": [
                        "kdfContext"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.initKeyDerivationFunction"
                },
                {
                    "function name": "keyedHash",
                    "function params": [
                        "key",
                        "data"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.keyedHash"
                },
                {
                    "function name": "parentOutput",
                    "function params": [
                        "leftChildCV",
                        "rightChildCV",
                        "key",
                        "flags"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.parentOutput"
                },
                {
                    "function name": "update",
                    "function params": [
                        "in",
                        "offset",
                        "length"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.update"
                },
                {
                    "function name": "doFinalize",
                    "function params": [
                        "out",
                        "offset",
                        "length"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.doFinalize"
                },
                {
                    "function name": "doFinalize",
                    "function params": [
                        "out"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.doFinalize"
                },
                {
                    "function name": "update",
                    "function params": [
                        "in"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.update"
                },
                {
                    "function name": "doFinalize",
                    "function params": [
                        "nrBytes"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.doFinalize"
                },
                {
                    "function name": "hash",
                    "function params": [
                        "data"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.hash"
                },
                {
                    "function name": "compress",
                    "function params": [
                        "chainingValue",
                        "blockWords",
                        "blockLength",
                        "counter",
                        "flags"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.compress"
                },
                {
                    "function name": "initKeyedHash",
                    "function params": [
                        "key"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.initKeyedHash"
                },
                {
                    "function name": "Output",
                    "function params": [],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.Output"
                },
                {
                    "function name": "ChunkState",
                    "function params": [],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.ChunkState"
                },
                {
                    "function name": "ChunkState",
                    "function params": [
                        "input",
                        "offset",
                        "length"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.ChunkState"
                },
                {
                    "function name": "keyedHashArbitraryOutputLength",
                    "function params": [],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.keyedHashArbitraryOutputLength"
                },
                {
                    "function name": "keyDerivation",
                    "function params": [],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.keyDerivation"
                },
                {
                    "function name": "hashArbitraryOutputLength",
                    "function params": [],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.hashArbitraryOutputLength"
                }
            ],
            "date": "2021-03-08"
        },
        {
            "commit_id": 1318,
            "hash": "0839e1a99bf61ee4d66a265b942981760f6a0265",
            "commit_summary": "Ensure all public method args are validated and documented",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Blake3.java"
            ],
            "functions": [
                {
                    "function name": "doFinalize",
                    "function params": [
                        "out",
                        "offset",
                        "length"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.doFinalize"
                },
                {
                    "function name": "checkBufferArgs",
                    "function params": [
                        "buffer",
                        "offset",
                        "length"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.checkBufferArgs"
                },
                {
                    "function name": "doFinalize",
                    "function params": [
                        "out"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.doFinalize"
                },
                {
                    "function name": "doFinalize",
                    "function params": [
                        "nrBytes"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.doFinalize"
                },
                {
                    "function name": "update",
                    "function params": [
                        "in",
                        "offset",
                        "length"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.update"
                }
            ],
            "date": "2021-03-20"
        },
        {
            "commit_id": 1319,
            "hash": "1391f3cfeeae872af4f41d7caf859c786e9c40de",
            "commit_summary": "Fix checkstyle nits",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Blake3.java"
            ],
            "functions": [
                {
                    "function name": "checkBufferArgs",
                    "function params": [
                        "buffer",
                        "offset",
                        "length"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.checkBufferArgs"
                }
            ],
            "date": "2021-03-20"
        },
        {
            "commit_id": 1320,
            "hash": "6b67d6f093a821ede0b393f260b407d035289e07",
            "commit_summary": "CODEC-301: Reduce byte[] allocations by reusing buffers\n\n* Reduces byte[] allocations from 280MB to <4MB when reading a 133MB base64 stream. Messured with JFR.\n* Keep reusing inital buffer when decoding BaseN\n* Attempt to fill up the user-provided buffer\n    Previously we only filled up to a maximum of 8KB - encoding-overhead (e.g. 6KB for Base64) even if the provided\n    buffer was bigger.\n* Reuse hasData method for checking pos/readPos markers",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java"
            ],
            "functions": [
                {
                    "function name": "hasData",
                    "function params": [
                        "context"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.hasData"
                },
                {
                    "function name": "available",
                    "function params": [
                        "context"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.available"
                },
                {
                    "function name": "readResults",
                    "function params": [
                        "b",
                        "bPos",
                        "bAvail",
                        "context"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.readResults"
                },
                {
                    "function name": "read",
                    "function params": [
                        "offset",
                        "len"
                    ],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecInputStream.read"
                },
                {
                    "function name": "BaseNCodecInputStream",
                    "function params": [
                        "input",
                        "baseNCodec",
                        "doEncode"
                    ],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecInputStream.BaseNCodecInputStream"
                },
                {
                    "function name": "testReadMultipleBufferSizes",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testReadMultipleBufferSizes"
                }
            ],
            "date": "2021-05-21"
        },
        {
            "commit_id": 1321,
            "hash": "fdf0356ac7a98e669b2b39400a4112884b0b1bcc",
            "commit_summary": "Remove hardcoded constants to improve readability",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java"
            ],
            "functions": [
                {
                    "function name": "getMinRating",
                    "function params": [
                        "sumLength"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating"
                },
                {
                    "function name": "getFirst3Last3",
                    "function params": [
                        "name"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.getFirst3Last3"
                },
                {
                    "function name": "leftToRightThenRightToLeftProcessing",
                    "function params": [
                        "name1",
                        "name2"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing"
                },
                {
                    "function name": "isEncodeEquals",
                    "function params": [
                        "name1",
                        "name2"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals"
                }
            ],
            "date": "2021-06-28"
        },
        {
            "commit_id": 1322,
            "hash": "5c975984aba6023116a2cc59b578588a4ee34379",
            "commit_summary": "Use final.\n\nSimplify expressions.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                "src/test/java/org/apache/commons/codec/digest/Blake3Test.java",
                "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java"
            ],
            "functions": [
                {
                    "function name": "checkBufferArgs",
                    "function params": [
                        "buffer",
                        "offset",
                        "length"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.checkBufferArgs"
                },
                {
                    "function name": "checkBufferArgs",
                    "function params": [
                        "buffer",
                        "offset",
                        "length"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.checkBufferArgs"
                },
                {
                    "function name": "testReadMultipleBufferSizes",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testReadMultipleBufferSizes"
                },
                {
                    "function name": "charsetSanityCheck",
                    "function params": [
                        "name"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.charsetSanityCheck"
                },
                {
                    "function name": "testCustomCharset",
                    "function params": [
                        "name",
                        "parent"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testCustomCharset"
                },
                {
                    "function name": "assertThrowsProperExceptionWithKeySize",
                    "function params": [
                        "keySize"
                    ],
                    "file name": "Blake3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3Test.assertThrowsProperExceptionWithKeySize"
                },
                {
                    "function name": "assertThrowsProperExceptionWithKeySize",
                    "function params": [
                        "keySize"
                    ],
                    "file name": "Blake3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3Test.assertThrowsProperExceptionWithKeySize"
                },
                {
                    "function name": "keyedHashArbitraryOutputLength",
                    "function params": [],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.keyedHashArbitraryOutputLength"
                },
                {
                    "function name": "keyedHashTruncatedOutput",
                    "function params": [],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.keyedHashTruncatedOutput"
                },
                {
                    "function name": "Blake3TestVectorsTest",
                    "function params": [
                        "inputLength",
                        "hash",
                        "keyedHash",
                        "deriveKey"
                    ],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.Blake3TestVectorsTest"
                },
                {
                    "function name": "hashTruncatedOutput",
                    "function params": [],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.hashTruncatedOutput"
                },
                {
                    "function name": "Blake3TestVectorsTest",
                    "function params": [
                        "inputLength",
                        "hash",
                        "keyedHash",
                        "deriveKey"
                    ],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.Blake3TestVectorsTest"
                },
                {
                    "function name": "keyDerivation",
                    "function params": [],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.keyDerivation"
                },
                {
                    "function name": "hashArbitraryOutputLength",
                    "function params": [],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.hashArbitraryOutputLength"
                },
                {
                    "function name": "testIsDoubleMetaphoneEqualExtended3",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"
                },
                {
                    "function name": "testIsDoubleMetaphoneEqualWithMATCHES",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"
                }
            ],
            "date": "2021-07-10"
        },
        {
            "commit_id": 1323,
            "hash": "6b634edb22eac5c85446681de27671df44798491",
            "commit_summary": "Combine else if.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                "src/main/java/org/apache/commons/codec/net/PercentCodec.java"
            ],
            "functions": [
                {
                    "function name": "colognePhonetic",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.colognePhonetic"
                },
                {
                    "function name": "handleW",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleW"
                },
                {
                    "function name": "handleSC",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleSC"
                },
                {
                    "function name": "loadFromResource",
                    "function params": [
                        "languageRulesResourceName",
                        "languages"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Lang.loadFromResource"
                },
                {
                    "function name": "getInstance",
                    "function params": [
                        "languagesResourceName"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.getInstance"
                },
                {
                    "function name": "parseRules",
                    "function params": [
                        "scanner",
                        "location"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.parseRules"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.decode"
                },
                {
                    "function name": "doEncode",
                    "function params": [
                        "bytes",
                        "expectedLength",
                        "willEncode"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.doEncode"
                }
            ],
            "date": "2021-08-06"
        },
        {
            "commit_id": 1324,
            "hash": "b98cd31a38dc4133ffdc046febe9f6582fc9dc35",
            "commit_summary": "Simpler array creation.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                "src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java"
            ],
            "functions": [
                {
                    "function name": "testBase16EmptyInputStream",
                    "function params": [],
                    "file name": "Base16InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16InputStreamTest.testBase16EmptyInputStream"
                },
                {
                    "function name": "testBase16EmptyOutputStream",
                    "function params": [],
                    "file name": "Base16OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16OutputStreamTest.testBase16EmptyOutputStream"
                },
                {
                    "function name": "testByteToStringVariations",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testByteToStringVariations"
                },
                {
                    "function name": "testCodec68",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testCodec68"
                },
                {
                    "function name": "testEmptyBase16",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testEmptyBase16"
                },
                {
                    "function name": "testBase32EmptyInputStream",
                    "function params": [
                        "chuckSize"
                    ],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStream"
                },
                {
                    "function name": "testBase32EmptyOutputStream",
                    "function params": [
                        "chunkSize"
                    ],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStream"
                },
                {
                    "function name": "testEmptyBase32",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testEmptyBase32"
                },
                {
                    "function name": "testBase64EmptyInputStream",
                    "function params": [
                        "chuckSize"
                    ],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStream"
                },
                {
                    "function name": "testBase64EmptyOutputStream",
                    "function params": [
                        "chunkSize"
                    ],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStream"
                },
                {
                    "function name": "testCodec112",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodec112"
                },
                {
                    "function name": "testCodec68",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodec68"
                },
                {
                    "function name": "testEmptyBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testEmptyBase64"
                },
                {
                    "function name": "testByteToStringVariations",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"
                },
                {
                    "function name": "testApr1CryptBytes",
                    "function params": [],
                    "file name": "Apr1CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes"
                },
                {
                    "function name": "testApr1CryptBytesWithThreadLocalRandom",
                    "function params": [],
                    "file name": "Apr1CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytesWithThreadLocalRandom"
                },
                {
                    "function name": "testCryptWithBytes",
                    "function params": [],
                    "file name": "CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"
                },
                {
                    "function name": "testIsDoubleMetaphoneEqualBasic",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"
                },
                {
                    "function name": "testIsDoubleMetaphoneEqualExtended2",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"
                }
            ],
            "date": "2021-08-06"
        },
        {
            "commit_id": 1325,
            "hash": "f4d53c76b981b0528e6c2833be56db1523282d84",
            "commit_summary": "CODEC-300 - Simplify assertion (#84)",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/URLCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "testComparatorWithSoundex",
                    "function params": [],
                    "file name": "StringEncoderComparatorTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"
                },
                {
                    "function name": "testSingletons",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testSingletons"
                },
                {
                    "function name": "testByteToStringVariations",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testByteToStringVariations"
                },
                {
                    "function name": "testStringToByteVariations",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testStringToByteVariations"
                },
                {
                    "function name": "testEmptyBase16",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testEmptyBase16"
                },
                {
                    "function name": "testEmptyBase32",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testEmptyBase32"
                },
                {
                    "function name": "testChunkedEncodeMultipleOf76",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"
                },
                {
                    "function name": "testEncodeDecodeSmall",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"
                },
                {
                    "function name": "testDecodeWithInnerPad",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"
                },
                {
                    "function name": "testPairs",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testPairs"
                },
                {
                    "function name": "testRfc2045Section2Dot1CrLfDefinition",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"
                },
                {
                    "function name": "testEncodeDecodeRandom",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"
                },
                {
                    "function name": "testSingletons",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testSingletons"
                },
                {
                    "function name": "testUUID",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testUUID"
                },
                {
                    "function name": "testEmptyBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testEmptyBase64"
                },
                {
                    "function name": "testByteToStringVariations",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"
                },
                {
                    "function name": "testStringToByteVariations",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"
                },
                {
                    "function name": "testUrlSafe",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testUrlSafe"
                },
                {
                    "function name": "testEncodeDecodeHexCharArrayRandom",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeDecodeHexCharArrayRandom"
                },
                {
                    "function name": "testDecodeByteBufferObjectEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeByteBufferObjectEmpty"
                },
                {
                    "function name": "testEncodeStringEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeStringEmpty"
                },
                {
                    "function name": "testEncodeHexByteBufferEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferEmpty"
                },
                {
                    "function name": "testDecodeHexCharArrayEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayEmpty"
                },
                {
                    "function name": "testDecodeByteBufferAllocatedButEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeByteBufferAllocatedButEmpty"
                },
                {
                    "function name": "testEncodeByteArrayObjectEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeByteArrayObjectEmpty"
                },
                {
                    "function name": "testDecodeHexStringEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeHexStringEmpty"
                },
                {
                    "function name": "testDecodeByteArrayObjectEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeByteArrayObjectEmpty"
                },
                {
                    "function name": "testEncodeHexByteArrayHelloWorldUpperCaseHex",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldUpperCaseHex"
                },
                {
                    "function name": "testEncodeHexByteArrayEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayEmpty"
                },
                {
                    "function name": "testDecodeByteBufferEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeByteBufferEmpty"
                },
                {
                    "function name": "testDecodeByteArrayEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeByteArrayEmpty"
                },
                {
                    "function name": "testEncodeByteBufferObjectEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeByteBufferObjectEmpty"
                },
                {
                    "function name": "testEncodeByteBufferEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeByteBufferEmpty"
                },
                {
                    "function name": "testDecodeStringEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeStringEmpty"
                },
                {
                    "function name": "testEncodeHexByteArrayHelloWorldLowerCaseHex",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex"
                },
                {
                    "function name": "testEncodeByteBufferAllocatedButEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeByteBufferAllocatedButEmpty"
                },
                {
                    "function name": "testEncodeByteArrayEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeByteArrayEmpty"
                },
                {
                    "function name": "testCustomCharset",
                    "function params": [
                        "name",
                        "parent"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testCustomCharset"
                },
                {
                    "function name": "testGetBytesUtf16Le",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"
                },
                {
                    "function name": "testGetBytesIso8859_1",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"
                },
                {
                    "function name": "testGetBytesUsAscii",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"
                },
                {
                    "function name": "testGetBytesUnchecked",
                    "function params": [
                        "charsetName"
                    ],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUnchecked"
                },
                {
                    "function name": "testGetBytesUtf16Be",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"
                },
                {
                    "function name": "testGetBytesUtf8",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"
                },
                {
                    "function name": "testGetBytesUtf16",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"
                },
                {
                    "function name": "testEmpty",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"
                },
                {
                    "function name": "testAccentRemoval_NullValue_ReturnNullSuccessfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"
                },
                {
                    "function name": "testSoundexUtilsNullBehaviour",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"
                },
                {
                    "function name": "assertNotEmpty",
                    "function params": [
                        "bmpm",
                        "value"
                    ],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.assertNotEmpty"
                },
                {
                    "function name": "testDecodeStringWithNull",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"
                },
                {
                    "function name": "testEncodeStringWithNull",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testEncodeObjects"
                },
                {
                    "function name": "testPercentEncoderDecoderWithNullOrEmptyInput",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testPercentEncoderDecoderWithNullOrEmptyInput"
                },
                {
                    "function name": "testDecodeNullObject",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testDecodeNullObject"
                },
                {
                    "function name": "testEncodeNullObject",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testEncodeNullObject"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testEncodeObjects"
                },
                {
                    "function name": "testDecodeStringWithNull",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"
                },
                {
                    "function name": "testEncodeStringWithNull",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"
                },
                {
                    "function name": "testDecodeWithNullArray",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"
                },
                {
                    "function name": "testEncodeNull",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"
                },
                {
                    "function name": "testDecodeStringWithNull",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"
                },
                {
                    "function name": "testEncodeStringWithNull",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testDecodeStringWithNull",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"
                },
                {
                    "function name": "testEncodeStringWithNull",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"
                },
                {
                    "function name": "testDecodeWithNullArray",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testEncodeNull",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testEncodeNull"
                }
            ],
            "date": "2021-08-06"
        },
        {
            "commit_id": 1326,
            "hash": "8ee878ba7f887b74fc70415e05cb30acd21e1617",
            "commit_summary": "CODEC-299 - Improve control flow (#83)",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/main/java/org/apache/commons/codec/language/Metaphone.java"
            ],
            "functions": [
                {
                    "function name": "Rule",
                    "function params": [
                        "context",
                        "atStart"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule"
                },
                {
                    "function name": "conditionCH0",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.conditionCH0"
                },
                {
                    "function name": "conditionL0",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.conditionL0"
                },
                {
                    "function name": "metaphone",
                    "function params": [
                        "txt"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.metaphone"
                }
            ],
            "date": "2021-08-06"
        },
        {
            "commit_id": 1327,
            "hash": "50ff2d24d197ea53c2355d9ca165c43d5f1fc747",
            "commit_summary": "CODEC-298 - Use Standard Charset object (#82)",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/URLCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "testToCharset",
                    "function params": [],
                    "file name": "CharsetsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharsetsTest.testToCharset"
                },
                {
                    "function name": "testCorrectness",
                    "function params": [],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness"
                },
                {
                    "function name": "testSafeCharEncodeDecodeObject",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testSafeCharEncodeDecodeObject"
                },
                {
                    "function name": "testPercentEncoderDecoderWithNullOrEmptyInput",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testPercentEncoderDecoderWithNullOrEmptyInput"
                },
                {
                    "function name": "testConfigurablePercentEncoder",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testConfigurablePercentEncoder"
                },
                {
                    "function name": "testDecodeInvalidEncodedResultDecoding",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testDecodeInvalidEncodedResultDecoding"
                },
                {
                    "function name": "testUnsafeCharEncodeDecode",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testUnsafeCharEncodeDecode"
                },
                {
                    "function name": "testBasicEncodeDecode",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testBasicEncodeDecode"
                },
                {
                    "function name": "testPercentEncoderDecoderWithPlusForSpace",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testPercentEncoderDecoderWithPlusForSpace"
                },
                {
                    "function name": "testDecodeInvalidContent",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"
                }
            ],
            "date": "2021-08-08"
        },
        {
            "commit_id": 1328,
            "hash": "e57b88ed485b54418b19358328095cd14ea1e742",
            "commit_summary": "Inline Collections.sort(Comparator).",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java"
            ],
            "functions": [
                {
                    "function name": "for",
                    "function params": [
                        "rule"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.for"
                }
            ],
            "date": "2022-02-13"
        },
        {
            "commit_id": 1329,
            "hash": "1d7fb4c292ef238a9f1d6a4c47c2b56460bf8ac0",
            "commit_summary": "Inline Collections.sort(Comparator).",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java"
            ],
            "functions": [
                {
                    "function name": "testComparatorWithDoubleMetaphone",
                    "function params": [],
                    "file name": "StringEncoderComparatorTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"
                }
            ],
            "date": "2022-02-13"
        },
        {
            "commit_id": 1330,
            "hash": "dd6fe522e59b3899a14e5cae4672d31b14a05ec1",
            "commit_summary": "Format nit.",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java"
            ],
            "functions": [],
            "date": "2022-02-13"
        },
        {
            "commit_id": 1331,
            "hash": "5b411b6db5bb8a9addbe700ac8d05cf63f1ff214",
            "commit_summary": "CODEC-285 Better StringEncoderAbstractTest testEncodeNull (#41)\n\n* CODEC-284 update to hamcrest v2.2\r\n\r\n* CODEC-285 update to junit v5.6.0\r\n\r\n* CODEC-285 update to junit v5.8.2 via junit-bom\r\n\r\n* StringEncoderAbstractTest.testEncodeNull no test actually throw EncoderException",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java"
            ],
            "functions": [
                {
                    "function name": "testEncodeNull",
                    "function params": [],
                    "file name": "StringEncoderAbstractTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.StringEncoderAbstractTest.testEncodeNull"
                }
            ],
            "date": "2022-02-17"
        },
        {
            "commit_id": 1332,
            "hash": "5a03f5a493240f26f27ccabe6b8ac7b701c2d5c5",
            "commit_summary": "Port most exception assertions to JUnit 5.",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                "src/test/java/org/apache/commons/codec/digest/Blake3Test.java",
                "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/RFC1522CodecTest.java",
                "src/test/java/org/apache/commons/codec/net/URLCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "testEncodeNull",
                    "function params": [],
                    "file name": "BinaryEncoderAbstractTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.BinaryEncoderAbstractTest.testEncodeNull"
                },
                {
                    "function name": "testReadNull",
                    "function params": [],
                    "file name": "Base16InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16InputStreamTest.testReadNull"
                },
                {
                    "function name": "testReadOutOfBounds",
                    "function params": [],
                    "file name": "Base16InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16InputStreamTest.testReadOutOfBounds"
                },
                {
                    "function name": "testWriteToNullCoverage",
                    "function params": [],
                    "file name": "Base16OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16OutputStreamTest.testWriteToNullCoverage"
                },
                {
                    "function name": "testWriteOutOfBounds",
                    "function params": [],
                    "file name": "Base16OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16OutputStreamTest.testWriteOutOfBounds"
                },
                {
                    "function name": "testNonBase16Test",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testNonBase16Test"
                },
                {
                    "function name": "testObjectEncodeWithInvalidParameter",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testObjectEncodeWithInvalidParameter"
                },
                {
                    "function name": "testObjectDecodeWithInvalidParameter",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testObjectDecodeWithInvalidParameter"
                },
                {
                    "function name": "testStrictDecoding",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testStrictDecoding"
                },
                {
                    "function name": "testReadOutOfBounds",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"
                },
                {
                    "function name": "testReadNull",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"
                },
                {
                    "function name": "testWriteToNullCoverage",
                    "function params": [],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage"
                },
                {
                    "function name": "testWriteOutOfBounds",
                    "function params": [],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"
                },
                {
                    "function name": "testStrictDecoding",
                    "function params": [],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testStrictDecoding"
                },
                {
                    "function name": "testConstructors",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testConstructors"
                },
                {
                    "function name": "testImpossibleCases",
                    "function params": [
                        "codec",
                        "impossible_cases"
                    ],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testImpossibleCases"
                },
                {
                    "function name": "assertBase32DecodingOfTrailingBits",
                    "function params": [
                        "nbits"
                    ],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.assertBase32DecodingOfTrailingBits"
                },
                {
                    "function name": "testReadNull",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"
                },
                {
                    "function name": "testReadOutOfBounds",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"
                },
                {
                    "function name": "testStrictDecoding",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testStrictDecoding"
                },
                {
                    "function name": "testWriteToNullCoverage",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"
                },
                {
                    "function name": "testWriteOutOfBounds",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"
                },
                {
                    "function name": "testStrictDecoding",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testStrictDecoding"
                },
                {
                    "function name": "testEncodeOverMaxSize",
                    "function params": [
                        "maxSize"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"
                },
                {
                    "function name": "testObjectEncodeWithInvalidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"
                },
                {
                    "function name": "testCodeIntegerNull",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"
                },
                {
                    "function name": "testObjectDecodeWithInvalidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"
                },
                {
                    "function name": "testIsStringBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testIsStringBase64"
                },
                {
                    "function name": "assertBase64DecodingOfTrailingBits",
                    "function params": [
                        "nbits"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.assertBase64DecodingOfTrailingBits"
                },
                {
                    "function name": "testConstructors",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testConstructors"
                },
                {
                    "function name": "testBase64ImpossibleSamples",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testBase64ImpossibleSamples"
                },
                {
                    "function name": "testDecodeBadCharacterPos0",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"
                },
                {
                    "function name": "checkDecodeHexByteBufferOddCharacters",
                    "function params": [
                        "data"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.checkDecodeHexByteBufferOddCharacters"
                },
                {
                    "function name": "testEncodeClassCastException",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"
                },
                {
                    "function name": "testDecodeByteArrayOddCharacters",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeByteArrayOddCharacters"
                },
                {
                    "function name": "checkDecodeHexCharArrayOddCharacters",
                    "function params": [
                        "data"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.checkDecodeHexCharArrayOddCharacters"
                },
                {
                    "function name": "checkDecodeHexCharArrayOddCharacters",
                    "function params": [
                        "data"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.checkDecodeHexCharArrayOddCharacters"
                },
                {
                    "function name": "testDecodeBadCharacterPos1",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"
                },
                {
                    "function name": "testDecodeClassCastException",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"
                },
                {
                    "function name": "testDecodeHexStringOddCharacters",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters"
                },
                {
                    "function name": "testGetBytesUncheckedBadName",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"
                },
                {
                    "function name": "testNewStringBadEnc",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"
                },
                {
                    "function name": "assertThrowsProperExceptionWithKeySize",
                    "function params": [
                        "keySize"
                    ],
                    "file name": "Blake3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3Test.assertThrowsProperExceptionWithKeySize"
                },
                {
                    "function name": "testUsMappingEWithAcute",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"
                },
                {
                    "function name": "testUsMappingOWithDiaeresis",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"
                },
                {
                    "function name": "testBase64ImpossibleSamplesStrict",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testBase64ImpossibleSamplesStrict"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testEncodeObjects"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testEncodeObjects"
                },
                {
                    "function name": "testDecodeInvalid",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"
                },
                {
                    "function name": "assertExpectedDecoderException",
                    "function params": [
                        "s"
                    ],
                    "file name": "RFC1522CodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.RFC1522CodecTest.assertExpectedDecoderException"
                },
                {
                    "function name": "testInvalidEncoding",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testDecodeInvalid",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"
                }
            ],
            "date": "2022-02-19"
        },
        {
            "commit_id": 1333,
            "hash": "d25af0e8310e501e2d40d040d09e2d4c65d79c33",
            "commit_summary": "CODEC-285 remove unused imports",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java",
                "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                "src/test/java/org/apache/commons/codec/digest/Blake3Test.java",
                "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/RFC1522CodecTest.java",
                "src/test/java/org/apache/commons/codec/net/URLCodecTest.java"
            ],
            "functions": [],
            "date": "2022-02-20"
        },
        {
            "commit_id": 1334,
            "hash": "438b54b2075652215a75a834ee64ec5b0b29a6f8",
            "commit_summary": "CODEC-285 HexTest\n\nLooking at @Test(expected) and test method body, the last line usually throws the expected but test actually fails earlier.",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [
                {
                    "function name": "testEncodeHexPartialInputOverbounds",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexPartialInputOverbounds"
                },
                {
                    "function name": "testEncodeHexPartialInputUnderbounds",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexPartialInputUnderbounds"
                }
            ],
            "date": "2022-02-20"
        },
        {
            "commit_id": 1335,
            "hash": "80fffec4ee9d44a18a4742d53971ed054b1346e6",
            "commit_summary": "CODEC-285 replace JUnit v4 test expected with assertThrows (#112)",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                "src/test/java/org/apache/commons/codec/cli/DigestTest.java",
                "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/RFC1522CodecTest.java"
            ],
            "functions": [
                {
                    "function name": "testEncodeNull",
                    "function params": [],
                    "file name": "BinaryEncoderAbstractTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.BinaryEncoderAbstractTest.testEncodeNull"
                },
                {
                    "function name": "testSkipWrongArgument",
                    "function params": [],
                    "file name": "Base16InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16InputStreamTest.testSkipWrongArgument"
                },
                {
                    "function name": "testCodec68",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testCodec68"
                },
                {
                    "function name": "checkEncodeLengthBounds",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.checkEncodeLengthBounds"
                },
                {
                    "function name": "testStrictDecoding",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testStrictDecoding"
                },
                {
                    "function name": "testSkipWrongArgument",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"
                },
                {
                    "function name": "testSkipWrongArgument",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"
                },
                {
                    "function name": "testEncodeOverMaxSize",
                    "function params": [
                        "maxSize"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"
                },
                {
                    "function name": "testObjectEncodeWithInvalidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"
                },
                {
                    "function name": "testObjectDecodeWithInvalidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"
                },
                {
                    "function name": "testEnsureBufferSizeThrowsOnOverflow",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.testEnsureBufferSizeThrowsOnOverflow"
                },
                {
                    "function name": "testCustomCharsetBadName",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testCustomCharsetBadName"
                },
                {
                    "function name": "testDecodeHexCharArrayOutBufferUnderSized",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOutBufferUnderSized"
                },
                {
                    "function name": "testDecodeHexCharArrayOutBufferUnderSizedByOffset",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOutBufferUnderSizedByOffset"
                },
                {
                    "function name": "testEmptyArguments",
                    "function params": [],
                    "file name": "DigestTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/cli/DigestTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/cli/DigestTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.cli.DigestTest.testEmptyArguments"
                },
                {
                    "function name": "testNullArguments",
                    "function params": [],
                    "file name": "DigestTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/cli/DigestTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/cli/DigestTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.cli.DigestTest.testNullArguments"
                },
                {
                    "function name": "testApr1CryptNullData",
                    "function params": [],
                    "file name": "Apr1CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData"
                },
                {
                    "function name": "testApr1CryptWithEmptySalt",
                    "function params": [],
                    "file name": "Apr1CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithEmptySalt"
                },
                {
                    "function name": "testApr1CryptWithInvalidSalt",
                    "function params": [],
                    "file name": "Apr1CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithInvalidSalt"
                },
                {
                    "function name": "testCryptWithEmptySalt",
                    "function params": [],
                    "file name": "CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"
                },
                {
                    "function name": "testInternalNoSuchAlgorithmException",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"
                },
                {
                    "function name": "testHmacHexFailString",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailString"
                },
                {
                    "function name": "testHmacHexFailByteArray",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailByteArray"
                },
                {
                    "function name": "testHmacFailString",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailString"
                },
                {
                    "function name": "testHmacFailInputStream",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailInputStream"
                },
                {
                    "function name": "testHmacHexFailInputStream",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailInputStream"
                },
                {
                    "function name": "testHmacFailByteArray",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailByteArray"
                },
                {
                    "function name": "testGetHmacNullKey",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testGetHmacNullKey"
                },
                {
                    "function name": "testGetHmacEmptyKey",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testGetHmacEmptyKey"
                },
                {
                    "function name": "testSha512HMacFail",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail"
                },
                {
                    "function name": "testInitializedMacNullKey",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey"
                },
                {
                    "function name": "testEmptyKey",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey"
                },
                {
                    "function name": "testSha256HMacFail",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail"
                },
                {
                    "function name": "testInternalNoSuchAlgorithmException",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testInternalNoSuchAlgorithmException"
                },
                {
                    "function name": "testNullKey",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testNullKey"
                },
                {
                    "function name": "testSha1HMacFail",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail"
                },
                {
                    "function name": "testSha384HMacFail",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail"
                },
                {
                    "function name": "testInitializedMacNullAlgo",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullAlgo"
                },
                {
                    "function name": "testSecretKeySpecAllowsEmtyKeys",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testSecretKeySpecAllowsEmtyKeys"
                },
                {
                    "function name": "testMd5HMacFail",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail"
                },
                {
                    "function name": "testMd5CryptWithEmptySalt",
                    "function params": [],
                    "file name": "Md5CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"
                },
                {
                    "function name": "testMd5CryptNullData",
                    "function params": [],
                    "file name": "Md5CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"
                },
                {
                    "function name": "testSha256CryptNullData",
                    "function params": [],
                    "file name": "Sha256CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"
                },
                {
                    "function name": "testSha256CryptWithEmptySalt",
                    "function params": [],
                    "file name": "Sha256CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"
                },
                {
                    "function name": "testSha512CryptNullData",
                    "function params": [],
                    "file name": "Sha512CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullData"
                },
                {
                    "function name": "testSha512CryptWithEmptySalt",
                    "function params": [],
                    "file name": "Sha512CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"
                },
                {
                    "function name": "testSha2CryptWrongSalt",
                    "function params": [],
                    "file name": "Sha512CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"
                },
                {
                    "function name": "testUnixCryptWithEmptySalt",
                    "function params": [],
                    "file name": "UnixCryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt"
                },
                {
                    "function name": "testUnixCryptNullData",
                    "function params": [],
                    "file name": "UnixCryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptNullData"
                },
                {
                    "function name": "testUnicCryptInvalidSalt",
                    "function params": [],
                    "file name": "UnixCryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt"
                },
                {
                    "function name": "testUnixCryptWithHalfSalt",
                    "function params": [],
                    "file name": "UnixCryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt"
                },
                {
                    "function name": "testCanFail",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testCanFail"
                },
                {
                    "function name": "testInvalidLangIllegalStateException",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"
                },
                {
                    "function name": "testInvalidLangIllegalArgumentException",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"
                },
                {
                    "function name": "testInvalidLanguageIllegalArgumentException",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"
                },
                {
                    "function name": "testSetRuleTypeToRulesIllegalArgumentException",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"
                },
                {
                    "function name": "testNegativeIndexForRuleMatchIndexOutOfBoundsException",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"
                },
                {
                    "function name": "testInvalidEncoding",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"
                },
                {
                    "function name": "testDecodeUnsupportedObject",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testDecodeUnsupportedObject"
                },
                {
                    "function name": "testEncodeUnsupportedObject",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testEncodeUnsupportedObject"
                },
                {
                    "function name": "testInvalidEncoding",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"
                },
                {
                    "function name": "testInvalidEncoding",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"
                },
                {
                    "function name": "assertExpectedDecoderException",
                    "function params": [
                        "s"
                    ],
                    "file name": "RFC1522CodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.RFC1522CodecTest.assertExpectedDecoderException"
                }
            ],
            "date": "2022-02-19"
        },
        {
            "commit_id": 1336,
            "hash": "27c6dde7bd54169f41ada76e6709bcc9e0e5bf8f",
            "commit_summary": "Avoid C-style array declaration and use Java instead. (#108)",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                "src/main/java/org/apache/commons/codec/language/Soundex.java"
            ],
            "functions": [
                {
                    "function name": "read",
                    "function params": [
                        "offset",
                        "len"
                    ],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecInputStream.read"
                },
                {
                    "function name": "read",
                    "function params": [
                        "array",
                        "offset",
                        "len"
                    ],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecInputStream.read"
                },
                {
                    "function name": "write",
                    "function params": [
                        "array",
                        "offset",
                        "len"
                    ],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "offset",
                        "len"
                    ],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.write"
                },
                {
                    "function name": "dEncrypt",
                    "function params": [
                        "el",
                        "r",
                        "s",
                        "e0",
                        "e1",
                        "sArr"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.dEncrypt"
                },
                {
                    "function name": "fourBytesToInt",
                    "function params": [
                        "b",
                        "offset"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.fourBytesToInt"
                },
                {
                    "function name": "dEncrypt",
                    "function params": [
                        "el",
                        "r",
                        "s",
                        "e0",
                        "e1"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.dEncrypt"
                },
                {
                    "function name": "permOp",
                    "function params": [
                        "a",
                        "b",
                        "n",
                        "m",
                        "results"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.permOp"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "original",
                        "salt"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.crypt"
                },
                {
                    "function name": "intToFourBytes",
                    "function params": [
                        "iValue",
                        "b",
                        "offset"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.intToFourBytes"
                },
                {
                    "function name": "body",
                    "function params": [
                        "schedule",
                        "eSwap0",
                        "eSwap1"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.body"
                },
                {
                    "function name": "desSetKey",
                    "function params": [
                        "key"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.desSetKey"
                },
                {
                    "function name": "body",
                    "function params": [
                        "eSwap0",
                        "eSwap1"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.body"
                },
                {
                    "function name": "permOp",
                    "function params": [
                        "a",
                        "b",
                        "n",
                        "m"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.permOp"
                },
                {
                    "function name": "fourBytesToInt",
                    "function params": [
                        "offset"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.fourBytesToInt"
                },
                {
                    "function name": "intToFourBytes",
                    "function params": [
                        "iValue",
                        "offset"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.intToFourBytes"
                },
                {
                    "function name": "desSetKey",
                    "function params": [],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.desSetKey"
                },
                {
                    "function name": "soundex",
                    "function params": [
                        "str"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.soundex"
                }
            ],
            "date": "2022-02-19"
        },
        {
            "commit_id": 1337,
            "hash": "fb84f6d9732d44cda0edf449f7a5cba0b340731a",
            "commit_summary": "Java 8 improvements: (#106)\n\n* Replace Anonymous with lambda.\r\n* Use Comparator",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java"
            ],
            "functions": [
                {
                    "function name": "parseRules",
                    "function params": [
                        "scanner",
                        "location",
                        "ruleMapping",
                        "asciiFoldings"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules"
                },
                {
                    "function name": "for",
                    "function params": [
                        "rule"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.for"
                },
                {
                    "function name": "soundex",
                    "function params": [
                        "source",
                        "branching"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex"
                },
                {
                    "function name": "Phoneme",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "Phoneme",
                    "function params": [
                        "i"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "pattern",
                    "function params": [
                        "regex"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.pattern"
                },
                {
                    "function name": "pattern",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.pattern"
                },
                {
                    "function name": "parseRules",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.parseRules"
                },
                {
                    "function name": "parseRules",
                    "function params": [
                        "scanner",
                        "location"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.parseRules"
                }
            ],
            "date": "2022-02-19"
        },
        {
            "commit_id": 1338,
            "hash": "2e36e5f5e99191ef378b5fef39dd94cbf29f58d8",
            "commit_summary": "Remove printStackTrace from test",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java"
            ],
            "functions": [
                {
                    "function name": "testStrictDecoding",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testStrictDecoding"
                }
            ],
            "date": "2022-02-20"
        },
        {
            "commit_id": 1339,
            "hash": "03ae658e5449d7a3b6c9fa2ee38e712b41d85123",
            "commit_summary": "Inline variable. (#107)",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java"
            ],
            "functions": [
                {
                    "function name": "hash64",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "byteToUnsigned",
                    "function params": [
                        "b"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned"
                }
            ],
            "date": "2022-02-20"
        },
        {
            "commit_id": 1340,
            "hash": "2b32ca08e1097c92d3ee2a1501c43fd8f2b4130d",
            "commit_summary": "All tests in codec migrated to JUnit 5 (#113)\n\nunit-vintage-engine dropped from pom.xml",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                "src/test/java/org/apache/commons/codec/CharEncodingTest.java",
                "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                "src/test/java/org/apache/commons/codec/DecoderExceptionTest.java",
                "src/test/java/org/apache/commons/codec/EncoderExceptionTest.java",
                "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java",
                "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                "src/test/java/org/apache/commons/codec/binary/CharSequenceUtilsTest.java",
                "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                "src/test/java/org/apache/commons/codec/cli/DigestTest.java",
                "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/B64Test.java",
                "src/test/java/org/apache/commons/codec/digest/Blake3Test.java",
                "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java",
                "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/Sha2CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/XXHash32OverflowTest.java",
                "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                "src/test/java/org/apache/commons/codec/language/Caverphone1Test.java",
                "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java",
                "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                "src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                "src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java",
                "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/CacheSubSequencePerformanceTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEnginePerformanceTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/RuleTest.java",
                "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/RFC1522CodecTest.java",
                "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/UtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "testUtf16Le",
                    "function params": [],
                    "file name": "CharEncodingTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharEncodingTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharEncodingTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharEncodingTest.testUtf16Le"
                },
                {
                    "function name": "testIso8859_1",
                    "function params": [],
                    "file name": "CharEncodingTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharEncodingTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharEncodingTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharEncodingTest.testIso8859_1"
                },
                {
                    "function name": "testUtf8",
                    "function params": [],
                    "file name": "CharEncodingTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharEncodingTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharEncodingTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharEncodingTest.testUtf8"
                },
                {
                    "function name": "testUtf16",
                    "function params": [],
                    "file name": "CharEncodingTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharEncodingTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharEncodingTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharEncodingTest.testUtf16"
                },
                {
                    "function name": "testUtf16Be",
                    "function params": [],
                    "file name": "CharEncodingTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharEncodingTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharEncodingTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharEncodingTest.testUtf16Be"
                },
                {
                    "function name": "testUsAscii",
                    "function params": [],
                    "file name": "CharEncodingTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharEncodingTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharEncodingTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharEncodingTest.testUsAscii"
                },
                {
                    "function name": "testToCharset",
                    "function params": [],
                    "file name": "CharsetsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharsetsTest.testToCharset"
                },
                {
                    "function name": "testUtf16Le",
                    "function params": [],
                    "file name": "CharsetsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharsetsTest.testUtf16Le"
                },
                {
                    "function name": "testUtf8",
                    "function params": [],
                    "file name": "CharsetsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharsetsTest.testUtf8"
                },
                {
                    "function name": "testUtf16",
                    "function params": [],
                    "file name": "CharsetsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharsetsTest.testUtf16"
                },
                {
                    "function name": "testIso8859_1",
                    "function params": [],
                    "file name": "CharsetsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharsetsTest.testIso8859_1"
                },
                {
                    "function name": "testUtf16Be",
                    "function params": [],
                    "file name": "CharsetsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharsetsTest.testUtf16Be"
                },
                {
                    "function name": "testUsAscii",
                    "function params": [],
                    "file name": "CharsetsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharsetsTest.testUsAscii"
                },
                {
                    "function name": "testLocaleIndependence",
                    "function params": [],
                    "file name": "StringEncoderAbstractTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.StringEncoderAbstractTest.testLocaleIndependence"
                },
                {
                    "function name": "testEncodeWithInvalidObject",
                    "function params": [],
                    "file name": "StringEncoderAbstractTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.StringEncoderAbstractTest.testEncodeWithInvalidObject"
                },
                {
                    "function name": "checkEncoding",
                    "function params": [
                        "expected",
                        "source"
                    ],
                    "file name": "StringEncoderAbstractTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.StringEncoderAbstractTest.checkEncoding"
                },
                {
                    "function name": "testComparatorWithDoubleMetaphone",
                    "function params": [],
                    "file name": "StringEncoderComparatorTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"
                },
                {
                    "function name": "testComparatorWithDoubleMetaphoneAndInvalidInput",
                    "function params": [],
                    "file name": "StringEncoderComparatorTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"
                },
                {
                    "function name": "testComparatorWithSoundex",
                    "function params": [],
                    "file name": "StringEncoderComparatorTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"
                },
                {
                    "function name": "testRead0",
                    "function params": [],
                    "file name": "Base16InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16InputStreamTest.testRead0"
                },
                {
                    "function name": "testMarkSupported",
                    "function params": [],
                    "file name": "Base16InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16InputStreamTest.testMarkSupported"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "lowerCase"
                    ],
                    "file name": "Base16InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16InputStreamTest.testByChunk"
                },
                {
                    "function name": "testReadNull",
                    "function params": [],
                    "file name": "Base16InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16InputStreamTest.testReadNull"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "lowerCase"
                    ],
                    "file name": "Base16InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16InputStreamTest.testByteByByte"
                },
                {
                    "function name": "testReadOutOfBounds",
                    "function params": [],
                    "file name": "Base16InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16InputStreamTest.testReadOutOfBounds"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "lowerCase"
                    ],
                    "file name": "Base16OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16OutputStreamTest.testByteByByte"
                },
                {
                    "function name": "testWriteOutOfBounds",
                    "function params": [],
                    "file name": "Base16OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16OutputStreamTest.testWriteOutOfBounds"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "lowerCase"
                    ],
                    "file name": "Base16OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16OutputStreamTest.testByChunk"
                },
                {
                    "function name": "testByteToStringVariations",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testByteToStringVariations"
                },
                {
                    "function name": "testStringToByteVariations",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testStringToByteVariations"
                },
                {
                    "function name": "testObjectDecodeWithValidParameter",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testObjectDecodeWithValidParameter"
                },
                {
                    "function name": "testEmptyBase16",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testEmptyBase16"
                },
                {
                    "function name": "testObjectEncodeWithValidParameter",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testObjectEncodeWithValidParameter"
                },
                {
                    "function name": "testBase16",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testBase16"
                },
                {
                    "function name": "testNonBase16Test",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testNonBase16Test"
                },
                {
                    "function name": "testObjectEncode",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testObjectEncode"
                },
                {
                    "function name": "testEncodeDecodeSmall",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testEncodeDecodeSmall"
                },
                {
                    "function name": "testConstructor_LowerCase",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testConstructor_LowerCase"
                },
                {
                    "function name": "testConstructor_LowerCase_DecodingPolicy",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testConstructor_LowerCase_DecodingPolicy"
                },
                {
                    "function name": "testBase16InBuffer",
                    "function params": [
                        "startPasSize",
                        "endPadSize"
                    ],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testBase16InBuffer"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "separator"
                    ],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testByteByByte"
                },
                {
                    "function name": "testMarkSupported",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"
                },
                {
                    "function name": "testRead0",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "separator"
                    ],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testByChunk"
                },
                {
                    "function name": "testReadOutOfBounds",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"
                },
                {
                    "function name": "testWriteOutOfBounds",
                    "function params": [],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "separator"
                    ],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testByteByByte"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "separator"
                    ],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testByChunk"
                },
                {
                    "function name": "testRandomBytesHex",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"
                },
                {
                    "function name": "testRandomBytes",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testRandomBytes"
                },
                {
                    "function name": "testEmptyBase32",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testEmptyBase32"
                },
                {
                    "function name": "testRandomBytesChunked",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"
                },
                {
                    "function name": "testConstructors",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testConstructors"
                },
                {
                    "function name": "assertBase32DecodingOfTrailingBits",
                    "function params": [
                        "nbits"
                    ],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.assertBase32DecodingOfTrailingBits"
                },
                {
                    "function name": "testStaticDecodeChunked",
                    "function params": [],
                    "file name": "Base64Codec13Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"
                },
                {
                    "function name": "testStaticEncode",
                    "function params": [],
                    "file name": "Base64Codec13Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"
                },
                {
                    "function name": "testStaticEncodeChunked",
                    "function params": [],
                    "file name": "Base64Codec13Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"
                },
                {
                    "function name": "testEncoder",
                    "function params": [],
                    "file name": "Base64Codec13Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"
                },
                {
                    "function name": "testBinaryDecoder",
                    "function params": [],
                    "file name": "Base64Codec13Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"
                },
                {
                    "function name": "testDecoder",
                    "function params": [],
                    "file name": "Base64Codec13Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"
                },
                {
                    "function name": "testStaticDecode",
                    "function params": [],
                    "file name": "Base64Codec13Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"
                },
                {
                    "function name": "testBinaryEncoder",
                    "function params": [],
                    "file name": "Base64Codec13Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"
                },
                {
                    "function name": "testCodec101",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"
                },
                {
                    "function name": "testCodec98NPE",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"
                },
                {
                    "function name": "testRead0",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"
                },
                {
                    "function name": "testInputStreamReader",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"
                },
                {
                    "function name": "testReadOutOfBounds",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "separator"
                    ],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testByteByByte"
                },
                {
                    "function name": "testMarkSupported",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "separator"
                    ],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testByChunk"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "separator"
                    ],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testByChunk"
                },
                {
                    "function name": "testWriteOutOfBounds",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"
                },
                {
                    "function name": "testStrictDecoding",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testStrictDecoding"
                },
                {
                    "function name": "testCodec98NPE",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "separator"
                    ],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testByteByByte"
                },
                {
                    "function name": "testBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testBase64"
                },
                {
                    "function name": "testConstructor_Int_ByteArray_Boolean_UrlSafe",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"
                },
                {
                    "function name": "testNonBase64Test",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testNonBase64Test"
                },
                {
                    "function name": "testEncodeDecodeSmall",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"
                },
                {
                    "function name": "testConstructors",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testConstructors"
                },
                {
                    "function name": "testBase64InBuffer",
                    "function params": [
                        "startPasSize",
                        "endPadSize"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testBase64InBuffer"
                },
                {
                    "function name": "testUUID",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testUUID"
                },
                {
                    "function name": "testStringToByteVariations",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"
                },
                {
                    "function name": "testUrlSafe",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testUrlSafe"
                },
                {
                    "function name": "testObjectDecodeWithValidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"
                },
                {
                    "function name": "testCodec112",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodec112"
                },
                {
                    "function name": "testCodeIntegerNull",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"
                },
                {
                    "function name": "testObjectDecodeWithInvalidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"
                },
                {
                    "function name": "testCodec265",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodec265"
                },
                {
                    "function name": "testChunkedEncodeMultipleOf76",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"
                },
                {
                    "function name": "testDecodeWithWhitespace",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"
                },
                {
                    "function name": "testObjectEncodeWithValidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"
                },
                {
                    "function name": "testDecodeWithInnerPad",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"
                },
                {
                    "function name": "testConstructor_Int_ByteArray_Boolean",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"
                },
                {
                    "function name": "testIsArrayByteBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"
                },
                {
                    "function name": "testIsUrlSafe",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"
                },
                {
                    "function name": "testObjectEncodeWithInvalidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"
                },
                {
                    "function name": "testHugeLineSeparator",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"
                },
                {
                    "function name": "testIsStringBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testIsStringBase64"
                },
                {
                    "function name": "testEmptyBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testEmptyBase64"
                },
                {
                    "function name": "testByteToStringVariations",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"
                },
                {
                    "function name": "assertBase64DecodingOfTrailingBits",
                    "function params": [
                        "nbits"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.assertBase64DecodingOfTrailingBits"
                },
                {
                    "function name": "testEnsureBufferSize",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.testEnsureBufferSize"
                },
                {
                    "function name": "assertEnsureBufferSizeExpandsToMaxBufferSize",
                    "function params": [
                        "exceedMaxBufferSize"
                    ],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.assertEnsureBufferSizeExpandsToMaxBufferSize"
                },
                {
                    "function name": "testContextToString",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.testContextToString"
                },
                {
                    "function name": "assumeCanAllocateBufferSize",
                    "function params": [
                        "size"
                    ],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.assumeCanAllocateBufferSize"
                },
                {
                    "function name": "RunTest",
                    "function params": [
                        "data",
                        "id"
                    ],
                    "file name": "CharSequenceUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/CharSequenceUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/CharSequenceUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.CharSequenceUtilsTest.RunTest"
                },
                {
                    "function name": "testGetCharset",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testGetCharset"
                },
                {
                    "function name": "testDecodeHexCharArrayOutBufferUnderSizedByOffset",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOutBufferUnderSizedByOffset"
                },
                {
                    "function name": "testDecodeByteArrayOddCharacters",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeByteArrayOddCharacters"
                },
                {
                    "function name": "testGetCharsetName",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testGetCharsetName"
                },
                {
                    "function name": "testDecodeClassCastException",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"
                },
                {
                    "function name": "testCustomCharset",
                    "function params": [
                        "name",
                        "parent"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testCustomCharset"
                },
                {
                    "function name": "testDecodeHexStringOddCharacters",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters"
                },
                {
                    "function name": "testGetBytesIso8859_1",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"
                },
                {
                    "function name": "testNewStringUtf16",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"
                },
                {
                    "function name": "testGetBytesUtf8",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"
                },
                {
                    "function name": "testNewString",
                    "function params": [
                        "charsetName"
                    ],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testNewString"
                },
                {
                    "function name": "testNewStringUsAscii",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"
                },
                {
                    "function name": "testNewStringIso8859_1",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"
                },
                {
                    "function name": "testGetBytesUsAscii",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"
                },
                {
                    "function name": "testGetBytesUncheckedNullInput",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedNullInput"
                },
                {
                    "function name": "testNewStringUtf16Le",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"
                },
                {
                    "function name": "testEqualsCS2",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testEqualsCS2"
                },
                {
                    "function name": "testGetBytesUtf16Be",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"
                },
                {
                    "function name": "testNewStringUtf16Be",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"
                },
                {
                    "function name": "testGetBytesUtf16",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"
                },
                {
                    "function name": "testNewStringNullInput",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput"
                },
                {
                    "function name": "testEqualsString",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testEqualsString"
                },
                {
                    "function name": "testGetBytesUtf16Le",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"
                },
                {
                    "function name": "testGetBytesUnchecked",
                    "function params": [
                        "charsetName"
                    ],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUnchecked"
                },
                {
                    "function name": "testNewStringUtf8",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"
                },
                {
                    "function name": "testNewStringNullInput_CODEC229",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput_CODEC229"
                },
                {
                    "function name": "testEqualsCS1",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testEqualsCS1"
                },
                {
                    "function name": "testByteBufferUtf8",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testByteBufferUtf8"
                },
                {
                    "function name": "assertThrowsProperExceptionWithKeySize",
                    "function params": [
                        "keySize"
                    ],
                    "file name": "Blake3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3Test.assertThrowsProperExceptionWithKeySize"
                },
                {
                    "function name": "keyDerivation",
                    "function params": [
                        "inputLength",
                        "hash",
                        "keyedHash",
                        "deriveKey"
                    ],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.keyDerivation"
                },
                {
                    "function name": "keyedHashArbitraryOutputLength",
                    "function params": [],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.keyedHashArbitraryOutputLength"
                },
                {
                    "function name": "keyedHashTruncatedOutput",
                    "function params": [],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.keyedHashTruncatedOutput"
                },
                {
                    "function name": "keyedHashTruncatedOutput",
                    "function params": [
                        "inputLength",
                        "hash",
                        "keyedHash",
                        "deriveKey"
                    ],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.keyedHashTruncatedOutput"
                },
                {
                    "function name": "hashArbitraryOutputLength",
                    "function params": [
                        "inputLength",
                        "hash",
                        "keyedHash",
                        "deriveKey"
                    ],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.hashArbitraryOutputLength"
                },
                {
                    "function name": "hashTruncatedOutput",
                    "function params": [],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.hashTruncatedOutput"
                },
                {
                    "function name": "initData",
                    "function params": [
                        "inputLength",
                        "hash",
                        "keyedHash",
                        "deriveKey"
                    ],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.initData"
                },
                {
                    "function name": "keyedHashArbitraryOutputLength",
                    "function params": [
                        "inputLength",
                        "hash",
                        "keyedHash",
                        "deriveKey"
                    ],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.keyedHashArbitraryOutputLength"
                },
                {
                    "function name": "keyDerivation",
                    "function params": [],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.keyDerivation"
                },
                {
                    "function name": "data",
                    "function params": [],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.data"
                },
                {
                    "function name": "hashTruncatedOutput",
                    "function params": [
                        "inputLength",
                        "hash",
                        "keyedHash",
                        "deriveKey"
                    ],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.hashTruncatedOutput"
                },
                {
                    "function name": "hashArbitraryOutputLength",
                    "function params": [],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.hashArbitraryOutputLength"
                },
                {
                    "function name": "assumeJava9",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.assumeJava9"
                },
                {
                    "function name": "assumeJava8",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.assumeJava8"
                },
                {
                    "function name": "data",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.data"
                },
                {
                    "function name": "testHmacHexFailString",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailString"
                },
                {
                    "function name": "testGetHmacEmptyKey",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testGetHmacEmptyKey"
                },
                {
                    "function name": "testAlgorithm",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testAlgorithm"
                },
                {
                    "function name": "testHmacFailString",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailString"
                },
                {
                    "function name": "testInitializedMac",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testInitializedMac"
                },
                {
                    "function name": "testMacString",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacString"
                },
                {
                    "function name": "testInitializedMac",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testInitializedMac"
                },
                {
                    "function name": "testHmacHexFailByteArray",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailByteArray"
                },
                {
                    "function name": "testHmacFailString",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailString"
                },
                {
                    "function name": "testMacByteArary",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacByteArary"
                },
                {
                    "function name": "testMacHexInputStream",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexInputStream"
                },
                {
                    "function name": "testGetHmacEmptyKey",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testGetHmacEmptyKey"
                },
                {
                    "function name": "testHmacHexFailInputStream",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailInputStream"
                },
                {
                    "function name": "testMacHexByteArray",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexByteArray"
                },
                {
                    "function name": "testAlgorithm",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testAlgorithm"
                },
                {
                    "function name": "testHmacHexFailByteArray",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailByteArray"
                },
                {
                    "function name": "testHmacFailByteArray",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailByteArray"
                },
                {
                    "function name": "testMacByteArary",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacByteArary"
                },
                {
                    "function name": "testMacHexByteArray",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexByteArray"
                },
                {
                    "function name": "testMacHexString",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexString"
                },
                {
                    "function name": "testMacHexString",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexString"
                },
                {
                    "function name": "testHmacFailInputStream",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailInputStream"
                },
                {
                    "function name": "testHmacHexFailInputStream",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailInputStream"
                },
                {
                    "function name": "testHmacFailByteArray",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailByteArray"
                },
                {
                    "function name": "testMacInputStream",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacInputStream"
                },
                {
                    "function name": "testHmacHexFailString",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailString"
                },
                {
                    "function name": "testGetHmacNullKey",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testGetHmacNullKey"
                },
                {
                    "function name": "testHmacFailInputStream",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailInputStream"
                },
                {
                    "function name": "testMacString",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacString"
                },
                {
                    "function name": "testGetHmacNullKey",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testGetHmacNullKey"
                },
                {
                    "function name": "testMacInputStream",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacInputStream"
                },
                {
                    "function name": "testMacHexInputStream",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexInputStream"
                },
                {
                    "function name": "testInitializedMac",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac"
                },
                {
                    "function name": "testSha384HMac",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac"
                },
                {
                    "function name": "testMd5HMac",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac"
                },
                {
                    "function name": "testSha256HMac",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac"
                },
                {
                    "function name": "testGetHMac",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac"
                },
                {
                    "function name": "testSha1HMac",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac"
                },
                {
                    "function name": "testSha512HMac",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac"
                },
                {
                    "function name": "testAlgorithm",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testAlgorithm"
                },
                {
                    "function name": "testDigestByteBuffer",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestByteBuffer"
                },
                {
                    "function name": "testDigestPath",
                    "function params": [
                        "options"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestPath"
                },
                {
                    "function name": "digestTestData",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.digestTestData"
                },
                {
                    "function name": "checkValues",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.checkValues"
                },
                {
                    "function name": "testDigestPathStandardOpenOptionRead",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestPathStandardOpenOptionRead"
                },
                {
                    "function name": "testAlgorithm",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testAlgorithm"
                },
                {
                    "function name": "testDigestByteArray",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestByteArray"
                },
                {
                    "function name": "testDigestFile",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestFile"
                },
                {
                    "function name": "testDigestByteArray",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestByteArray"
                },
                {
                    "function name": "testNonBlockingDigestRandomAccessFile",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testNonBlockingDigestRandomAccessFile"
                },
                {
                    "function name": "digestTestData",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.digestTestData"
                },
                {
                    "function name": "testNonBlockingDigestRandomAccessFile",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testNonBlockingDigestRandomAccessFile"
                },
                {
                    "function name": "testDigestPathOpenOptionsEmpty",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestPathOpenOptionsEmpty"
                },
                {
                    "function name": "testGetMessageDigest",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testGetMessageDigest"
                },
                {
                    "function name": "testDigestFile",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestFile"
                },
                {
                    "function name": "testDigestPathStandardOpenOptionRead",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestPathStandardOpenOptionRead"
                },
                {
                    "function name": "data",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.data"
                },
                {
                    "function name": "testDigestPathOpenOptionsEmpty",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestPathOpenOptionsEmpty"
                },
                {
                    "function name": "testDigestInputStream",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestInputStream"
                },
                {
                    "function name": "testDigestInputStream",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestInputStream"
                },
                {
                    "function name": "testDigestByteBuffer",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestByteBuffer"
                },
                {
                    "function name": "testDigestPath",
                    "function params": [
                        "messageDigestAlgorithm",
                        "options"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestPath"
                },
                {
                    "function name": "testGetMessageDigest",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testGetMessageDigest"
                },
                {
                    "function name": "testHash32ByteArrayInt",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash32ByteArrayInt"
                },
                {
                    "function name": "testHash32StringIntInt",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash32StringIntInt"
                },
                {
                    "function name": "testHash64StringIntInt",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash64StringIntInt"
                },
                {
                    "function name": "testHash64ByteArrayIntInt",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash64ByteArrayIntInt"
                },
                {
                    "function name": "testHash64String",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash64String"
                },
                {
                    "function name": "testHash32ByteArrayIntInt",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash32ByteArrayIntInt"
                },
                {
                    "function name": "testHash64ByteArrayInt",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash64ByteArrayInt"
                },
                {
                    "function name": "testHash32String",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash32String"
                },
                {
                    "function name": "testHash32LongLongSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32LongLongSeed"
                },
                {
                    "function name": "testHash32WithTrailingNegativeSignedBytesIsInvalid",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32WithTrailingNegativeSignedBytesIsInvalid"
                },
                {
                    "function name": "testHash32LongSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32LongSeed"
                },
                {
                    "function name": "testHash32Long",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32Long"
                },
                {
                    "function name": "testHash64",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash64"
                },
                {
                    "function name": "testHash128WithOffsetLengthAndNegativeSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash128WithOffsetLengthAndNegativeSeed"
                },
                {
                    "function name": "testHash64InNotEqualToHash128",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash64InNotEqualToHash128"
                },
                {
                    "function name": "testHash32WithLengthAndSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32WithLengthAndSeed"
                },
                {
                    "function name": "testHash32WithOffsetLengthAndSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32WithOffsetLengthAndSeed"
                },
                {
                    "function name": "testHash32x86WithOffsetLengthAndSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32x86WithOffsetLengthAndSeed"
                },
                {
                    "function name": "testHash32",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32"
                },
                {
                    "function name": "testHash32WithLength",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32WithLength"
                },
                {
                    "function name": "testHash64WithOffsetAndLength",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash64WithOffsetAndLength"
                },
                {
                    "function name": "testHash32String",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32String"
                },
                {
                    "function name": "testIncrementalHashWithUnprocessedBytesAndHugeLengthArray",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testIncrementalHashWithUnprocessedBytesAndHugeLengthArray"
                },
                {
                    "function name": "assertIncrementalHash32",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.assertIncrementalHash32"
                },
                {
                    "function name": "testHash128x64",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash128x64"
                },
                {
                    "function name": "testHash32x86",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32x86"
                },
                {
                    "function name": "testHash32x86WithTrailingNegativeSignedBytes",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32x86WithTrailingNegativeSignedBytes"
                },
                {
                    "function name": "testHash128x64WithOffsetLengthAndSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash128x64WithOffsetLengthAndSeed"
                },
                {
                    "function name": "testHash128",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash128"
                },
                {
                    "function name": "testHash32LongLong",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32LongLong"
                },
                {
                    "function name": "testHash128x64WithOffsetLengthAndNegativeSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash128x64WithOffsetLengthAndNegativeSeed"
                },
                {
                    "function name": "testHash128WithOffsetLengthAndSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash128WithOffsetLengthAndSeed"
                },
                {
                    "function name": "testHash64WithPrimitives",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash64WithPrimitives"
                },
                {
                    "function name": "assertIncrementalHash32x86",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.assertIncrementalHash32x86"
                },
                {
                    "function name": "testHash128String",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash128String"
                },
                {
                    "function name": "check",
                    "function params": [
                        "expected"
                    ],
                    "file name": "PureJavaCrc32CTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32CTest.check"
                },
                {
                    "function name": "checkSame",
                    "function params": [],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.checkSame"
                },
                {
                    "function name": "testIncrementalHashWithUnprocessedBytesAndHugeLengthArray",
                    "function params": [],
                    "file name": "XXHash32OverflowTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/XXHash32OverflowTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/XXHash32OverflowTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.XXHash32OverflowTest.testIncrementalHashWithUnprocessedBytesAndHugeLengthArray"
                },
                {
                    "function name": "verifyIncrementalChecksum",
                    "function params": [],
                    "file name": "XXHash32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.XXHash32Test.verifyIncrementalChecksum"
                },
                {
                    "function name": "initData",
                    "function params": [
                        "path",
                        "c"
                    ],
                    "file name": "XXHash32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.XXHash32Test.initData"
                },
                {
                    "function name": "verifyIncrementalChecksum",
                    "function params": [
                        "path",
                        "c"
                    ],
                    "file name": "XXHash32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.XXHash32Test.verifyIncrementalChecksum"
                },
                {
                    "function name": "verifyChecksum",
                    "function params": [
                        "path",
                        "c"
                    ],
                    "file name": "XXHash32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.XXHash32Test.verifyChecksum"
                },
                {
                    "function name": "data",
                    "function params": [],
                    "file name": "XXHash32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.XXHash32Test.data"
                },
                {
                    "function name": "verifyChecksum",
                    "function params": [],
                    "file name": "XXHash32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.XXHash32Test.verifyChecksum"
                },
                {
                    "function name": "testIsCaverphoneEquals",
                    "function params": [],
                    "file name": "Caverphone1Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/Caverphone1Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/Caverphone1Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals"
                },
                {
                    "function name": "testIsCaverphoneEquals",
                    "function params": [],
                    "file name": "Caverphone2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals"
                },
                {
                    "function name": "testIsEncodeEquals",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"
                },
                {
                    "function name": "testCanFail",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testCanFail"
                },
                {
                    "function name": "finishTests",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.finishTests"
                },
                {
                    "function name": "testSoundexBasic",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic"
                },
                {
                    "function name": "testEncodeBasic",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeBasic"
                },
                {
                    "function name": "testEncodeIgnoreTrimmable",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable"
                },
                {
                    "function name": "testAccentedCharacterFolding",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding"
                },
                {
                    "function name": "testSpecialRomanianCharacters",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters"
                },
                {
                    "function name": "testAdjacentCodes",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes"
                },
                {
                    "function name": "testSoundexBasic3",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3"
                },
                {
                    "function name": "testSoundexBasic2",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2"
                },
                {
                    "function name": "checkDoubleMetaphone",
                    "function params": [
                        "typeIndex",
                        "alternate"
                    ],
                    "file name": "DoubleMetaphone2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphone2Test.checkDoubleMetaphone"
                },
                {
                    "function name": "assertDoubleMetaphone",
                    "function params": [
                        "expected",
                        "source"
                    ],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.assertDoubleMetaphone"
                },
                {
                    "function name": "testSetMaxCodeLength",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"
                },
                {
                    "function name": "doubleMetaphoneEqualTest",
                    "function params": [
                        "pairs",
                        "useAlternate"
                    ],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"
                },
                {
                    "function name": "assertIsMetaphoneEqual",
                    "function params": [
                        "source",
                        "matches"
                    ],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.assertIsMetaphoneEqual"
                },
                {
                    "function name": "assertMetaphoneEqual",
                    "function params": [
                        "pairs"
                    ],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.assertMetaphoneEqual"
                },
                {
                    "function name": "assertEncodings",
                    "function params": [
                        "testValues"
                    ],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.assertEncodings"
                },
                {
                    "function name": "testTrueVariant",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testTrueVariant"
                },
                {
                    "function name": "encodeAll",
                    "function params": [
                        "strings",
                        "expectedEncoding"
                    ],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.encodeAll"
                },
                {
                    "function name": "testGetMappingCodeNonLetter",
                    "function params": [],
                    "file name": "RefinedSoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"
                },
                {
                    "function name": "testHWRuleEx2",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"
                },
                {
                    "function name": "testHWRuleEx3",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"
                },
                {
                    "function name": "testEncodeBatch4",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"
                },
                {
                    "function name": "testDifference",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testDifference"
                },
                {
                    "function name": "testGenealogy",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testGenealogy"
                },
                {
                    "function name": "testUsEnglishStatic",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"
                },
                {
                    "function name": "testWikipediaAmericanSoundex",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testWikipediaAmericanSoundex"
                },
                {
                    "function name": "testSimplifiedSoundex",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testSimplifiedSoundex"
                },
                {
                    "function name": "testUsMappingOWithDiaeresis",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"
                },
                {
                    "function name": "testNewInstance3",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testNewInstance3"
                },
                {
                    "function name": "testNewInstance2",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testNewInstance2"
                },
                {
                    "function name": "testSoundexUtilsNullBehaviour",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"
                },
                {
                    "function name": "testMsSqlServer3",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"
                },
                {
                    "function name": "testHWRuleEx1",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"
                },
                {
                    "function name": "testEncodeBasic",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testEncodeBasic"
                },
                {
                    "function name": "testEncodeBatch2",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"
                },
                {
                    "function name": "testBadCharacters",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testBadCharacters"
                },
                {
                    "function name": "testEncodeIgnoreTrimmable",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"
                },
                {
                    "function name": "testEncodeBatch3",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"
                },
                {
                    "function name": "testNewInstance",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testNewInstance"
                },
                {
                    "function name": "testUsMappingEWithAcute",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"
                },
                {
                    "function name": "testMsSqlServer1",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"
                },
                {
                    "function name": "assertNotEmpty",
                    "function params": [
                        "bmpm",
                        "value"
                    ],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.assertNotEmpty"
                },
                {
                    "function name": "testSetConcat",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"
                },
                {
                    "function name": "testSetRuleTypeExact",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"
                },
                {
                    "function name": "testSetNameTypeAsh",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"
                },
                {
                    "function name": "testLongestEnglishSurname",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"
                },
                {
                    "function name": "testLanguageGuessing",
                    "function params": [
                        "name",
                        "language"
                    ],
                    "file name": "LanguageGuessingTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"
                },
                {
                    "function name": "testLanguageGuessing",
                    "function params": [],
                    "file name": "LanguageGuessingTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"
                },
                {
                    "function name": "data",
                    "function params": [],
                    "file name": "LanguageGuessingTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.LanguageGuessingTest.data"
                },
                {
                    "function name": "testSolrGENERIC",
                    "function params": [],
                    "file name": "PhoneticEngineRegressionTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC"
                },
                {
                    "function name": "testSolrSEPHARDIC",
                    "function params": [],
                    "file name": "PhoneticEngineRegressionTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"
                },
                {
                    "function name": "testSolrASHKENAZI",
                    "function params": [],
                    "file name": "PhoneticEngineRegressionTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"
                },
                {
                    "function name": "testCompatibilityWithOriginalVersion",
                    "function params": [],
                    "file name": "PhoneticEngineRegressionTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion"
                },
                {
                    "function name": "testEncode",
                    "function params": [
                        "name",
                        "phoneticExpected",
                        "nameType",
                        "ruleType",
                        "concat",
                        "maxPhonemes"
                    ],
                    "file name": "PhoneticEngineTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineTest.testEncode"
                },
                {
                    "function name": "testEncode",
                    "function params": [],
                    "file name": "PhoneticEngineTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineTest.testEncode"
                },
                {
                    "function name": "data",
                    "function params": [],
                    "file name": "PhoneticEngineTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineTest.data"
                },
                {
                    "function name": "testPhonemeComparedToLaterIsNegative",
                    "function params": [],
                    "file name": "RuleTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/RuleTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/RuleTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative"
                },
                {
                    "function name": "testPhonemeComparedToSelfIsZero",
                    "function params": [],
                    "file name": "RuleTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/RuleTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/RuleTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero"
                },
                {
                    "function name": "testDecodeStringWithNull",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"
                },
                {
                    "function name": "testEncodeStringWithNull",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testBase64ImpossibleSamplesStrict",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testBase64ImpossibleSamplesStrict"
                },
                {
                    "function name": "testEncodeDecodeNull",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"
                },
                {
                    "function name": "testBase64ImpossibleSamplesLenient",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testBase64ImpossibleSamplesLenient"
                },
                {
                    "function name": "testBase64ImpossibleSamplesDefault",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testBase64ImpossibleSamplesDefault"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testEncodeObjects"
                },
                {
                    "function name": "testBasicEncodeDecode",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"
                },
                {
                    "function name": "testSafeCharEncodeDecodeObject",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testSafeCharEncodeDecodeObject"
                },
                {
                    "function name": "testPercentEncoderDecoderWithNullOrEmptyInput",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testPercentEncoderDecoderWithNullOrEmptyInput"
                },
                {
                    "function name": "testConfigurablePercentEncoder",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testConfigurablePercentEncoder"
                },
                {
                    "function name": "testUnsafeCharEncodeDecode",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testUnsafeCharEncodeDecode"
                },
                {
                    "function name": "testBasicEncodeDecode",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testBasicEncodeDecode"
                },
                {
                    "function name": "testPercentEncoderDecoderWithPlusForSpace",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testPercentEncoderDecoderWithPlusForSpace"
                },
                {
                    "function name": "testBasicSpace",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testBasicSpace"
                },
                {
                    "function name": "testBasicEncodeDecode",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"
                },
                {
                    "function name": "testUnsafeEncodeDecode",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"
                },
                {
                    "function name": "testEncodeDecodeBlanks",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testEncodeDecodeNull",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testEncodeObjects"
                },
                {
                    "function name": "testDecodeStringWithNull",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"
                },
                {
                    "function name": "testEncodeStringWithNull",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"
                },
                {
                    "function name": "testUnsafeEncodeDecode",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"
                },
                {
                    "function name": "testSafeCharEncodeDecode",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"
                },
                {
                    "function name": "testDecodeInvalid",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testEncodeDecodeNull",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"
                },
                {
                    "function name": "testEncodeNull",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"
                },
                {
                    "function name": "testDecodeWithNullArray",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"
                },
                {
                    "function name": "testDecodeStringWithNull",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"
                },
                {
                    "function name": "testEncodeUrlWithNullBitSet",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"
                },
                {
                    "function name": "testBasicEncodeDecode",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"
                },
                {
                    "function name": "testEncodeStringWithNull",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"
                },
                {
                    "function name": "testSafeCharEncodeDecode",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"
                },
                {
                    "function name": "testInvalidEncoding",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testDecodeInvalid",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"
                },
                {
                    "function name": "testUnsafeEncodeDecode",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"
                },
                {
                    "function name": "testDecodeStringWithNull",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"
                },
                {
                    "function name": "testEncodeDecodeNull",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"
                },
                {
                    "function name": "testBasicEncodeDecode",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"
                },
                {
                    "function name": "testEncodeStringWithNull",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"
                },
                {
                    "function name": "testEncodeUrlWithNullBitSet",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"
                },
                {
                    "function name": "testDecodeWithNullArray",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"
                },
                {
                    "function name": "testEncodeNull",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testEncodeNull"
                }
            ],
            "date": "2022-02-22"
        },
        {
            "commit_id": 1341,
            "hash": "297f04da01e0ae2c18afc3a3667313adbf716fbe",
            "commit_summary": "Validate byte and string. (#78)",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                "src/main/java/org/apache/commons/codec/language/Caverphone2.java",
                "src/main/java/org/apache/commons/codec/language/SoundexUtils.java"
            ],
            "functions": [
                {
                    "function name": "encodeBase64",
                    "function params": [
                        "binaryData",
                        "isChunked",
                        "urlSafe",
                        "maxResultSize"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encodeBase64"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pArray",
                        "offset",
                        "length"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.encode"
                },
                {
                    "function name": "isEmpty",
                    "function params": [
                        "array"
                    ],
                    "file name": "BinaryCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BinaryCodec.isEmpty"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "source"
                    ],
                    "file name": "Caverphone2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Caverphone2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Caverphone2.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Caverphone2.encode"
                },
                {
                    "function name": "clean",
                    "function params": [
                        "str"
                    ],
                    "file name": "SoundexUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/SoundexUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/SoundexUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.SoundexUtils.clean"
                },
                {
                    "function name": "isEmpty",
                    "function params": [
                        "cs"
                    ],
                    "file name": "SoundexUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/SoundexUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/SoundexUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.SoundexUtils.isEmpty"
                }
            ],
            "date": "2022-02-22"
        },
        {
            "commit_id": 1342,
            "hash": "ebebbd427d80639692b2a06e51cc2885a1543b18",
            "commit_summary": "git-wip-us => gitbox",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                "src/main/java/org/apache/commons/codec/digest/XXHash32.java"
            ],
            "functions": [],
            "date": "2022-04-05"
        },
        {
            "commit_id": 1343,
            "hash": "042e4d54a708ed1446de8f7d5ec6aa32cceb64a9",
            "commit_summary": "Remove unnecessary imports.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/Caverphone2.java",
                "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                "src/main/java/org/apache/commons/codec/language/SoundexUtils.java"
            ],
            "functions": [],
            "date": "2022-04-16"
        },
        {
            "commit_id": 1344,
            "hash": "4ca1ae688fea9308f213fda3b7090ebfd5445834",
            "commit_summary": "Avoid calculations the minimum or the maximum of two numbers manually.Use Math.max() or Math.min().",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java"
            ],
            "functions": [
                {
                    "function name": "createPositiveCapacity",
                    "function params": [
                        "minCapacity"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.createPositiveCapacity"
                },
                {
                    "function name": "md5Crypt",
                    "function params": [
                        "keyBytes",
                        "salt",
                        "prefix",
                        "random"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.md5Crypt"
                }
            ],
            "date": "2022-04-16"
        },
        {
            "commit_id": 1345,
            "hash": "d400fd04389821cf80acce33ccd77091d194519c",
            "commit_summary": "Use String.contains() functions. (#125)",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java"
            ],
            "functions": [
                {
                    "function name": "isSlavoGermanic",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic"
                }
            ],
            "date": "2022-04-17"
        },
        {
            "commit_id": 1346,
            "hash": "8993f9a645d740dc5105443cdfd7277df243b7a3",
            "commit_summary": "Avoid use toString() or substring()in favor of a simplified expression. (#126)",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java"
            ],
            "functions": [
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "input",
                        "languageSet"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.encode"
                }
            ],
            "date": "2022-04-17"
        },
        {
            "commit_id": 1347,
            "hash": "0385c8b72d0eb5c840c2cabf8154dbd0e4917e23",
            "commit_summary": "Avoid use toString() or substring() in favor of a simplified expression.\n\nNo longer need to check length since contains() call does not need to\nguarded.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "input",
                        "languageSet"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.encode"
                }
            ],
            "date": "2022-04-17"
        },
        {
            "commit_id": 1348,
            "hash": "eb5a01ae2c4035924904494f820f18fbec1db1bc",
            "commit_summary": "Make Package private class static.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [],
            "date": "2022-04-17"
        },
        {
            "commit_id": 1349,
            "hash": "54677f44b2efdf52cade07c7dcf20c856fc7a6cc",
            "commit_summary": "Remove unused exceptions",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/URLCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "testByteToStringVariations",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testByteToStringVariations"
                },
                {
                    "function name": "testEncodeDecodeHexCharArrayRandomToOutput",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeDecodeHexCharArrayRandomToOutput"
                },
                {
                    "function name": "testHmacHexFailInputStream",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailInputStream"
                },
                {
                    "function name": "testHmacFailInputStream",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailInputStream"
                },
                {
                    "function name": "testLongestEnglishSurname",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"
                },
                {
                    "function name": "testBase64ImpossibleSamplesStrict",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testBase64ImpossibleSamplesStrict"
                },
                {
                    "function name": "testDecodeInvalidContent",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"
                }
            ],
            "date": "2022-05-22"
        },
        {
            "commit_id": 1350,
            "hash": "23a1022e8810849d1479ea85e84a5133b34562f1",
            "commit_summary": "Remove unused exceptions",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/cli/DigestTest.java"
            ],
            "functions": [],
            "date": "2022-05-22"
        },
        {
            "commit_id": 1351,
            "hash": "f5ed85f6e278b01a173504dc7b06d3378b11f7e5",
            "commit_summary": "Access constant directly.",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "testRfc2045Section2Dot1CrLfDefinition",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"
                },
                {
                    "function name": "testRfc4648Section10DecodeWithCrLf",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"
                }
            ],
            "date": "2022-05-22"
        },
        {
            "commit_id": 1352,
            "hash": "767ecc184246c2a1f11517c8e37d15efb0a2f782",
            "commit_summary": "Use try-with-resources; use final.",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                "src/test/java/org/apache/commons/codec/language/bm/LanguageGuessingTest.java"
            ],
            "functions": [
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "lowerCase"
                    ],
                    "file name": "Base16OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16OutputStreamTest.testByChunk"
                },
                {
                    "function name": "testBase16OutputStreamByChunk",
                    "function params": [],
                    "file name": "Base16OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16OutputStreamTest.testBase16OutputStreamByChunk"
                },
                {
                    "function name": "testStrictDecoding",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testStrictDecoding"
                },
                {
                    "function name": "testStrictDecoding",
                    "function params": [],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testStrictDecoding"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "separator"
                    ],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testByChunk"
                },
                {
                    "function name": "testStrictDecoding",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testStrictDecoding"
                },
                {
                    "function name": "testStrictDecoding",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testStrictDecoding"
                },
                {
                    "function name": "testNonBase64Test",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testNonBase64Test"
                },
                {
                    "function name": "keyedHashTruncatedOutput",
                    "function params": [
                        "inputLength",
                        "hash",
                        "keyedHash",
                        "deriveKey"
                    ],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.keyedHashTruncatedOutput"
                },
                {
                    "function name": "keyDerivation",
                    "function params": [
                        "inputLength",
                        "hash",
                        "keyedHash",
                        "deriveKey"
                    ],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.keyDerivation"
                },
                {
                    "function name": "keyedHashTruncatedOutput",
                    "function params": [
                        "inputLength",
                        "hash",
                        "keyedHash",
                        "deriveKey"
                    ],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.keyedHashTruncatedOutput"
                },
                {
                    "function name": "keyedHashArbitraryOutputLength",
                    "function params": [
                        "inputLength",
                        "hash",
                        "keyedHash",
                        "deriveKey"
                    ],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.keyedHashArbitraryOutputLength"
                },
                {
                    "function name": "hashArbitraryOutputLength",
                    "function params": [
                        "inputLength",
                        "hash",
                        "keyedHash",
                        "deriveKey"
                    ],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.hashArbitraryOutputLength"
                },
                {
                    "function name": "keyedHashArbitraryOutputLength",
                    "function params": [
                        "inputLength",
                        "hash",
                        "keyedHash",
                        "deriveKey"
                    ],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.keyedHashArbitraryOutputLength"
                },
                {
                    "function name": "keyDerivation",
                    "function params": [
                        "inputLength",
                        "hash",
                        "keyedHash",
                        "deriveKey"
                    ],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.keyDerivation"
                },
                {
                    "function name": "hashArbitraryOutputLength",
                    "function params": [
                        "inputLength",
                        "hash",
                        "keyedHash",
                        "deriveKey"
                    ],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.hashArbitraryOutputLength"
                },
                {
                    "function name": "hashTruncatedOutput",
                    "function params": [
                        "inputLength",
                        "hash",
                        "keyedHash",
                        "deriveKey"
                    ],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.hashTruncatedOutput"
                },
                {
                    "function name": "hashTruncatedOutput",
                    "function params": [
                        "inputLength",
                        "hash",
                        "keyedHash",
                        "deriveKey"
                    ],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.hashTruncatedOutput"
                },
                {
                    "function name": "testGetHmacNullKey",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testGetHmacNullKey"
                },
                {
                    "function name": "testGetHmacEmptyKey",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testGetHmacEmptyKey"
                },
                {
                    "function name": "testHmacHexFailInputStream",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailInputStream"
                },
                {
                    "function name": "testInitializedMac",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testInitializedMac"
                },
                {
                    "function name": "testMacInputStream",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacInputStream"
                },
                {
                    "function name": "testHmacFailByteArray",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailByteArray"
                },
                {
                    "function name": "testHmacFailString",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailString"
                },
                {
                    "function name": "testHmacHexFailString",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailString"
                },
                {
                    "function name": "testInitializedMac",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testInitializedMac"
                },
                {
                    "function name": "testHmacFailString",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailString"
                },
                {
                    "function name": "testMacHexByteArray",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexByteArray"
                },
                {
                    "function name": "testMacHexInputStream",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexInputStream"
                },
                {
                    "function name": "testHmacHexFailInputStream",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailInputStream"
                },
                {
                    "function name": "testHmacHexFailByteArray",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailByteArray"
                },
                {
                    "function name": "testAlgorithm",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testAlgorithm"
                },
                {
                    "function name": "testMacHexString",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexString"
                },
                {
                    "function name": "testHmacHexFailByteArray",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailByteArray"
                },
                {
                    "function name": "testHmacFailByteArray",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailByteArray"
                },
                {
                    "function name": "testMacHexByteArray",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexByteArray"
                },
                {
                    "function name": "testAlgorithm",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testAlgorithm"
                },
                {
                    "function name": "testGetHmacEmptyKey",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testGetHmacEmptyKey"
                },
                {
                    "function name": "testMacByteArary",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacByteArary"
                },
                {
                    "function name": "testHmacFailInputStream",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailInputStream"
                },
                {
                    "function name": "testMacByteArary",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacByteArary"
                },
                {
                    "function name": "testMacHexString",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexString"
                },
                {
                    "function name": "testMacString",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacString"
                },
                {
                    "function name": "testHmacHexFailString",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailString"
                },
                {
                    "function name": "testGetHmacNullKey",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testGetHmacNullKey"
                },
                {
                    "function name": "testHmacFailInputStream",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailInputStream"
                },
                {
                    "function name": "testMacString",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacString"
                },
                {
                    "function name": "testMacInputStream",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacInputStream"
                },
                {
                    "function name": "testMacHexInputStream",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexInputStream"
                },
                {
                    "function name": "testAlgorithm",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testAlgorithm"
                },
                {
                    "function name": "testDigestByteBuffer",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestByteBuffer"
                },
                {
                    "function name": "digestTestData",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.digestTestData"
                },
                {
                    "function name": "digestTestData",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.digestTestData"
                },
                {
                    "function name": "testDigestPathStandardOpenOptionRead",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestPathStandardOpenOptionRead"
                },
                {
                    "function name": "testDigestFile",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestFile"
                },
                {
                    "function name": "testDigestByteArray",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestByteArray"
                },
                {
                    "function name": "testDigestFile",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestFile"
                },
                {
                    "function name": "testAlgorithm",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testAlgorithm"
                },
                {
                    "function name": "testGetMessageDigest",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testGetMessageDigest"
                },
                {
                    "function name": "testDigestPath",
                    "function params": [
                        "messageDigestAlgorithm",
                        "options"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestPath"
                },
                {
                    "function name": "testDigestInputStream",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestInputStream"
                },
                {
                    "function name": "testNonBlockingDigestRandomAccessFile",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testNonBlockingDigestRandomAccessFile"
                },
                {
                    "function name": "testDigestPathOpenOptionsEmpty",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestPathOpenOptionsEmpty"
                },
                {
                    "function name": "testDigestPathStandardOpenOptionRead",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestPathStandardOpenOptionRead"
                },
                {
                    "function name": "testGetMessageDigest",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testGetMessageDigest"
                },
                {
                    "function name": "testDigestPath",
                    "function params": [
                        "messageDigestAlgorithm",
                        "options"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestPath"
                },
                {
                    "function name": "testDigestByteArray",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestByteArray"
                },
                {
                    "function name": "testDigestInputStream",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestInputStream"
                },
                {
                    "function name": "testDigestPathOpenOptionsEmpty",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestPathOpenOptionsEmpty"
                },
                {
                    "function name": "testDigestByteBuffer",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestByteBuffer"
                },
                {
                    "function name": "testNonBlockingDigestRandomAccessFile",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testNonBlockingDigestRandomAccessFile"
                },
                {
                    "function name": "verifyChecksum",
                    "function params": [
                        "path",
                        "c"
                    ],
                    "file name": "XXHash32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.XXHash32Test.verifyChecksum"
                },
                {
                    "function name": "verifyIncrementalChecksum",
                    "function params": [
                        "path",
                        "c"
                    ],
                    "file name": "XXHash32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.XXHash32Test.verifyIncrementalChecksum"
                },
                {
                    "function name": "verifyChecksum",
                    "function params": [
                        "path",
                        "c"
                    ],
                    "file name": "XXHash32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.XXHash32Test.verifyChecksum"
                },
                {
                    "function name": "verifyIncrementalChecksum",
                    "function params": [
                        "path",
                        "c"
                    ],
                    "file name": "XXHash32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.XXHash32Test.verifyIncrementalChecksum"
                },
                {
                    "function name": "testLanguageGuessing",
                    "function params": [
                        "name",
                        "language"
                    ],
                    "file name": "LanguageGuessingTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"
                },
                {
                    "function name": "testLanguageGuessing",
                    "function params": [
                        "name",
                        "language"
                    ],
                    "file name": "LanguageGuessingTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"
                }
            ],
            "date": "2022-05-22"
        },
        {
            "commit_id": 1353,
            "hash": "dc2d1d5701f1796c04eee5aa36a3b04b447311d3",
            "commit_summary": "Correct empty <p> tags",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                "src/main/java/org/apache/commons/codec/language/Soundex.java"
            ],
            "functions": [],
            "date": "2022-06-12"
        },
        {
            "commit_id": 1354,
            "hash": "b22276db7282efa0794e2cca02a32006c0bca0dd",
            "commit_summary": "Comment protected members",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java"
            ],
            "functions": [],
            "date": "2022-06-12"
        },
        {
            "commit_id": 1355,
            "hash": "7ccbc3d0c39aaf49ff70f19d85f173f98550d0fb",
            "commit_summary": "CODEC-305: Fix byte-skipping in Base16 decoding",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base16.java",
                "src/test/java/org/apache/commons/codec/binary/Base16Test.java"
            ],
            "functions": [
                {
                    "function name": "decode",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "context"
                    ],
                    "file name": "Base16.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.decode"
                },
                {
                    "function name": "testOddEvenDecoding",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testOddEvenDecoding"
                }
            ],
            "date": "2022-06-13"
        },
        {
            "commit_id": 1356,
            "hash": "8871e9c72eefda5b047d8e9fcc3654e5fab3c198",
            "commit_summary": "Use a string joiner.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java"
            ],
            "functions": [
                {
                    "function name": "join",
                    "function params": [
                        "strings",
                        "sep"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.join"
                },
                {
                    "function name": "join",
                    "function params": [
                        "strings",
                        "sep"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.join"
                }
            ],
            "date": "2022-07-09"
        },
        {
            "commit_id": 1357,
            "hash": "2ca75a4e13ac9cca6087ed8c1f486b8c43e52fd2",
            "commit_summary": "(chore) Fix minor typos\n\nFix various minor typos in :\n\n- project documentations,\n- javadoc and comments,\n- method attribute names,\n- test method names.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/EncoderException.java",
                "src/main/java/org/apache/commons/codec/binary/Base16.java",
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/main/java/org/apache/commons/codec/binary/CharSequenceUtils.java",
                "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                "src/test/java/org/apache/commons/codec/net/RFC1522CodecTest.java"
            ],
            "functions": [
                {
                    "function name": "Base32OutputStream",
                    "function params": [
                        "output",
                        "doEncode",
                        "lineLength",
                        "lineSeparator",
                        "decodingPolicy"
                    ],
                    "file name": "Base32OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream"
                },
                {
                    "function name": "Base32OutputStream",
                    "function params": [
                        "output",
                        "doEncode",
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base32OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream"
                },
                {
                    "function name": "Base32OutputStream",
                    "function params": [
                        "ouput",
                        "doEncode",
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base32OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream"
                },
                {
                    "function name": "Base32OutputStream",
                    "function params": [
                        "ouput",
                        "doEncode",
                        "lineLength",
                        "lineSeparator",
                        "decodingPolicy"
                    ],
                    "file name": "Base32OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream"
                },
                {
                    "function name": "md5Crypt",
                    "function params": [
                        "keyBytes",
                        "salt",
                        "prefix",
                        "random"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.md5Crypt"
                },
                {
                    "function name": "sha2Crypt",
                    "function params": [
                        "keyBytes",
                        "salt",
                        "saltPrefix",
                        "blocksize",
                        "algorithm"
                    ],
                    "file name": "Sha2Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt"
                },
                {
                    "function name": "getMinRating",
                    "function params": [
                        "sumLength"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating"
                },
                {
                    "function name": "leftToRightThenRightToLeftProcessing",
                    "function params": [
                        "name1",
                        "name2"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing"
                },
                {
                    "function name": "isEncodeEquals",
                    "function params": [
                        "name1",
                        "name2"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals"
                },
                {
                    "function name": "testBase16InputStreamByteByByte",
                    "function params": [],
                    "file name": "Base16InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16InputStreamTest.testBase16InputStreamByteByByte"
                },
                {
                    "function name": "testBase16InputStreamByChunk",
                    "function params": [],
                    "file name": "Base16InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16InputStreamTest.testBase16InputStreamByChunk"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "lowerCase"
                    ],
                    "file name": "Base16InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16InputStreamTest.testByChunk"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "lowerCase"
                    ],
                    "file name": "Base16InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16InputStreamTest.testByteByByte"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "lowerCase"
                    ],
                    "file name": "Base16OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16OutputStreamTest.testByChunk"
                },
                {
                    "function name": "testBase16OutputStreamByteByByte",
                    "function params": [],
                    "file name": "Base16OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16OutputStreamTest.testBase16OutputStreamByteByByte"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "lowerCase"
                    ],
                    "file name": "Base16OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16OutputStreamTest.testByteByByte"
                },
                {
                    "function name": "testBase16OutputStreamByChunk",
                    "function params": [],
                    "file name": "Base16OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16OutputStreamTest.testBase16OutputStreamByChunk"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "separator"
                    ],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testByteByByte"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "separator"
                    ],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testByChunk"
                },
                {
                    "function name": "testBase32InputStreamByChunk",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"
                },
                {
                    "function name": "testBase32InputStreamByteByByte",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"
                },
                {
                    "function name": "testBase32OutputStreamByteByByte",
                    "function params": [],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "separator"
                    ],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testByteByByte"
                },
                {
                    "function name": "testBase32OutputStreamByChunk",
                    "function params": [],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "separator"
                    ],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testByChunk"
                },
                {
                    "function name": "testBase64InputStreamByteByByte",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"
                },
                {
                    "function name": "testBase64InputStreamByChunk",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "separator"
                    ],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testByteByByte"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "separator"
                    ],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testByChunk"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "separator"
                    ],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testByChunk"
                },
                {
                    "function name": "testBase64OutputStreamByteByByte",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"
                },
                {
                    "function name": "testBase64OutputStreamByChunk",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "separator"
                    ],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testByteByByte"
                },
                {
                    "function name": "testCodec265",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodec265"
                },
                {
                    "function name": "testUrlSafe",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testUrlSafe"
                },
                {
                    "function name": "assertEnsureBufferSizeExpandsToMaxBufferSize",
                    "function params": [
                        "exceedMaxBufferSize"
                    ],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.assertEnsureBufferSizeExpandsToMaxBufferSize"
                },
                {
                    "function name": "testMacByteArray",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacByteArray"
                },
                {
                    "function name": "testSecretKeySpecAllowsEmptyKeys",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testSecretKeySpecAllowsEmptyKeys"
                },
                {
                    "function name": "testHmacSha1UpdateWithInputStream",
                    "function params": [],
                    "file name": "HmacUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInputStream"
                },
                {
                    "function name": "Table",
                    "function params": [
                        "nameformat"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.Table"
                },
                {
                    "function name": "Table",
                    "function params": [
                        "nameFormat"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.Table"
                },
                {
                    "function name": "testSha256LargestThanBlocksize",
                    "function params": [],
                    "file name": "Sha256CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargestThanBlocksize"
                },
                {
                    "function name": "testUnixCryptInvalidSalt",
                    "function params": [],
                    "file name": "UnixCryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptInvalidSalt"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "buffersize"
                    ],
                    "file name": "XXHash32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.XXHash32Test.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "XXHash32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.XXHash32Test.copy"
                },
                {
                    "function name": "testIsEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"
                },
                {
                    "function name": "testIsEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"
                },
                {
                    "function name": "testIsEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse"
                },
                {
                    "function name": "testIsEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse"
                },
                {
                    "function name": "testIsEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse"
                },
                {
                    "function name": "testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualCharactersInvariant",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualCharactersInvariant"
                },
                {
                    "function name": "testIsEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"
                },
                {
                    "function name": "testIsEncodeEqualsSecondNameJust1Letter_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsEncodeEqualsSecondNameJust1Letter_ReturnsFalse"
                },
                {
                    "function name": "testIsVowel_SingleVowel_ReturnsTrue",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SingleVowel_ReturnsTrue"
                },
                {
                    "function name": "testAccentRemoval_UpperAndLower_SuccessfullyRemovedAndCaseInvariant",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperAndLower_SuccessfullyRemovedAndCaseInvariant"
                },
                {
                    "function name": "testLeftToRightThenRightToLeft_EINSTEIN_MICHAELA_Returns0",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testLeftToRightThenRightToLeft_EINSTEIN_MICHAELA_Returns0"
                },
                {
                    "function name": "testLeftToRightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testLeftToRightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4"
                },
                {
                    "function name": "testIsEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse"
                },
                {
                    "function name": "testCleanName_SuccessfullyClean",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCleanName_SuccessfullyClean"
                },
                {
                    "function name": "testExceedLength",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testExceedLength"
                },
                {
                    "function name": "data",
                    "function params": [],
                    "file name": "LanguageGuessingTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.LanguageGuessingTest.data"
                },
                {
                    "function name": "testNullInput",
                    "function params": [],
                    "file name": "RFC1522CodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"
                }
            ],
            "date": "2022-07-15"
        },
        {
            "commit_id": 1358,
            "hash": "e3bfc84d6fe9838c0f2e8a474736e730074ef444",
            "commit_summary": "Use forEach()",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java"
            ],
            "functions": [
                {
                    "function name": "guessLanguages",
                    "function params": [
                        "input"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Lang.guessLanguages"
                },
                {
                    "function name": "SomeLanguages",
                    "function params": [
                        "other"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.SomeLanguages"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [
                        "str"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                }
            ],
            "date": "2022-07-17"
        },
        {
            "commit_id": 1359,
            "hash": "ab7f0792599a625afdefad6796f154cd37db80f9",
            "commit_summary": "Use forEach()",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java"
            ],
            "functions": [
                {
                    "function name": "applyFinalRules",
                    "function params": [
                        "phonemeBuilder",
                        "finalRules"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "input",
                        "languageSet"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.encode"
                },
                {
                    "function name": "getInstance",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.getInstance"
                },
                {
                    "function name": "for",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.for"
                }
            ],
            "date": "2022-07-17"
        },
        {
            "commit_id": 1360,
            "hash": "4672b3bd395a8c0c8d22be7d0765466781428a70",
            "commit_summary": "Fix typo in Javadoc",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [],
            "date": "2022-08-30"
        },
        {
            "commit_id": 1361,
            "hash": "3e871d2b093efbc9f8a7149cb6fabbf95bbbad1e",
            "commit_summary": "Remove weird Javadoc tag in test",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java"
            ],
            "functions": [],
            "date": "2022-08-30"
        },
        {
            "commit_id": 1362,
            "hash": "101fea65942f9ed5f765bdfac2c7a1ca545ed356",
            "commit_summary": "Use ternary expression",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/StringUtils.java"
            ],
            "functions": [
                {
                    "function name": "getBytes",
                    "function params": [
                        "string",
                        "charset"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.getBytes"
                }
            ],
            "date": "2022-08-30"
        },
        {
            "commit_id": 1363,
            "hash": "4fd068a2250664d02eac1e49355d5f7a365136e4",
            "commit_summary": "Fix PMD issues and Javadoc\n\n- Avoid unnecessary constructors - the compiler will generate these for\nyou\n- Use conventional internal names\n- No final in abstract method\n- Use underscores for some literal numbers\n- Avoid short names, \"in\" -> \"inputStream\"",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base16InputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base16OutputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                "src/main/java/org/apache/commons/codec/language/AbstractCaverphone.java",
                "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                "src/main/java/org/apache/commons/codec/language/bm/Lang.java"
            ],
            "functions": [
                {
                    "function name": "Base16InputStream",
                    "function params": [
                        "in"
                    ],
                    "file name": "Base16InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16InputStream.Base16InputStream"
                },
                {
                    "function name": "Base16InputStream",
                    "function params": [
                        "inputStream",
                        "doEncode"
                    ],
                    "file name": "Base16InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16InputStream.Base16InputStream"
                },
                {
                    "function name": "Base16InputStream",
                    "function params": [
                        "inputStream"
                    ],
                    "file name": "Base16InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16InputStream.Base16InputStream"
                },
                {
                    "function name": "Base16InputStream",
                    "function params": [
                        "inputStream",
                        "doEncode",
                        "lowerCase"
                    ],
                    "file name": "Base16InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16InputStream.Base16InputStream"
                },
                {
                    "function name": "Base16InputStream",
                    "function params": [
                        "in",
                        "doEncode",
                        "lowerCase"
                    ],
                    "file name": "Base16InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16InputStream.Base16InputStream"
                },
                {
                    "function name": "Base16InputStream",
                    "function params": [
                        "in",
                        "doEncode"
                    ],
                    "file name": "Base16InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16InputStream.Base16InputStream"
                },
                {
                    "function name": "Base16InputStream",
                    "function params": [
                        "in",
                        "doEncode",
                        "lowerCase",
                        "decodingPolicy"
                    ],
                    "file name": "Base16InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16InputStream.Base16InputStream"
                },
                {
                    "function name": "Base16InputStream",
                    "function params": [
                        "inputStream",
                        "doEncode",
                        "lowerCase",
                        "decodingPolicy"
                    ],
                    "file name": "Base16InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16InputStream.Base16InputStream"
                },
                {
                    "function name": "Base16OutputStream",
                    "function params": [
                        "out",
                        "doEncode"
                    ],
                    "file name": "Base16OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16OutputStream.Base16OutputStream"
                },
                {
                    "function name": "Base16OutputStream",
                    "function params": [
                        "outputStream",
                        "doEncode"
                    ],
                    "file name": "Base16OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16OutputStream.Base16OutputStream"
                },
                {
                    "function name": "Base16OutputStream",
                    "function params": [
                        "out",
                        "doEncode",
                        "lowerCase"
                    ],
                    "file name": "Base16OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16OutputStream.Base16OutputStream"
                },
                {
                    "function name": "Base16OutputStream",
                    "function params": [
                        "out"
                    ],
                    "file name": "Base16OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16OutputStream.Base16OutputStream"
                },
                {
                    "function name": "Base16OutputStream",
                    "function params": [
                        "out",
                        "doEncode",
                        "lowerCase",
                        "decodingPolicy"
                    ],
                    "file name": "Base16OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16OutputStream.Base16OutputStream"
                },
                {
                    "function name": "Base16OutputStream",
                    "function params": [
                        "outputStream",
                        "doEncode",
                        "lowerCase"
                    ],
                    "file name": "Base16OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16OutputStream.Base16OutputStream"
                },
                {
                    "function name": "Base16OutputStream",
                    "function params": [
                        "outputStream"
                    ],
                    "file name": "Base16OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16OutputStream.Base16OutputStream"
                },
                {
                    "function name": "Base16OutputStream",
                    "function params": [
                        "outputStream",
                        "doEncode",
                        "lowerCase",
                        "decodingPolicy"
                    ],
                    "file name": "Base16OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16OutputStream.Base16OutputStream"
                },
                {
                    "function name": "Base32InputStream",
                    "function params": [
                        "inputStream"
                    ],
                    "file name": "Base32InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32InputStream.Base32InputStream"
                },
                {
                    "function name": "Base32InputStream",
                    "function params": [
                        "inputStream",
                        "doEncode",
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base32InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32InputStream.Base32InputStream"
                },
                {
                    "function name": "Base32InputStream",
                    "function params": [
                        "input",
                        "doEncode",
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base32InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32InputStream.Base32InputStream"
                },
                {
                    "function name": "Base32InputStream",
                    "function params": [
                        "inputStream",
                        "doEncode",
                        "lineLength",
                        "lineSeparator",
                        "decodingPolicy"
                    ],
                    "file name": "Base32InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32InputStream.Base32InputStream"
                },
                {
                    "function name": "Base32InputStream",
                    "function params": [
                        "in",
                        "doEncode"
                    ],
                    "file name": "Base32InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32InputStream.Base32InputStream"
                },
                {
                    "function name": "Base32InputStream",
                    "function params": [
                        "in"
                    ],
                    "file name": "Base32InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32InputStream.Base32InputStream"
                },
                {
                    "function name": "Base32InputStream",
                    "function params": [
                        "input",
                        "doEncode",
                        "lineLength",
                        "lineSeparator",
                        "decodingPolicy"
                    ],
                    "file name": "Base32InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32InputStream.Base32InputStream"
                },
                {
                    "function name": "Base32InputStream",
                    "function params": [
                        "inputStream",
                        "doEncode"
                    ],
                    "file name": "Base32InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32InputStream.Base32InputStream"
                },
                {
                    "function name": "Base32OutputStream",
                    "function params": [
                        "outputStream",
                        "doEncode",
                        "lineLength",
                        "lineSeparator",
                        "decodingPolicy"
                    ],
                    "file name": "Base32OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream"
                },
                {
                    "function name": "Base32OutputStream",
                    "function params": [
                        "out",
                        "doEncode"
                    ],
                    "file name": "Base32OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream"
                },
                {
                    "function name": "Base32OutputStream",
                    "function params": [
                        "output",
                        "doEncode",
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base32OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream"
                },
                {
                    "function name": "Base32OutputStream",
                    "function params": [
                        "out"
                    ],
                    "file name": "Base32OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream"
                },
                {
                    "function name": "Base32OutputStream",
                    "function params": [
                        "output",
                        "doEncode",
                        "lineLength",
                        "lineSeparator",
                        "decodingPolicy"
                    ],
                    "file name": "Base32OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream"
                },
                {
                    "function name": "Base32OutputStream",
                    "function params": [
                        "outputStream"
                    ],
                    "file name": "Base32OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream"
                },
                {
                    "function name": "Base32OutputStream",
                    "function params": [
                        "outputStream",
                        "doEncode",
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base32OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream"
                },
                {
                    "function name": "Base32OutputStream",
                    "function params": [
                        "outputStream",
                        "doEncode"
                    ],
                    "file name": "Base32OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "input",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "Base64InputStream",
                    "function params": [
                        "inputStream",
                        "doEncode",
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base64InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64InputStream.Base64InputStream"
                },
                {
                    "function name": "Base64InputStream",
                    "function params": [
                        "inputStream",
                        "doEncode",
                        "lineLength",
                        "lineSeparator",
                        "decodingPolicy"
                    ],
                    "file name": "Base64InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64InputStream.Base64InputStream"
                },
                {
                    "function name": "Base64InputStream",
                    "function params": [
                        "in"
                    ],
                    "file name": "Base64InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64InputStream.Base64InputStream"
                },
                {
                    "function name": "Base64InputStream",
                    "function params": [
                        "in",
                        "doEncode",
                        "lineLength",
                        "lineSeparator",
                        "decodingPolicy"
                    ],
                    "file name": "Base64InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64InputStream.Base64InputStream"
                },
                {
                    "function name": "Base64InputStream",
                    "function params": [
                        "inputStream"
                    ],
                    "file name": "Base64InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64InputStream.Base64InputStream"
                },
                {
                    "function name": "Base64InputStream",
                    "function params": [
                        "in",
                        "doEncode",
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base64InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64InputStream.Base64InputStream"
                },
                {
                    "function name": "Base64InputStream",
                    "function params": [
                        "in",
                        "doEncode"
                    ],
                    "file name": "Base64InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64InputStream.Base64InputStream"
                },
                {
                    "function name": "Base64InputStream",
                    "function params": [
                        "inputStream",
                        "doEncode"
                    ],
                    "file name": "Base64InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64InputStream.Base64InputStream"
                },
                {
                    "function name": "Base64OutputStream",
                    "function params": [
                        "out",
                        "doEncode",
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base64OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream"
                },
                {
                    "function name": "Base64OutputStream",
                    "function params": [
                        "out",
                        "doEncode",
                        "lineLength",
                        "lineSeparator",
                        "decodingPolicy"
                    ],
                    "file name": "Base64OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream"
                },
                {
                    "function name": "Base64OutputStream",
                    "function params": [
                        "outputStream",
                        "doEncode",
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base64OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream"
                },
                {
                    "function name": "Base64OutputStream",
                    "function params": [
                        "outputStream",
                        "doEncode"
                    ],
                    "file name": "Base64OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream"
                },
                {
                    "function name": "Base64OutputStream",
                    "function params": [
                        "out"
                    ],
                    "file name": "Base64OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream"
                },
                {
                    "function name": "Base64OutputStream",
                    "function params": [
                        "out",
                        "doEncode"
                    ],
                    "file name": "Base64OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream"
                },
                {
                    "function name": "Base64OutputStream",
                    "function params": [
                        "outputStream",
                        "doEncode",
                        "lineLength",
                        "lineSeparator",
                        "decodingPolicy"
                    ],
                    "file name": "Base64OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream"
                },
                {
                    "function name": "Base64OutputStream",
                    "function params": [
                        "outputStream"
                    ],
                    "file name": "Base64OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream"
                },
                {
                    "function name": "BaseNCodecInputStream",
                    "function params": [
                        "input",
                        "baseNCodec",
                        "doEncode"
                    ],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecInputStream.BaseNCodecInputStream"
                },
                {
                    "function name": "BaseNCodecInputStream",
                    "function params": [
                        "inputStream",
                        "baseNCodec",
                        "doEncode"
                    ],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecInputStream.BaseNCodecInputStream"
                },
                {
                    "function name": "BaseNCodecOutputStream",
                    "function params": [
                        "outputStream",
                        "basedCodec",
                        "doEncode"
                    ],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.BaseNCodecOutputStream"
                },
                {
                    "function name": "BaseNCodecOutputStream",
                    "function params": [
                        "output",
                        "basedCodec",
                        "doEncode"
                    ],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.BaseNCodecOutputStream"
                },
                {
                    "function name": "fromAscii",
                    "function params": [
                        "ascii"
                    ],
                    "file name": "BinaryCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BinaryCodec.fromAscii"
                },
                {
                    "function name": "fromAscii",
                    "function params": [
                        "ascii"
                    ],
                    "file name": "BinaryCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BinaryCodec.fromAscii"
                },
                {
                    "function name": "reset",
                    "function params": [],
                    "file name": "PureJavaCrc32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32.reset"
                },
                {
                    "function name": "PureJavaCrc32",
                    "function params": [],
                    "file name": "PureJavaCrc32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32.PureJavaCrc32"
                },
                {
                    "function name": "resetCrc",
                    "function params": [],
                    "file name": "PureJavaCrc32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32.resetCrc"
                },
                {
                    "function name": "update",
                    "function params": [
                        "b",
                        "off",
                        "len"
                    ],
                    "file name": "PureJavaCrc32C.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32C.update"
                },
                {
                    "function name": "update",
                    "function params": [
                        "b"
                    ],
                    "file name": "PureJavaCrc32C.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32C.update"
                },
                {
                    "function name": "for",
                    "function params": [
                        "s"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Lang.for"
                },
                {
                    "function name": "instance",
                    "function params": [
                        "nameType"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Lang.instance"
                }
            ],
            "date": "2022-08-31"
        },
        {
            "commit_id": 1364,
            "hash": "aa5021b70aa29401815ecbb177088ea0363b2b02",
            "commit_summary": "Reuse constant",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java"
            ],
            "functions": [
                {
                    "function name": "testComparatorWithDoubleMetaphone",
                    "function params": [],
                    "file name": "StringEncoderComparatorTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"
                }
            ],
            "date": "2022-10-03"
        },
        {
            "commit_id": 1365,
            "hash": "b323c01f0fd48ac9a1e8be3aaa3657cd3d9ab446",
            "commit_summary": "Lookup key in map only once",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java"
            ],
            "functions": [
                {
                    "function name": "cleanup",
                    "function params": [
                        "input"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.cleanup"
                }
            ],
            "date": "2022-11-30"
        },
        {
            "commit_id": 1366,
            "hash": "2a2b04f8a7729297fc665cb1929f59a0b614f743",
            "commit_summary": "Use Arrays.copyOf() and copyOfRange()",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/main/java/org/apache/commons/codec/cli/Digest.java",
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [
                {
                    "function name": "resizeBuffer",
                    "function params": [
                        "context",
                        "minCapacity"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.resizeBuffer"
                },
                {
                    "function name": "Digest",
                    "function params": [
                        "args"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.cli.Digest.Digest"
                },
                {
                    "function name": "CologneOutputBuffer",
                    "function params": [
                        "start",
                        "length"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.CologneOutputBuffer"
                }
            ],
            "date": "2022-12-28"
        },
        {
            "commit_id": 1367,
            "hash": "08c4d7cb3a862c663742bb1240c824ca9fe14df4",
            "commit_summary": "Port some tests from IO to NIO APIs",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java"
            ],
            "functions": [
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.setUp"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.tearDown"
                },
                {
                    "function name": "getTestPath",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.getTestPath"
                },
                {
                    "function name": "getTestFile",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.getTestFile"
                }
            ],
            "date": "2023-01-27"
        },
        {
            "commit_id": 1368,
            "hash": "0fa81539e2a5ba4e60046d8af5078fea561f1413",
            "commit_summary": "Add @SuppressWarnings",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [],
            "date": "2023-02-05"
        },
        {
            "commit_id": 1369,
            "hash": "aa5cdb1db6acedb2b6c9297a9a16892a7254fcf6",
            "commit_summary": "Add @SuppressWarnings",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java"
            ],
            "functions": [],
            "date": "2023-02-05"
        },
        {
            "commit_id": 1370,
            "hash": "931b6fda4558d5aefa6f9a7f0e962c9e3ac51728",
            "commit_summary": "Simpler impl using a lambda",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java"
            ],
            "functions": [
                {
                    "function name": "contains",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.contains"
                }
            ],
            "date": "2023-02-05"
        },
        {
            "commit_id": 1371,
            "hash": "a2599e1d624b9b8844dc4a3399f7fb846bde3a50",
            "commit_summary": "Remove redundant null checks",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Blake3.java"
            ],
            "functions": [
                {
                    "function name": "doFinalize",
                    "function params": [
                        "out"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.doFinalize"
                },
                {
                    "function name": "update",
                    "function params": [
                        "in"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.update"
                }
            ],
            "date": "2023-03-16"
        },
        {
            "commit_id": 1372,
            "hash": "efdc3bdd7d1fc7f01e2cdaf5e5395974e2a9df76",
            "commit_summary": "Reuse Integer.BYTES",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Blake3.java"
            ],
            "functions": [
                {
                    "function name": "unpackInts",
                    "function params": [
                        "buf",
                        "nrInts"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.unpackInts"
                },
                {
                    "function name": "Output",
                    "function params": [
                        "out",
                        "offset",
                        "length"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.Output"
                }
            ],
            "date": "2023-03-16"
        },
        {
            "commit_id": 1373,
            "hash": "8496c8c8f2f9027d4ba12ce1e5f7a79b52fd29e9",
            "commit_summary": "Reuse Integer.compareUnsigned(int, int)",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java"
            ],
            "functions": [
                {
                    "function name": "resizeBuffer",
                    "function params": [
                        "context",
                        "minCapacity"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.resizeBuffer"
                }
            ],
            "date": "2023-03-16"
        },
        {
            "commit_id": 1374,
            "hash": "753bdc4ca6e7d130be1679aada65205af108da8d",
            "commit_summary": "Reuse JRE number constants",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java"
            ],
            "functions": [
                {
                    "function name": "hash32",
                    "function params": [
                        "data1",
                        "data2",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "testHash32LongLongSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32LongLongSeed"
                },
                {
                    "function name": "testHash32LongSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32LongSeed"
                },
                {
                    "function name": "testHash32Long",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32Long"
                },
                {
                    "function name": "testHash64WithPrimitives",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash64WithPrimitives"
                },
                {
                    "function name": "testHash32LongLong",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32LongLong"
                }
            ],
            "date": "2023-03-16"
        },
        {
            "commit_id": 1375,
            "hash": "be74b3c512ba224c7607976433b73cc80d0d4c58",
            "commit_summary": "Javadoc tweak",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/cli/Digest.java"
            ],
            "functions": [],
            "date": "2023-03-16"
        },
        {
            "commit_id": 1376,
            "hash": "62674ec28306307a1d98cedec1aeced2bcfffe48",
            "commit_summary": "Javadoc: Convert package.html to package-info.java",
            "modified_files": [],
            "functions": [],
            "date": "2023-03-19"
        },
        {
            "commit_id": 1377,
            "hash": "aca3970538e89a86be9968052615ae5ed05d9259",
            "commit_summary": "Javadoc: Convert package.html to package-info.java",
            "modified_files": [],
            "functions": [],
            "date": "2023-03-19"
        },
        {
            "commit_id": 1378,
            "hash": "6aa2610adf19733a17851e0179fe84e34c7b9861",
            "commit_summary": "Javadoc: Convert package.html to package-info.java",
            "modified_files": [],
            "functions": [],
            "date": "2023-03-19"
        },
        {
            "commit_id": 1379,
            "hash": "d7de1506746641f632f3592b857679414bffac04",
            "commit_summary": "Javadoc: Convert package.html to package-info.java",
            "modified_files": [],
            "functions": [],
            "date": "2023-03-19"
        },
        {
            "commit_id": 1380,
            "hash": "63d6b54f3acd0d3cfce842a3356c78313b3771ca",
            "commit_summary": "Javadoc: Convert package.html to package-info.java",
            "modified_files": [],
            "functions": [],
            "date": "2023-03-19"
        },
        {
            "commit_id": 1381,
            "hash": "cfc4ec2cad44702c4a1c955bfe088de0a869d0d0",
            "commit_summary": "Javadoc: Convert package.html to package-info.java",
            "modified_files": [],
            "functions": [],
            "date": "2023-03-19"
        },
        {
            "commit_id": 1382,
            "hash": "6dc6822c6d62209a1844c85c5b458415d9fcf5fa",
            "commit_summary": "Javadoc: Convert package.html to package-info.java",
            "modified_files": [],
            "functions": [],
            "date": "2023-03-19"
        },
        {
            "commit_id": 1383,
            "hash": "33aad87d62fa332a893135ac026ffb01a51bb8dd",
            "commit_summary": "Javadoc: Remove extra \"whitespace\"",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/BinaryDecoder.java",
                "src/main/java/org/apache/commons/codec/BinaryEncoder.java",
                "src/main/java/org/apache/commons/codec/Decoder.java",
                "src/main/java/org/apache/commons/codec/DecoderException.java",
                "src/main/java/org/apache/commons/codec/Encoder.java",
                "src/main/java/org/apache/commons/codec/EncoderException.java",
                "src/main/java/org/apache/commons/codec/StringDecoder.java",
                "src/main/java/org/apache/commons/codec/StringEncoder.java",
                "src/main/java/org/apache/commons/codec/StringEncoderComparator.java",
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/test/java/org/apache/commons/codec/CharEncodingTest.java",
                "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                "src/test/java/org/apache/commons/codec/DecoderExceptionTest.java",
                "src/test/java/org/apache/commons/codec/EncoderExceptionTest.java",
                "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                "src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java",
                "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/RFC1522CodecTest.java",
                "src/test/java/org/apache/commons/codec/net/URLCodecTest.java"
            ],
            "functions": [],
            "date": "2023-03-25"
        },
        {
            "commit_id": 1384,
            "hash": "3dcb5ea15c874cc8a792da630a919fe9874fd77d",
            "commit_summary": "Javadoc",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java"
            ],
            "functions": [],
            "date": "2023-06-04"
        },
        {
            "commit_id": 1385,
            "hash": "14068c64dc7c2114d6f8130d0aabf187edcba1d0",
            "commit_summary": "Javadoc\n\nClose HTML tags\nFix Javadoc formatting",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java",
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                "src/main/java/org/apache/commons/codec/digest/XXHash32.java"
            ],
            "functions": [
                {
                    "function name": "hash64",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                }
            ],
            "date": "2023-06-04"
        },
        {
            "commit_id": 1386,
            "hash": "c1e546212f53848c96bf96a8c4d523c0e3133b37",
            "commit_summary": "Javadoc\n\nClose HTML tags",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/Decoder.java",
                "src/main/java/org/apache/commons/codec/DecoderException.java",
                "src/main/java/org/apache/commons/codec/Encoder.java",
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                "src/main/java/org/apache/commons/codec/binary/CharSequenceUtils.java"
            ],
            "functions": [],
            "date": "2023-06-04"
        },
        {
            "commit_id": 1387,
            "hash": "dc4af3f0f5a53d2bb26369e950e68bf8f9098b55",
            "commit_summary": "BaseNCodecOutputStream.eof() should not throw IOException",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java"
            ],
            "functions": [
                {
                    "function name": "eof",
                    "function params": [],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.eof"
                }
            ],
            "date": "2023-06-04"
        },
        {
            "commit_id": 1388,
            "hash": "6bd7fe48950a11232a802265f6e9e6b82f5b1341",
            "commit_summary": "Javadoc\n\nClose HTML tags",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                "src/main/java/org/apache/commons/codec/language/Soundex.java"
            ],
            "functions": [
                {
                    "function name": "regionMatch",
                    "function params": [
                        "string",
                        "index",
                        "test"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.regionMatch"
                }
            ],
            "date": "2023-06-04"
        },
        {
            "commit_id": 1389,
            "hash": "a38cf236ca02ab54b2d518324cde08dbd3313c78",
            "commit_summary": "Javadoc\n\nClose HTML tags",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                "src/main/java/org/apache/commons/codec/language/bm/NameType.java",
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                "src/main/java/org/apache/commons/codec/language/bm/RuleType.java",
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java"
            ],
            "functions": [],
            "date": "2023-06-04"
        },
        {
            "commit_id": 1390,
            "hash": "8e1652ab30c59cde68d2142ed72271f7e697cbaa",
            "commit_summary": "Update Javadoc for Java 8",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Blake3.java"
            ],
            "functions": [],
            "date": "2023-06-04"
        },
        {
            "commit_id": 1391,
            "hash": "94f2d80288335fdbb1b42a06fb5a98896ba43aac",
            "commit_summary": "Fix PMD violation",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Blake3.java"
            ],
            "functions": [],
            "date": "2023-06-04"
        },
        {
            "commit_id": 1392,
            "hash": "a79f046459b8a2061a4d38f53e99418af5afa36a",
            "commit_summary": "Fix PMD violations",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Blake3.java"
            ],
            "functions": [
                {
                    "function name": "EngineState",
                    "function params": [],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.EngineState"
                },
                {
                    "function name": "EngineState",
                    "function params": [
                        "key",
                        "flags"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.EngineState"
                },
                {
                    "function name": "EngineState",
                    "function params": [
                        "out",
                        "offset",
                        "length"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.EngineState"
                },
                {
                    "function name": "ChunkState",
                    "function params": [],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.ChunkState"
                },
                {
                    "function name": "ChunkState",
                    "function params": [
                        "key",
                        "chunkCounter",
                        "flags"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.ChunkState"
                },
                {
                    "function name": "Output",
                    "function params": [
                        "out",
                        "offset",
                        "length"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.Output"
                },
                {
                    "function name": "ChunkState",
                    "function params": [],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.ChunkState"
                },
                {
                    "function name": "EngineState",
                    "function params": [
                        "in",
                        "offset",
                        "length"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.EngineState"
                },
                {
                    "function name": "Output",
                    "function params": [],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.Output"
                },
                {
                    "function name": "ChunkState",
                    "function params": [],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.ChunkState"
                },
                {
                    "function name": "Output",
                    "function params": [
                        "inputChainingValue",
                        "blockWords",
                        "counter",
                        "blockLength",
                        "flags"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.Output"
                },
                {
                    "function name": "ChunkState",
                    "function params": [
                        "input",
                        "offset",
                        "length"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.ChunkState"
                }
            ],
            "date": "2023-06-04"
        },
        {
            "commit_id": 1393,
            "hash": "34d871ec8de3990cdf8a12a6380d713383205fb0",
            "commit_summary": "Fix PMD violations",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [],
            "date": "2023-06-04"
        },
        {
            "commit_id": 1394,
            "hash": "36b084458642f89c471632a8f9caea1addf972fe",
            "commit_summary": "Fix PMD violations",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/main/java/org/apache/commons/codec/binary/Hex.java",
                "src/main/java/org/apache/commons/codec/cli/Digest.java",
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java"
            ],
            "functions": [
                {
                    "function name": "Context",
                    "function params": [],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.Context"
                },
                {
                    "function name": "LanguageSet",
                    "function params": [],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.LanguageSet"
                }
            ],
            "date": "2023-06-04"
        },
        {
            "commit_id": 1395,
            "hash": "110e8035499cbf014d5267db39369a327fd80cdd",
            "commit_summary": "Better Javadoc @see",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java"
            ],
            "functions": [],
            "date": "2023-06-04"
        },
        {
            "commit_id": 1396,
            "hash": "d3877a3f0f017af6d64dabd26fc38ec1bf185531",
            "commit_summary": "Better Javadoc @see",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/CharEncoding.java",
                "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                "src/main/java/org/apache/commons/codec/net/BCodec.java",
                "src/main/java/org/apache/commons/codec/net/QCodec.java",
                "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java"
            ],
            "functions": [],
            "date": "2023-06-04"
        },
        {
            "commit_id": 1397,
            "hash": "7d0018ae03fc3de1279dd16d79b94232c2146933",
            "commit_summary": "Static imports first in unit tests\n\nOrganize imports",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/CharEncoding.java",
                "src/main/java/org/apache/commons/codec/binary/Base16InputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base16OutputStream.java",
                "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                "src/test/java/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                "src/test/java/org/apache/commons/codec/CharEncodingTest.java",
                "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                "src/test/java/org/apache/commons/codec/DecoderExceptionTest.java",
                "src/test/java/org/apache/commons/codec/EncoderExceptionTest.java",
                "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java",
                "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                "src/test/java/org/apache/commons/codec/binary/CharSequenceUtilsTest.java",
                "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                "src/test/java/org/apache/commons/codec/cli/DigestTest.java",
                "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/B64Test.java",
                "src/test/java/org/apache/commons/codec/digest/Blake3Test.java",
                "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java",
                "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java",
                "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/Sha2CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/XXHash32OverflowTest.java",
                "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                "src/test/java/org/apache/commons/codec/language/Caverphone1Test.java",
                "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java",
                "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                "src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                "src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java",
                "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/RuleTest.java",
                "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/RFC1522CodecTest.java"
            ],
            "functions": [],
            "date": "2023-06-04"
        },
        {
            "commit_id": 1398,
            "hash": "2dca3cd1154e7332de6277669b89fd05563c3c82",
            "commit_summary": "Better Javadoc using @link",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/CharEncoding.java"
            ],
            "functions": [],
            "date": "2023-06-04"
        },
        {
            "commit_id": 1399,
            "hash": "10d9e0467e29c2fed3c4a4fead24f39bc6ef87bb",
            "commit_summary": "Deprecate BaseNCodec.isWhiteSpace(byte) and use\nCharacter.isWhitespace(int)",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "Base32",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "useHex",
                        "padding",
                        "decodingPolicy"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.Base32"
                },
                {
                    "function name": "isBase64",
                    "function params": [
                        "arrayOctet"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.isBase64"
                },
                {
                    "function name": "isInAlphabet",
                    "function params": [
                        "arrayOctet",
                        "allowWSPad"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.isInAlphabet"
                },
                {
                    "function name": "isWhiteSpace",
                    "function params": [
                        "byteToCheck"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace"
                },
                {
                    "function name": "testIsWhiteSpace",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"
                }
            ],
            "date": "2023-06-17"
        },
        {
            "commit_id": 1400,
            "hash": "27b5e02be9b3fc42ed3235fe64d2aba067b1e54d",
            "commit_summary": "Simplify",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java"
            ],
            "functions": [
                {
                    "function name": "handleT",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleT"
                }
            ],
            "date": "2023-06-17"
        },
        {
            "commit_id": 1401,
            "hash": "7d4fae278c6cc955272b4826b6b5d8a76ae1d05e",
            "commit_summary": "Remove obsolete references in Javadoc",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java"
            ],
            "functions": [],
            "date": "2023-06-17"
        },
        {
            "commit_id": 1402,
            "hash": "33164b67ae66c58fb656d419883d2a6d1f18a000",
            "commit_summary": "Replace Java 9 with Java 11 LTS reference",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java"
            ],
            "functions": [],
            "date": "2023-06-17"
        },
        {
            "commit_id": 1403,
            "hash": "8b40e506d6b76032a975ecca9714a56a4c6ecbe9",
            "commit_summary": "Add Java 17 LTS reference",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java"
            ],
            "functions": [],
            "date": "2023-06-17"
        },
        {
            "commit_id": 1404,
            "hash": "3f0d7eef70b47e654a31dc26ad026dad381c66b7",
            "commit_summary": "Fix Javadoc",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java"
            ],
            "functions": [],
            "date": "2023-06-17"
        },
        {
            "commit_id": 1405,
            "hash": "8c08eea2d84800d513fb85e9463840572a24647a",
            "commit_summary": "Whitespace",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java"
            ],
            "functions": [],
            "date": "2023-06-17"
        },
        {
            "commit_id": 1406,
            "hash": "b57e84b2a77af22bc619797719a7c64bc74249bf",
            "commit_summary": "Javadoc",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Blake3.java"
            ],
            "functions": [],
            "date": "2023-06-17"
        },
        {
            "commit_id": 1407,
            "hash": "cc2808b67cdc9a14fc17f913495dd28bd248c8b3",
            "commit_summary": "Make new API Fluent",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java"
            ],
            "functions": [
                {
                    "function name": "doFinalize",
                    "function params": [
                        "out",
                        "offset",
                        "length"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.doFinalize"
                },
                {
                    "function name": "keyedHash",
                    "function params": [
                        "key",
                        "data"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.keyedHash"
                },
                {
                    "function name": "update",
                    "function params": [
                        "in"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.update"
                },
                {
                    "function name": "doFinalize",
                    "function params": [
                        "out"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.doFinalize"
                },
                {
                    "function name": "hash",
                    "function params": [
                        "data"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.hash"
                },
                {
                    "function name": "reset",
                    "function params": [],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.reset"
                },
                {
                    "function name": "update",
                    "function params": [
                        "in",
                        "offset",
                        "length"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.update"
                },
                {
                    "function name": "keyDerivation",
                    "function params": [
                        "inputLength",
                        "hash",
                        "keyedHash",
                        "deriveKey"
                    ],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.keyDerivation"
                },
                {
                    "function name": "hashArbitraryOutputLength",
                    "function params": [
                        "inputLength",
                        "hash",
                        "keyedHash",
                        "deriveKey"
                    ],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.hashArbitraryOutputLength"
                },
                {
                    "function name": "keyedHashArbitraryOutputLength",
                    "function params": [
                        "inputLength",
                        "hash",
                        "keyedHash",
                        "deriveKey"
                    ],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.keyedHashArbitraryOutputLength"
                }
            ],
            "date": "2023-06-17"
        },
        {
            "commit_id": 1408,
            "hash": "af4d48a43079124191af51bd9f5273c196a06fb5",
            "commit_summary": "New package private method does not need Javadoc since tag",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/SoundexUtils.java"
            ],
            "functions": [],
            "date": "2023-06-17"
        },
        {
            "commit_id": 1409,
            "hash": "4d9f462f2b4f6588cb828c0c024aca4b05b5ae94",
            "commit_summary": "New package private method does not need Javadoc since tag",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java"
            ],
            "functions": [],
            "date": "2023-06-17"
        },
        {
            "commit_id": 1410,
            "hash": "a3d825d13724e99e16f1e7536f3c04aaea64ccab",
            "commit_summary": "Package private method does not need Javadoc since tag",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/B64.java"
            ],
            "functions": [],
            "date": "2023-06-17"
        },
        {
            "commit_id": 1411,
            "hash": "780cc73a629b332f317f46b30b7ce2df9270daa6",
            "commit_summary": "Test should use JUnit's fail() instead of throwing a RuntimeExceptiom",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java"
            ],
            "functions": [
                {
                    "function name": "PerformanceTest",
                    "function params": [
                        "crcs",
                        "bytes",
                        "size",
                        "out"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                }
            ],
            "date": "2023-06-23"
        },
        {
            "commit_id": 1412,
            "hash": "d56283a609d45e3fd28a5779496143424bb4fc4d",
            "commit_summary": "correct error in Base64 javadoc (#188)",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [],
            "date": "2023-06-27"
        },
        {
            "commit_id": 1413,
            "hash": "f7016c54a9a62b8a2a300ce83cc67229f0599c74",
            "commit_summary": "Resue RandomAccessFileMode.READ_WRITE.create() instead of a magic string",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.setUp"
                }
            ],
            "date": "2023-07-03"
        },
        {
            "commit_id": 1414,
            "hash": "ff691d3876f49c9a685498423d5d5dcbead8179e",
            "commit_summary": "Remove extra ()",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "args",
                        "concat",
                        "input"
                    ],
                    "file name": "PhoneticEngineRegressionTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.encode"
                }
            ],
            "date": "2023-07-06"
        },
        {
            "commit_id": 1415,
            "hash": "96a0c5e3758e48c4f8654a6d14d668c5443da6c1",
            "commit_summary": "Fix formatting",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java"
            ],
            "functions": [
                {
                    "function name": "Base64OutputStream",
                    "function params": [
                        "outputStream",
                        "doEncode"
                    ],
                    "file name": "Base64OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream"
                },
                {
                    "function name": "metaphone",
                    "function params": [
                        "txt"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.metaphone"
                },
                {
                    "function name": "testRandomBytesHex",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"
                },
                {
                    "function name": "testRandomBytes",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testRandomBytes"
                },
                {
                    "function name": "testRandomBytesChunked",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"
                },
                {
                    "function name": "digestTestData",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.digestTestData"
                },
                {
                    "function name": "testDigestInputStream",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestInputStream"
                },
                {
                    "function name": "testDigestByteArray",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestByteArray"
                }
            ],
            "date": "2023-07-08"
        },
        {
            "commit_id": 1416,
            "hash": "4ef99468e6a321d22fa88c484885c9aba048ccee",
            "commit_summary": "Javadoc existing behavior",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java"
            ],
            "functions": [],
            "date": "2023-08-09"
        },
        {
            "commit_id": 1417,
            "hash": "85d377f1de68fe2821ed2df08ab3843b4a9a9a9c",
            "commit_summary": "Document current behavior",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java"
            ],
            "functions": [],
            "date": "2023-08-10"
        },
        {
            "commit_id": 1418,
            "hash": "c44ac8f6fdb18275793a69d73d416aedc69dcc64",
            "commit_summary": "Normalize spelling",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java"
            ],
            "functions": [
                {
                    "function name": "testApr1CryptBytes",
                    "function params": [],
                    "file name": "Apr1CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes"
                },
                {
                    "function name": "testApr1CryptBytesWithThreadLocalRandom",
                    "function params": [],
                    "file name": "Apr1CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytesWithThreadLocalRandom"
                },
                {
                    "function name": "testMd5CryptBytes",
                    "function params": [],
                    "file name": "Md5CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"
                },
                {
                    "function name": "testSha256CryptBytes",
                    "function params": [],
                    "file name": "Sha256CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"
                },
                {
                    "function name": "testSha512CryptBytes",
                    "function params": [],
                    "file name": "Sha512CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes"
                },
                {
                    "function name": "testUnixCryptBytes",
                    "function params": [],
                    "file name": "UnixCryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"
                }
            ],
            "date": "2023-08-10"
        },
        {
            "commit_id": 1419,
            "hash": "a5ab4242940b381dd638984d5a8a7966534b3e9e",
            "commit_summary": "Assert current behavior",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java"
            ],
            "functions": [
                {
                    "function name": "testSha256LargestThanBlocksize",
                    "function params": [],
                    "file name": "Sha256CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargestThanBlocksize"
                }
            ],
            "date": "2023-08-10"
        },
        {
            "commit_id": 1420,
            "hash": "572e02044bf76f2d0735a05e70fa60f0821705f2",
            "commit_summary": "Assert current behavior",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java"
            ],
            "functions": [
                {
                    "function name": "testSha256LargetThanBlocksize",
                    "function params": [],
                    "file name": "Sha512CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"
                }
            ],
            "date": "2023-08-10"
        },
        {
            "commit_id": 1421,
            "hash": "94709560e3095ea7f013407d81dcfab1b3dcd68a",
            "commit_summary": "Assert current behavior",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java"
            ],
            "functions": [
                {
                    "function name": "testZeroOutInput",
                    "function params": [],
                    "file name": "Md5CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Md5CryptTest.testZeroOutInput"
                },
                {
                    "function name": "testZeroOutInput",
                    "function params": [],
                    "file name": "Sha256CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha256CryptTest.testZeroOutInput"
                },
                {
                    "function name": "testZeroOutInput",
                    "function params": [],
                    "file name": "Sha512CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha512CryptTest.testZeroOutInput"
                }
            ],
            "date": "2023-08-10"
        },
        {
            "commit_id": 1422,
            "hash": "98283ec4a786359b23dd380db8b173d439498092",
            "commit_summary": "Remove trailing whitespace",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java"
            ],
            "functions": [],
            "date": "2023-08-10"
        },
        {
            "commit_id": 1423,
            "hash": "6e19d7bd59aefac71103f0fc5fab8b9c5973fedf",
            "commit_summary": "Better class name",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/BCodec.java",
                "src/main/java/org/apache/commons/codec/net/QCodec.java",
                "src/test/java/org/apache/commons/codec/net/RFC1522CodecTest.java"
            ],
            "functions": [],
            "date": "2023-08-18"
        },
        {
            "commit_id": 1424,
            "hash": "b18a246cd2b2c7ff5ed5c505e27ee487b48370ea",
            "commit_summary": "Better test class name",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/Caverphone1Test.java",
                "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java",
                "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                "src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                "src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java",
                "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java"
            ],
            "functions": [],
            "date": "2023-08-18"
        },
        {
            "commit_id": 1425,
            "hash": "3acdc6c2ff65a0bc8c02b3f0c7e0d8b64adc0548",
            "commit_summary": "JApiCmp complains but shouldn't?",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/BCodec.java",
                "src/main/java/org/apache/commons/codec/net/QCodec.java",
                "src/test/java/org/apache/commons/codec/net/RFC1522CodecTest.java"
            ],
            "functions": [
                {
                    "function name": "getEncoding",
                    "function params": [],
                    "file name": "CustomRFC1522Codec.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/net/CustomRFC1522Codec.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.CustomRFC1522Codec.getEncoding"
                },
                {
                    "function name": "doDecoding",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "CustomRFC1522Codec.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/net/CustomRFC1522Codec.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.CustomRFC1522Codec.doDecoding"
                },
                {
                    "function name": "encodeText",
                    "function params": [
                        "text",
                        "charset"
                    ],
                    "file name": "CustomRFC1522Codec.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/net/CustomRFC1522Codec.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.CustomRFC1522Codec.encodeText"
                },
                {
                    "function name": "doEncoding",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "CustomRFC1522Codec.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/net/CustomRFC1522Codec.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.CustomRFC1522Codec.doEncoding"
                },
                {
                    "function name": "encodeText",
                    "function params": [
                        "text",
                        "charsetName"
                    ],
                    "file name": "CustomRFC1522Codec.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/net/CustomRFC1522Codec.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.CustomRFC1522Codec.encodeText"
                },
                {
                    "function name": "decodeText",
                    "function params": [
                        "text"
                    ],
                    "file name": "CustomRFC1522Codec.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/net/CustomRFC1522Codec.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.CustomRFC1522Codec.decodeText"
                }
            ],
            "date": "2023-08-19"
        },
        {
            "commit_id": 1426,
            "hash": "b9ca0f024fb7b9e7b5bee5050b1a23fb362e782c",
            "commit_summary": "Javadoc",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/net/CustomRFC1522Codec.java"
            ],
            "functions": [],
            "date": "2023-08-19"
        },
        {
            "commit_id": 1427,
            "hash": "599bedc4e8cc7e997b947c488e322951a3e53a4e",
            "commit_summary": "Fix formating",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/Metaphone.java"
            ],
            "functions": [
                {
                    "function name": "isNextChar",
                    "function params": [
                        "string",
                        "index",
                        "c"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.isNextChar"
                },
                {
                    "function name": "isPreviousChar",
                    "function params": [
                        "string",
                        "index",
                        "c"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.isPreviousChar"
                }
            ],
            "date": "2023-08-21"
        },
        {
            "commit_id": 1428,
            "hash": "62d58694438950d9f7e7c79d83b5ba134995bb04",
            "commit_summary": "Fix formatting",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java"
            ],
            "functions": [
                {
                    "function name": "testBase32BinarySamples",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32BinarySamples"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [
                        "crcs",
                        "bytes",
                        "size",
                        "out"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                }
            ],
            "date": "2023-08-22"
        },
        {
            "commit_id": 1429,
            "hash": "4a1f7d7750f00575c6daa27fb88f4401d8a94790",
            "commit_summary": "Normalize array type declarations",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                "src/test/java/org/apache/commons/codec/net/BCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "testSingletons",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testSingletons"
                },
                {
                    "function name": "testPairs",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testPairs"
                },
                {
                    "function name": "testSingleCharEncoding",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"
                },
                {
                    "function name": "testSingletons",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testSingletons"
                },
                {
                    "function name": "testPairs",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testPairs"
                },
                {
                    "function name": "testEncodeHexPartialInputUnderbounds",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexPartialInputUnderbounds"
                },
                {
                    "function name": "testEncodeHexPartialInputOverbounds",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexPartialInputOverbounds"
                },
                {
                    "function name": "testEncodeHexPartialInput",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexPartialInput"
                },
                {
                    "function name": "testCorrectness",
                    "function params": [],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness"
                },
                {
                    "function name": "testVariationsMella",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"
                },
                {
                    "function name": "testVariationsMeyer",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"
                },
                {
                    "function name": "testSpecialCharsBetweenSameLetters",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testSpecialCharsBetweenSameLetters"
                }
            ],
            "date": "2023-08-23"
        },
        {
            "commit_id": 1430,
            "hash": "293742a0d2794c455e6deb3624e1e401143cfd28",
            "commit_summary": "Remove unused exceptions in tests\n\nJavadoc",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                "src/test/java/org/apache/commons/codec/language/NysiisTest.java"
            ],
            "functions": [
                {
                    "function name": "testStaticDecodeChunked",
                    "function params": [],
                    "file name": "Base64Codec13Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"
                },
                {
                    "function name": "testStaticEncode",
                    "function params": [],
                    "file name": "Base64Codec13Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"
                },
                {
                    "function name": "testStaticEncodeChunked",
                    "function params": [],
                    "file name": "Base64Codec13Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"
                },
                {
                    "function name": "testStaticDecode",
                    "function params": [],
                    "file name": "Base64Codec13Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"
                },
                {
                    "function name": "assertEncodings",
                    "function params": [
                        "testValues"
                    ],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.assertEncodings"
                }
            ],
            "date": "2023-08-23"
        },
        {
            "commit_id": 1431,
            "hash": "f13d80ecb575e0dca18f2a7a66d431ed9a0643e1",
            "commit_summary": "Use try-with-resources",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java"
            ],
            "functions": [
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "separator"
                    ],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testByChunk"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "separator"
                    ],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testByChunk"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "separator"
                    ],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testByteByByte"
                }
            ],
            "date": "2023-08-29"
        },
        {
            "commit_id": 1432,
            "hash": "c5c0dbe8fe456b3e9449639e72b144c2a9156303",
            "commit_summary": "Use try-with-resources",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java"
            ],
            "functions": [
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "separator"
                    ],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testByteByByte"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "separator"
                    ],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testByChunk"
                }
            ],
            "date": "2023-08-29"
        },
        {
            "commit_id": 1433,
            "hash": "c5c8326ae53c29aa5aa26e8e9bd30e0070e899e6",
            "commit_summary": "Add @SuppressWarnings",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java"
            ],
            "functions": [
                {
                    "function name": "testNonBlockingDigestRandomAccessFile",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testNonBlockingDigestRandomAccessFile"
                }
            ],
            "date": "2023-08-29"
        },
        {
            "commit_id": 1434,
            "hash": "88936ac4e617881dcc6cba3fb2abd73dbd89d3b5",
            "commit_summary": "Test throws AssertionError instead of Error",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java"
            ],
            "functions": [
                {
                    "function name": "catch",
                    "function params": [
                        "de"
                    ],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.catch"
                }
            ],
            "date": "2023-08-31"
        },
        {
            "commit_id": 1435,
            "hash": "20807faa152f2eac2ff13d3dcec5b16180b94ad4",
            "commit_summary": "Use final\n\nRemove extra parens",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base16.java",
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/main/java/org/apache/commons/codec/digest/B64.java",
                "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/main/java/org/apache/commons/codec/language/Soundex.java",
                "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                "src/test/java/org/apache/commons/codec/net/CustomRFC1522Codec.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "context"
                    ],
                    "file name": "Base16.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "context"
                    ],
                    "file name": "Base16.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "input",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encode"
                },
                {
                    "function name": "isBase64",
                    "function params": [
                        "octet"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.isBase64"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "input",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "toIntegerBytes",
                    "function params": [
                        "bigInt"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.toIntegerBytes"
                },
                {
                    "function name": "isInAlphabet",
                    "function params": [
                        "arrayOctet",
                        "allowWSPad"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.isInAlphabet"
                },
                {
                    "function name": "getEncodedLength",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.getEncodedLength"
                },
                {
                    "function name": "BaseNCodec",
                    "function params": [
                        "unencodedBlockSize",
                        "encodedBlockSize",
                        "lineLength",
                        "chunkSeparatorLength",
                        "pad",
                        "decodingPolicy"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.BaseNCodec"
                },
                {
                    "function name": "b64from24bit",
                    "function params": [
                        "b2",
                        "b1",
                        "b0",
                        "outLen",
                        "buffer"
                    ],
                    "file name": "B64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/B64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/B64.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.B64.b64from24bit"
                },
                {
                    "function name": "getLittleEndianInt",
                    "function params": [
                        "data",
                        "index"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.getLittleEndianInt"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.hash64"
                },
                {
                    "function name": "getLittleEndianLong",
                    "function params": [
                        "data",
                        "index"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.getLittleEndianLong"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.hash32"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data1",
                        "data2",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "getLittleEndianLong",
                    "function params": [
                        "data",
                        "index"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.getLittleEndianLong"
                },
                {
                    "function name": "hash32x86",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32x86"
                },
                {
                    "function name": "IncrementalHash32x86",
                    "function params": [
                        "b1",
                        "b2",
                        "b3",
                        "b4"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.IncrementalHash32x86"
                },
                {
                    "function name": "fmix64",
                    "function params": [
                        "hash"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.fmix64"
                },
                {
                    "function name": "IncrementalHash32x86",
                    "function params": [
                        "data",
                        "offset",
                        "length"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.IncrementalHash32x86"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "IncrementalHash32x86",
                    "function params": [
                        "hash",
                        "unprocessedLength",
                        "unprocessed",
                        "totalLen"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.IncrementalHash32x86"
                },
                {
                    "function name": "fmix32",
                    "function params": [
                        "hash"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.fmix32"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "getLittleEndianInt",
                    "function params": [
                        "data",
                        "index"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.getLittleEndianInt"
                },
                {
                    "function name": "update",
                    "function params": [
                        "b"
                    ],
                    "file name": "PureJavaCrc32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32.update"
                },
                {
                    "function name": "getValue",
                    "function params": [],
                    "file name": "PureJavaCrc32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32.getValue"
                },
                {
                    "function name": "update",
                    "function params": [
                        "b",
                        "offset",
                        "len"
                    ],
                    "file name": "PureJavaCrc32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32.update"
                },
                {
                    "function name": "getValue",
                    "function params": [],
                    "file name": "PureJavaCrc32C.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32C.getValue"
                },
                {
                    "function name": "update",
                    "function params": [
                        "b",
                        "off",
                        "len"
                    ],
                    "file name": "PureJavaCrc32C.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32C.update"
                },
                {
                    "function name": "update",
                    "function params": [
                        "b"
                    ],
                    "file name": "PureJavaCrc32C.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32C.update"
                },
                {
                    "function name": "desSetKey",
                    "function params": [
                        "key"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.desSetKey"
                },
                {
                    "function name": "getInt",
                    "function params": [
                        "buffer",
                        "idx"
                    ],
                    "file name": "XXHash32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.XXHash32.getInt"
                },
                {
                    "function name": "colognePhonetic",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.colognePhonetic"
                },
                {
                    "function name": "soundex",
                    "function params": [
                        "source",
                        "branching"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex"
                },
                {
                    "function name": "conditionCH1",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.conditionCH1"
                },
                {
                    "function name": "handleX",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleX"
                },
                {
                    "function name": "conditionM0",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.conditionM0"
                },
                {
                    "function name": "handleG",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleG"
                },
                {
                    "function name": "handleS",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleS"
                },
                {
                    "function name": "handleCC",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleCC"
                },
                {
                    "function name": "conditionC0",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.conditionC0"
                },
                {
                    "function name": "handleGH",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleGH"
                },
                {
                    "function name": "handleJ",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleJ"
                },
                {
                    "function name": "handleW",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleW"
                },
                {
                    "function name": "handleZ",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleZ"
                },
                {
                    "function name": "soundex",
                    "function params": [
                        "str"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.soundex"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.encode"
                },
                {
                    "function name": "canEncode",
                    "function params": [
                        "c"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.canEncode"
                },
                {
                    "function name": "encodeQuotedPrintable",
                    "function params": [
                        "printable",
                        "bytes",
                        "strict"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable"
                },
                {
                    "function name": "testIsInAlphabet",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testIsInAlphabet"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "separator"
                    ],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testByChunk"
                },
                {
                    "function name": "testHash32WithOffsetLengthAndSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32WithOffsetLengthAndSeed"
                },
                {
                    "function name": "testHash32",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32"
                },
                {
                    "function name": "testHash32WithLength",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32WithLength"
                },
                {
                    "function name": "testHash32WithLengthAndSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32WithLengthAndSeed"
                },
                {
                    "function name": "Table",
                    "function params": [
                        "nBits",
                        "nTables",
                        "polynomial"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.Table"
                },
                {
                    "function name": "testIsVowel_SingleVowel_ReturnsTrue",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SingleVowel_ReturnsTrue"
                },
                {
                    "function name": "doEncoding",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "CustomRFC1522Codec.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/CustomRFC1522Codec.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/CustomRFC1522Codec.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.CustomRFC1522Codec.doEncoding"
                },
                {
                    "function name": "decodeText",
                    "function params": [
                        "text"
                    ],
                    "file name": "CustomRFC1522Codec.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/CustomRFC1522Codec.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/CustomRFC1522Codec.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.CustomRFC1522Codec.decodeText"
                },
                {
                    "function name": "encodeText",
                    "function params": [
                        "text",
                        "charsetName"
                    ],
                    "file name": "CustomRFC1522Codec.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/CustomRFC1522Codec.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/CustomRFC1522Codec.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.CustomRFC1522Codec.encodeText"
                },
                {
                    "function name": "doDecoding",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "CustomRFC1522Codec.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/CustomRFC1522Codec.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/CustomRFC1522Codec.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.CustomRFC1522Codec.doDecoding"
                },
                {
                    "function name": "encodeText",
                    "function params": [
                        "text",
                        "charset"
                    ],
                    "file name": "CustomRFC1522Codec.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/CustomRFC1522Codec.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/CustomRFC1522Codec.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.CustomRFC1522Codec.encodeText"
                },
                {
                    "function name": "doEncoding",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "CustomRFC1522Codec.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/CustomRFC1522Codec.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/CustomRFC1522Codec.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.CustomRFC1522Codec.doEncoding"
                },
                {
                    "function name": "encodeText",
                    "function params": [
                        "text",
                        "charsetName"
                    ],
                    "file name": "CustomRFC1522Codec.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/CustomRFC1522Codec.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/CustomRFC1522Codec.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.CustomRFC1522Codec.encodeText"
                },
                {
                    "function name": "decodeText",
                    "function params": [
                        "text"
                    ],
                    "file name": "CustomRFC1522Codec.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/CustomRFC1522Codec.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/CustomRFC1522Codec.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.CustomRFC1522Codec.decodeText"
                },
                {
                    "function name": "doDecoding",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "CustomRFC1522Codec.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/CustomRFC1522Codec.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/CustomRFC1522Codec.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.CustomRFC1522Codec.doDecoding"
                },
                {
                    "function name": "encodeText",
                    "function params": [
                        "text",
                        "charset"
                    ],
                    "file name": "CustomRFC1522Codec.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/CustomRFC1522Codec.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/CustomRFC1522Codec.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.CustomRFC1522Codec.encodeText"
                }
            ],
            "date": "2023-09-13"
        },
        {
            "commit_id": 1436,
            "hash": "14c2f60a605045f4f3f6ca74a97da34c3aac2536",
            "commit_summary": "Updating Javadoc and docs (#208)\n\nCo-authored-by: Yakov Shafranovich <yakovsh@amazon.com>",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java"
            ],
            "functions": [
                {
                    "function name": "crypt",
                    "function params": [
                        "original",
                        "salt"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.crypt"
                }
            ],
            "date": "2023-09-28"
        },
        {
            "commit_id": 1437,
            "hash": "4d53e45bfe2e4ce363c345615aacb3515f82853e",
            "commit_summary": "Sort imports and enforce through Checkstyle",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/Caverphone1Test.java",
                "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java",
                "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                "src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java",
                "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java"
            ],
            "functions": [],
            "date": "2023-10-09"
        },
        {
            "commit_id": 1438,
            "hash": "45659e4ee91bc42716a8452e36e4026f699d6b91",
            "commit_summary": "Make private static classes final",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java"
            ],
            "functions": [],
            "date": "2023-10-10"
        },
        {
            "commit_id": 1439,
            "hash": "a230916db8e404c5d7da7c12190b428e304ff73c",
            "commit_summary": "Refactor to narrow access to MessageDigest#getInstance(String)",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [
                {
                    "function name": "getMessageDigest",
                    "function params": [
                        "algorithm"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getMessageDigest"
                },
                {
                    "function name": "getDigest",
                    "function params": [
                        "algorithm",
                        "defaultMessageDigest"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getDigest"
                },
                {
                    "function name": "getDigest",
                    "function params": [
                        "algorithm"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getDigest"
                }
            ],
            "date": "2023-10-17"
        },
        {
            "commit_id": 1440,
            "hash": "48885182765972003e889d9557d297e5ff6efacb",
            "commit_summary": "Javadoc",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [],
            "date": "2023-10-17"
        },
        {
            "commit_id": 1441,
            "hash": "e2a18bf7b4b44bf9b5e8823bc6051f62ef6706f3",
            "commit_summary": "Format to longer lines",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [
                {
                    "function name": "updateDigest",
                    "function params": [
                        "digest",
                        "inputStream"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.updateDigest"
                },
                {
                    "function name": "updateDigest",
                    "function params": [
                        "digest",
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.updateDigest"
                },
                {
                    "function name": "updateDigest",
                    "function params": [
                        "digest",
                        "path",
                        "options"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.updateDigest"
                },
                {
                    "function name": "digest",
                    "function params": [
                        "messageDigest",
                        "data",
                        "options"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.digest"
                }
            ],
            "date": "2023-10-17"
        },
        {
            "commit_id": 1442,
            "hash": "f33faf2f5ac982bb690bc3aeab66cf94c358bc1b",
            "commit_summary": "Javadoc, no need to abbreviate in documentation",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Hex.java",
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                "src/main/java/org/apache/commons/codec/net/Utils.java",
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [],
            "date": "2023-10-17"
        },
        {
            "commit_id": 1443,
            "hash": "2aa8f67b8c17a059a492ffc889e4a3dd64c8d675",
            "commit_summary": "Simplify comment",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java"
            ],
            "functions": [
                {
                    "function name": "values",
                    "function params": [],
                    "file name": "MessageDigestAlgorithms.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MessageDigestAlgorithms.values"
                }
            ],
            "date": "2023-10-18"
        },
        {
            "commit_id": 1444,
            "hash": "57b1285ccf8c7de66186b9458d2020097813f36d",
            "commit_summary": "Only list Java LTS versions in Javadoc",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java"
            ],
            "functions": [],
            "date": "2023-10-18"
        },
        {
            "commit_id": 1445,
            "hash": "f0dc8e10ebae7cd6c80c5b9f7c614464054fc9c1",
            "commit_summary": "Camel-case internal names",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "testSha224_FileAsHex",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha224_FileAsHex"
                },
                {
                    "function name": "testDigestAs",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testDigestAs"
                }
            ],
            "date": "2023-10-19"
        },
        {
            "commit_id": 1446,
            "hash": "931bb815b690b098936beca76c600f134027f1bd",
            "commit_summary": "Sort members",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/main/java/org/apache/commons/codec/binary/Hex.java",
                "src/main/java/org/apache/commons/codec/cli/Digest.java",
                "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/main/java/org/apache/commons/codec/language/Soundex.java",
                "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                "src/main/java/org/apache/commons/codec/net/BCodec.java",
                "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                "src/main/java/org/apache/commons/codec/net/QCodec.java",
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                "src/test/java/org/apache/commons/codec/binary/BaseNTestData.java",
                "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                "src/test/java/org/apache/commons/codec/binary/CharSequenceUtilsTest.java",
                "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/B64Test.java",
                "src/test/java/org/apache/commons/codec/digest/Blake3Test.java",
                "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java",
                "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/CacheSubSequencePerformanceTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/CustomRFC1522Codec.java",
                "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/RFC1522CodecTest.java",
                "src/test/java/org/apache/commons/codec/net/URLCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "Context",
                    "function params": [],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.Context"
                },
                {
                    "function name": "run",
                    "function params": [
                        "digestAlgorithms"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.cli.Digest.run"
                },
                {
                    "function name": "EngineState",
                    "function params": [],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.EngineState"
                },
                {
                    "function name": "Blake3",
                    "function params": [
                        "key",
                        "flags"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.Blake3"
                },
                {
                    "function name": "EngineState",
                    "function params": [
                        "out",
                        "offset",
                        "length"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.EngineState"
                },
                {
                    "function name": "parentChainingValue",
                    "function params": [
                        "leftChildCV",
                        "rightChildCV",
                        "key",
                        "flags"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.parentChainingValue"
                },
                {
                    "function name": "ChunkState",
                    "function params": [
                        "key",
                        "chunkCounter",
                        "flags"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.ChunkState"
                },
                {
                    "function name": "EngineState",
                    "function params": [
                        "cv"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.EngineState"
                },
                {
                    "function name": "EngineState",
                    "function params": [
                        "in",
                        "offset",
                        "length"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.EngineState"
                },
                {
                    "function name": "update",
                    "function params": [
                        "in"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.update"
                },
                {
                    "function name": "doFinalize",
                    "function params": [
                        "nrBytes"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.doFinalize"
                },
                {
                    "function name": "Output",
                    "function params": [],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.Output"
                },
                {
                    "function name": "ChunkState",
                    "function params": [
                        "input",
                        "offset",
                        "length"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.ChunkState"
                },
                {
                    "function name": "unpackInts",
                    "function params": [
                        "buf",
                        "nrInts"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.unpackInts"
                },
                {
                    "function name": "EngineState",
                    "function params": [
                        "firstCV",
                        "totalChunks"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.EngineState"
                },
                {
                    "function name": "g",
                    "function params": [
                        "state",
                        "a",
                        "b",
                        "c",
                        "d",
                        "mx",
                        "my"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.g"
                },
                {
                    "function name": "parentOutput",
                    "function params": [
                        "leftChildCV",
                        "rightChildCV",
                        "key",
                        "flags"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.parentOutput"
                },
                {
                    "function name": "update",
                    "function params": [
                        "in",
                        "offset",
                        "length"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.update"
                },
                {
                    "function name": "EngineState",
                    "function params": [
                        "key",
                        "flags"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.EngineState"
                },
                {
                    "function name": "ChunkState",
                    "function params": [],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.ChunkState"
                },
                {
                    "function name": "Output",
                    "function params": [
                        "out",
                        "offset",
                        "length"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.Output"
                },
                {
                    "function name": "doFinalize",
                    "function params": [
                        "out",
                        "offset",
                        "length"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.doFinalize"
                },
                {
                    "function name": "ChunkState",
                    "function params": [],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.ChunkState"
                },
                {
                    "function name": "compress",
                    "function params": [
                        "chainingValue",
                        "blockWords",
                        "blockLength",
                        "counter",
                        "flags"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.compress"
                },
                {
                    "function name": "hash",
                    "function params": [
                        "data"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.hash"
                },
                {
                    "function name": "doFinalize",
                    "function params": [
                        "out"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.doFinalize"
                },
                {
                    "function name": "reset",
                    "function params": [],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.reset"
                },
                {
                    "function name": "EngineState",
                    "function params": [],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.EngineState"
                },
                {
                    "function name": "initKeyedHash",
                    "function params": [
                        "key"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.initKeyedHash"
                },
                {
                    "function name": "ChunkState",
                    "function params": [],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.ChunkState"
                },
                {
                    "function name": "Output",
                    "function params": [
                        "inputChainingValue",
                        "blockWords",
                        "counter",
                        "blockLength",
                        "flags"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.Output"
                },
                {
                    "function name": "checkBufferArgs",
                    "function params": [
                        "buffer",
                        "offset",
                        "length"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.checkBufferArgs"
                },
                {
                    "function name": "unpackInt",
                    "function params": [
                        "buf",
                        "off"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.unpackInt"
                },
                {
                    "function name": "hmac",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmac"
                },
                {
                    "function name": "HmacUtils",
                    "function params": [
                        "algorithm",
                        "key"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.HmacUtils"
                },
                {
                    "function name": "HmacUtils",
                    "function params": [
                        "algorithm",
                        "key"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.HmacUtils"
                },
                {
                    "function name": "hmacHex",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacHex"
                },
                {
                    "function name": "isAvailable",
                    "function params": [
                        "name"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.isAvailable"
                },
                {
                    "function name": "HmacUtils",
                    "function params": [
                        "algorithm",
                        "key"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.HmacUtils"
                },
                {
                    "function name": "hmac",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmac"
                },
                {
                    "function name": "hmacHex",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacHex"
                },
                {
                    "function name": "hmac",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmac"
                },
                {
                    "function name": "hmacHex",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmacHex"
                },
                {
                    "function name": "HmacUtils",
                    "function params": [
                        "mac"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.HmacUtils"
                },
                {
                    "function name": "HmacUtils",
                    "function params": [
                        "algorithm",
                        "key"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.HmacUtils"
                },
                {
                    "function name": "hmac",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmac"
                },
                {
                    "function name": "isAvailable",
                    "function params": [
                        "name"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.isAvailable"
                },
                {
                    "function name": "MurmurHash2",
                    "function params": [],
                    "file name": "MurmurHash2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.MurmurHash2"
                },
                {
                    "function name": "getLittleEndianInt",
                    "function params": [
                        "data",
                        "index"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.getLittleEndianInt"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data",
                        "length"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.hash64"
                },
                {
                    "function name": "getLittleEndianLong",
                    "function params": [
                        "data",
                        "index"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.getLittleEndianLong"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data",
                        "length"
                    ],
                    "file name": "MurmurHash2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash2.hash32"
                },
                {
                    "function name": "hash128x64Internal",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash128x64Internal"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data1",
                        "data2"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data1",
                        "data2",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "hash128",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash128"
                },
                {
                    "function name": "IncrementalHash32",
                    "function params": [
                        "hash",
                        "unprocessedLength",
                        "unprocessed",
                        "totalLen"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.IncrementalHash32"
                },
                {
                    "function name": "getLittleEndianLong",
                    "function params": [
                        "data",
                        "index"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.getLittleEndianLong"
                },
                {
                    "function name": "hash32x86",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32x86"
                },
                {
                    "function name": "IncrementalHash32x86",
                    "function params": [
                        "b1",
                        "b2",
                        "b3",
                        "b4"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.IncrementalHash32x86"
                },
                {
                    "function name": "hash128x64",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash128x64"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "IncrementalHash32x86",
                    "function params": [
                        "data",
                        "offset",
                        "length"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.IncrementalHash32x86"
                },
                {
                    "function name": "IncrementalHash32x86",
                    "function params": [],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.IncrementalHash32x86"
                },
                {
                    "function name": "hash128x64",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash128x64"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "IncrementalHash32x86",
                    "function params": [
                        "hash",
                        "unprocessedLength",
                        "unprocessed",
                        "totalLen"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.IncrementalHash32x86"
                },
                {
                    "function name": "fmix32",
                    "function params": [
                        "hash"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.fmix32"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "hash128",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash128"
                },
                {
                    "function name": "IncrementalHash32x86",
                    "function params": [
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.IncrementalHash32x86"
                },
                {
                    "function name": "getLittleEndianInt",
                    "function params": [
                        "data",
                        "index"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.getLittleEndianInt"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data",
                        "length"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "hash32x86",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32x86"
                },
                {
                    "function name": "hash128",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash128"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "MurmurHash3",
                    "function params": [],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.MurmurHash3"
                },
                {
                    "function name": "fmix64",
                    "function params": [
                        "hash"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.fmix64"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "hash32",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash32"
                },
                {
                    "function name": "body",
                    "function params": [
                        "schedule",
                        "eSwap0",
                        "eSwap1"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.body"
                },
                {
                    "function name": "byteToUnsigned",
                    "function params": [
                        "b"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned"
                },
                {
                    "function name": "reset",
                    "function params": [],
                    "file name": "XXHash32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.XXHash32.reset"
                },
                {
                    "function name": "update",
                    "function params": [
                        "b"
                    ],
                    "file name": "XXHash32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.XXHash32.update"
                },
                {
                    "function name": "update",
                    "function params": [
                        "b",
                        "off",
                        "len"
                    ],
                    "file name": "XXHash32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.XXHash32.update"
                },
                {
                    "function name": "getInt",
                    "function params": [
                        "buffer",
                        "idx"
                    ],
                    "file name": "XXHash32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.XXHash32.getInt"
                },
                {
                    "function name": "CologneInputBuffer",
                    "function params": [],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer"
                },
                {
                    "function name": "CologneInputBuffer",
                    "function params": [
                        "data"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer"
                },
                {
                    "function name": "CologneInputBuffer",
                    "function params": [],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer"
                },
                {
                    "function name": "CologneOutputBuffer",
                    "function params": [
                        "start",
                        "length"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.CologneOutputBuffer"
                },
                {
                    "function name": "CologneInputBuffer",
                    "function params": [],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer"
                },
                {
                    "function name": "CologneInputBuffer",
                    "function params": [
                        "start",
                        "length"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer"
                },
                {
                    "function name": "CologneBuffer",
                    "function params": [],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.CologneBuffer"
                },
                {
                    "function name": "isDoubleMetaphoneEqual",
                    "function params": [
                        "value1",
                        "value2",
                        "alternate"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.isDoubleMetaphoneEqual"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "conditionCH1",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.conditionCH1"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "isSlavoGermanic",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [
                        "maxLength"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "conditionC0",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.conditionC0"
                },
                {
                    "function name": "isVowel",
                    "function params": [
                        "ch"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.isVowel"
                },
                {
                    "function name": "contains",
                    "function params": [
                        "value",
                        "start",
                        "length",
                        "criteria"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.contains"
                },
                {
                    "function name": "charAt",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.charAt"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "cleanInput",
                    "function params": [
                        "input"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.cleanInput"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [
                        "primary",
                        "alternate"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "conditionM0",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.conditionM0"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "setMaxCodeLen",
                    "function params": [
                        "maxCodeLen"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.setMaxCodeLen"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [
                        "primary",
                        "alternate"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "conditionCH0",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.conditionCH0"
                },
                {
                    "function name": "isDoubleMetaphoneEqual",
                    "function params": [
                        "value1",
                        "value2"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.isDoubleMetaphoneEqual"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "conditionL0",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.conditionL0"
                },
                {
                    "function name": "isNextChar",
                    "function params": [
                        "string",
                        "index",
                        "c"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.isNextChar"
                },
                {
                    "function name": "getMaxCodeLen",
                    "function params": [],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.getMaxCodeLen"
                },
                {
                    "function name": "isVowel",
                    "function params": [
                        "string",
                        "index"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.isVowel"
                },
                {
                    "function name": "isMetaphoneEqual",
                    "function params": [
                        "str1",
                        "str2"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.isMetaphoneEqual"
                },
                {
                    "function name": "isPreviousChar",
                    "function params": [
                        "string",
                        "index",
                        "c"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.isPreviousChar"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.encode"
                },
                {
                    "function name": "isLastChar",
                    "function params": [
                        "wdsz",
                        "n"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.isLastChar"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.encode"
                },
                {
                    "function name": "hasMarker",
                    "function params": [
                        "mapping"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.hasMarker"
                },
                {
                    "function name": "setMaxPhonemes",
                    "function params": [
                        "maxPhonemes"
                    ],
                    "file name": "BeiderMorseEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.BeiderMorseEncoder.setMaxPhonemes"
                },
                {
                    "function name": "SomeLanguages",
                    "function params": [],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.SomeLanguages"
                },
                {
                    "function name": "SomeLanguages",
                    "function params": [],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.SomeLanguages"
                },
                {
                    "function name": "SomeLanguages",
                    "function params": [],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.SomeLanguages"
                },
                {
                    "function name": "SomeLanguages",
                    "function params": [],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.SomeLanguages"
                },
                {
                    "function name": "SomeLanguages",
                    "function params": [],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.SomeLanguages"
                },
                {
                    "function name": "LanguageSet",
                    "function params": [
                        "langs"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.LanguageSet"
                },
                {
                    "function name": "SomeLanguages",
                    "function params": [
                        "languages"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.SomeLanguages"
                },
                {
                    "function name": "SomeLanguages",
                    "function params": [
                        "language"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.SomeLanguages"
                },
                {
                    "function name": "SomeLanguages",
                    "function params": [
                        "other"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.SomeLanguages"
                },
                {
                    "function name": "SomeLanguages",
                    "function params": [
                        "other"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.SomeLanguages"
                },
                {
                    "function name": "LanguageSet",
                    "function params": [],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.LanguageSet"
                },
                {
                    "function name": "getMaxPhonemes",
                    "function params": [],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.getMaxPhonemes"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "strSource",
                        "sourceCharset"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.encode"
                },
                {
                    "function name": "getEncoding",
                    "function params": [],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.getEncoding"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "value"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "value"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.decode"
                },
                {
                    "function name": "isStrictDecoding",
                    "function params": [],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.isStrictDecoding"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "value"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.decode"
                },
                {
                    "function name": "doEncoding",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.doEncoding"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "strSource",
                        "sourceCharset"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.encode"
                },
                {
                    "function name": "inAlwaysEncodeCharsRange",
                    "function params": [
                        "c"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.inAlwaysEncodeCharsRange"
                },
                {
                    "function name": "containsSpace",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.containsSpace"
                },
                {
                    "function name": "insertAlwaysEncodeChars",
                    "function params": [
                        "alwaysEncodeCharsArray"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.insertAlwaysEncodeChars"
                },
                {
                    "function name": "expectedEncodingBytes",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.expectedEncodingBytes"
                },
                {
                    "function name": "canEncode",
                    "function params": [
                        "c"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.canEncode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.encode"
                },
                {
                    "function name": "isAsciiChar",
                    "function params": [
                        "c"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.isAsciiChar"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.decode"
                },
                {
                    "function name": "insertAlwaysEncodeChar",
                    "function params": [
                        "b"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.insertAlwaysEncodeChar"
                },
                {
                    "function name": "getEncoding",
                    "function params": [],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.getEncoding"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "str"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "sourceStr",
                        "sourceCharset"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "sourceStr",
                        "sourceCharset"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.encode"
                },
                {
                    "function name": "doEncoding",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.doEncoding"
                },
                {
                    "function name": "isWhitespace",
                    "function params": [
                        "b"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace"
                },
                {
                    "function name": "QuotedPrintableCodec",
                    "function params": [
                        "charset",
                        "strict"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "sourceStr"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "QuotedPrintableCodec",
                    "function params": [
                        "charsetName"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec"
                },
                {
                    "function name": "QuotedPrintableCodec",
                    "function params": [
                        "strict"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec"
                },
                {
                    "function name": "QuotedPrintableCodec",
                    "function params": [],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec"
                },
                {
                    "function name": "decodeQuotedPrintable",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable"
                },
                {
                    "function name": "getUnsignedOctet",
                    "function params": [
                        "index",
                        "bytes"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet"
                },
                {
                    "function name": "getDefaultCharset",
                    "function params": [],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.getDefaultCharset"
                },
                {
                    "function name": "QuotedPrintableCodec",
                    "function params": [
                        "charset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "sourceStr"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "encodeQuotedPrintable",
                    "function params": [
                        "b",
                        "buffer"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "getCharset",
                    "function params": [],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.getCharset"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "encodeText",
                    "function params": [
                        "text",
                        "charsetName"
                    ],
                    "file name": "RFC1522Codec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.RFC1522Codec.encodeText"
                },
                {
                    "function name": "encodeText",
                    "function params": [
                        "text",
                        "charset"
                    ],
                    "file name": "RFC1522Codec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.RFC1522Codec.encodeText"
                },
                {
                    "function name": "decodeUrl",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.decodeUrl"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.decode"
                },
                {
                    "function name": "URLCodec",
                    "function params": [
                        "charset"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.URLCodec"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "str"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str",
                        "charsetName"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.encode"
                },
                {
                    "function name": "URLCodec",
                    "function params": [],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.URLCodec"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.encode"
                },
                {
                    "function name": "testIso8859_1",
                    "function params": [],
                    "file name": "CharsetsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharsetsTest.testIso8859_1"
                },
                {
                    "function name": "testComparatorWithSoundex",
                    "function params": [],
                    "file name": "StringEncoderComparatorTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"
                },
                {
                    "function name": "testByteToStringVariations",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testByteToStringVariations"
                },
                {
                    "function name": "testDecodeSingleBytes",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testDecodeSingleBytes"
                },
                {
                    "function name": "testConstructors",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testConstructors"
                },
                {
                    "function name": "testLenientDecoding",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testLenientDecoding"
                },
                {
                    "function name": "testBase16AtBufferStart",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testBase16AtBufferStart"
                },
                {
                    "function name": "testTriplets",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testTriplets"
                },
                {
                    "function name": "testDecodeSingleBytesOptimisation",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testDecodeSingleBytesOptimisation"
                },
                {
                    "function name": "testOddEvenDecoding",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testOddEvenDecoding"
                },
                {
                    "function name": "testObjectEncode",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testObjectEncode"
                },
                {
                    "function name": "checkEncodeLengthBounds",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.checkEncodeLengthBounds"
                },
                {
                    "function name": "testIsInAlphabet",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testIsInAlphabet"
                },
                {
                    "function name": "testStrictDecoding",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testStrictDecoding"
                },
                {
                    "function name": "testSkipNone",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"
                },
                {
                    "function name": "testAvailable",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"
                },
                {
                    "function name": "testBase32EmptyInputStream",
                    "function params": [
                        "chuckSize"
                    ],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStream"
                },
                {
                    "function name": "testCodec105",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"
                },
                {
                    "function name": "testCodec130",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"
                },
                {
                    "function name": "testSkipBig",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"
                },
                {
                    "function name": "testStrictDecoding",
                    "function params": [],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testStrictDecoding"
                },
                {
                    "function name": "testBase32EmptyOutputStream",
                    "function params": [
                        "chunkSize"
                    ],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStream"
                },
                {
                    "function name": "testBase32DecodingOfTrailing10Bits",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32DecodingOfTrailing10Bits"
                },
                {
                    "function name": "testBase32InBuffer",
                    "function params": [
                        "startPasSize",
                        "endPadSize"
                    ],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32InBuffer"
                },
                {
                    "function name": "testBase32ImpossibleSamples",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32ImpossibleSamples"
                },
                {
                    "function name": "testBase32DecodingOfTrailing20Bits",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32DecodingOfTrailing20Bits"
                },
                {
                    "function name": "testBase32ImpossibleChunked",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32ImpossibleChunked"
                },
                {
                    "function name": "testImpossibleCases",
                    "function params": [
                        "codec",
                        "impossible_cases"
                    ],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testImpossibleCases"
                },
                {
                    "function name": "testBase32Samples",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32Samples"
                },
                {
                    "function name": "testBase32AtBufferStart",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32AtBufferStart"
                },
                {
                    "function name": "testBase32DecodingOfTrailing25Bits",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32DecodingOfTrailing25Bits"
                },
                {
                    "function name": "testBase32DecodingOfTrailing35Bits",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32DecodingOfTrailing35Bits"
                },
                {
                    "function name": "testBase32BinarySamples",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32BinarySamples"
                },
                {
                    "function name": "testBase32BinarySamplesReverse",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32BinarySamplesReverse"
                },
                {
                    "function name": "testBase32DecodingOfTrailing15Bits",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32DecodingOfTrailing15Bits"
                },
                {
                    "function name": "testBase32DecodingOfTrailing5Bits",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32DecodingOfTrailing5Bits"
                },
                {
                    "function name": "assertBase32DecodingOfTrailingBits",
                    "function params": [
                        "nbits"
                    ],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.assertBase32DecodingOfTrailingBits"
                },
                {
                    "function name": "testBase32HexImpossibleSamples",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32HexImpossibleSamples"
                },
                {
                    "function name": "testBase32DecodingOfTrailing30Bits",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32DecodingOfTrailing30Bits"
                },
                {
                    "function name": "initBYTES",
                    "function params": [],
                    "file name": "Base64Codec13Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Codec13Test.initBYTES"
                },
                {
                    "function name": "utf8",
                    "function params": [
                        "s"
                    ],
                    "file name": "Base64Codec13Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Codec13Test.utf8"
                },
                {
                    "function name": "initSTRINGS",
                    "function params": [],
                    "file name": "Base64Codec13Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Codec13Test.initSTRINGS"
                },
                {
                    "function name": "testStaticEncode",
                    "function params": [],
                    "file name": "Base64Codec13Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"
                },
                {
                    "function name": "testStaticEncodeChunked",
                    "function params": [],
                    "file name": "Base64Codec13Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"
                },
                {
                    "function name": "testEncoder",
                    "function params": [],
                    "file name": "Base64Codec13Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"
                },
                {
                    "function name": "testBinaryDecoder",
                    "function params": [],
                    "file name": "Base64Codec13Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"
                },
                {
                    "function name": "testDecoder",
                    "function params": [],
                    "file name": "Base64Codec13Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"
                },
                {
                    "function name": "testStaticDecodeChunked",
                    "function params": [],
                    "file name": "Base64Codec13Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"
                },
                {
                    "function name": "testCodec105",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"
                },
                {
                    "function name": "testCodec101",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"
                },
                {
                    "function name": "testCodec130",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"
                },
                {
                    "function name": "testRead0",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"
                },
                {
                    "function name": "testCodec98NPE",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"
                },
                {
                    "function name": "testInputStreamReader",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"
                },
                {
                    "function name": "testBase64EmptyInputStream",
                    "function params": [
                        "chuckSize"
                    ],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStream"
                },
                {
                    "function name": "testBase64EmptyOutputStream",
                    "function params": [
                        "chunkSize"
                    ],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStream"
                },
                {
                    "function name": "testWriteToNullCoverage",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"
                },
                {
                    "function name": "testWriteOutOfBounds",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"
                },
                {
                    "function name": "testCodec98NPE",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"
                },
                {
                    "function name": "testRfc4648Section10DecodeEncode",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"
                },
                {
                    "function name": "testBase64AtBufferMiddle",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testBase64AtBufferMiddle"
                },
                {
                    "function name": "testConstructor_Int_ByteArray_Boolean_UrlSafe",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"
                },
                {
                    "function name": "testBase64DecodingOfTrailing12Bits",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testBase64DecodingOfTrailing12Bits"
                },
                {
                    "function name": "testRfc1421Section6Dot8ChunkSizeDefinition",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"
                },
                {
                    "function name": "testBase64AtBufferEnd",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd"
                },
                {
                    "function name": "testStringToByteVariations",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"
                },
                {
                    "function name": "testDecodeEncode",
                    "function params": [
                        "encodedText"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testDecodeEncode"
                },
                {
                    "function name": "testCodec112",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodec112"
                },
                {
                    "function name": "testCodec265",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodec265"
                },
                {
                    "function name": "testEncodeDecode",
                    "function params": [
                        "plainText"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testEncodeDecode"
                },
                {
                    "function name": "testBase64DecodingOfTrailing6Bits",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testBase64DecodingOfTrailing6Bits"
                },
                {
                    "function name": "testDecodeWithInnerPad",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad"
                },
                {
                    "function name": "testBase64ImpossibleSamples",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testBase64ImpossibleSamples"
                },
                {
                    "function name": "testConstructor_Int_ByteArray_Boolean",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"
                },
                {
                    "function name": "testHugeLineSeparator",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"
                },
                {
                    "function name": "testIsStringBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testIsStringBase64"
                },
                {
                    "function name": "testByteToStringVariations",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"
                },
                {
                    "function name": "testObjectEncode",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testObjectEncode"
                },
                {
                    "function name": "assertBase64DecodingOfTrailingBits",
                    "function params": [
                        "nbits"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.assertBase64DecodingOfTrailingBits"
                },
                {
                    "function name": "testBase64DecodingOfTrailing18Bits",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testBase64DecodingOfTrailing18Bits"
                },
                {
                    "function name": "NoOpBaseNCodec",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.NoOpBaseNCodec"
                },
                {
                    "function name": "testBaseNCodec",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"
                },
                {
                    "function name": "testProvidePaddingByte",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.testProvidePaddingByte"
                },
                {
                    "function name": "getPresumableFreeMemory",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.getPresumableFreeMemory"
                },
                {
                    "function name": "testEnsureBufferSizeExpandsToBeyondMaxBufferSize",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.testEnsureBufferSizeExpandsToBeyondMaxBufferSize"
                },
                {
                    "function name": "testEnsureBufferSizeThrowsOnOverflow",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.testEnsureBufferSizeThrowsOnOverflow"
                },
                {
                    "function name": "assumeCanAllocateBufferSize",
                    "function params": [
                        "size"
                    ],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.assumeCanAllocateBufferSize"
                },
                {
                    "function name": "NoOpBaseNCodec",
                    "function params": [
                        "pArray",
                        "i",
                        "length",
                        "context"
                    ],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.NoOpBaseNCodec"
                },
                {
                    "function name": "NoOpBaseNCodec",
                    "function params": [
                        "pArray",
                        "i",
                        "length",
                        "context"
                    ],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.NoOpBaseNCodec"
                },
                {
                    "function name": "testEnsureBufferSize",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.testEnsureBufferSize"
                },
                {
                    "function name": "testIsWhiteSpace",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"
                },
                {
                    "function name": "assertEnsureBufferSizeExpandsToMaxBufferSize",
                    "function params": [
                        "exceedMaxBufferSize"
                    ],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.assertEnsureBufferSizeExpandsToMaxBufferSize"
                },
                {
                    "function name": "testContainsAlphabetOrPad",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"
                },
                {
                    "function name": "testEnsureBufferSizeExpandsToMaxBufferSize",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.testEnsureBufferSizeExpandsToMaxBufferSize"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.setUp"
                },
                {
                    "function name": "NoOpBaseNCodec",
                    "function params": [
                        "value"
                    ],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.NoOpBaseNCodec"
                },
                {
                    "function name": "bytesContain",
                    "function params": [
                        "bytes",
                        "c"
                    ],
                    "file name": "BaseNTestData.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNTestData.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNTestData.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNTestData.bytesContain"
                },
                {
                    "function name": "fill",
                    "function params": [
                        "buf",
                        "offset",
                        "in"
                    ],
                    "file name": "BaseNTestData.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNTestData.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNTestData.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNTestData.fill"
                },
                {
                    "function name": "resizeArray",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "BaseNTestData.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNTestData.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNTestData.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNTestData.resizeArray"
                },
                {
                    "function name": "randomData",
                    "function params": [
                        "codec",
                        "size"
                    ],
                    "file name": "BaseNTestData.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNTestData.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNTestData.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNTestData.randomData"
                },
                {
                    "function name": "testEncodeObjectException",
                    "function params": [],
                    "file name": "BinaryCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"
                },
                {
                    "function name": "testEncodeObject",
                    "function params": [],
                    "file name": "BinaryCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject"
                },
                {
                    "function name": "testToByteArrayFromString",
                    "function params": [],
                    "file name": "BinaryCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString"
                },
                {
                    "function name": "testFromAsciiCharArray",
                    "function params": [],
                    "file name": "BinaryCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"
                },
                {
                    "function name": "testDecodeObjectException",
                    "function params": [],
                    "file name": "BinaryCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"
                },
                {
                    "function name": "testDecodeObject",
                    "function params": [],
                    "file name": "BinaryCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject"
                },
                {
                    "function name": "testEncodeObjectNull",
                    "function params": [],
                    "file name": "BinaryCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "BinaryCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BinaryCodecTest.setUp"
                },
                {
                    "function name": "testEncodeByteArray",
                    "function params": [],
                    "file name": "BinaryCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "BinaryCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BinaryCodecTest.tearDown"
                },
                {
                    "function name": "testConstructor",
                    "function params": [],
                    "file name": "CharSequenceUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/CharSequenceUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/CharSequenceUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.CharSequenceUtilsTest.testConstructor"
                },
                {
                    "function name": "RunTest",
                    "function params": [
                        "data",
                        "id"
                    ],
                    "file name": "CharSequenceUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/CharSequenceUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/CharSequenceUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.CharSequenceUtilsTest.RunTest"
                },
                {
                    "function name": "testEncodeHexByteString_ByteArrayOfZeroes",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayOfZeroes"
                },
                {
                    "function name": "testEncodeHexByteString_ByteBufferBoolean_ToLowerCase",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferBoolean_ToLowerCase"
                },
                {
                    "function name": "testDecodeHexCharArrayOddCharacters1",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters1"
                },
                {
                    "function name": "testEncodeHexByteString_ByteBufferBoolean_ToUpperCase",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferBoolean_ToUpperCase"
                },
                {
                    "function name": "testEncodeHexByteString_ByteArrayBoolean_ToUpperCase",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayBoolean_ToUpperCase"
                },
                {
                    "function name": "testDecodeHexCharArrayEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayEmpty"
                },
                {
                    "function name": "testEncodeHexPartialInput",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexPartialInput"
                },
                {
                    "function name": "testDecodeHexStringOddCharacters1",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters1"
                },
                {
                    "function name": "testEncodeHex_ByteBufferWithLimit",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHex_ByteBufferWithLimit"
                },
                {
                    "function name": "getByteBufferUtf8",
                    "function params": [
                        "string"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.getByteBufferUtf8"
                },
                {
                    "function name": "testEncodeHexByteString_ByteArrayBoolean_ToLowerCase",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayBoolean_ToLowerCase"
                },
                {
                    "function name": "testDecodeByteBufferWithLimit",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeByteBufferWithLimit"
                },
                {
                    "function name": "testDecodeHexStringEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeHexStringEmpty"
                },
                {
                    "function name": "testDecodeByteBufferEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeByteBufferEmpty"
                },
                {
                    "function name": "checkDecodeHexCharArrayOddCharacters",
                    "function params": [
                        "data"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.checkDecodeHexCharArrayOddCharacters"
                },
                {
                    "function name": "testEncodeByteBufferEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeByteBufferEmpty"
                },
                {
                    "function name": "testDecodeStringEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeStringEmpty"
                },
                {
                    "function name": "testEncodeHex_ByteBufferOfZeroes",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHex_ByteBufferOfZeroes"
                },
                {
                    "function name": "testEncodeHexPartialInputUnderbounds",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexPartialInputUnderbounds"
                },
                {
                    "function name": "testEncodeHexPartialInputOverbounds",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeHexPartialInputOverbounds"
                },
                {
                    "function name": "testGetBytesUncheckedBadName",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"
                },
                {
                    "function name": "testGetBytesUncheckedNullInput",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedNullInput"
                },
                {
                    "function name": "testEqualsCS2",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testEqualsCS2"
                },
                {
                    "function name": "testNewStringIso8859_1",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"
                },
                {
                    "function name": "testByteBufferUtf8",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testByteBufferUtf8"
                },
                {
                    "function name": "testEqualsCS1",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testEqualsCS1"
                },
                {
                    "function name": "testEqualsString",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testEqualsString"
                },
                {
                    "function name": "testApr1CryptNullData",
                    "function params": [],
                    "file name": "Apr1CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData"
                },
                {
                    "function name": "testApr1CryptWithInvalidSalt",
                    "function params": [],
                    "file name": "Apr1CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithInvalidSalt"
                },
                {
                    "function name": "testApr1CryptStrings",
                    "function params": [],
                    "file name": "Apr1CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"
                },
                {
                    "function name": "testApr1LongSalt",
                    "function params": [],
                    "file name": "Apr1CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt"
                },
                {
                    "function name": "testB64T",
                    "function params": [],
                    "file name": "B64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/B64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/B64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.B64Test.testB64T"
                },
                {
                    "function name": "assertThrowsProperExceptionWithKeySize",
                    "function params": [
                        "keySize"
                    ],
                    "file name": "Blake3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3Test.assertThrowsProperExceptionWithKeySize"
                },
                {
                    "function name": "keyDerivation",
                    "function params": [
                        "inputLength",
                        "hash",
                        "keyedHash",
                        "deriveKey"
                    ],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.keyDerivation"
                },
                {
                    "function name": "initData",
                    "function params": [
                        "inputLength",
                        "hash",
                        "keyedHash",
                        "deriveKey"
                    ],
                    "file name": "Blake3TestVectorsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3TestVectorsTest.initData"
                },
                {
                    "function name": "testDefaultCryptVariant",
                    "function params": [],
                    "file name": "CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"
                },
                {
                    "function name": "testMd5CryptStrings",
                    "function params": [],
                    "file name": "Md5CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings"
                },
                {
                    "function name": "testHash32ByteArrayInt",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash32ByteArrayInt"
                },
                {
                    "function name": "testHash64ByteArrayIntInt",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash64ByteArrayIntInt"
                },
                {
                    "function name": "testHash32ByteArrayIntInt",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash32ByteArrayIntInt"
                },
                {
                    "function name": "testHash64ByteArrayInt",
                    "function params": [],
                    "file name": "MurmurHash2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash2Test.testHash64ByteArrayInt"
                },
                {
                    "function name": "testHash32LongLongSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32LongLongSeed"
                },
                {
                    "function name": "testHash32WithTrailingNegativeSignedBytesIsInvalid",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32WithTrailingNegativeSignedBytesIsInvalid"
                },
                {
                    "function name": "testHash32LongSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32LongSeed"
                },
                {
                    "function name": "testHash32Long",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32Long"
                },
                {
                    "function name": "testHash64",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash64"
                },
                {
                    "function name": "testHash128WithOffsetLengthAndNegativeSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash128WithOffsetLengthAndNegativeSeed"
                },
                {
                    "function name": "testHash64InNotEqualToHash128",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash64InNotEqualToHash128"
                },
                {
                    "function name": "testHash32WithLengthAndSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32WithLengthAndSeed"
                },
                {
                    "function name": "testHash32WithOffsetLengthAndSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32WithOffsetLengthAndSeed"
                },
                {
                    "function name": "testHash32x86WithOffsetLengthAndSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32x86WithOffsetLengthAndSeed"
                },
                {
                    "function name": "testHash32",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32"
                },
                {
                    "function name": "testHash32WithLength",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32WithLength"
                },
                {
                    "function name": "testHash64WithOffsetAndLength",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash64WithOffsetAndLength"
                },
                {
                    "function name": "testHash128String",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash128String"
                },
                {
                    "function name": "testHash32String",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32String"
                },
                {
                    "function name": "assertIncrementalHash32",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.assertIncrementalHash32"
                },
                {
                    "function name": "createRandomBlocks",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.createRandomBlocks"
                },
                {
                    "function name": "testHash128x64",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash128x64"
                },
                {
                    "function name": "testHash32x86",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32x86"
                },
                {
                    "function name": "negativeBytes",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.negativeBytes"
                },
                {
                    "function name": "testHash32x86WithTrailingNegativeSignedBytes",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32x86WithTrailingNegativeSignedBytes"
                },
                {
                    "function name": "testHash128",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash128"
                },
                {
                    "function name": "testHash32LongLong",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32LongLong"
                },
                {
                    "function name": "testHash128x64WithOffsetLengthAndNegativeSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash128x64WithOffsetLengthAndNegativeSeed"
                },
                {
                    "function name": "testHash128WithOffsetLengthAndSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash128WithOffsetLengthAndSeed"
                },
                {
                    "function name": "testHash64WithPrimitives",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash64WithPrimitives"
                },
                {
                    "function name": "assertIncrementalHash32x86",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.assertIncrementalHash32x86"
                },
                {
                    "function name": "testHash128x64WithOffsetLengthAndSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash128x64WithOffsetLengthAndSeed"
                },
                {
                    "function name": "testOnes",
                    "function params": [],
                    "file name": "PureJavaCrc32CTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32CTest.testOnes"
                },
                {
                    "function name": "testZeros",
                    "function params": [],
                    "file name": "PureJavaCrc32CTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32CTest.testZeros"
                },
                {
                    "function name": "check",
                    "function params": [
                        "expected"
                    ],
                    "file name": "PureJavaCrc32CTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32CTest.check"
                },
                {
                    "function name": "testDecreasing",
                    "function params": [],
                    "file name": "PureJavaCrc32CTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing"
                },
                {
                    "function name": "checkSame",
                    "function params": [],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.checkSame"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [
                        "s",
                        "width",
                        "out"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                },
                {
                    "function name": "testCorrectness",
                    "function params": [],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness"
                },
                {
                    "function name": "Table",
                    "function params": [],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.Table"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [
                        "clazz",
                        "numThreads",
                        "bytes",
                        "size"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                },
                {
                    "function name": "Table",
                    "function params": [
                        "nBits",
                        "nTables",
                        "polynomial"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.Table"
                },
                {
                    "function name": "Table",
                    "function params": [
                        "args"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.Table"
                },
                {
                    "function name": "checkOnBytes",
                    "function params": [
                        "bytes",
                        "print"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.checkOnBytes"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [
                        "crcs",
                        "out"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [
                        "value",
                        "mbps"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                },
                {
                    "function name": "Table",
                    "function params": [
                        "nameFormat"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.Table"
                },
                {
                    "function name": "testSha2CryptRounds",
                    "function params": [],
                    "file name": "Sha256CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"
                },
                {
                    "function name": "testSha256CryptStrings",
                    "function params": [],
                    "file name": "Sha256CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings"
                },
                {
                    "function name": "testSha2CryptRoundsThreadLocalRandom",
                    "function params": [],
                    "file name": "Sha256CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom"
                },
                {
                    "function name": "testSha2CryptWrongSalt",
                    "function params": [],
                    "file name": "Sha512CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"
                },
                {
                    "function name": "testSha512CryptStrings",
                    "function params": [],
                    "file name": "Sha512CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"
                },
                {
                    "function name": "testSha2CryptRounds",
                    "function params": [],
                    "file name": "Sha512CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"
                },
                {
                    "function name": "testSha256LargetThanBlocksize",
                    "function params": [],
                    "file name": "Sha512CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"
                },
                {
                    "function name": "testUnixCryptStrings",
                    "function params": [],
                    "file name": "UnixCryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"
                },
                {
                    "function name": "testUnixCryptWithHalfSalt",
                    "function params": [],
                    "file name": "UnixCryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input"
                    ],
                    "file name": "XXHash32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.XXHash32Test.toByteArray"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "XXHash32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.XXHash32Test.copy"
                },
                {
                    "function name": "data",
                    "function params": [],
                    "file name": "XXHash32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.XXHash32Test.data"
                },
                {
                    "function name": "main",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.main"
                },
                {
                    "function name": "hasTestCase",
                    "function params": [
                        "re"
                    ],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.hasTestCase"
                },
                {
                    "function name": "testCanFail",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testCanFail"
                },
                {
                    "function name": "testSpecialCharsBetweenSameLetters",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testSpecialCharsBetweenSameLetters"
                },
                {
                    "function name": "soundex",
                    "function params": [
                        "source"
                    ],
                    "file name": "DaitchMokotoffSoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DaitchMokotoffSoundexTest.soundex"
                },
                {
                    "function name": "testCompare_BRIAN_BRYAN_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"
                },
                {
                    "function name": "testGetEncoding_SMYTH_to_SMYTH",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"
                },
                {
                    "function name": "testgetMinRating_6_Returns4_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"
                },
                {
                    "function name": "testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"
                },
                {
                    "function name": "testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched"
                },
                {
                    "function name": "testGetFirstLast3__ALEXANDER_Returns_Aleder",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"
                },
                {
                    "function name": "testIsEncodeEqualsSecondNameJust1Letter_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsEncodeEqualsSecondNameJust1Letter_ReturnsFalse"
                },
                {
                    "function name": "testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch"
                },
                {
                    "function name": "testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched"
                },
                {
                    "function name": "testGetEncoding_NoSpace_to_Nothing",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"
                },
                {
                    "function name": "testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"
                },
                {
                    "function name": "testGetMinRating_7_Return4_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"
                },
                {
                    "function name": "testGetEncoding_One_Letter_to_Nothing",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing"
                },
                {
                    "function name": "testCompare_OONA_OONAGH_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched"
                },
                {
                    "function name": "testGetEncoding_Null_to_Nothing",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"
                },
                {
                    "function name": "testIsEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse"
                },
                {
                    "function name": "testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"
                },
                {
                    "function name": "testAccentRemoval_NullValue_ReturnNullSuccessfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"
                },
                {
                    "function name": "testCompare_STEPHEN_STEVEN_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch"
                },
                {
                    "function name": "testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_MICKY_MICHAEL_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched"
                },
                {
                    "function name": "testLeftToRightThenRightToLeft_EINSTEIN_MICHAELA_Returns0",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testLeftToRightThenRightToLeft_EINSTEIN_MICHAELA_Returns0"
                },
                {
                    "function name": "testAccentRemoval_NINO_NoChange",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange"
                },
                {
                    "function name": "testCompare_CATHERINE_KATHRYN_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched"
                },
                {
                    "function name": "testRemoveVowel_ALESSANDRA_Returns_ALSSNDR",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR"
                },
                {
                    "function name": "testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"
                },
                {
                    "function name": "testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved"
                },
                {
                    "function name": "testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"
                },
                {
                    "function name": "testgetMinRating_7_Returns4_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully"
                },
                {
                    "function name": "createStringEncoder",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.createStringEncoder"
                },
                {
                    "function name": "testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_KARL_ALESSANDRO_DoesNotMatch",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"
                },
                {
                    "function name": "testgetMinRating_5_Returns4_Successfully2",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"
                },
                {
                    "function name": "testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully"
                },
                {
                    "function name": "testIsEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"
                },
                {
                    "function name": "testIsVowel_SmallD_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"
                },
                {
                    "function name": "testCompare_TOMASZ_TOM_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched"
                },
                {
                    "function name": "testIsEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"
                },
                {
                    "function name": "testCompare_ZACH_ZAKARIA_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"
                },
                {
                    "function name": "testRemoveVowel__AIDAN_Returns_ADN",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__AIDAN_Returns_ADN"
                },
                {
                    "function name": "testCompare_ShortNames_AL_ED_WorksButNoMatch",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"
                },
                {
                    "function name": "testAccentRemoval_UpperAndLower_SuccessfullyRemovedAndCaseInvariant",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperAndLower_SuccessfullyRemovedAndCaseInvariant"
                },
                {
                    "function name": "testgetMinRating_8_Returns3_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"
                },
                {
                    "function name": "testGetMinRating_2_Returns5_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"
                },
                {
                    "function name": "testCompare_SMITH_SMYTH_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched"
                },
                {
                    "function name": "testGetFirstLast3_PETE_Returns_PETE",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE"
                },
                {
                    "function name": "testLeftToRightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testLeftToRightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4"
                },
                {
                    "function name": "testCompare_SAM_SAMUEL_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_BURNS_BOURNE_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"
                },
                {
                    "function name": "testGetMinRating_13_Returns_1_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully"
                },
                {
                    "function name": "testCompareNameSameNames_ReturnsFalseSuccessfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"
                },
                {
                    "function name": "testgetMinRating_10_Returns3_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_10_Returns3_Successfully"
                },
                {
                    "function name": "testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_SEAN_SHAUN_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_Forenames_SEAN_PETE_NoMatchExpected",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"
                },
                {
                    "function name": "testGetMinRating_1_Returns5_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully"
                },
                {
                    "function name": "testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot"
                },
                {
                    "function name": "testCompare_Forenames_SEAN_JOHN_MatchExpected",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected"
                },
                {
                    "function name": "testGetEncoding_Space_to_Nothing",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"
                },
                {
                    "function name": "testIsVowel_CapitalA_ReturnsTrue",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_CapitalA_ReturnsTrue"
                },
                {
                    "function name": "testGetEncoding_SMITH_to_SMTH",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"
                },
                {
                    "function name": "testCleanName_SuccessfullyClean",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCleanName_SuccessfullyClean"
                },
                {
                    "function name": "testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_SurnamesCornerCase_MURPHY_Space_NoMatch",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_Space_NoMatch"
                },
                {
                    "function name": "testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_STEPHEN_STEFAN_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_STEVEN_STEFAN_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched"
                },
                {
                    "function name": "testgetMinRating_5_Returns4_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully"
                },
                {
                    "function name": "testRemoveDoubleDoubleVowel_BEETLE_NotRemoved",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"
                },
                {
                    "function name": "testCompare_SurnameCornerCase_Nulls_NoMatch",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnameCornerCase_Nulls_NoMatch"
                },
                {
                    "function name": "testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"
                },
                {
                    "function name": "testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant"
                },
                {
                    "function name": "testIsVowel_SingleVowel_ReturnsTrue",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SingleVowel_ReturnsTrue"
                },
                {
                    "function name": "testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"
                },
                {
                    "function name": "testGetEncoding_HARPER_HRPR",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR"
                },
                {
                    "function name": "testIsEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse"
                },
                {
                    "function name": "testCompare_SmallInput_CARK_Kl_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"
                },
                {
                    "function name": "testgetMinRating_11_Returns_3_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully"
                },
                {
                    "function name": "testCompare_PETERSON_PETERS_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched"
                },
                {
                    "function name": "testIsEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"
                },
                {
                    "function name": "testIsEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse"
                },
                {
                    "function name": "testIsEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse"
                },
                {
                    "function name": "testCompare_SOPHIE_SOFIA_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"
                },
                {
                    "function name": "testAccentRemovalNormalString_NoChange",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"
                },
                {
                    "function name": "testCompareNameNullSpace_ReturnsFalseSuccessfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"
                },
                {
                    "function name": "testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"
                },
                {
                    "function name": "testRemoveVowel__DECLAN_Returns_DCLN",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"
                },
                {
                    "function name": "testCompareNameToSingleLetter_KARL_C_DoesNotMatch",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch"
                },
                {
                    "function name": "testWhy",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testWhy"
                },
                {
                    "function name": "testWordsWithCIA",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"
                },
                {
                    "function name": "testSetMaxLengthWithTruncation",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"
                },
                {
                    "function name": "testDiscardOfSilentGN",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"
                },
                {
                    "function name": "testIsMetaphoneEqualWhite",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"
                },
                {
                    "function name": "testExceedLength",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testExceedLength"
                },
                {
                    "function name": "testDiscardOfSCEOrSCIOrSCY",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"
                },
                {
                    "function name": "testTIOAndTIAToX",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"
                },
                {
                    "function name": "testDiscardOfSilentHAfterG",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"
                },
                {
                    "function name": "testTCH",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testTCH"
                },
                {
                    "function name": "testPHTOF",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testPHTOF"
                },
                {
                    "function name": "testSHAndSIOAndSIAToX",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"
                },
                {
                    "function name": "testWordEndingInMB",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"
                },
                {
                    "function name": "testGenealogy",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testGenealogy"
                },
                {
                    "function name": "testSimplifiedSoundex",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testSimplifiedSoundex"
                },
                {
                    "function name": "test",
                    "function params": [
                        "input"
                    ],
                    "file name": "CacheSubSequencePerformanceTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/CacheSubSequencePerformanceTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/CacheSubSequencePerformanceTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.CacheSubSequencePerformanceTest.test"
                },
                {
                    "function name": "test",
                    "function params": [
                        "input",
                        "times"
                    ],
                    "file name": "CacheSubSequencePerformanceTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/CacheSubSequencePerformanceTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/CacheSubSequencePerformanceTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.CacheSubSequencePerformanceTest.test"
                },
                {
                    "function name": "test",
                    "function params": [],
                    "file name": "CacheSubSequencePerformanceTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/CacheSubSequencePerformanceTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/CacheSubSequencePerformanceTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.CacheSubSequencePerformanceTest.test"
                },
                {
                    "function name": "testSolrGENERIC",
                    "function params": [],
                    "file name": "PhoneticEngineRegressionTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC"
                },
                {
                    "function name": "testSolrASHKENAZI",
                    "function params": [],
                    "file name": "PhoneticEngineRegressionTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"
                },
                {
                    "function name": "testCompatibilityWithOriginalVersion",
                    "function params": [],
                    "file name": "PhoneticEngineRegressionTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "args",
                        "concat",
                        "input"
                    ],
                    "file name": "PhoneticEngineRegressionTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.encode"
                },
                {
                    "function name": "testDecodeStringWithNull",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testEncodeStringWithNull",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"
                },
                {
                    "function name": "testBase64ImpossibleSamplesStrict",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testBase64ImpossibleSamplesStrict"
                },
                {
                    "function name": "testNullInput",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testNullInput"
                },
                {
                    "function name": "testEncodeDecodeNull",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"
                },
                {
                    "function name": "testBase64ImpossibleSamplesLenient",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testBase64ImpossibleSamplesLenient"
                },
                {
                    "function name": "testUTF8RoundTrip",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"
                },
                {
                    "function name": "testBase64ImpossibleSamplesDefault",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testBase64ImpossibleSamplesDefault"
                },
                {
                    "function name": "decodeText",
                    "function params": [
                        "text"
                    ],
                    "file name": "CustomRFC1522Codec.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/CustomRFC1522Codec.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/CustomRFC1522Codec.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.CustomRFC1522Codec.decodeText"
                },
                {
                    "function name": "getEncoding",
                    "function params": [],
                    "file name": "CustomRFC1522Codec.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/CustomRFC1522Codec.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/CustomRFC1522Codec.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.CustomRFC1522Codec.getEncoding"
                },
                {
                    "function name": "doEncoding",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "CustomRFC1522Codec.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/CustomRFC1522Codec.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/CustomRFC1522Codec.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.CustomRFC1522Codec.doEncoding"
                },
                {
                    "function name": "doDecoding",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "CustomRFC1522Codec.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/CustomRFC1522Codec.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/CustomRFC1522Codec.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.CustomRFC1522Codec.doDecoding"
                },
                {
                    "function name": "testUnsafeEncodeDecode",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"
                },
                {
                    "function name": "testLetUsMakeCloverHappy",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"
                },
                {
                    "function name": "testEncodeDecodeBlanks",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testNullInput",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testNullInput"
                },
                {
                    "function name": "testEncodeDecodeNull",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"
                },
                {
                    "function name": "testUTF8RoundTrip",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"
                },
                {
                    "function name": "testDecodeStringWithNull",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"
                },
                {
                    "function name": "testEncodeStringWithNull",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"
                },
                {
                    "function name": "testUTF8RoundTrip",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"
                },
                {
                    "function name": "testUnsafeEncodeDecode",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"
                },
                {
                    "function name": "testFinalBytes",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"
                },
                {
                    "function name": "testSafeCharEncodeDecode",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testDefaultEncoding",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"
                },
                {
                    "function name": "testEncodeDecodeNull",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"
                },
                {
                    "function name": "testEncodeNull",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"
                },
                {
                    "function name": "testDecodeStringWithNull",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"
                },
                {
                    "function name": "testEncodeUrlWithNullBitSet",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"
                },
                {
                    "function name": "testInvalidEncoding",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"
                },
                {
                    "function name": "testEncodeStringWithNull",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"
                },
                {
                    "function name": "testSkipNotEncodedCRLF",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"
                },
                {
                    "function name": "testNullInput",
                    "function params": [],
                    "file name": "RFC1522CodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"
                },
                {
                    "function name": "testSafeCharEncodeDecode",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"
                },
                {
                    "function name": "testDefaultEncoding",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"
                },
                {
                    "function name": "testUTF8RoundTrip",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testUnsafeEncodeDecode",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"
                },
                {
                    "function name": "testDecodeStringWithNull",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"
                },
                {
                    "function name": "validateState",
                    "function params": [
                        "urlCodec"
                    ],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.validateState"
                },
                {
                    "function name": "testEncodeDecodeNull",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"
                },
                {
                    "function name": "testEncodeStringWithNull",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"
                },
                {
                    "function name": "testEncodeUrlWithNullBitSet",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"
                },
                {
                    "function name": "testEncodeNull",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testEncodeNull"
                }
            ],
            "date": "2023-10-23"
        },
        {
            "commit_id": 1447,
            "hash": "36ab02f25a9b05721fa0de54c28bec7c342f3301",
            "commit_summary": "Precompile regular expression in UnixCrypt.crypt(byte[], String)",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java"
            ],
            "functions": [
                {
                    "function name": "crypt",
                    "function params": [
                        "original",
                        "salt"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.crypt"
                }
            ],
            "date": "2023-10-26"
        },
        {
            "commit_id": 1448,
            "hash": "f366c00f4bb138bf260ab6f328d9ce58a017827f",
            "commit_summary": "Don't initialize an instance variable to its default value",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                "src/main/java/org/apache/commons/codec/net/QCodec.java"
            ],
            "functions": [],
            "date": "2023-10-27"
        },
        {
            "commit_id": 1449,
            "hash": "ec6e6c75e972f4f13b93fed84323272a5d5f40af",
            "commit_summary": "Don't initialize an instance variable to its default value",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java"
            ],
            "functions": [],
            "date": "2023-10-27"
        },
        {
            "commit_id": 1450,
            "hash": "8111437a39b03ea5d47859dbe67e6ae598fa837e",
            "commit_summary": "Normalize spelling to US English",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/QCodec.java"
            ],
            "functions": [],
            "date": "2023-10-31"
        },
        {
            "commit_id": 1451,
            "hash": "e77301bc62bab26b7110659e61b25bf4eb38f3c2",
            "commit_summary": "Normalize spelling to US English",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java"
            ],
            "functions": [],
            "date": "2023-10-31"
        },
        {
            "commit_id": 1452,
            "hash": "d8b6a1c1738208d64ccd64a37e45849874292ea3",
            "commit_summary": "Normalize setter Javadoc",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/XXHash32.java"
            ],
            "functions": [],
            "date": "2023-10-31"
        },
        {
            "commit_id": 1453,
            "hash": "e1bc2713d5f31e0a04017c9fc6ba4b9e49c8efa2",
            "commit_summary": "Normalize test method names",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                "src/test/java/org/apache/commons/codec/digest/Blake3Test.java"
            ],
            "functions": [
                {
                    "function name": "testCheckEncodeLengthBounds",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testCheckEncodeLengthBounds"
                },
                {
                    "function name": "testShouldThrowIllegalArgumentExceptionWhenIncorrectKeySize",
                    "function params": [],
                    "file name": "Blake3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Blake3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Blake3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Blake3Test.testShouldThrowIllegalArgumentExceptionWhenIncorrectKeySize"
                }
            ],
            "date": "2023-11-03"
        },
        {
            "commit_id": 1454,
            "hash": "e53ac0201b1a5cab57d20563672b20fd5abacec1",
            "commit_summary": "Sort test members",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base16Test.java"
            ],
            "functions": [
                {
                    "function name": "testCheckEncodeLengthBounds",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testCheckEncodeLengthBounds"
                }
            ],
            "date": "2023-11-03"
        },
        {
            "commit_id": 1455,
            "hash": "7d5f1dfab7fd3509571d958dffb54b68ffc7a50e",
            "commit_summary": "Make package private class final",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/B64.java",
                "src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java",
                "src/main/java/org/apache/commons/codec/net/Utils.java"
            ],
            "functions": [],
            "date": "2023-11-05"
        },
        {
            "commit_id": 1456,
            "hash": "de7f29ec3b49f9d55b6b2f18880beb2da22643f5",
            "commit_summary": "Make private class final",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [],
            "date": "2023-11-05"
        },
        {
            "commit_id": 1457,
            "hash": "979dc0506a94d8397e1f0a882cc05e9e2259c02b",
            "commit_summary": "Use @formatter",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java"
            ],
            "functions": [],
            "date": "2023-11-16"
        },
        {
            "commit_id": 1458,
            "hash": "30f58062ec2aa6fd61aa35fda38af49f1712d379",
            "commit_summary": "Remove decorative comments",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java"
            ],
            "functions": [],
            "date": "2023-11-19"
        },
        {
            "commit_id": 1459,
            "hash": "44e4c4d778c3ab87db09c00e9d1c3260fd42dad5",
            "commit_summary": "Spelling",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java"
            ],
            "functions": [
                {
                    "function name": "testHash32LongLongSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32LongLongSeed"
                },
                {
                    "function name": "testHash32LongSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32LongSeed"
                },
                {
                    "function name": "testHash32Long",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32Long"
                },
                {
                    "function name": "testHash64WithPrimitives",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash64WithPrimitives"
                },
                {
                    "function name": "testHash32LongLong",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32LongLong"
                }
            ],
            "date": "2023-11-20"
        },
        {
            "commit_id": 1460,
            "hash": "1f908b266411c28862c3952f3a3002ed19837b1b",
            "commit_summary": "CODEC-315: Fix possible IndexOutOfBoundException (#223)\n\nSigned-off-by: Arthur Chan <arthur.chan@adalogics.com>",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "input",
                        "languageSet"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.encode"
                },
                {
                    "function name": "invalidData",
                    "function params": [],
                    "file name": "PhoneticEngineTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineTest.invalidData"
                },
                {
                    "function name": "testInvalidEncode",
                    "function params": [
                        "input",
                        "phoneticExpected",
                        "nameType",
                        "ruleType",
                        "concat",
                        "maxPhonemes"
                    ],
                    "file name": "PhoneticEngineTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineTest.testInvalidEncode"
                }
            ],
            "date": "2023-11-24"
        },
        {
            "commit_id": 1461,
            "hash": "c65de5c6270db9b30914da07330db6169321f4e4",
            "commit_summary": "CODEC-313: Fix possible ArrayIndexOutOfBoundsException thrown by QuotedPrintableCodec.encodeQuotedPrintable() method (#221)\n\n* CODEC-313: Fix possible ArrayIndexOutOfBoundsException\r\n\r\nSigned-off-by: Arthur Chan <arthur.chan@adalogics.com>\r\n\r\n* CODEC-313: Add unit test\r\n\r\nSigned-off-by: Arthur Chan <arthur.chan@adalogics.com>\r\n\r\n---------\r\n\r\nSigned-off-by: Arthur Chan <arthur.chan@adalogics.com>",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "encodeQuotedPrintable",
                    "function params": [
                        "printable",
                        "bytes",
                        "strict"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable"
                },
                {
                    "function name": "testTooShortByteArray",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testTooShortByteArray"
                }
            ],
            "date": "2023-11-24"
        },
        {
            "commit_id": 1462,
            "hash": "047d24724c4aaae158331cfef0de0a9d5df2686e",
            "commit_summary": "CODEC-312: Fix possible StringIndexOutOfBoundException thrown by MatchRatingApproachEncoder.encode() method (#220)\n\n* CODEC-312: Fix possible StringIndexOutOfBoundException\r\n\r\nSigned-off-by: Arthur Chan <arthur.chan@adalogics.com>\r\n\r\n* CODEC-312: Add unit test\r\n\r\nSigned-off-by: Arthur Chan <arthur.chan@adalogics.com>\r\n\r\n* Remove unmaintained comments\r\n\r\n---------\r\n\r\nSigned-off-by: Arthur Chan <arthur.chan@adalogics.com>\r\nCo-authored-by: Gary Gregory <garydgregory@users.noreply.github.com>",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "name"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.encode"
                },
                {
                    "function name": "testPunctuationOnly",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testPunctuationOnly"
                },
                {
                    "function name": "testVowelAndPunctuationOnly",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testVowelAndPunctuationOnly"
                },
                {
                    "function name": "testVowelOnly",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testVowelOnly"
                }
            ],
            "date": "2023-11-24"
        },
        {
            "commit_id": 1463,
            "hash": "29012d703d5e079338f9daa9ebceee3ef7b7d93e",
            "commit_summary": "CODEC-311: Fix possible ArrayIndexOutOfBoundException thrown by RefinedSoundex.getMappingCode() (#219)\n\n* CODEC-311: Fix possible ArrayIndexOutOfBoundException\r\n\r\nSigned-off-by: Arthur Chan <arthur.chan@adalogics.com>\r\n\r\n* CODEC-311: Add unit test\r\n\r\nSigned-off-by: Arthur Chan <arthur.chan@adalogics.com>\r\n\r\n* Use final\r\n\r\n---------\r\n\r\nSigned-off-by: Arthur Chan <arthur.chan@adalogics.com>\r\nCo-authored-by: Gary Gregory <garydgregory@users.noreply.github.com>",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java"
            ],
            "functions": [
                {
                    "function name": "getMappingCode",
                    "function params": [
                        "c"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.RefinedSoundex.getMappingCode"
                },
                {
                    "function name": "testInvalidSoundexCharacter",
                    "function params": [],
                    "file name": "RefinedSoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.RefinedSoundexTest.testInvalidSoundexCharacter"
                }
            ],
            "date": "2023-11-24"
        },
        {
            "commit_id": 1464,
            "hash": "3c5913a88b622d040beee81491e78267e5887fbb",
            "commit_summary": "Organize imports",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java"
            ],
            "functions": [
                {
                    "function name": "testPunctuationOnly",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testPunctuationOnly"
                },
                {
                    "function name": "testVowelAndPunctuationOnly",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testVowelAndPunctuationOnly"
                }
            ],
            "date": "2023-11-25"
        },
        {
            "commit_id": 1465,
            "hash": "c6b9e15da29fe10ca73677e346b18fef0f5d9931",
            "commit_summary": "Use Checkstyle: WhitespaceAfter\n\n- Longer lines sometimes\n- Format some files",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base16.java",
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/main/java/org/apache/commons/codec/language/Soundex.java",
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                "src/test/java/org/apache/commons/codec/AbstractStringEncoderTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java",
                "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                "src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java",
                "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/URLCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "validateTrailingCharacter",
                    "function params": [],
                    "file name": "Base16.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.validateTrailingCharacter"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "context"
                    ],
                    "file name": "Base16.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.decode"
                },
                {
                    "function name": "Base16",
                    "function params": [
                        "lowerCase",
                        "decodingPolicy"
                    ],
                    "file name": "Base16.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.Base16"
                },
                {
                    "function name": "decodeOctet",
                    "function params": [
                        "octet"
                    ],
                    "file name": "Base16.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.decodeOctet"
                },
                {
                    "function name": "validateTrailingCharacters",
                    "function params": [],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.validateTrailingCharacters"
                },
                {
                    "function name": "Base32",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "useHex",
                        "padding",
                        "decodingPolicy"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.Base32"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "input",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.encode"
                },
                {
                    "function name": "validateCharacter",
                    "function params": [
                        "emptyBitsMask",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.validateCharacter"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "input",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.decode"
                },
                {
                    "function name": "update",
                    "function params": [
                        "b",
                        "offset",
                        "len"
                    ],
                    "file name": "PureJavaCrc32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32.update"
                },
                {
                    "function name": "PureJavaCrc32C",
                    "function params": [],
                    "file name": "PureJavaCrc32C.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32C.PureJavaCrc32C"
                },
                {
                    "function name": "reset",
                    "function params": [],
                    "file name": "PureJavaCrc32C.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32C.reset"
                },
                {
                    "function name": "getValue",
                    "function params": [],
                    "file name": "PureJavaCrc32C.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32C.getValue"
                },
                {
                    "function name": "update",
                    "function params": [
                        "b",
                        "off",
                        "len"
                    ],
                    "file name": "PureJavaCrc32C.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32C.update"
                },
                {
                    "function name": "update",
                    "function params": [
                        "b"
                    ],
                    "file name": "PureJavaCrc32C.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32C.update"
                },
                {
                    "function name": "handleG",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleG"
                },
                {
                    "function name": "soundex",
                    "function params": [
                        "str"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.soundex"
                },
                {
                    "function name": "hasMarker",
                    "function params": [
                        "mapping"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.hasMarker"
                },
                {
                    "function name": "parseRules",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.parseRules"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.encode"
                },
                {
                    "function name": "testLocaleIndependence",
                    "function params": [],
                    "file name": "AbstractStringEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/AbstractStringEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/AbstractStringEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.AbstractStringEncoderTest.testLocaleIndependence"
                },
                {
                    "function name": "testSkipNone",
                    "function params": [],
                    "file name": "Base16InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16InputStreamTest.testSkipNone"
                },
                {
                    "function name": "testReadNull",
                    "function params": [],
                    "file name": "Base16InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16InputStreamTest.testReadNull"
                },
                {
                    "function name": "testLenientDecoding",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testLenientDecoding"
                },
                {
                    "function name": "testDecodeSingleBytesOptimisation",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testDecodeSingleBytesOptimisation"
                },
                {
                    "function name": "testIsInAlphabet",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testIsInAlphabet"
                },
                {
                    "function name": "testKnownEncodings",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testKnownEncodings"
                },
                {
                    "function name": "testDecodeSingleBytes",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testDecodeSingleBytes"
                },
                {
                    "function name": "testKnownDecodings",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testKnownDecodings"
                },
                {
                    "function name": "testStrictDecoding",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testStrictDecoding"
                },
                {
                    "function name": "testRandomBytesHex",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"
                },
                {
                    "function name": "testBase32Chunked",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32Chunked"
                },
                {
                    "function name": "testBase32ImpossibleSamples",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32ImpossibleSamples"
                },
                {
                    "function name": "testBase32ImpossibleChunked",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32ImpossibleChunked"
                },
                {
                    "function name": "testBase32Samples",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32Samples"
                },
                {
                    "function name": "testIsInAlphabet",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testIsInAlphabet"
                },
                {
                    "function name": "testBase32HexSamples",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"
                },
                {
                    "function name": "testCodec200",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testCodec200"
                },
                {
                    "function name": "testRandomBytes",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testRandomBytes"
                },
                {
                    "function name": "testBase32BinarySamples",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32BinarySamples"
                },
                {
                    "function name": "testBase32BinarySamplesReverse",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32BinarySamplesReverse"
                },
                {
                    "function name": "testRandomBytesChunked",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"
                },
                {
                    "function name": "testConstructors",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testConstructors"
                },
                {
                    "function name": "testSingleCharEncoding",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"
                },
                {
                    "function name": "testBase32HexImpossibleSamples",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32HexImpossibleSamples"
                },
                {
                    "function name": "testBase32SamplesNonDefaultPadding",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding"
                },
                {
                    "function name": "testProvidePaddingByte",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.testProvidePaddingByte"
                },
                {
                    "function name": "NoOpBaseNCodec",
                    "function params": [
                        "pArray",
                        "i",
                        "length",
                        "context"
                    ],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.NoOpBaseNCodec"
                },
                {
                    "function name": "NoOpBaseNCodec",
                    "function params": [
                        "pArray",
                        "i",
                        "length",
                        "context"
                    ],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.NoOpBaseNCodec"
                },
                {
                    "function name": "testIsInAlphabetByteArrayBoolean",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"
                },
                {
                    "function name": "checkValues",
                    "function params": [],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.checkValues"
                },
                {
                    "function name": "testDigestFile",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestFile"
                },
                {
                    "function name": "contains",
                    "function params": [
                        "key"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.contains"
                },
                {
                    "function name": "testDigestPath",
                    "function params": [
                        "messageDigestAlgorithm",
                        "options"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestPath"
                },
                {
                    "function name": "testDigestByteBuffer",
                    "function params": [
                        "messageDigestAlgorithm"
                    ],
                    "file name": "MessageDigestAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestByteBuffer"
                },
                {
                    "function name": "testHash32WithTrailingNegativeSignedBytesIsInvalid",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32WithTrailingNegativeSignedBytesIsInvalid"
                },
                {
                    "function name": "testHash128x64",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash128x64"
                },
                {
                    "function name": "testHash32x86",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32x86"
                },
                {
                    "function name": "for",
                    "function params": [
                        "i"
                    ],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.for"
                },
                {
                    "function name": "testHash32x86WithTrailingNegativeSignedBytes",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32x86WithTrailingNegativeSignedBytes"
                },
                {
                    "function name": "testHash128",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash128"
                },
                {
                    "function name": "testHash128WithOffsetLengthAndNegativeSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash128WithOffsetLengthAndNegativeSeed"
                },
                {
                    "function name": "testHash128x64WithOffsetLengthAndNegativeSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash128x64WithOffsetLengthAndNegativeSeed"
                },
                {
                    "function name": "testIncrementalHash32",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testIncrementalHash32"
                },
                {
                    "function name": "testHash128WithOffsetLengthAndSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash128WithOffsetLengthAndSeed"
                },
                {
                    "function name": "testHash32WithLengthAndSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32WithLengthAndSeed"
                },
                {
                    "function name": "testHash32WithOffsetLengthAndSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32WithOffsetLengthAndSeed"
                },
                {
                    "function name": "testHash32x86WithOffsetLengthAndSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32x86WithOffsetLengthAndSeed"
                },
                {
                    "function name": "testHash32",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32"
                },
                {
                    "function name": "testHash32WithLength",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash32WithLength"
                },
                {
                    "function name": "testIncrementalHash32x86",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testIncrementalHash32x86"
                },
                {
                    "function name": "testHash128x64WithOffsetLengthAndSeed",
                    "function params": [],
                    "file name": "MurmurHash3Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.MurmurHash3Test.testHash128x64WithOffsetLengthAndSeed"
                },
                {
                    "function name": "testDecreasing",
                    "function params": [],
                    "file name": "PureJavaCrc32CTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing"
                },
                {
                    "function name": "testIncreasing",
                    "function params": [],
                    "file name": "PureJavaCrc32CTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32CTest.testIncreasing"
                },
                {
                    "function name": "checkSame",
                    "function params": [],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.checkSame"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [
                        "s",
                        "width",
                        "out"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [
                        "out"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                },
                {
                    "function name": "testCorrectness",
                    "function params": [],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness"
                },
                {
                    "function name": "Table",
                    "function params": [],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.Table"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [
                        "clazz",
                        "numThreads",
                        "bytes",
                        "size"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                },
                {
                    "function name": "Table",
                    "function params": [
                        "nBits",
                        "nTables",
                        "polynomial"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.Table"
                },
                {
                    "function name": "Table",
                    "function params": [
                        "args"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.Table"
                },
                {
                    "function name": "checkOnBytes",
                    "function params": [
                        "bytes",
                        "print"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.checkOnBytes"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [
                        "crcs",
                        "bytes",
                        "size",
                        "out"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [
                        "crcs",
                        "out"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                },
                {
                    "function name": "PerformanceTest",
                    "function params": [
                        "value",
                        "mbps"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest"
                },
                {
                    "function name": "Table",
                    "function params": [
                        "nameFormat"
                    ],
                    "file name": "PureJavaCrc32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.PureJavaCrc32Test.Table"
                },
                {
                    "function name": "testSha256LargestThanBlocksize",
                    "function params": [],
                    "file name": "Sha256CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargestThanBlocksize"
                },
                {
                    "function name": "testSha256LargetThanBlocksize",
                    "function params": [],
                    "file name": "Sha512CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"
                },
                {
                    "function name": "testExamples",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testExamples"
                },
                {
                    "function name": "testIsEncodeEquals",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"
                },
                {
                    "function name": "testSpecialCharsBetweenSameLetters",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testSpecialCharsBetweenSameLetters"
                },
                {
                    "function name": "testVariationsMeyer",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"
                },
                {
                    "function name": "testHyphen",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"
                },
                {
                    "function name": "finishTests",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.finishTests"
                },
                {
                    "function name": "main",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.main"
                },
                {
                    "function name": "hasTestCase",
                    "function params": [
                        "re"
                    ],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.hasTestCase"
                },
                {
                    "function name": "testVariationsMella",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"
                },
                {
                    "function name": "testEdgeCases",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"
                },
                {
                    "function name": "testInvalidSoundexCharacter",
                    "function params": [],
                    "file name": "RefinedSoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.RefinedSoundexTest.testInvalidSoundexCharacter"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testDecodeObjects"
                },
                {
                    "function name": "constructString",
                    "function params": [
                        "unicodeChars"
                    ],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.constructString"
                },
                {
                    "function name": "testEncodeDecodeNull",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testEncodeObjects"
                },
                {
                    "function name": "testUTF8RoundTrip",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"
                },
                {
                    "function name": "testDecodeStringWithNull",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"
                },
                {
                    "function name": "testEncodeStringWithNull",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"
                },
                {
                    "function name": "testUTF8RoundTrip",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"
                },
                {
                    "function name": "testUltimateSoftBreak",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"
                },
                {
                    "function name": "testFinalBytes",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testEncodeDecodeNull",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"
                },
                {
                    "function name": "testDecodeWithNullArray",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"
                },
                {
                    "function name": "testDecodeStringWithNull",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"
                },
                {
                    "function name": "constructString",
                    "function params": [
                        "unicodeChars"
                    ],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.constructString"
                },
                {
                    "function name": "testEncodeUrlWithNullBitSet",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"
                },
                {
                    "function name": "testEncodeStringWithNull",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"
                },
                {
                    "function name": "testTooShortByteArray",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testTooShortByteArray"
                },
                {
                    "function name": "testTrailingSpecial",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"
                },
                {
                    "function name": "testDecodeStringWithNull",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"
                },
                {
                    "function name": "testEncodeDecodeNull",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"
                },
                {
                    "function name": "constructString",
                    "function params": [
                        "unicodeChars"
                    ],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.constructString"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"
                },
                {
                    "function name": "testEncodeStringWithNull",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"
                },
                {
                    "function name": "testEncodeUrlWithNullBitSet",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"
                },
                {
                    "function name": "testDecodeWithNullArray",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"
                },
                {
                    "function name": "testUTF8RoundTrip",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"
                }
            ],
            "date": "2023-11-25"
        },
        {
            "commit_id": 1466,
            "hash": "d6e800625f17e2bd5a5a22621389b76fa21e785e",
            "commit_summary": "Remove extra blank lines",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                "src/main/java/org/apache/commons/codec/binary/package-info.java",
                "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64TestData.java",
                "src/test/java/org/apache/commons/codec/digest/MurmurHash2Test.java",
                "src/test/java/org/apache/commons/codec/digest/XXHash32OverflowTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEnginePerformanceTest.java",
                "src/test/java/org/apache/commons/codec/net/UtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "transcodeRemaining",
                    "function params": [
                        "prev",
                        "curr",
                        "next",
                        "aNext"
                    ],
                    "file name": "Nysiis.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Nysiis.transcodeRemaining"
                },
                {
                    "function name": "testBase32OutputStreamByChunk",
                    "function params": [],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"
                },
                {
                    "function name": "testBase32OutputStreamByteByByte",
                    "function params": [],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"
                }
            ],
            "date": "2023-11-26"
        },
        {
            "commit_id": 1467,
            "hash": "48ece96bba683ee8f970b2a9521c455e2a57ee0f",
            "commit_summary": "Javadoc\n\nNormalize spelling",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java"
            ],
            "functions": [],
            "date": "2023-11-26"
        },
        {
            "commit_id": 1468,
            "hash": "a87db3af9228afdcdbeb24233be1bb4b1971f28d",
            "commit_summary": "Comments\n\nNormalize spelling",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base16.java"
            ],
            "functions": [
                {
                    "function name": "decode",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "context"
                    ],
                    "file name": "Base16.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.decode"
                }
            ],
            "date": "2023-11-26"
        },
        {
            "commit_id": 1469,
            "hash": "464a5da82e43651bf4d359073f6064f965a01557",
            "commit_summary": "Use Checkstyle ParenPad",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java"
            ],
            "functions": [
                {
                    "function name": "hmac",
                    "function params": [
                        "valueToDigest"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.hmac"
                },
                {
                    "function name": "update",
                    "function params": [
                        "b",
                        "offset",
                        "len"
                    ],
                    "file name": "PureJavaCrc32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32.update"
                },
                {
                    "function name": "isNextChar",
                    "function params": [
                        "string",
                        "index",
                        "c"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.isNextChar"
                },
                {
                    "function name": "isPreviousChar",
                    "function params": [
                        "string",
                        "index",
                        "c"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.isPreviousChar"
                },
                {
                    "function name": "testComparatorWithDoubleMetaphone",
                    "function params": [],
                    "file name": "StringEncoderComparatorTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"
                },
                {
                    "function name": "testComparatorWithDoubleMetaphoneAndInvalidInput",
                    "function params": [],
                    "file name": "StringEncoderComparatorTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"
                },
                {
                    "function name": "testComparatorWithSoundex",
                    "function params": [],
                    "file name": "StringEncoderComparatorTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"
                },
                {
                    "function name": "testByteToStringVariations",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"
                },
                {
                    "function name": "data",
                    "function params": [],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.data"
                },
                {
                    "function name": "testMacInputStream",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacInputStream"
                },
                {
                    "function name": "testMacHexInputStream",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexInputStream"
                },
                {
                    "function name": "testAlgorithm",
                    "function params": [
                        "hmacAlgorithm",
                        "standardResultBytes",
                        "standardResultString"
                    ],
                    "file name": "HmacAlgorithmsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.HmacAlgorithmsTest.testAlgorithm"
                },
                {
                    "function name": "data",
                    "function params": [],
                    "file name": "XXHash32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.XXHash32Test.data"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "XXHash32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.XXHash32Test.copy"
                },
                {
                    "function name": "testSetMaxCodeLength",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"
                },
                {
                    "function name": "testIsMetaphoneEqualMary",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"
                },
                {
                    "function name": "testIsMetaphoneEqualSusan",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"
                },
                {
                    "function name": "testWordsWithCIA",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"
                },
                {
                    "function name": "testDiscardOfSilentGN",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"
                },
                {
                    "function name": "testIsMetaphoneEqualWhite",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"
                },
                {
                    "function name": "testExceedLength",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testExceedLength"
                },
                {
                    "function name": "testIsMetaphoneEqualGary",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"
                },
                {
                    "function name": "assertIsMetaphoneEqual",
                    "function params": [
                        "source",
                        "matches"
                    ],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.assertIsMetaphoneEqual"
                },
                {
                    "function name": "testTranslateOfSCHAndCH",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"
                },
                {
                    "function name": "testDiscardOfSilentHAfterG",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"
                },
                {
                    "function name": "testPHTOF",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testPHTOF"
                },
                {
                    "function name": "testIsMetaphoneEqual1",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"
                },
                {
                    "function name": "testSHAndSIOAndSIAToX",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"
                },
                {
                    "function name": "testWordEndingInMB",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"
                },
                {
                    "function name": "testSetMaxLengthWithTruncation",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"
                },
                {
                    "function name": "testIsMetaphoneEqualPeter",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"
                },
                {
                    "function name": "testIsMetaphoneEqualXalan",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"
                },
                {
                    "function name": "testDiscardOfSCEOrSCIOrSCY",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"
                },
                {
                    "function name": "testIsMetaphoneEqualJohn",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"
                },
                {
                    "function name": "testTIOAndTIAToX",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"
                },
                {
                    "function name": "testTCH",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testTCH"
                },
                {
                    "function name": "testTranslateToJOfDGEOrDGIOrDGY",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"
                },
                {
                    "function name": "testIsMetaphoneEqual2",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"
                },
                {
                    "function name": "testIsMetaphoneEqualKnight",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"
                }
            ],
            "date": "2023-11-26"
        },
        {
            "commit_id": 1470,
            "hash": "e616873e08e2d335ccbc5599ded74335e4cf2487",
            "commit_summary": "Javadoc spelling",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java"
            ],
            "functions": [],
            "date": "2023-11-26"
        },
        {
            "commit_id": 1471,
            "hash": "5bbb66994f8e6d04509cbd297c6bf5dc77d328bb",
            "commit_summary": "Javadoc spelling",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java"
            ],
            "functions": [
                {
                    "function name": "md5Crypt",
                    "function params": [
                        "keyBytes",
                        "salt",
                        "prefix",
                        "random"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.md5Crypt"
                }
            ],
            "date": "2023-11-26"
        },
        {
            "commit_id": 1472,
            "hash": "fd1cca61236f8f56997bec224b979f4915bbd3da",
            "commit_summary": "Use String#isEmpty()",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java"
            ],
            "functions": [
                {
                    "function name": "decodeText",
                    "function params": [
                        "text"
                    ],
                    "file name": "RFC1522Codec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.RFC1522Codec.decodeText"
                }
            ],
            "date": "2023-11-28"
        },
        {
            "commit_id": 1473,
            "hash": "5e10c288957ca9ccc741a23fc382a0cfbc8f73ab",
            "commit_summary": "Bump actions/setup-java from 3.13.0 to 4.0.0",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "insertAlwaysEncodeChar",
                    "function params": [
                        "b"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.insertAlwaysEncodeChar"
                },
                {
                    "function name": "testInvalidByte",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testInvalidByte"
                }
            ],
            "date": "2023-11-30"
        },
        {
            "commit_id": 1474,
            "hash": "92974e6ed0b887b674e89b69c3075afee093b06f",
            "commit_summary": "Use constant instead of magic string\n\nParameterize some tests",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/CharEncoding.java",
                "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "getRequiredCharsets",
                    "function params": [],
                    "file name": "CharsetsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharsetsTest.getRequiredCharsets"
                },
                {
                    "function name": "getAvailableCharsetNames",
                    "function params": [],
                    "file name": "CharsetsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharsetsTest.getAvailableCharsetNames"
                },
                {
                    "function name": "testCustomCharset",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testCustomCharset"
                },
                {
                    "function name": "testCharset",
                    "function params": [
                        "name",
                        "parent"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testCharset"
                },
                {
                    "function name": "testCustomCharset",
                    "function params": [
                        "name"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testCustomCharset"
                },
                {
                    "function name": "testRequiredCharset",
                    "function params": [
                        "charset"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testRequiredCharset"
                },
                {
                    "function name": "testRequiredCharset",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testRequiredCharset"
                },
                {
                    "function name": "testCustomCharset",
                    "function params": [
                        "name",
                        "parent"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testCustomCharset"
                },
                {
                    "function name": "testNewStringUtf8",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"
                },
                {
                    "function name": "testGetBytesUtf8",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"
                }
            ],
            "date": "2023-12-10"
        },
        {
            "commit_id": 1475,
            "hash": "a3e2330aa406c94d44f5a4848b9c87540ebc022a",
            "commit_summary": "Javadoc",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java"
            ],
            "functions": [],
            "date": "2023-12-14"
        },
        {
            "commit_id": 1476,
            "hash": "18b76b62a8604204cd380b079c9fc1ecc1fb04a3",
            "commit_summary": "Use StandardCharsets instead of magic string",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "testUtf8",
                    "function params": [],
                    "file name": "CharsetsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharsetsTest.testUtf8"
                },
                {
                    "function name": "testUtf16Le",
                    "function params": [],
                    "file name": "CharsetsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharsetsTest.testUtf16Le"
                },
                {
                    "function name": "testUtf16",
                    "function params": [],
                    "file name": "CharsetsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharsetsTest.testUtf16"
                },
                {
                    "function name": "testUtf16Be",
                    "function params": [],
                    "file name": "CharsetsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharsetsTest.testUtf16Be"
                },
                {
                    "function name": "testUsAscii",
                    "function params": [],
                    "file name": "CharsetsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharsetsTest.testUsAscii"
                },
                {
                    "function name": "testGetBytesUtf16Le",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"
                },
                {
                    "function name": "testGetBytesUtf16",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"
                },
                {
                    "function name": "testGetBytesUtf16Be",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"
                }
            ],
            "date": "2023-12-15"
        },
        {
            "commit_id": 1477,
            "hash": "299d22b8b6f0c02fa67de6ff2757cc9c8771a275",
            "commit_summary": "Use StandardCharsets instead of magic string",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/CharEncodingTest.java",
                "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "testUtf16Le",
                    "function params": [],
                    "file name": "CharEncodingTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharEncodingTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharEncodingTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharEncodingTest.testUtf16Le"
                },
                {
                    "function name": "testIso8859_1",
                    "function params": [],
                    "file name": "CharEncodingTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharEncodingTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharEncodingTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharEncodingTest.testIso8859_1"
                },
                {
                    "function name": "testUtf8",
                    "function params": [],
                    "file name": "CharEncodingTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharEncodingTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharEncodingTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharEncodingTest.testUtf8"
                },
                {
                    "function name": "testUtf16",
                    "function params": [],
                    "file name": "CharEncodingTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharEncodingTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharEncodingTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharEncodingTest.testUtf16"
                },
                {
                    "function name": "testUtf16Be",
                    "function params": [],
                    "file name": "CharEncodingTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharEncodingTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharEncodingTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharEncodingTest.testUtf16Be"
                },
                {
                    "function name": "testUsAscii",
                    "function params": [],
                    "file name": "CharEncodingTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharEncodingTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharEncodingTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharEncodingTest.testUsAscii"
                },
                {
                    "function name": "testNewStringUtf16Le",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"
                },
                {
                    "function name": "testNewStringUtf16",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"
                },
                {
                    "function name": "testNewStringUsAscii",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"
                },
                {
                    "function name": "testNewStringUtf16Be",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"
                }
            ],
            "date": "2023-12-15"
        },
        {
            "commit_id": 1478,
            "hash": "c664c6aa5eae9c010edd57345a7580897ea1a5db",
            "commit_summary": "Better Javadoc",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/AbstractCaverphone.java",
                "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/main/java/org/apache/commons/codec/language/Soundex.java"
            ],
            "functions": [],
            "date": "2023-12-17"
        },
        {
            "commit_id": 1479,
            "hash": "44bddb055c3d78e2c4dbcd7df5eee366d2e4b144",
            "commit_summary": "Javadoc",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java"
            ],
            "functions": [],
            "date": "2023-12-17"
        },
        {
            "commit_id": 1480,
            "hash": "6f70649795787cdd558bdec84c80a08f952ab644",
            "commit_summary": "Javadoc",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "testNewStringIso8859_1",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"
                },
                {
                    "function name": "testGetBytesIso8859_1",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"
                }
            ],
            "date": "2023-12-23"
        },
        {
            "commit_id": 1481,
            "hash": "275ab531c546a3edb612aa48e6ac38c5c1579720",
            "commit_summary": "Use StandardCharsets",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "testGetBytesUsAscii",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"
                }
            ],
            "date": "2023-12-23"
        },
        {
            "commit_id": 1482,
            "hash": "61ceff6e6194913e0bcc47744d4e113edc73fbb2",
            "commit_summary": "Update internal name",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [
                {
                    "function name": "updateDigest",
                    "function params": [
                        "digest",
                        "inputStream"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.updateDigest"
                },
                {
                    "function name": "updateDigest",
                    "function params": [
                        "digest",
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.updateDigest"
                }
            ],
            "date": "2024-01-08"
        },
        {
            "commit_id": 1483,
            "hash": "608ef907adc9a3b05e1323b57277d07ab7b017bf",
            "commit_summary": "Javadoc",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [],
            "date": "2024-01-08"
        },
        {
            "commit_id": 1484,
            "hash": "a3d9ecaf25dd5e6a1eaa87f7d8756867e1a638ea",
            "commit_summary": "Reuse package-private constant",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [],
            "date": "2024-01-08"
        },
        {
            "commit_id": 1485,
            "hash": "a645ad985b6415a1b6ca1b92aa69a4e95db05ca9",
            "commit_summary": "Remove unused exceptions in tests",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/NysiisTest.java"
            ],
            "functions": [
                {
                    "function name": "testRule1",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testRule1"
                },
                {
                    "function name": "testRule4Dot1",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testRule4Dot1"
                },
                {
                    "function name": "testRule2",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testRule2"
                },
                {
                    "function name": "testRule6",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testRule6"
                },
                {
                    "function name": "testDropBy",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testDropBy"
                },
                {
                    "function name": "testRule4Dot2",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testRule4Dot2"
                },
                {
                    "function name": "testRule7",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testRule7"
                },
                {
                    "function name": "testRule5",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testRule5"
                },
                {
                    "function name": "testOthers",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testOthers"
                }
            ],
            "date": "2024-01-08"
        },
        {
            "commit_id": 1486,
            "hash": "73813dcfdd17069df2db8939b701416c5b037b9d",
            "commit_summary": "Use try-with-resources",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java"
            ],
            "functions": [
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "separator"
                    ],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testByteByByte"
                }
            ],
            "date": "2024-01-08"
        },
        {
            "commit_id": 1487,
            "hash": "59898cfe22d058f1ffb45276fa3c1712d1e03fc7",
            "commit_summary": "Javadoc: Use an HTTPS URL",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/Charsets.java",
                "src/main/java/org/apache/commons/codec/DecoderException.java",
                "src/main/java/org/apache/commons/codec/EncoderException.java",
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java",
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java",
                "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                "src/main/java/org/apache/commons/codec/language/AbstractCaverphone.java",
                "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                "src/main/java/org/apache/commons/codec/language/Caverphone1.java",
                "src/main/java/org/apache/commons/codec/language/Caverphone2.java",
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/main/java/org/apache/commons/codec/language/Soundex.java",
                "src/main/java/org/apache/commons/codec/language/SoundexUtils.java",
                "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java"
            ],
            "functions": [],
            "date": "2024-01-14"
        },
        {
            "commit_id": 1488,
            "hash": "0ad8c8b9f410451c58ed2d6708feb139e5dd3310",
            "commit_summary": "Javadoc and comments: Use an HTTPS URL",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                "src/test/java/org/apache/commons/codec/language/Caverphone1Test.java",
                "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java",
                "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                "src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                "src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java",
                "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java"
            ],
            "functions": [
                {
                    "function name": "data",
                    "function params": [],
                    "file name": "XXHash32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.XXHash32Test.data"
                },
                {
                    "function name": "testDifference",
                    "function params": [],
                    "file name": "RefinedSoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.RefinedSoundexTest.testDifference"
                },
                {
                    "function name": "testDifference",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testDifference"
                },
                {
                    "function name": "testCompatibilityWithOriginalVersion",
                    "function params": [],
                    "file name": "PhoneticEngineRegressionTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion"
                }
            ],
            "date": "2024-01-14"
        },
        {
            "commit_id": 1489,
            "hash": "7a34faedc8b067a54ffe482f62bb3c0257e8e9bb",
            "commit_summary": "Use +=",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/Caverphone1.java",
                "src/main/java/org/apache/commons/codec/language/Caverphone2.java",
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "source"
                    ],
                    "file name": "Caverphone1.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Caverphone1.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Caverphone1.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Caverphone1.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "source"
                    ],
                    "file name": "Caverphone2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Caverphone2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Caverphone2.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Caverphone2.encode"
                },
                {
                    "function name": "handleG",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleG"
                }
            ],
            "date": "2024-01-15"
        },
        {
            "commit_id": 1490,
            "hash": "da4ab168f9f9629036bea67c0d18b34b59ff84fc",
            "commit_summary": "Use |=",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Hex.java"
            ],
            "functions": [
                {
                    "function name": "decodeHex",
                    "function params": [
                        "data",
                        "out",
                        "outOffset"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.decodeHex"
                }
            ],
            "date": "2024-01-15"
        },
        {
            "commit_id": 1491,
            "hash": "5812d2cf9d4403384cb4f3b16a66c48261547643",
            "commit_summary": "Javadoc",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java"
            ],
            "functions": [],
            "date": "2024-01-17"
        },
        {
            "commit_id": 1492,
            "hash": "177fea621f850d54b55556a7022676b73c738d96",
            "commit_summary": "Declutter: Tests don't need Javadoc @since tags",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base16TestData.java",
                "src/test/java/org/apache/commons/codec/binary/Base32TestData.java",
                "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64TestData.java",
                "src/test/java/org/apache/commons/codec/binary/BaseNTestData.java",
                "src/test/java/org/apache/commons/codec/cli/DigestTest.java",
                "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                "src/test/java/org/apache/commons/codec/language/Caverphone1Test.java",
                "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java",
                "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/RuleTest.java",
                "src/test/java/org/apache/commons/codec/net/UtilsTest.java"
            ],
            "functions": [],
            "date": "2024-01-20"
        },
        {
            "commit_id": 1493,
            "hash": "d58649a3ba50701a39aec3169ee0b931dd856d13",
            "commit_summary": "Normalize end of comments",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base16TestData.java",
                "src/test/java/org/apache/commons/codec/binary/BaseNTestData.java",
                "src/test/java/org/apache/commons/codec/cli/DigestTest.java",
                "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java",
                "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java",
                "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
                "src/test/java/org/apache/commons/codec/language/Caverphone1Test.java",
                "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java",
                "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/RuleTest.java",
                "src/test/java/org/apache/commons/codec/net/UtilsTest.java"
            ],
            "functions": [],
            "date": "2024-01-20"
        },
        {
            "commit_id": 1494,
            "hash": "d1df7590b8e83ab7cdb85de83995d790b3137edb",
            "commit_summary": "Deprecate CharEncoding 0-argument constructor",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/CharEncoding.java"
            ],
            "functions": [
                {
                    "function name": "CharEncoding",
                    "function params": [],
                    "file name": "CharEncoding.java",
                    "file old path": "src/main/java/org/apache/commons/codec/CharEncoding.java",
                    "file new path": "src/main/java/org/apache/commons/codec/CharEncoding.java",
                    "full name": "src.main.java.org.apache.commons.codec.CharEncoding.CharEncoding"
                }
            ],
            "date": "2024-01-25"
        },
        {
            "commit_id": 1495,
            "hash": "37009c8b86f745fca8ca7a8630bd0b35a511526f",
            "commit_summary": "Deprecate Charsets 0-argument constructor",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/Charsets.java"
            ],
            "functions": [
                {
                    "function name": "Charsets",
                    "function params": [],
                    "file name": "Charsets.java",
                    "file old path": "src/main/java/org/apache/commons/codec/Charsets.java",
                    "file new path": "src/main/java/org/apache/commons/codec/Charsets.java",
                    "full name": "src.main.java.org.apache.commons.codec.Charsets.Charsets"
                }
            ],
            "date": "2024-01-25"
        },
        {
            "commit_id": 1496,
            "hash": "5f5aab62dcc5717147bf7c1a00617950563b51e6",
            "commit_summary": "Deprecate Resources 0-argument constructor",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/Charsets.java"
            ],
            "functions": [],
            "date": "2024-01-25"
        },
        {
            "commit_id": 1497,
            "hash": "b361093a7a51d9d41d1c103a9645e624ca271fa3",
            "commit_summary": "Fix whitespace",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/Resources.java"
            ],
            "functions": [
                {
                    "function name": "Resources",
                    "function params": [],
                    "file name": "Resources.java",
                    "file old path": "src/main/java/org/apache/commons/codec/Resources.java",
                    "file new path": "src/main/java/org/apache/commons/codec/Resources.java",
                    "full name": "src.main.java.org.apache.commons.codec.Resources.Resources"
                }
            ],
            "date": "2024-01-25"
        },
        {
            "commit_id": 1498,
            "hash": "19a6efb94c2df1503af0a03827846621d5a9bd61",
            "commit_summary": "Deprecate StringUtils 0-argument constructor",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/StringUtils.java"
            ],
            "functions": [
                {
                    "function name": "StringUtils",
                    "function params": [],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.StringUtils"
                }
            ],
            "date": "2024-01-25"
        },
        {
            "commit_id": 1499,
            "hash": "16ecff08733c1f5fc442993bba5cdea48dae328a",
            "commit_summary": "Deprecate Crypt 0-argument constructor",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Crypt.java"
            ],
            "functions": [
                {
                    "function name": "Crypt",
                    "function params": [],
                    "file name": "Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Crypt.Crypt"
                }
            ],
            "date": "2024-01-25"
        },
        {
            "commit_id": 1500,
            "hash": "cc5caccfbab3d3af2e107899dde50a417367c0d9",
            "commit_summary": "Deprecate Md5Crypt 0-argument constructor",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java"
            ],
            "functions": [
                {
                    "function name": "Md5Crypt",
                    "function params": [],
                    "file name": "Md5Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.Md5Crypt"
                }
            ],
            "date": "2024-01-25"
        },
        {
            "commit_id": 1501,
            "hash": "71dca96769510b07eaa37df2a464d838959b86a6",
            "commit_summary": "Deprecate UnixCrypt 0-argument constructor",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java"
            ],
            "functions": [
                {
                    "function name": "UnixCrypt",
                    "function params": [],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.UnixCrypt"
                }
            ],
            "date": "2024-01-25"
        },
        {
            "commit_id": 1502,
            "hash": "0fd7b59fb1dbd67260429e1d75789fca92ab8a6f",
            "commit_summary": "Remove variable assignment just before returning it",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java"
            ],
            "functions": [
                {
                    "function name": "hash64",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "seed"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "hash64",
                    "function params": [
                        "data"
                    ],
                    "file name": "MurmurHash3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MurmurHash3.hash64"
                },
                {
                    "function name": "hPermOp",
                    "function params": [
                        "a",
                        "n",
                        "m"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.hPermOp"
                },
                {
                    "function name": "hPermOp",
                    "function params": [
                        "a",
                        "n",
                        "m"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.hPermOp"
                },
                {
                    "function name": "cleanName",
                    "function params": [
                        "name"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.cleanName"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "name"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.encode"
                }
            ],
            "date": "2024-02-04"
        },
        {
            "commit_id": 1503,
            "hash": "353e79cd3edd84e1250021e896974d9018fc74bb",
            "commit_summary": "Format tweak",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java"
            ],
            "functions": [
                {
                    "function name": "RulesApplication",
                    "function params": [],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication"
                }
            ],
            "date": "2024-03-18"
        },
        {
            "commit_id": 1504,
            "hash": "f6f9b14e8c380a2f2b74a70dd93caaa205aad270",
            "commit_summary": "Format tweak",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java"
            ],
            "functions": [
                {
                    "function name": "invalidData",
                    "function params": [],
                    "file name": "PhoneticEngineTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineTest.invalidData"
                },
                {
                    "function name": "data",
                    "function params": [],
                    "file name": "PhoneticEngineTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineTest.data"
                }
            ],
            "date": "2024-03-18"
        },
        {
            "commit_id": 1505,
            "hash": "3bf874e2141dc08550c0b330c7a7006f358bb0f0",
            "commit_summary": "Optimize memory allocation\n\nAdd org.apache.commons.codec.language.bm.Rule.PhonemeExpr.size()",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java"
            ],
            "functions": [
                {
                    "function name": "RulesApplication",
                    "function params": [
                        "finalRules",
                        "input",
                        "phonemeBuilder",
                        "i",
                        "maxPhonemes"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication"
                },
                {
                    "function name": "PhoneticEngine",
                    "function params": [
                        "nameType",
                        "ruleType",
                        "concat"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhoneticEngine"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [
                        "phonemeExpr",
                        "maxPhonemes"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                },
                {
                    "function name": "PhoneticEngine",
                    "function params": [
                        "nameType",
                        "ruleType",
                        "concatenate"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhoneticEngine"
                },
                {
                    "function name": "PhoneticEngine",
                    "function params": [
                        "nameType",
                        "ruleType",
                        "concatenate",
                        "maxPhonemes"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhoneticEngine"
                },
                {
                    "function name": "RulesApplication",
                    "function params": [],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                },
                {
                    "function name": "RulesApplication",
                    "function params": [],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication"
                },
                {
                    "function name": "PhoneticEngine",
                    "function params": [
                        "nameType",
                        "ruleType",
                        "concat",
                        "maxPhonemes"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhoneticEngine"
                },
                {
                    "function name": "RulesApplication",
                    "function params": [],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication"
                },
                {
                    "function name": "RulesApplication",
                    "function params": [],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication"
                },
                {
                    "function name": "size",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.size"
                },
                {
                    "function name": "PhonemeList",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.PhonemeList"
                },
                {
                    "function name": "PhonemeList",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.PhonemeList"
                },
                {
                    "function name": "Phoneme",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "PhonemeList",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.PhonemeList"
                },
                {
                    "function name": "invalidData",
                    "function params": [],
                    "file name": "PhoneticEngineTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineTest.invalidData"
                },
                {
                    "function name": "data",
                    "function params": [],
                    "file name": "PhoneticEngineTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineTest.data"
                }
            ],
            "date": "2024-03-18"
        },
        {
            "commit_id": 1506,
            "hash": "eb76f57ea28d72eb7dbf721227731bd6501740e9",
            "commit_summary": "Use Java 5's String#contains()",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [
                {
                    "function name": "testCustomCharsetToString",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"
                }
            ],
            "date": "2024-03-22"
        },
        {
            "commit_id": 1507,
            "hash": "91d66c99d7c28f3842180ef01237b057acf8b191",
            "commit_summary": "Uppercase acronym in comment",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java"
            ],
            "functions": [],
            "date": "2024-03-23"
        },
        {
            "commit_id": 1508,
            "hash": "276f1ea42acb66ddbe2ee186a59d6f2e310d6ed1",
            "commit_summary": "Javadoc",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32CTest.java"
            ],
            "functions": [],
            "date": "2024-03-28"
        },
        {
            "commit_id": 1509,
            "hash": "0da3d3f2ed975404c04e1907417c70cdeefc5eb3",
            "commit_summary": "Javadoc",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [],
            "date": "2024-03-28"
        },
        {
            "commit_id": 1510,
            "hash": "b22c791df427d16d0b724981f5a5acedef9220ad",
            "commit_summary": "Javadoc",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/HmacUtilsTest.java"
            ],
            "functions": [],
            "date": "2024-03-28"
        },
        {
            "commit_id": 1511,
            "hash": "8c05f1af98ebb0dc2954f9e6bfb2f2a53e3f6a5a",
            "commit_summary": "Format tweak",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/Lang.java"
            ],
            "functions": [
                {
                    "function name": "guessLanguages",
                    "function params": [
                        "input"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Lang.guessLanguages"
                }
            ],
            "date": "2024-04-01"
        },
        {
            "commit_id": 1512,
            "hash": "ce6872d83a8d8f9e90f099062060cd45f01217be",
            "commit_summary": "Use try-with-resources",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java"
            ],
            "functions": [
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "separator"
                    ],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testByChunk"
                }
            ],
            "date": "2024-04-04"
        },
        {
            "commit_id": 1513,
            "hash": "547cf4d098f79257c75e9e481bb8225ce2ed3260",
            "commit_summary": "Use Checkstyle WhitespaceAround",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                "src/test/java/org/apache/commons/codec/binary/CharSequenceUtilsTest.java",
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encode"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "urlSafe",
                        "decodingPolicy"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "input",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "encodeAsString",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.encodeAsString"
                },
                {
                    "function name": "getEncodedLength",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.getEncodedLength"
                },
                {
                    "function name": "ensureBufferSize",
                    "function params": [
                        "size",
                        "context"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize"
                },
                {
                    "function name": "isInAlphabet",
                    "function params": [
                        "arrayOctet",
                        "allowWSPad"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.isInAlphabet"
                },
                {
                    "function name": "expectedEncodingBytes",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.expectedEncodingBytes"
                },
                {
                    "function name": "expectedDecodingBytes",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.expectedDecodingBytes"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.setUp"
                },
                {
                    "function name": "TestData",
                    "function params": [
                        "source",
                        "ignoreCase",
                        "toffset",
                        "other",
                        "ooffset",
                        "len",
                        "throwable"
                    ],
                    "file name": "CharSequenceUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/CharSequenceUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/CharSequenceUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.CharSequenceUtilsTest.TestData"
                },
                {
                    "function name": "TestData",
                    "function params": [],
                    "file name": "CharSequenceUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/CharSequenceUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/CharSequenceUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.CharSequenceUtilsTest.TestData"
                },
                {
                    "function name": "TestData",
                    "function params": [
                        "source",
                        "ignoreCase",
                        "toffset",
                        "other",
                        "ooffset",
                        "len",
                        "expected"
                    ],
                    "file name": "CharSequenceUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/CharSequenceUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/CharSequenceUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.CharSequenceUtilsTest.TestData"
                },
                {
                    "function name": "testSha1UpdateWithByteBuffer",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteBuffer"
                },
                {
                    "function name": "testSha384HexInputStream",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha384HexInputStream"
                },
                {
                    "function name": "testSha256",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha256"
                },
                {
                    "function name": "testMd2Hex",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"
                },
                {
                    "function name": "testSha512",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha512"
                },
                {
                    "function name": "testSha3_384HexInputStream",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha3_384HexInputStream"
                },
                {
                    "function name": "testSha3_256",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha3_256"
                },
                {
                    "function name": "testSha3_256HexInputStream",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha3_256HexInputStream"
                },
                {
                    "function name": "testShaHex",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"
                },
                {
                    "function name": "testMd5Hex",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"
                },
                {
                    "function name": "testSha1UpdateWithString",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"
                },
                {
                    "function name": "testSha3_224HexInputStream",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha3_224HexInputStream"
                },
                {
                    "function name": "testSha256HexInputStream",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha256HexInputStream"
                },
                {
                    "function name": "testSha224_StringAsHex",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha224_StringAsHex"
                },
                {
                    "function name": "testSha1Hex",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"
                },
                {
                    "function name": "testSha3_512",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha3_512"
                },
                {
                    "function name": "testSha1UpdateWithByteArray",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"
                },
                {
                    "function name": "testSha3_384",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha3_384"
                },
                {
                    "function name": "testSha512HexInputStream",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha512HexInputStream"
                },
                {
                    "function name": "testSha512_256",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha512_256"
                },
                {
                    "function name": "testSha512_224",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha512_224"
                },
                {
                    "function name": "testShaUpdateWithString",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"
                },
                {
                    "function name": "testSha3_224",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha3_224"
                },
                {
                    "function name": "testShaUpdateWithByteArray",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"
                },
                {
                    "function name": "testSha384",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha384"
                },
                {
                    "function name": "testSha3_512HexInputStream",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha3_512HexInputStream"
                },
                {
                    "function name": "testgetMinRating_11_Returns_3_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully"
                },
                {
                    "function name": "testgetMinRating_5_Returns4_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully"
                },
                {
                    "function name": "testgetMinRating_10_Returns3_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_10_Returns3_Successfully"
                },
                {
                    "function name": "testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved"
                },
                {
                    "function name": "testgetMinRating_8_Returns3_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"
                },
                {
                    "function name": "testgetMinRating_7_Returns4_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully"
                },
                {
                    "function name": "testgetMinRating_6_Returns4_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"
                },
                {
                    "function name": "testgetMinRating_5_Returns4_Successfully2",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"
                },
                {
                    "function name": "testDecodeInvalidEncodedResultDecoding",
                    "function params": [],
                    "file name": "PercentCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/PercentCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.PercentCodecTest.testDecodeInvalidEncodedResultDecoding"
                }
            ],
            "date": "2024-04-12"
        },
        {
            "commit_id": 1514,
            "hash": "d9f0c46ffc0ebb2871f4f791334216517f414e63",
            "commit_summary": "BCodec and QCodec encode() methods throw UnsupportedCharsetException\ninstead of EncoderException",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/BCodec.java",
                "src/main/java/org/apache/commons/codec/net/QCodec.java",
                "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                "src/test/java/org/apache/commons/codec/net/CustomRFC1522Codec.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "strSource",
                        "sourceCharset"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "value"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "sourceStr",
                        "sourceCharset"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "str"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.decode"
                },
                {
                    "function name": "encodeText",
                    "function params": [
                        "text",
                        "charsetName"
                    ],
                    "file name": "RFC1522Codec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.RFC1522Codec.encodeText"
                },
                {
                    "function name": "decodeText",
                    "function params": [
                        "text"
                    ],
                    "file name": "RFC1522Codec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.RFC1522Codec.decodeText"
                },
                {
                    "function name": "encodeText",
                    "function params": [
                        "text",
                        "charsetName"
                    ],
                    "file name": "CustomRFC1522Codec.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/CustomRFC1522Codec.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/CustomRFC1522Codec.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.CustomRFC1522Codec.encodeText"
                }
            ],
            "date": "2024-04-13"
        },
        {
            "commit_id": 1515,
            "hash": "ffc24a5d0b6b84d286cbc9a7be278a91b625804b",
            "commit_summary": "Refactor common data",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/net/BCodec.java",
                "src/main/java/org/apache/commons/codec/net/QCodec.java",
                "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                "src/test/java/org/apache/commons/codec/net/RFC1522CodecTest.java"
            ],
            "functions": [
                {
                    "function name": "encodeBase64",
                    "function params": [
                        "binaryData",
                        "isChunked",
                        "urlSafe",
                        "maxResultSize"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encodeBase64"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "strSource",
                        "sourceCharset"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.encode"
                },
                {
                    "function name": "BCodec",
                    "function params": [
                        "charset",
                        "decodingPolicy"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.BCodec"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "value"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "strSource"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "value"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "strSource",
                        "sourceCharset"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "sourceStr"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "sourceStr",
                        "sourceCharset"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "sourceStr",
                        "sourceCharset"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.encode"
                },
                {
                    "function name": "QCodec",
                    "function params": [
                        "charset"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.QCodec"
                },
                {
                    "function name": "encodeText",
                    "function params": [
                        "text",
                        "charsetName"
                    ],
                    "file name": "RFC1522Codec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.RFC1522Codec.encodeText"
                },
                {
                    "function name": "RFC1522Codec",
                    "function params": [
                        "charset"
                    ],
                    "file name": "RFC1522Codec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.RFC1522Codec.RFC1522Codec"
                },
                {
                    "function name": "getCharset",
                    "function params": [],
                    "file name": "RFC1522Codec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.RFC1522Codec.getCharset"
                },
                {
                    "function name": "getDefaultCharset",
                    "function params": [],
                    "file name": "RFC1522Codec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.RFC1522Codec.getDefaultCharset"
                },
                {
                    "function name": "RFC1522TestCodec",
                    "function params": [],
                    "file name": "RFC1522CodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.RFC1522CodecTest.RFC1522TestCodec"
                },
                {
                    "function name": "RFC1522OverrideTestCodec",
                    "function params": [],
                    "file name": "RFC1522OverrideTestCodec.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/CustomRFC1522Codec.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/RFC1522OverrideTestCodec.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.RFC1522OverrideTestCodec.RFC1522OverrideTestCodec"
                }
            ],
            "date": "2024-04-13"
        },
        {
            "commit_id": 1516,
            "hash": "ab84d0d4faafb7c8eb34e35f909a001c2477ddcc",
            "commit_summary": "Javadoc\n\nFormat tweaks",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java"
            ],
            "functions": [
                {
                    "function name": "encodeByte",
                    "function params": [
                        "b",
                        "encode",
                        "buffer"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "sourceStr",
                        "sourceCharset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "sourceStr"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "QuotedPrintableCodec",
                    "function params": [
                        "charsetName"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                }
            ],
            "date": "2024-04-13"
        },
        {
            "commit_id": 1517,
            "hash": "3d1a286b2ad52dfabb4e34e3d71350bfba7d9aef",
            "commit_summary": "Javadoc\n\nFormat tweaks",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/PercentCodec.java"
            ],
            "functions": [
                {
                    "function name": "decode",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "PercentCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/PercentCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.PercentCodec.encode"
                }
            ],
            "date": "2024-04-13"
        },
        {
            "commit_id": 1518,
            "hash": "5b9cf68c356ec22a0e5bb35166da25ab1b3ecb62",
            "commit_summary": "Custom alphabet for Base64 (#266)\n\n* add custom alphabet for Base64\r\n\r\n* checkstyle\r\n\r\n* revert table name, improve javadoc, add constants\r\n\r\n* Add missing Javadoc tag\r\n\r\n---------\r\n\r\nCo-authored-by: Gary Gregory <garydgregory@users.noreply.github.com>",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "encodeTable",
                        "decodingPolicy"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "urlSafe",
                        "decodingPolicy"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "calculateDecodeTable",
                    "function params": [
                        "encodeTable"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.calculateDecodeTable"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "urlSafe"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "input",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "urlSafe",
                        "decodingPolicy"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "encodeTable"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "testCustomEncodingAlphabet_illegal",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCustomEncodingAlphabet_illegal"
                },
                {
                    "function name": "testCustomEncodingAlphabet",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCustomEncodingAlphabet"
                }
            ],
            "date": "2024-04-15"
        },
        {
            "commit_id": 1519,
            "hash": "17d28c19bb872b7cffcb35831e4c15fc27417da1",
            "commit_summary": "Sort members",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "calculateDecodeTable",
                    "function params": [
                        "encodeTable"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.calculateDecodeTable"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "encodeTable"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "testCustomEncodingAlphabet_illegal",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCustomEncodingAlphabet_illegal"
                },
                {
                    "function name": "testCustomEncodingAlphabet",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCustomEncodingAlphabet"
                }
            ],
            "date": "2024-04-15"
        },
        {
            "commit_id": 1520,
            "hash": "0856a13762c2f2a60a081064d37af2ff92c8b6d4",
            "commit_summary": "Use final\n\n- Use better APIs\n- Formatting",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "urlSafe",
                        "decodingPolicy"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "calculateDecodeTable",
                    "function params": [
                        "encodeTable"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.calculateDecodeTable"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "encodeTable"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "encodeTable"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "urlSafe",
                        "decodingPolicy"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "calculateDecodeTable",
                    "function params": [
                        "encodeTable"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.calculateDecodeTable"
                },
                {
                    "function name": "testCustomEncodingAlphabet_illegal",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCustomEncodingAlphabet_illegal"
                },
                {
                    "function name": "testCustomEncodingAlphabet",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCustomEncodingAlphabet"
                }
            ],
            "date": "2024-04-15"
        },
        {
            "commit_id": 1521,
            "hash": "d9d45f676ea2f01b6f5803fd0facbc840b937aa0",
            "commit_summary": "Refactor instance variables that act like temps into locals",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32.java"
            ],
            "functions": [
                {
                    "function name": "decode",
                    "function params": [
                        "input",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.decode"
                },
                {
                    "function name": "Base32",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "useHex",
                        "padding",
                        "decodingPolicy"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.Base32"
                }
            ],
            "date": "2024-04-15"
        },
        {
            "commit_id": 1522,
            "hash": "19bb1933490cd315d2cb739661c6d5bca6e56624",
            "commit_summary": "Refactor instance variables that act like temps into locals",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "encodeTable",
                        "decodingPolicy"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "input",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.decode"
                }
            ],
            "date": "2024-04-15"
        },
        {
            "commit_id": 1523,
            "hash": "25c95b1b9863973283600bc8f980f4bf92e9829f",
            "commit_summary": "Add Base64.Builder (allows custom alphabets)",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "Builder",
                    "function params": [
                        "encodeTable"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Builder"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "encodeTable",
                        "decodingPolicy"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "urlSafe",
                        "decodingPolicy"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "urlSafe"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "encodeTable"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "Builder",
                    "function params": [
                        "lineLength"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Builder"
                },
                {
                    "function name": "toUrlSafeEncodeTable",
                    "function params": [
                        "urlSafe"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.toUrlSafeEncodeTable"
                },
                {
                    "function name": "builder",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.builder"
                },
                {
                    "function name": "Builder",
                    "function params": [
                        "decodingPolicy"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Builder"
                },
                {
                    "function name": "Builder",
                    "function params": [
                        "urlSafe"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Builder"
                },
                {
                    "function name": "Builder",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Builder"
                },
                {
                    "function name": "Builder",
                    "function params": [
                        "lineSeparator"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Builder"
                },
                {
                    "function name": "getLineSeparator",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.getLineSeparator"
                },
                {
                    "function name": "testCustomEncodingAlphabet_illegal",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCustomEncodingAlphabet_illegal"
                },
                {
                    "function name": "testBuilderLineAttributes",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testBuilderLineAttributes"
                },
                {
                    "function name": "testCustomEncodingAlphabet",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCustomEncodingAlphabet"
                },
                {
                    "function name": "testBuilderUrlSafe",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testBuilderUrlSafe"
                },
                {
                    "function name": "testBuilderCodecPolicy",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testBuilderCodecPolicy"
                },
                {
                    "function name": "testIgnoringNonBase64InDecode",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"
                },
                {
                    "function name": "testKnownDecodings",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testKnownDecodings"
                },
                {
                    "function name": "testKnownEncodings",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testKnownEncodings"
                }
            ],
            "date": "2024-04-16"
        },
        {
            "commit_id": 1524,
            "hash": "b9e6d691ac27cbd73046ddc7d2a23c39dd3b66fc",
            "commit_summary": "Javadoc",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base16.java",
                "src/main/java/org/apache/commons/codec/binary/Base16InputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base16OutputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java"
            ],
            "functions": [],
            "date": "2024-04-16"
        },
        {
            "commit_id": 1525,
            "hash": "3b36a60aaedd976b0726b4451195e8851059921e",
            "commit_summary": "Javadoc",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32.java"
            ],
            "functions": [],
            "date": "2024-04-16"
        },
        {
            "commit_id": 1526,
            "hash": "3a9efd27f54cd2d3794e95d638aa2e90bc082c05",
            "commit_summary": "Format tweaks\n\nUse this in constructor",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/cli/Digest.java"
            ],
            "functions": [
                {
                    "function name": "Digest",
                    "function params": [
                        "args"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.cli.Digest.Digest"
                }
            ],
            "date": "2024-04-16"
        },
        {
            "commit_id": 1527,
            "hash": "a670ba8675f6643ad4cff6eae6cd40f206958bd1",
            "commit_summary": "Use Objects#requireNonNull()",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/cli/Digest.java",
                "src/test/java/org/apache/commons/codec/cli/DigestTest.java"
            ],
            "functions": [
                {
                    "function name": "Digest",
                    "function params": [
                        "args"
                    ],
                    "file name": "Digest.java",
                    "file old path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "file new path": "src/main/java/org/apache/commons/codec/cli/Digest.java",
                    "full name": "src.main.java.org.apache.commons.codec.cli.Digest.Digest"
                },
                {
                    "function name": "testNullArguments",
                    "function params": [],
                    "file name": "DigestTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/cli/DigestTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/cli/DigestTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.cli.DigestTest.testNullArguments"
                }
            ],
            "date": "2024-04-16"
        },
        {
            "commit_id": 1528,
            "hash": "3e27d960f6b38efeab36bde4afde703fd44f2a45",
            "commit_summary": "Pull-up common Builder attributes to BaseNCodec",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java"
            ],
            "functions": [
                {
                    "function name": "Base32",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "encodeTable",
                        "padding",
                        "decodingPolicy"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.Base32"
                },
                {
                    "function name": "Base32",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "useHex",
                        "padding",
                        "decodingPolicy"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.Base32"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "encodeTable",
                        "decodingPolicy"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "Builder",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Builder"
                },
                {
                    "function name": "AbstractBuilder",
                    "function params": [
                        "lineSeparator"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.AbstractBuilder"
                },
                {
                    "function name": "AbstractBuilder",
                    "function params": [],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.AbstractBuilder"
                },
                {
                    "function name": "AbstractBuilder",
                    "function params": [],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.AbstractBuilder"
                },
                {
                    "function name": "AbstractBuilder",
                    "function params": [],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.AbstractBuilder"
                },
                {
                    "function name": "AbstractBuilder",
                    "function params": [],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.AbstractBuilder"
                },
                {
                    "function name": "toLength",
                    "function params": [
                        "array"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.toLength"
                },
                {
                    "function name": "AbstractBuilder",
                    "function params": [
                        "decodingPolicy"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.AbstractBuilder"
                },
                {
                    "function name": "AbstractBuilder",
                    "function params": [
                        "lineLength"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.AbstractBuilder"
                }
            ],
            "date": "2024-04-16"
        },
        {
            "commit_id": 1529,
            "hash": "f6deb133ea9896091de9040dc77db23ba9566b49",
            "commit_summary": "Pull-up common Builder attributes to BaseNCodec",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java"
            ],
            "functions": [
                {
                    "function name": "Builder",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Builder"
                },
                {
                    "function name": "Builder",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Builder"
                },
                {
                    "function name": "Builder",
                    "function params": [
                        "urlSafe"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Builder"
                },
                {
                    "function name": "AbstractBuilder",
                    "function params": [
                        "encodeTable"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.AbstractBuilder"
                },
                {
                    "function name": "AbstractBuilder",
                    "function params": [],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.AbstractBuilder"
                },
                {
                    "function name": "AbstractBuilder",
                    "function params": [
                        "defaultEncodeTable"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.AbstractBuilder"
                }
            ],
            "date": "2024-04-16"
        },
        {
            "commit_id": 1530,
            "hash": "02235dfce2cb0eee214663804f8bc526435c33fb",
            "commit_summary": "Add Base32.Builder (allows custom alphabets)",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java"
            ],
            "functions": [
                {
                    "function name": "Builder",
                    "function params": [],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.Builder"
                },
                {
                    "function name": "Builder",
                    "function params": [
                        "padding"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.Builder"
                },
                {
                    "function name": "builder",
                    "function params": [],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.builder"
                },
                {
                    "function name": "getLineSeparator",
                    "function params": [],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.getLineSeparator"
                },
                {
                    "function name": "Builder",
                    "function params": [],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.Builder"
                },
                {
                    "function name": "testBuilderPadingByte",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBuilderPadingByte"
                },
                {
                    "function name": "testBuilderCodecPolicy",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBuilderCodecPolicy"
                },
                {
                    "function name": "testBuilderLineAttributes",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBuilderLineAttributes"
                }
            ],
            "date": "2024-04-16"
        },
        {
            "commit_id": 1531,
            "hash": "4791d3b33f7513b11bc025e594aa747a258d3e70",
            "commit_summary": "Pull-up common Builder attribute to BaseNCodec",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java"
            ],
            "functions": [
                {
                    "function name": "Builder",
                    "function params": [],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.Builder"
                },
                {
                    "function name": "AbstractBuilder",
                    "function params": [],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.AbstractBuilder"
                },
                {
                    "function name": "AbstractBuilder",
                    "function params": [
                        "padding"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.AbstractBuilder"
                }
            ],
            "date": "2024-04-16"
        },
        {
            "commit_id": 1532,
            "hash": "3d6d334705a6a90899b4646aa888087643ef7c9a",
            "commit_summary": "Add Base64 support for a custom padding byte (like Base32)",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "encodeTable",
                        "decodingPolicy"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "urlSafe",
                        "decodingPolicy"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "urlSafe"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "padding",
                        "encodeTable",
                        "decodingPolicy"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "Builder",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Builder"
                },
                {
                    "function name": "testBuilderPadingByte",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testBuilderPadingByte"
                }
            ],
            "date": "2024-04-16"
        },
        {
            "commit_id": 1533,
            "hash": "d55b092d5f72aa9e039e122370332a16aa7f8f5f",
            "commit_summary": "Internal refactoring",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base16.java"
            ],
            "functions": [
                {
                    "function name": "Base16",
                    "function params": [
                        "lowerCase",
                        "decodingPolicy"
                    ],
                    "file name": "Base16.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.Base16"
                },
                {
                    "function name": "Base16",
                    "function params": [
                        "lowerCase",
                        "encodeTable",
                        "decodingPolicy"
                    ],
                    "file name": "Base16.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.Base16"
                }
            ],
            "date": "2024-04-16"
        },
        {
            "commit_id": 1534,
            "hash": "ca8c427f3d0b671af266aba076d4ab4ce066a26f",
            "commit_summary": "Javadoc",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [],
            "date": "2024-04-17"
        },
        {
            "commit_id": 1535,
            "hash": "09c7a8ad23a60b60c8cc82812e238a6cd2f91b11",
            "commit_summary": "Javadoc: Close HTML tags",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [],
            "date": "2024-04-18"
        },
        {
            "commit_id": 1536,
            "hash": "7a96c0da42ada5c36d6aab31704eb61c779e2da3",
            "commit_summary": "[CODEC-263] test for user reported issue (#240)\n\n* test for user reported issue\r\n\r\n* test isBase64\r\n\r\n* Add Javadoc\r\n\r\n* Fix whitespace\r\n\r\n---------\r\n\r\nCo-authored-by: Gary Gregory <garydgregory@users.noreply.github.com>",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "testCodec263",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodec263"
                }
            ],
            "date": "2024-04-18"
        },
        {
            "commit_id": 1537,
            "hash": "448bd190566690a0cebce6680ef86b7c2670a556",
            "commit_summary": "Sort members",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "testCodec263",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodec263"
                }
            ],
            "date": "2024-04-18"
        },
        {
            "commit_id": 1538,
            "hash": "457e5cced55c2fd4ab4c68293edf29e89de7daae",
            "commit_summary": "Update URL",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java"
            ],
            "functions": [],
            "date": "2024-04-18"
        },
        {
            "commit_id": 1539,
            "hash": "000817ee10b1aee72f2cc3ab9ea844afcaea466e",
            "commit_summary": "Better link text",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java"
            ],
            "functions": [],
            "date": "2024-04-18"
        },
        {
            "commit_id": 1540,
            "hash": "5c7fac8b95c609bffe0aed1e4a0bf3f23d3926ff",
            "commit_summary": "Format and no need to throw",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java"
            ],
            "functions": [
                {
                    "function name": "testCodec184",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184"
                }
            ],
            "date": "2024-04-18"
        },
        {
            "commit_id": 1541,
            "hash": "beb39d4e003d0d9e8e3eff02c3529c87e7a4af03",
            "commit_summary": "Wrong output of DoubleMetaphone in 1.16.1",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java"
            ],
            "functions": [
                {
                    "function name": "handleGH",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleGH"
                },
                {
                    "function name": "testCodec320",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec320"
                }
            ],
            "date": "2024-04-18"
        },
        {
            "commit_id": 1542,
            "hash": "35c9e80599053c32ed3a77eb7791fe8fb1fd1e98",
            "commit_summary": "Whitespace",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/CharSequenceUtils.java"
            ],
            "functions": [
                {
                    "function name": "regionMatches",
                    "function params": [
                        "cs",
                        "ignoreCase",
                        "thisStart",
                        "substring",
                        "start",
                        "length"
                    ],
                    "file name": "CharSequenceUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/CharSequenceUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/CharSequenceUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.CharSequenceUtils.regionMatches"
                }
            ],
            "date": "2024-04-19"
        },
        {
            "commit_id": 1543,
            "hash": "78e08b914a9e2663453af5c7986d6d0ab3b9dc9b",
            "commit_summary": "Whitespace",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Hex.java"
            ],
            "functions": [
                {
                    "function name": "decodeHex",
                    "function params": [
                        "data",
                        "out",
                        "outOffset"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.decodeHex"
                }
            ],
            "date": "2024-04-19"
        },
        {
            "commit_id": 1544,
            "hash": "873ecaa7a291c81ed7c418c7b187ff9e99abbc89",
            "commit_summary": "Internal refactoring",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Hex.java"
            ],
            "functions": [
                {
                    "function name": "encodeHex",
                    "function params": [
                        "data",
                        "dataOffset",
                        "dataLen",
                        "toDigits",
                        "out",
                        "outOffset"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHex"
                },
                {
                    "function name": "encodeHex",
                    "function params": [
                        "data",
                        "dataOffset",
                        "dataLen",
                        "toLowerCase",
                        "out",
                        "outOffset"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHex"
                },
                {
                    "function name": "encodeHex",
                    "function params": [
                        "data",
                        "dataOffset",
                        "dataLen",
                        "toLowerCase"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHex"
                },
                {
                    "function name": "encodeHex",
                    "function params": [
                        "data",
                        "toDigits"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHex"
                }
            ],
            "date": "2024-04-19"
        },
        {
            "commit_id": 1545,
            "hash": "86d10456047e21f7135f5de7f96e8adfc941cd39",
            "commit_summary": "Internal refactoring",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Hex.java"
            ],
            "functions": [
                {
                    "function name": "encodeHex",
                    "function params": [
                        "data",
                        "dataOffset",
                        "dataLen",
                        "toLowerCase",
                        "out",
                        "outOffset"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHex"
                },
                {
                    "function name": "encodeHex",
                    "function params": [
                        "data",
                        "toLowerCase"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHex"
                },
                {
                    "function name": "encodeHex",
                    "function params": [
                        "data",
                        "toLowerCase"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHex"
                },
                {
                    "function name": "toAlphabet",
                    "function params": [
                        "toLowerCase"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.toAlphabet"
                },
                {
                    "function name": "encodeHex",
                    "function params": [
                        "data",
                        "dataOffset",
                        "dataLen",
                        "toLowerCase"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHex"
                }
            ],
            "date": "2024-04-19"
        },
        {
            "commit_id": 1546,
            "hash": "0c7c76fed2c5b1c675fdf5b7e809175fa7b0bede",
            "commit_summary": "Javadoc\n\nWhitespace",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java"
            ],
            "functions": [
                {
                    "function name": "available",
                    "function params": [],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecInputStream.available"
                },
                {
                    "function name": "skip",
                    "function params": [
                        "n"
                    ],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecInputStream.skip"
                }
            ],
            "date": "2024-04-19"
        },
        {
            "commit_id": 1547,
            "hash": "cfa7c4188ad67f08ae9cfb9007e234bca26a7bf7",
            "commit_summary": "Javadoc\n\nWhitespace",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [],
            "date": "2024-04-19"
        },
        {
            "commit_id": 1548,
            "hash": "249037646efcc70b09495f2ff3e79b6ab3bc6460",
            "commit_summary": "Fix indentation",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/B64.java"
            ],
            "functions": [
                {
                    "function name": "getRandomSalt",
                    "function params": [
                        "num"
                    ],
                    "file name": "B64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/B64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/B64.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.B64.getRandomSalt"
                }
            ],
            "date": "2024-04-19"
        },
        {
            "commit_id": 1549,
            "hash": "be58b03b926e6472454ba87af39672005da488a5",
            "commit_summary": "Format tweaks\n\nLonger lines",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java"
            ],
            "functions": [
                {
                    "function name": "compress",
                    "function params": [
                        "chainingValue",
                        "blockWords",
                        "blockLength",
                        "counter",
                        "flags"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.compress"
                },
                {
                    "function name": "g",
                    "function params": [
                        "state",
                        "a",
                        "b",
                        "c",
                        "d",
                        "mx",
                        "my"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.g"
                },
                {
                    "function name": "parentOutput",
                    "function params": [
                        "leftChildCV",
                        "rightChildCV",
                        "key",
                        "flags"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.parentOutput"
                },
                {
                    "function name": "Output",
                    "function params": [],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.Output"
                },
                {
                    "function name": "parentChainingValue",
                    "function params": [
                        "leftChildCV",
                        "rightChildCV",
                        "key",
                        "flags"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.parentChainingValue"
                },
                {
                    "function name": "Output",
                    "function params": [
                        "inputChainingValue",
                        "blockWords",
                        "counter",
                        "blockLength",
                        "flags"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.Output"
                },
                {
                    "function name": "Output",
                    "function params": [
                        "out",
                        "offset",
                        "length"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.Output"
                },
                {
                    "function name": "checkBufferArgs",
                    "function params": [
                        "buffer",
                        "offset",
                        "length"
                    ],
                    "file name": "Blake3.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Blake3.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Blake3.checkBufferArgs"
                },
                {
                    "function name": "getInitializedMac",
                    "function params": [
                        "algorithm",
                        "key"
                    ],
                    "file name": "HmacUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/HmacUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.HmacUtils.getInitializedMac"
                },
                {
                    "function name": "reset",
                    "function params": [],
                    "file name": "PureJavaCrc32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32.reset"
                },
                {
                    "function name": "getValue",
                    "function params": [],
                    "file name": "PureJavaCrc32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32.getValue"
                },
                {
                    "function name": "resetCrc",
                    "function params": [],
                    "file name": "PureJavaCrc32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32.resetCrc"
                },
                {
                    "function name": "update",
                    "function params": [
                        "b",
                        "offset",
                        "len"
                    ],
                    "file name": "PureJavaCrc32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32.update"
                },
                {
                    "function name": "PureJavaCrc32",
                    "function params": [],
                    "file name": "PureJavaCrc32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32.PureJavaCrc32"
                },
                {
                    "function name": "update",
                    "function params": [
                        "b"
                    ],
                    "file name": "PureJavaCrc32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.PureJavaCrc32.update"
                }
            ],
            "date": "2024-04-19"
        },
        {
            "commit_id": 1550,
            "hash": "c6c5f11eae145d8e8c655e622f0fc5dd74e6db2a",
            "commit_summary": "Base64 constructor makes a better defensive copy of the line separator\narray",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "padding",
                        "encodeTable",
                        "decodingPolicy"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Base64"
                }
            ],
            "date": "2024-04-20"
        },
        {
            "commit_id": 1551,
            "hash": "55043334240eb2a1838e37ea1c8a6e434d328fdf",
            "commit_summary": "Better exception message",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "padding",
                        "encodeTable",
                        "decodingPolicy"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Base64"
                }
            ],
            "date": "2024-04-20"
        },
        {
            "commit_id": 1552,
            "hash": "ebe805a2730ad38886f9f04bd4d242e0a8c9caaa",
            "commit_summary": "Base64 constructor makes a defensive copy of a custom alphabet array",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [
                {
                    "function name": "isUrlSafe",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.isUrlSafe"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "padding",
                        "encodeTable",
                        "decodingPolicy"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Base64"
                }
            ],
            "date": "2024-04-20"
        },
        {
            "commit_id": 1553,
            "hash": "fcc70e6fa1271158dd8f3a90350fa2589713f257",
            "commit_summary": "Base32 constructor makes a defensive copy of the line separator\narray",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32.java"
            ],
            "functions": [
                {
                    "function name": "Base32",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "encodeTable",
                        "padding",
                        "decodingPolicy"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.Base32"
                }
            ],
            "date": "2024-04-20"
        },
        {
            "commit_id": 1554,
            "hash": "d2215d5dec3031f819c3bb514587d92a6aec8eff",
            "commit_summary": "Base32 constructor fails-fast with a NullPointerException if the custom\nalphabet array is null",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32.java"
            ],
            "functions": [
                {
                    "function name": "Base32",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "encodeTable",
                        "padding",
                        "decodingPolicy"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.Base32"
                }
            ],
            "date": "2024-04-20"
        },
        {
            "commit_id": 1555,
            "hash": "c56b95664913aab406f768c66f9264481b28c1bb",
            "commit_summary": "Bullet-proof internals",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base16.java"
            ],
            "functions": [
                {
                    "function name": "Base16",
                    "function params": [
                        "lowerCase",
                        "encodeTable",
                        "decodingPolicy"
                    ],
                    "file name": "Base16.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.Base16"
                }
            ],
            "date": "2024-04-20"
        },
        {
            "commit_id": 1556,
            "hash": "8714b5f62bb5fa5950aa5e8908bd0d8d3334dba5",
            "commit_summary": "Remove dead comment",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [],
            "date": "2024-04-20"
        },
        {
            "commit_id": 1557,
            "hash": "5f0cfd46c89df69b579f37562ff1eded7ffd4b5c",
            "commit_summary": "Longer lines\n\n- Whitespace\n- Simplify if",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base16.java",
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java"
            ],
            "functions": [
                {
                    "function name": "decodeOctet",
                    "function params": [
                        "octet"
                    ],
                    "file name": "Base16.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.decodeOctet"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "context"
                    ],
                    "file name": "Base16.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "data",
                        "offset",
                        "length",
                        "context"
                    ],
                    "file name": "Base16.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base16.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base16.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "input",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "input",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.encode"
                },
                {
                    "function name": "ensureBufferSize",
                    "function params": [
                        "size",
                        "context"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize"
                },
                {
                    "function name": "containsAlphabetOrPad",
                    "function params": [
                        "arrayOctet"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.containsAlphabetOrPad"
                },
                {
                    "function name": "BaseNCodec",
                    "function params": [
                        "unencodedBlockSize",
                        "encodedBlockSize",
                        "lineLength",
                        "chunkSeparatorLength"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.BaseNCodec"
                },
                {
                    "function name": "resizeBuffer",
                    "function params": [
                        "context",
                        "minCapacity"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.resizeBuffer"
                },
                {
                    "function name": "BaseNCodec",
                    "function params": [
                        "unencodedBlockSize",
                        "encodedBlockSize",
                        "lineLength",
                        "chunkSeparatorLength",
                        "pad"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.BaseNCodec"
                },
                {
                    "function name": "BaseNCodec",
                    "function params": [
                        "unencodedBlockSize",
                        "encodedBlockSize",
                        "lineLength",
                        "chunkSeparatorLength",
                        "pad",
                        "decodingPolicy"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.BaseNCodec"
                }
            ],
            "date": "2024-04-20"
        },
        {
            "commit_id": 1558,
            "hash": "ad28b0f1ea4010dc0eaeb1d1cda041efe0ef7323",
            "commit_summary": "Md5Crypt now throws IllegalArgumentException on an invalid prefix",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java"
            ],
            "functions": [
                {
                    "function name": "md5Crypt",
                    "function params": [
                        "keyBytes",
                        "salt",
                        "prefix",
                        "random"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.md5Crypt"
                },
                {
                    "function name": "testInvalidPrefix",
                    "function params": [],
                    "file name": "Md5CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Md5CryptTest.testInvalidPrefix"
                }
            ],
            "date": "2024-05-16"
        },
        {
            "commit_id": 1559,
            "hash": "becaef05df69ace689e05dc1b2203c8bf3b9a89e",
            "commit_summary": "Remove superfluous comment",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java"
            ],
            "functions": [
                {
                    "function name": "testCtor",
                    "function params": [],
                    "file name": "Md5CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Md5CryptTest.testCtor"
                }
            ],
            "date": "2024-05-17"
        },
        {
            "commit_id": 1560,
            "hash": "f0f649c70ee212f58495937c7e3ef6ee86848181",
            "commit_summary": "Javadoc",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java",
                "src/main/java/org/apache/commons/codec/digest/XXHash32.java"
            ],
            "functions": [],
            "date": "2024-05-18"
        },
        {
            "commit_id": 1561,
            "hash": "c016dac7a4845ec8b3e3a9acd8c19164a269f5d9",
            "commit_summary": "Javadoc",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/MurmurHash2.java"
            ],
            "functions": [],
            "date": "2024-05-18"
        },
        {
            "commit_id": 1562,
            "hash": "14c4621f4cb6b01f1215446c8037418886482df9",
            "commit_summary": "Javadoc",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java"
            ],
            "functions": [],
            "date": "2024-05-23"
        },
        {
            "commit_id": 1563,
            "hash": "ec4483074c0be014ff60bca9f39f6b6fcb2b48ad",
            "commit_summary": "Javadoc",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Blake3.java"
            ],
            "functions": [],
            "date": "2024-05-23"
        },
        {
            "commit_id": 1564,
            "hash": "17e9b6f98161aefae40922d24509625c120a0b78",
            "commit_summary": "Remove redundant keywords",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Hex.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "array"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "object"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "array"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encode"
                }
            ],
            "date": "2024-07-09"
        },
        {
            "commit_id": 1565,
            "hash": "2ba905517125a7d4fc3f65b37848b63eb275a943",
            "commit_summary": "Remove redundant keywords",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/Caverphone.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "Caverphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Caverphone.encode"
                },
                {
                    "function name": "isCaverphoneEqual",
                    "function params": [
                        "str1",
                        "str2"
                    ],
                    "file name": "Caverphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Caverphone.isCaverphoneEqual"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str"
                    ],
                    "file name": "Caverphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Caverphone.encode"
                }
            ],
            "date": "2024-07-09"
        },
        {
            "commit_id": 1566,
            "hash": "c7df2078afd071102b0337f5d4f4f152aa5c1401",
            "commit_summary": "Remove redundant keywords",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/Metaphone.java"
            ],
            "functions": [
                {
                    "function name": "metaphone",
                    "function params": [
                        "txt"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.metaphone"
                }
            ],
            "date": "2024-07-09"
        },
        {
            "commit_id": 1567,
            "hash": "c07d6a49d5b62b4a370ec57d89235fc21004c25a",
            "commit_summary": "Remove redundant keywords",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/Nysiis.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "str"
                    ],
                    "file name": "Nysiis.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Nysiis.encode"
                },
                {
                    "function name": "nysiis",
                    "function params": [
                        "str"
                    ],
                    "file name": "Nysiis.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Nysiis.nysiis"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "Nysiis.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Nysiis.encode"
                }
            ],
            "date": "2024-07-09"
        },
        {
            "commit_id": 1568,
            "hash": "e145a0ae6e0ce48cbd0e393c0d4102a92d4b3562",
            "commit_summary": "Remove redundant keywords",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java"
            ],
            "functions": [
                {
                    "function name": "decode",
                    "function params": [
                        "sourceStr"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                }
            ],
            "date": "2024-07-09"
        },
        {
            "commit_id": 1569,
            "hash": "982ee0300d1578d76709762b144ee576408bb35d",
            "commit_summary": "Remove redundant keywords",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java"
            ],
            "functions": [
                {
                    "function name": "encodeText",
                    "function params": [
                        "text",
                        "charset"
                    ],
                    "file name": "RFC1522Codec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.RFC1522Codec.encodeText"
                }
            ],
            "date": "2024-07-09"
        },
        {
            "commit_id": 1570,
            "hash": "93271116f6636d6a4a216a73f7d0d1475ab6acd8",
            "commit_summary": "Remove redundant keywords",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base16Test.java"
            ],
            "functions": [
                {
                    "function name": "testEncodeDecodeRandom",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testEncodeDecodeRandom"
                },
                {
                    "function name": "testEncodeDecodeSmall",
                    "function params": [],
                    "file name": "Base16Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base16Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base16Test.testEncodeDecodeSmall"
                }
            ],
            "date": "2024-07-09"
        },
        {
            "commit_id": 1571,
            "hash": "146b0d82e57e4bf2bf484923103852fc7bed10cd",
            "commit_summary": "Remove redundant keywords",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "testEncodeDecodeSmall",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"
                },
                {
                    "function name": "testEncodeDecodeRandom",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"
                }
            ],
            "date": "2024-07-09"
        },
        {
            "commit_id": 1572,
            "hash": "0dfbc98bd6712f3fa2b30191869ccb2bbe3c3dd6",
            "commit_summary": "Remove redundant keywords",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/Caverphone1Test.java"
            ],
            "functions": [
                {
                    "function name": "testCaverphoneRevisitedCommonCodeAT1111",
                    "function params": [],
                    "file name": "Caverphone1Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/Caverphone1Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/Caverphone1Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111"
                },
                {
                    "function name": "testSpecificationV1Examples",
                    "function params": [],
                    "file name": "Caverphone1Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/Caverphone1Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/Caverphone1Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"
                },
                {
                    "function name": "testWikipediaExamples",
                    "function params": [],
                    "file name": "Caverphone1Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/Caverphone1Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/Caverphone1Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples"
                },
                {
                    "function name": "testEndMb",
                    "function params": [],
                    "file name": "Caverphone1Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/Caverphone1Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/Caverphone1Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.Caverphone1Test.testEndMb"
                }
            ],
            "date": "2024-07-09"
        },
        {
            "commit_id": 1573,
            "hash": "d6a6bc7fe25375bb5b22555763f95b1d58999100",
            "commit_summary": "Remove redundant keywords",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java"
            ],
            "functions": [
                {
                    "function name": "testCaverphoneRevisitedRandomWords",
                    "function params": [],
                    "file name": "Caverphone2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords"
                },
                {
                    "function name": "testCaverphoneRevisitedExamples",
                    "function params": [],
                    "file name": "Caverphone2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples"
                },
                {
                    "function name": "testSpecificationExamples",
                    "function params": [],
                    "file name": "Caverphone2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples"
                },
                {
                    "function name": "testCaverphoneRevisitedCommonCodeAT11111111",
                    "function params": [],
                    "file name": "Caverphone2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111"
                },
                {
                    "function name": "testCaverphoneRevisitedRandomNameKLN1111111",
                    "function params": [],
                    "file name": "Caverphone2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111"
                },
                {
                    "function name": "testCaverphoneRevisitedRandomNameTTA1111111",
                    "function params": [],
                    "file name": "Caverphone2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111"
                },
                {
                    "function name": "testCaverphoneRevisitedRandomNameTN11111111",
                    "function params": [],
                    "file name": "Caverphone2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111"
                },
                {
                    "function name": "testEndMb",
                    "function params": [],
                    "file name": "Caverphone2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.Caverphone2Test.testEndMb"
                }
            ],
            "date": "2024-07-09"
        },
        {
            "commit_id": 1574,
            "hash": "6517ed1e4aa38f98caef917c80bd30214b529a4c",
            "commit_summary": "Remove redundant keywords",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java"
            ],
            "functions": [
                {
                    "function name": "testExamples",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testExamples"
                },
                {
                    "function name": "testIsEncodeEquals",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"
                },
                {
                    "function name": "testAabjoe",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe"
                },
                {
                    "function name": "testCanFail",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testCanFail"
                },
                {
                    "function name": "testSpecialCharsBetweenSameLetters",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testSpecialCharsBetweenSameLetters"
                },
                {
                    "function name": "testAychlmajrForCodec122",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122"
                },
                {
                    "function name": "testVariationsMeyer",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"
                },
                {
                    "function name": "testAaclan",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"
                },
                {
                    "function name": "testHyphen",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"
                },
                {
                    "function name": "testVariationsMella",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"
                },
                {
                    "function name": "testEdgeCases",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"
                }
            ],
            "date": "2024-07-09"
        },
        {
            "commit_id": 1575,
            "hash": "a54c0e63a39da406fdc5a904fbae4979b1978c81",
            "commit_summary": "Remove redundant keywords",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java"
            ],
            "functions": [
                {
                    "function name": "testEncodeIgnoreApostrophes",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes"
                },
                {
                    "function name": "testEncodeIgnoreHyphens",
                    "function params": [],
                    "file name": "DaitchMokotoffSoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DaitchMokotoffSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens"
                }
            ],
            "date": "2024-07-09"
        },
        {
            "commit_id": 1576,
            "hash": "9f1d2c4a73f6d3b7c5357121ba8349b04fdc4e20",
            "commit_summary": "Remove redundant keywords",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java"
            ],
            "functions": [
                {
                    "function name": "checkDoubleMetaphone",
                    "function params": [
                        "typeIndex",
                        "alternate"
                    ],
                    "file name": "DoubleMetaphone2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphone2Test.checkDoubleMetaphone"
                },
                {
                    "function name": "testDoubleMetaphonePrimary",
                    "function params": [],
                    "file name": "DoubleMetaphone2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"
                },
                {
                    "function name": "testDoubleMetaphoneAlternate",
                    "function params": [],
                    "file name": "DoubleMetaphone2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"
                }
            ],
            "date": "2024-07-09"
        },
        {
            "commit_id": 1577,
            "hash": "9bcb651b24698fd8af6ec9eba3a2e5897e8c8dd0",
            "commit_summary": "Remove redundant keywords",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java"
            ],
            "functions": [
                {
                    "function name": "testCCedilla",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"
                },
                {
                    "function name": "testIsDoubleMetaphoneEqualExtended3",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"
                },
                {
                    "function name": "testNTilde",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"
                },
                {
                    "function name": "assertDoubleMetaphone",
                    "function params": [
                        "expected",
                        "source"
                    ],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.assertDoubleMetaphone"
                },
                {
                    "function name": "testIsDoubleMetaphoneEqualWithMATCHES",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"
                },
                {
                    "function name": "doubleMetaphoneNotEqualTest",
                    "function params": [
                        "alternate"
                    ],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"
                },
                {
                    "function name": "assertDoubleMetaphoneAlt",
                    "function params": [
                        "expected",
                        "source"
                    ],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.assertDoubleMetaphoneAlt"
                },
                {
                    "function name": "doubleMetaphoneEqualTest",
                    "function params": [
                        "pairs",
                        "useAlternate"
                    ],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"
                },
                {
                    "function name": "testEmpty",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"
                }
            ],
            "date": "2024-07-09"
        },
        {
            "commit_id": 1578,
            "hash": "9b825364d420fc63438ed14e323163d5d2339960",
            "commit_summary": "Remove redundant keywords",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java"
            ],
            "functions": [
                {
                    "function name": "testCompare_BRIAN_BRYAN_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"
                },
                {
                    "function name": "testGetEncoding_SMYTH_to_SMYTH",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"
                },
                {
                    "function name": "testgetMinRating_6_Returns4_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"
                },
                {
                    "function name": "testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"
                },
                {
                    "function name": "testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched"
                },
                {
                    "function name": "testGetFirstLast3__ALEXANDER_Returns_Aleder",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"
                },
                {
                    "function name": "testIsEncodeEqualsSecondNameJust1Letter_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsEncodeEqualsSecondNameJust1Letter_ReturnsFalse"
                },
                {
                    "function name": "testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch"
                },
                {
                    "function name": "testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched"
                },
                {
                    "function name": "testGetEncoding_NoSpace_to_Nothing",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"
                },
                {
                    "function name": "testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"
                },
                {
                    "function name": "testGetMinRating_7_Return4_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"
                },
                {
                    "function name": "testGetEncoding_One_Letter_to_Nothing",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing"
                },
                {
                    "function name": "testCompare_OONA_OONAGH_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched"
                },
                {
                    "function name": "testGetEncoding_Null_to_Nothing",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"
                },
                {
                    "function name": "testIsEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse"
                },
                {
                    "function name": "testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"
                },
                {
                    "function name": "testAccentRemoval_NullValue_ReturnNullSuccessfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"
                },
                {
                    "function name": "testCompare_STEPHEN_STEVEN_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch"
                },
                {
                    "function name": "testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_MICKY_MICHAEL_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched"
                },
                {
                    "function name": "testLeftToRightThenRightToLeft_EINSTEIN_MICHAELA_Returns0",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testLeftToRightThenRightToLeft_EINSTEIN_MICHAELA_Returns0"
                },
                {
                    "function name": "testAccentRemoval_NINO_NoChange",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange"
                },
                {
                    "function name": "testCompare_CATHERINE_KATHRYN_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched"
                },
                {
                    "function name": "testRemoveVowel_ALESSANDRA_Returns_ALSSNDR",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR"
                },
                {
                    "function name": "testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"
                },
                {
                    "function name": "testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved"
                },
                {
                    "function name": "testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"
                },
                {
                    "function name": "testgetMinRating_7_Returns4_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully"
                },
                {
                    "function name": "testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualCharactersInvariant",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualCharactersInvariant"
                },
                {
                    "function name": "testVowelAndPunctuationOnly",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testVowelAndPunctuationOnly"
                },
                {
                    "function name": "testVowelOnly",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testVowelOnly"
                },
                {
                    "function name": "testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_KARL_ALESSANDRO_DoesNotMatch",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"
                },
                {
                    "function name": "testgetMinRating_5_Returns4_Successfully2",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"
                },
                {
                    "function name": "testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully"
                },
                {
                    "function name": "testIsEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"
                },
                {
                    "function name": "testIsVowel_SmallD_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"
                },
                {
                    "function name": "testCompare_TOMASZ_TOM_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched"
                },
                {
                    "function name": "testIsEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"
                },
                {
                    "function name": "testCompare_ZACH_ZAKARIA_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"
                },
                {
                    "function name": "testRemoveVowel__AIDAN_Returns_ADN",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__AIDAN_Returns_ADN"
                },
                {
                    "function name": "testCompare_ShortNames_AL_ED_WorksButNoMatch",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"
                },
                {
                    "function name": "testAccentRemoval_UpperAndLower_SuccessfullyRemovedAndCaseInvariant",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperAndLower_SuccessfullyRemovedAndCaseInvariant"
                },
                {
                    "function name": "testgetMinRating_8_Returns3_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"
                },
                {
                    "function name": "testGetMinRating_2_Returns5_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"
                },
                {
                    "function name": "testCompare_SMITH_SMYTH_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched"
                },
                {
                    "function name": "testGetFirstLast3_PETE_Returns_PETE",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE"
                },
                {
                    "function name": "testLeftToRightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testLeftToRightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4"
                },
                {
                    "function name": "testAccentRemoval_AllLower_SuccessfullyRemoved",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved"
                },
                {
                    "function name": "testCompare_SAM_SAMUEL_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_BURNS_BOURNE_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"
                },
                {
                    "function name": "testGetMinRating_13_Returns_1_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully"
                },
                {
                    "function name": "testgetMinRating_10_Returns3_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_10_Returns3_Successfully"
                },
                {
                    "function name": "testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_SEAN_SHAUN_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"
                },
                {
                    "function name": "testPunctuationOnly",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testPunctuationOnly"
                },
                {
                    "function name": "testCompare_Forenames_SEAN_PETE_NoMatchExpected",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"
                },
                {
                    "function name": "testGetMinRating_1_Returns5_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully"
                },
                {
                    "function name": "testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot"
                },
                {
                    "function name": "testCompare_Forenames_SEAN_JOHN_MatchExpected",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected"
                },
                {
                    "function name": "testGetEncoding_Space_to_Nothing",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"
                },
                {
                    "function name": "testIsVowel_CapitalA_ReturnsTrue",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_CapitalA_ReturnsTrue"
                },
                {
                    "function name": "testGetEncoding_SMITH_to_SMTH",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"
                },
                {
                    "function name": "testCleanName_SuccessfullyClean",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCleanName_SuccessfullyClean"
                },
                {
                    "function name": "testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_SurnamesCornerCase_MURPHY_Space_NoMatch",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_Space_NoMatch"
                },
                {
                    "function name": "testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_STEPHEN_STEFAN_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_STEVEN_STEFAN_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched"
                },
                {
                    "function name": "testgetMinRating_5_Returns4_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully"
                },
                {
                    "function name": "testRemoveDoubleDoubleVowel_BEETLE_NotRemoved",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"
                },
                {
                    "function name": "testCompare_SurnameCornerCase_Nulls_NoMatch",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnameCornerCase_Nulls_NoMatch"
                },
                {
                    "function name": "testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"
                },
                {
                    "function name": "testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant"
                },
                {
                    "function name": "testIsVowel_SingleVowel_ReturnsTrue",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SingleVowel_ReturnsTrue"
                },
                {
                    "function name": "testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"
                },
                {
                    "function name": "testGetEncoding_HARPER_HRPR",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR"
                },
                {
                    "function name": "testIsEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse"
                },
                {
                    "function name": "testCompare_SmallInput_CARK_Kl_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"
                },
                {
                    "function name": "testgetMinRating_11_Returns_3_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully"
                },
                {
                    "function name": "testCompare_PETERSON_PETERS_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched"
                },
                {
                    "function name": "testIsEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"
                },
                {
                    "function name": "testIsEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse"
                },
                {
                    "function name": "testIsEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse"
                },
                {
                    "function name": "testCompare_SOPHIE_SOFIA_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"
                },
                {
                    "function name": "testAccentRemovalNormalString_NoChange",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"
                },
                {
                    "function name": "testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"
                },
                {
                    "function name": "testRemoveVowel__DECLAN_Returns_DCLN",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"
                },
                {
                    "function name": "testCompareNameToSingleLetter_KARL_C_DoesNotMatch",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch"
                }
            ],
            "date": "2024-07-09"
        },
        {
            "commit_id": 1579,
            "hash": "dbe8f00fb12ba4830e5d8033bb5b3336a7ee67da",
            "commit_summary": "Remove redundant keywords",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java"
            ],
            "functions": [
                {
                    "function name": "testIsMetaphoneEqualMary",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"
                },
                {
                    "function name": "testWhy",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testWhy"
                },
                {
                    "function name": "testIsMetaphoneEqualSusan",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"
                },
                {
                    "function name": "testIsMetaphoneEqualRay",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"
                },
                {
                    "function name": "testWordsWithCIA",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"
                },
                {
                    "function name": "testDiscardOfSilentGN",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"
                },
                {
                    "function name": "testIsMetaphoneEqualWhite",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"
                },
                {
                    "function name": "testExceedLength",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testExceedLength"
                },
                {
                    "function name": "testIsMetaphoneEqualGary",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"
                },
                {
                    "function name": "assertIsMetaphoneEqual",
                    "function params": [
                        "source",
                        "matches"
                    ],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.assertIsMetaphoneEqual"
                },
                {
                    "function name": "testIsMetaphoneEqualWright",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"
                },
                {
                    "function name": "testTranslateOfSCHAndCH",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"
                },
                {
                    "function name": "testDiscardOfSilentHAfterG",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"
                },
                {
                    "function name": "testMetaphone",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testMetaphone"
                },
                {
                    "function name": "testPHTOF",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testPHTOF"
                },
                {
                    "function name": "testIsMetaphoneEqual1",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"
                },
                {
                    "function name": "testSHAndSIOAndSIAToX",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"
                },
                {
                    "function name": "testWordEndingInMB",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"
                },
                {
                    "function name": "testIsMetaphoneEqualAlbert",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"
                },
                {
                    "function name": "testSetMaxLengthWithTruncation",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"
                },
                {
                    "function name": "testIsMetaphoneEqualAero",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"
                },
                {
                    "function name": "testIsMetaphoneEqualPeter",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"
                },
                {
                    "function name": "testIsMetaphoneEqualXalan",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"
                },
                {
                    "function name": "testDiscardOfSCEOrSCIOrSCY",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"
                },
                {
                    "function name": "testIsMetaphoneEqualJohn",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"
                },
                {
                    "function name": "testTIOAndTIAToX",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"
                },
                {
                    "function name": "testTCH",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testTCH"
                },
                {
                    "function name": "testIsMetaphoneEqualParis",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"
                },
                {
                    "function name": "testTranslateToJOfDGEOrDGIOrDGY",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"
                },
                {
                    "function name": "testIsMetaphoneEqual2",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"
                },
                {
                    "function name": "testIsMetaphoneEqualKnight",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"
                },
                {
                    "function name": "assertMetaphoneEqual",
                    "function params": [
                        "pairs"
                    ],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.assertMetaphoneEqual"
                }
            ],
            "date": "2024-07-09"
        },
        {
            "commit_id": 1580,
            "hash": "a7ffcabf619f590c9f33105d41e7cc8a91ae1912",
            "commit_summary": "Remove redundant keywords",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/NysiisTest.java"
            ],
            "functions": [
                {
                    "function name": "testTranan",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testTranan"
                },
                {
                    "function name": "testSnad",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testSnad"
                },
                {
                    "function name": "testSnat",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testSnat"
                },
                {
                    "function name": "testCap",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testCap"
                },
                {
                    "function name": "testRule1",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testRule1"
                },
                {
                    "function name": "testSpecialBranches",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testSpecialBranches"
                },
                {
                    "function name": "testRule2",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testRule2"
                },
                {
                    "function name": "testRule4Dot2",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testRule4Dot2"
                },
                {
                    "function name": "testRule7",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testRule7"
                },
                {
                    "function name": "testFal",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testFal"
                },
                {
                    "function name": "testRule6",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testRule6"
                },
                {
                    "function name": "testDan",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testDan"
                },
                {
                    "function name": "testRule4Dot1",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testRule4Dot1"
                },
                {
                    "function name": "testDropBy",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testDropBy"
                },
                {
                    "function name": "testDad",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testDad"
                },
                {
                    "function name": "testRule5",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testRule5"
                },
                {
                    "function name": "testOthers",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testOthers"
                }
            ],
            "date": "2024-07-09"
        },
        {
            "commit_id": 1581,
            "hash": "8dcf9d1f745c88beedf54e63c7a5d683725ebdea",
            "commit_summary": "Remove redundant keywords",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java"
            ],
            "functions": [
                {
                    "function name": "testEncode",
                    "function params": [],
                    "file name": "RefinedSoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.RefinedSoundexTest.testEncode"
                },
                {
                    "function name": "testDifference",
                    "function params": [],
                    "file name": "RefinedSoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.RefinedSoundexTest.testDifference"
                },
                {
                    "function name": "testGetMappingCodeNonLetter",
                    "function params": [],
                    "file name": "RefinedSoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"
                }
            ],
            "date": "2024-07-09"
        },
        {
            "commit_id": 1582,
            "hash": "1e6544e4f1d269c0edf8b702f60d6dc866b3affa",
            "commit_summary": "Remove redundant keywords",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/SoundexTest.java"
            ],
            "functions": [
                {
                    "function name": "testHWRuleEx2",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"
                },
                {
                    "function name": "testHWRuleEx3",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"
                },
                {
                    "function name": "testEncodeBatch4",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"
                },
                {
                    "function name": "testDifference",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testDifference"
                },
                {
                    "function name": "testMsSqlServer2",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"
                },
                {
                    "function name": "testWikipediaAmericanSoundex",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testWikipediaAmericanSoundex"
                },
                {
                    "function name": "testUsMappingOWithDiaeresis",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"
                },
                {
                    "function name": "testMsSqlServer3",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"
                },
                {
                    "function name": "testHWRuleEx1",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"
                },
                {
                    "function name": "testEncodeIgnoreHyphens",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"
                },
                {
                    "function name": "testEncodeBasic",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testEncodeBasic"
                },
                {
                    "function name": "testEncodeBatch2",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"
                },
                {
                    "function name": "testBadCharacters",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testBadCharacters"
                },
                {
                    "function name": "testEncodeIgnoreApostrophes",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"
                },
                {
                    "function name": "testEncodeIgnoreTrimmable",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"
                },
                {
                    "function name": "testEncodeBatch3",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"
                },
                {
                    "function name": "testB650",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testB650"
                },
                {
                    "function name": "testUsMappingEWithAcute",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"
                },
                {
                    "function name": "testMsSqlServer1",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"
                }
            ],
            "date": "2024-07-09"
        },
        {
            "commit_id": 1583,
            "hash": "0c82238e5b9a914fdd862df3f6ab0085f533b5e8",
            "commit_summary": "Remove redundant keywords",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java"
            ],
            "functions": [
                {
                    "function name": "testSpeedCheck",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"
                },
                {
                    "function name": "testSpeedCheck2",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"
                },
                {
                    "function name": "testSpeedCheck3",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"
                }
            ],
            "date": "2024-07-09"
        },
        {
            "commit_id": 1584,
            "hash": "974cf873936633d7bb7e060b1caf119e60b60e98",
            "commit_summary": "Remove redundant keywords",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/net/URLCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "testSafeCharEncodeDecode",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"
                },
                {
                    "function name": "testInvalidEncoding",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"
                },
                {
                    "function name": "testDefaultEncoding",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"
                },
                {
                    "function name": "testDecodeInvalidContent",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"
                },
                {
                    "function name": "testUTF8RoundTrip",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testDecodeInvalid",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"
                },
                {
                    "function name": "testUnsafeEncodeDecode",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"
                },
                {
                    "function name": "testEncodeDecodeNull",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"
                },
                {
                    "function name": "testBasicEncodeDecode",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"
                },
                {
                    "function name": "testEncodeUrlWithNullBitSet",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"
                },
                {
                    "function name": "testEncodeNull",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testEncodeNull"
                }
            ],
            "date": "2024-07-09"
        },
        {
            "commit_id": 1585,
            "hash": "166e04e82f920f4ab0a5fe9e0eb95c7350b2b42e",
            "commit_summary": "Javadoc\n\nUse HTML 'em' tag instead of 'i' tag",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [],
            "date": "2024-07-21"
        },
        {
            "commit_id": 1586,
            "hash": "cd2b090758ce2b92b6e07bec568687d694db9814",
            "commit_summary": "Try to avoid occasional hang when testing",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java"
            ],
            "functions": [],
            "date": "2024-07-28"
        },
        {
            "commit_id": 1587,
            "hash": "867eafc0877d3c78dd59b6721c78a977dd0245fe",
            "commit_summary": "Use Javadoc @code",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/DecoderException.java",
                "src/main/java/org/apache/commons/codec/EncoderException.java"
            ],
            "functions": [],
            "date": "2024-07-29"
        },
        {
            "commit_id": 1588,
            "hash": "fd903ce169dc6094c0386fc6ecf85f35c38fb0f5",
            "commit_summary": "Typo - DigestUtils.crypt does not exist [skip ci]",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java"
            ],
            "functions": [],
            "date": "2024-07-30"
        },
        {
            "commit_id": 1589,
            "hash": "aaef8c591276a4eb8be871e6ff1fdab3564930f3",
            "commit_summary": "Document protection needs [skip ci]",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/B64.java"
            ],
            "functions": [],
            "date": "2024-07-30"
        },
        {
            "commit_id": 1590,
            "hash": "c52d4daddb00ce45ecd7bb0ab2e34fab29569b67",
            "commit_summary": "Add some more tests",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/CryptTest.java"
            ],
            "functions": [
                {
                    "function name": "testCryptWithEmptySalt",
                    "function params": [],
                    "file name": "CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"
                },
                {
                    "function name": "testBadType",
                    "function params": [],
                    "file name": "CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.CryptTest.testBadType"
                },
                {
                    "function name": "testType",
                    "function params": [],
                    "file name": "CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.CryptTest.testType"
                },
                {
                    "function name": "testSamples",
                    "function params": [],
                    "file name": "CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.CryptTest.testSamples"
                },
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.CryptTest.main"
                },
                {
                    "function name": "testBadSalt",
                    "function params": [],
                    "file name": "CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.CryptTest.testBadSalt"
                },
                {
                    "function name": "testStored",
                    "function params": [],
                    "file name": "CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.CryptTest.testStored"
                },
                {
                    "function name": "startsWith",
                    "function params": [
                        "string",
                        "prefix"
                    ],
                    "file name": "CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.CryptTest.startsWith"
                }
            ],
            "date": "2024-07-30"
        },
        {
            "commit_id": 1591,
            "hash": "8862fb3ca57e0fa9e86be0b56aa7eba5e121f33c",
            "commit_summary": "Typo [skip ci]",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Crypt.java"
            ],
            "functions": [],
            "date": "2024-07-30"
        },
        {
            "commit_id": 1592,
            "hash": "97b7e5d170f494ecbc5861f2f0df8925db3831b2",
            "commit_summary": "Style police",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/CryptTest.java"
            ],
            "functions": [
                {
                    "function name": "startsWith",
                    "function params": [
                        "string",
                        "prefix"
                    ],
                    "file name": "CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.CryptTest.startsWith"
                },
                {
                    "function name": "testType",
                    "function params": [],
                    "file name": "CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.CryptTest.testType"
                }
            ],
            "date": "2024-07-30"
        },
        {
            "commit_id": 1593,
            "hash": "cd91956caf3aed9402b6a0c43affc3a7e8546661",
            "commit_summary": "Don't repeat the code in B64.getRandomSalt",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java"
            ],
            "functions": [
                {
                    "function name": "crypt",
                    "function params": [
                        "original",
                        "salt"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.crypt"
                }
            ],
            "date": "2024-07-30"
        },
        {
            "commit_id": 1594,
            "hash": "6175c99ee3055b3a87d9c51e59ab8be22a4c1cfc",
            "commit_summary": "Javadoc fixes [skip ci]",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Crypt.java"
            ],
            "functions": [],
            "date": "2024-07-30"
        },
        {
            "commit_id": 1595,
            "hash": "7cae886f2de60fabc37d36a1ddd09473c5aeaa46",
            "commit_summary": "Javadoc fix [skip ci]",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java"
            ],
            "functions": [],
            "date": "2024-07-30"
        },
        {
            "commit_id": 1596,
            "hash": "a6f7a5372ecb859d6a3a651e76507a4d354ecadd",
            "commit_summary": "Javadoc: Grammar",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [],
            "date": "2024-08-02"
        },
        {
            "commit_id": 1597,
            "hash": "83e80d714a58d5c49591d694d6bf030380f36fa9",
            "commit_summary": "Javadoc: Grammar",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/main/java/org/apache/commons/codec/digest/XXHash32.java",
                "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                "src/main/java/org/apache/commons/codec/language/Soundex.java"
            ],
            "functions": [
                {
                    "function name": "available",
                    "function params": [],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecInputStream.available"
                }
            ],
            "date": "2024-08-02"
        },
        {
            "commit_id": 1598,
            "hash": "007ddf13798a20fc6578f670c3bd057c39c6c179",
            "commit_summary": "Rewrite DaitchMokotoffSoundex.soundex(String) using String.join()",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java"
            ],
            "functions": [
                {
                    "function name": "soundex",
                    "function params": [
                        "source"
                    ],
                    "file name": "DaitchMokotoffSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex"
                }
            ],
            "date": "2024-08-03"
        },
        {
            "commit_id": 1599,
            "hash": "a3a36c53cca3453ab3ff8f510ca37d36355209fd",
            "commit_summary": "Fix typos in comments",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java"
            ],
            "functions": [],
            "date": "2024-08-21"
        },
        {
            "commit_id": 1600,
            "hash": "44a317ea0b319190264b20fec612f6c2da6223f3",
            "commit_summary": "Use final",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/CryptTest.java"
            ],
            "functions": [
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.CryptTest.main"
                },
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.CryptTest.main"
                },
                {
                    "function name": "startsWith",
                    "function params": [
                        "string",
                        "prefix"
                    ],
                    "file name": "CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.CryptTest.startsWith"
                },
                {
                    "function name": "startsWith",
                    "function params": [
                        "string",
                        "prefix"
                    ],
                    "file name": "CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.CryptTest.startsWith"
                }
            ],
            "date": "2024-09-11"
        },
        {
            "commit_id": 1601,
            "hash": "babe1807cfc2fbb7c69bc146d33672db7d9eb30c",
            "commit_summary": "Remove redundant keyword",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java"
            ],
            "functions": [
                {
                    "function name": "doubleMetaphone",
                    "function params": [
                        "value",
                        "alternate"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone"
                }
            ],
            "date": "2024-09-11"
        },
        {
            "commit_id": 1602,
            "hash": "54431b0a0d5dc4d5032ebc0409008f8f88420eac",
            "commit_summary": "Javadoc",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java"
            ],
            "functions": [],
            "date": "2024-10-11"
        },
        {
            "commit_id": 1603,
            "hash": "2160eaa3403aa3ebce4d82c95368b96c39d9c24d",
            "commit_summary": "Javadoc: Fix typo.",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java"
            ],
            "functions": [],
            "date": "2024-10-19"
        },
        {
            "commit_id": 1604,
            "hash": "ffbabba277653100dc08f4733c9e264f23561dfc",
            "commit_summary": "Javadoc: Fix format nit",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [],
            "date": "2024-11-11"
        },
        {
            "commit_id": 1605,
            "hash": "44373279e1c3a29f1448abe17c0b993bc3cf88d8",
            "commit_summary": "Javadoc: Use semantic tag <strong> instead of style tag <b>",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                "src/main/java/org/apache/commons/codec/language/Soundex.java",
                "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEnginePerformanceTest.java"
            ],
            "functions": [],
            "date": "2024-11-15"
        },
        {
            "commit_id": 1606,
            "hash": "914807a40afc1519a9e3a1fcd8e35b77e0ad273b",
            "commit_summary": "No need for blank Javadoc lines between Javadoc @ tags",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base16.java",
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java",
                "src/main/java/org/apache/commons/codec/language/Soundex.java",
                "src/main/java/org/apache/commons/codec/net/BCodec.java",
                "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                "src/main/java/org/apache/commons/codec/net/Utils.java",
                "src/test/java/org/apache/commons/codec/binary/BaseNTestData.java"
            ],
            "functions": [],
            "date": "2024-11-28"
        },
        {
            "commit_id": 1607,
            "hash": "f4401a3111124896d1edd56bcb2d1a28a85e37e8",
            "commit_summary": "Normalize spelling\n\nNote that \"UNIX\" is a trademark, \"Unix\" is not",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java"
            ],
            "functions": [],
            "date": "2024-12-06"
        },
        {
            "commit_id": 1608,
            "hash": "4b5ea318b86910cd5fd2677c5f923c6eaa8d3fd0",
            "commit_summary": "Normalize spelling\n\nNote that \"UNIX\" is a trademark, \"Unix\" is not",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java"
            ],
            "functions": [],
            "date": "2024-12-06"
        }
    ]
}