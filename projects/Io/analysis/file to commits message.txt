{
    "files": {
        "src/java/org/apache/commons/io/FileUtils.java": {
            "message": [
                "Updated build file.\nSniped from alexandria's FileUtils.\nAdded FileUtils test case.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140289 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Code formatting.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140290 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Added a simple mkdir() function.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140291 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Should be static :)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140292 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Patch by Youngho Cho <youngho@nannet.co.kr> to clarify the type of\nexception thrown by the fileRead(String) class method.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140296 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Added fileCopy method\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140298 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "FileUtil moved into FileUtils. Oddly enough no methods clash in name.\nHowever there is a lot of clash of functionality, so methods need to be\nconsidered and removed.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140314 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Removed deprecated mispelt method.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140318 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Corrected compilation errors reported by today's GUMP run which were\ncaused by a few references to Avalon Excalibur's IO FileUtil class\n(introduced during recent addition of its functionality).\n\nNothing but goodness can come from the merger of these two classes;\nhopefully Avalon will eventually adopt Commons IO's FileUtils,\nwrapping their old interface around this class (and possibly\ndeprecating it).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140319 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "IOUtil to IOUtils and EndianUtil to EndianUtils.\nFix references so dependant classes reference *Utils\nSubmitted by: Matthew Hawthorne <mhawthorne@alumni.pitt.edu>\n\nDeprecate IOUtil and EndianUtil.\nFix some of the license headers (more to do)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140365 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Javadocs\nRewrite some methods to leverage off methods from IOUtils.\nAdded some TODO items (methods not making sense...)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140377 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Remove private constructors because of problems with Velocity which needs an instance (Christoph Reck)\nsome todos.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140380 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Bugzilla 22075: Copy copy methods from IOUtils to CopyUtils, deprecate old copy methods.\nBugzilla 22332: Deprecated FileUtils string methods, Code style-up\nSubmitted by: Matthew Hawthorne <mhawthorne at alumni.pitt.edu>\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140382 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Bugzilla #22738 from yours truly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140394 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "I've moved some methods around while cleaning up, so, sorry for the big diff. I moved up the methods I checked through. There's a marker in the lower half of the file indicating where I progressed. Everything below that marker still has to be sorted out. I consider the stuff above that marker cleaned up and reviewed to a certain degree.\n\nReal changes are:\n- new method: touch(File)\n- some method signatures rewritten to use java.io.File instead of String, because it's this class' policy. This might break dependant projects.\n- updated some javadocs\n- Removed getFilesFromExtension (this method wants to do too much). This might break dependant projects.\n- Replacement for getFilesFromExtension, new method(s): listFiles which is implemented using the filefilter package. The CVS filter functionality of getFilesFromExtension can be achieved by using FileFilterUtils.makeCVSAware.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140405 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Now really delete getFilesFromExtension.\nUse one of the listFiles() (and optionally FileFilterUtils.makeCVSAware) instead\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140409 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "moved all filename methods out of FileUtils and into the new FilenameUtils class. Updated the unit tests, though one test in FileUtilsTest does a bit of Filename testing. Javadoc will need a bit of checking. Updated tasks.xml to reflect this.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140425 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "BugZilla #25742:\nChange listFiles so its behaviour matches the javadocs.\nFixes NPE when extension is null.\nSubmitted by: Ignat Skoryh <ignat.at.tiger.unisquad.com>\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140448 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Renamed shutdownXxx methods to closeQuietly(Xxx).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140449 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "made toSuffixes private as it is a helper method to another method\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140455 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "removed lots of finals\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140456 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Javadocs: Missing parameter description\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140467 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Made convertFileCollectionToFileArray static.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140472 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "added the classic should NOT be constructed warning\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140512 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "moved to licence 2.0\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140517 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Reestablish JDK 1.3 compatibility.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140540 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "File copy operations now preserve the file date by default. An additional copyFile variant enables to disable this feature.\nSuggested by: Craig Doremus <craig.at.maine.com> in Bugzilla #27615\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140542 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Bugzilla 28496\nFix for: org.apache.commons.io.FileUtils.copyFile shouldn't allow to copy a file on itself\nSubmitted by: dany rizzi <drizzi.at.largesys.it>\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140558 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Fixed a small javadoc mistake.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140562 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "moved javadoc about paths into FilenameUtils\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140580 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Bug #29821\nBugfix for FileUtils.touch(). An existings file was overwritten. With new testcase.\nSubmitted by:\tChristoffer Hammarstr\ufffdm <kreiger.at.linuxgods.com>\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140585 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "FileUtils.read/write byte array methods\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140588 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Bugfix for listFiles for directories where the current user has no rights.\n\nReestablish JDK 1.3 compatibility for touch().\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140589 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Add FileUtils.toFiles(urls)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140592 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Deprecate CopyUtils (reverting to v1.0)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140598 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Made a start on getting us Checkstyle clean. Fixed a few hundred gripes,\nbut there are still many, many more.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140614 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "switched TODO to @todo\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140630 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Handle encodings in URL to File conversion\nbug 32575, from Jason Madden\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@154517 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Add copyDirectory, and refactor copyFile\nbug 32944, from Ian Springer\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@154553 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Add methods to read a FIle/Stream/Reader by lines\nrfe 36214\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@233069 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@239230 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Javadoc\nbug 35675, from Nathan Beyer\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@239265 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Add javadoc\nbug 36317, from Martin Burger\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@240440 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Since tags and minor style changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@240470 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Improve javadoc for v1.1\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@289999 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Handle security restricted directories\nbug 36801, from Chris Eldredge\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@291765 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Add FileUtils.writeLines\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@292293 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "FileUtils.writeStringToFile() - Null encoding now uses the platform default\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@292296 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@293019 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "FileUtils.contentEquals(File,File)\nPerformance improved by adding length and file location checking\nfrom discussion at The Server Side\nhttp://www.theserverside.com/news/thread.tss?thread_id=37035\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@321245 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "FileUtils methods to provide iterators over directory contents\nrfe 38083, from Jim Harrington\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@360495 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Stylistic change only to make the whole file have one style\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@360497 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Update to 2006\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@360503 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Increase certainty that files are closed in case of error\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@366357 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Implement a LineIterator over the lines in a file or reader\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@366364 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "New FileUtils method to copy a directory to within another directory\nrfe 36315\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@369070 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Improve javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@383221 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Cleaned up LineIterator changes include:\n* Removed the IOIterator interface, it can be added back later when there is more than one\nIterator implementations with a close method.\n* Doesn't automatically close the Reader at EOF.\n* made LineIterator final because the hasNext method isn't implemented in a subclassable way.\n* constructor throws an IllegaArgumentException, not a NPE when the argument is bogus.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@383730 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Further adjustments to javadoc/implementation of LineIterator\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@384037 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Remove unnecessary semicolon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@387337 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "IO-88 Add isFileOlder() methods to FileUtils (counterparts to existing isFileNewer() methods)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@425111 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Apply single license layout to all java files\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437680 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "IO-54 - Add FileUtils.checksum / FileUtils.checksumCRC32 to simplify calculating checksums\nfrom Emmanuel Bourg\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@438281 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "javadoc changes - mostly checkstyle\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@448799 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Remove unused import of UnsupportedEncodingException and modify javadoc references to that class to use fully qualified name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@462772 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Applied the fix suggested by Mirko Friedenhagen in #IO-100. This isn't something that it's easy to write a unit test for, but it is very easy to write a platform dependent test and show that the new code correctly throws an exception for '/etc/passwd'\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@482411 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "IO-100 - FileUtils.touch now throws an exception if it fails\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@482423 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Added a copyFileToDirectory(File, File, boolean) variant. No unit test as the lastModified checking part of the current tests is not being tested currently (it wasn't reliable). This is mentioned in #IO-104\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@484861 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "IO-104 - Add release notes for copyFileToDirectory(File, File, boolean)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@490831 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "IO-107 - Add FileUtils.openOutputStream, creating parent directories if required\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@490858 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "IO-107 - Use FileUtils.openOutputStream, thus creating parent directories if required\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@490867 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Add since tag\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@490992 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "IO-107 - Add FileUtils.openInputStream, with better error messages than the JDK\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@490997 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "IO-107 - Add FileUtils.openInputStream, with better error messages than the JDK\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@491001 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Added default encoding variants for 6 methods in FileUtils. See: #IO-108\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@491112 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Fix Javadoc warning - Tag @see: missing #: \"lineIterator(File, String)\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@491360 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Fix Javadoc warning - @param argument \"file\" is not a parameter name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@491361 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Javadoc: Fix ambiguous method references.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@491660 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Add missing Javadoc tags. Use \"null\" is code format (<code>null</code>)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@491668 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "[IO-112] NPE in FileUtils.openOutputStream(File) when file has no parent in path.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@503497 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "IO-113 points out that readFileToString(File) was not static. *hits self*\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@504659 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Fixing the @since to be 1.3.1 for the static readFileToString(File)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@507684 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "IO-147 - Deletion of orphaned Softlinks does not work - reported by Stefan Lischke, patch from Sebb\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@608338 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "IO-141 - Infinite loop on FileUtils.copyDirectory when the destination directory is within the source directory - reported by Mark Bryan Yu\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609147 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "IO-135 - Add convenience deleteQuietly to FileUtils - adapted from patch by Kevin Conaway\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609253 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "IO-135 - change deleteQuietly() to catch Exception rather than Throwable as per Stephen's comment on dev@:\n\"I think I would prefer catch(Exception) rather than catch(Throwable).Hiding an OutOfMemoryError (and similar) is generally a Bad Idea.\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609395 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "IO-105 - Add a FileUtils copyDirectory method that makes use of FileFilter\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609471 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "IO-77 add moveFile() and moveDirectory() methods to FileUtils - thanks to Nicolas de Loof for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609622 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "IO-77 improve error message\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609633 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "IO-77 - change moveDirectory/moveFile mehtods to throw IllegalArgumentException rather than NullPointerException - thanks to Holger Hoffst\u00e4tte\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609683 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Fix spelling allready -> already\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@610473 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Javadoc: Some methods were not using the active voices (e.g. \"Moves...\" instead of \"Move...\") in the first sentence of the Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@610485 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "IO-77 revert to throwing NullPointerException rather than IllegalArgumentException\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@610810 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "IO-140 JDK 1.5 changes: Use generics\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619103 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "IO-155 Use nio to copy files - based on a patch from Nicolas de Loof\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619156 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "IO-140 JDK 1.5 changes: Add new CharSequence flavours of methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619188 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Generify remaining raw types in the public API\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@634474 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "IO-163 Change FileUtils.toURLs() to use File.toURI().toURL() rather than File.toURL() - thanks to Alex Miller for the suggestion\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@647000 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "IO-157 FileUtils - Return target File from copyFileToDirectory() - thanks to Kenny MacLeod\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@661658 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Fix IO-168 Symbolic links (symlinks) followed when deleting directory - reported by Apostolos Lerios, thanks to Attila Szegedi for the solution and Brydie McCoy for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@684715 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Fix IO-168 Add symlink check to deleteDirectoryOnExit() method as well\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@684716 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Javadoc changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@684725 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Fix fir IO-175 IOUtils.doCopyFile() issues with very large files and closing file input streams - thanks to David Sitsky\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@723199 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "IO-191 - Possible improvements using static analysis - patch from Peter Lawrey\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@736890 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "IO-157 revert as this breaks binary compatibility with previous releases\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@744725 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "IO-231 FileUtils generate wrong exception message in isFileNewer method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919101 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "IO-226 - document rounding behaviour\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919253 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "IO-207 Race condition in forceMkdir\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919263 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "IO-205 FileUtils.forceMkdir Javadoc is unclear\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919265 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "IO-157 FileUtils - Return target File from copyFileToDirectory() - thanks to Kenny MacLeod\n(Reapplied)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919684 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "Revert r919684 - not binary compatible\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919995 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "IO-219 - Throw FileExistsException when moving a file or directory if the destination already exists\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@982433 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "IO-234 Add Methods For Retrieving System Directories/Paths to FileUtils - thanks to Michael Wooten for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@982449 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "IO-208 Add timeout (connection and read) support for FileUtils.copyURLToFile - thanks to Oliver Siegmar for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@995076 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "javadoc correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@995080 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "IO-215 Improve documentation regarding preserving the last modified date\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@995431 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "IO-215 Clarify that file modification failure is not reported\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@995532 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "IO-238 Add sizeOf(File) Method to FileUtils - thanks to Michael Wooten for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002367 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "IO-168 Always return false from isSymlink() for windows\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002416 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "IO-217 FileUtils.copyDirectoryToDirectory makes infinite loops - thanks to Roun Lee for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002424 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "IO-166 Fix URL decoding in FileUtils.toFile() - thanks to Benjamin Bentmann for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002457 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "IO-190 FileUtils copyDirectory preserves destination subdirectories, rather than overwriting with the source subdirectories - thanks to Jukka for the pacth\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002796 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "IO-229 use new FileFilterUtils.and() and FileFilterUtils.or() varargs methods \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002869 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java",
                "@since Commons IO 2.0 tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003647 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileUtils.java"
            ]
        },
        "src/test/org/apache/commons/io/IOTestCase.java": {
            "message": [
                "Updated build file.\nSniped from alexandria's FileUtils.\nAdded FileUtils test case.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140289 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOTestCase.java",
                "Code formatting.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140290 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOTestCase.java"
            ]
        },
        "src/java/org/apache/commons/io/LockableFileWriter.java": {
            "message": [
                "Code formatting.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140290 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/LockableFileWriter.java"
            ]
        },
        "src/java/org/apache/commons/io/StreamUtils.java": {
            "message": [
                "Code formatting.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140290 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/StreamUtils.java"
            ]
        },
        "src/examples/org/apache/commons/io/bzip2/Bzip2Compress.java": {
            "message": [
                "Fixed compilation and old import.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140306 13f79535-47bb-0310-9956-ffa450edef68 src/examples/org/apache/commons/io/bzip2/Bzip2Compress.java"
            ]
        },
        "src/examples/org/apache/commons/io/bzip2/Bzip2Uncompress.java": {
            "message": [
                "Fixed compilation and old import.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140306 13f79535-47bb-0310-9956-ffa450edef68 src/examples/org/apache/commons/io/bzip2/Bzip2Uncompress.java"
            ]
        },
        "src/test/org/apache/commons/io/DemuxTestCase.java": {
            "message": [
                "Make testcases compile.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140308 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/DemuxTestCase.java",
                "More tests added to FileFilter, Demux fixed to use right package names.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140332 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/DemuxTestCase.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/DemuxTestCase.java",
                "Use Commons IO ByteArrayOutputStream\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140404 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/DemuxTestCase.java",
                "removed finals from test code\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140459 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/DemuxTestCase.java",
                "Reapply final modifier for static constants.\nRemoved unused imports.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140471 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/DemuxTestCase.java",
                "moved to v2.0 of the licence\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140523 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/DemuxTestCase.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/DemuxTestCase.java",
                "Apply single license layout to all java files\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437680 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/DemuxTestCase.java",
                "Remove unused imports and organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@606381 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/DemuxTestCase.java",
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/DemuxTestCase.java",
                "Fix up some raw types and unthrown Exceptions\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@806007 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/DemuxTestCase.java",
                "Make private static field final\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919236 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/DemuxTestCase.java"
            ]
        },
        "src/test/org/apache/commons/io/FileUtilTestCase.java": {
            "message": [
                "Make testcases compile.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140308 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilTestCase.java",
                "Code changed so it compiles. Tests don't pass, but its a step anyway.\nProblems are probably all caused by my slow-refactoring.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140322 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilTestCase.java",
                "IOTestCase folded into FileUtilTestCase as it dealt with FileUtils.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140327 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilTestCase.java"
            ]
        },
        "src/test/org/apache/commons/io/IOUtilTestCase.java": {
            "message": [
                "Make testcases compile.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140308 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilTestCase.java",
                "Code changed so it compiles. Tests don't pass, but its a step anyway.\nProblems are probably all caused by my slow-refactoring.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140322 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilTestCase.java",
                "Test number of bytes returned by copy() methods.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140359 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilTestCase.java",
                "IOUtil to IOUtils and EndianUtil to EndianUtils.\nFix references so dependant classes reference *Utils\nSubmitted by: Matthew Hawthorne <mhawthorne@alumni.pitt.edu>\n\nDeprecate IOUtil and EndianUtil.\nFix some of the license headers (more to do)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140365 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilTestCase.java"
            ]
        },
        "src/test/org/apache/commons/io/compress/bzip2/BzipTestCase.java": {
            "message": [
                "Make testcases compile.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140308 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/compress/bzip2/BzipTestCase.java",
                "Make testcases compile run, even if some still fail :-/\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140310 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/compress/bzip2/BzipTestCase.java"
            ]
        },
        "src/test/org/apache/commons/io/compress/tar/TarTestCase.java": {
            "message": [
                "Make testcases compile.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140308 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/compress/tar/TarTestCase.java",
                "Make testcases compile run, even if some still fail :-/\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140310 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/compress/tar/TarTestCase.java"
            ]
        },
        "src/test/org/apache/commons/io/compress/zip/AsiExtraFieldTestCase.java": {
            "message": [
                "Make testcases compile.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140308 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/compress/zip/AsiExtraFieldTestCase.java"
            ]
        },
        "src/test/org/apache/commons/io/compress/zip/ExtraFieldUtilsTestCase.java": {
            "message": [
                "Make testcases compile.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140308 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/compress/zip/ExtraFieldUtilsTestCase.java"
            ]
        },
        "src/test/org/apache/commons/io/compress/zip/ZipEntryTestCase.java": {
            "message": [
                "Make testcases compile.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140308 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/compress/zip/ZipEntryTestCase.java"
            ]
        },
        "src/test/org/apache/commons/io/compress/zip/ZipLongTestCase.java": {
            "message": [
                "Make testcases compile.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140308 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/compress/zip/ZipLongTestCase.java"
            ]
        },
        "src/test/org/apache/commons/io/compress/zip/ZipShortTestCase.java": {
            "message": [
                "Make testcases compile.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140308 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/compress/zip/ZipShortTestCase.java"
            ]
        },
        "src/test/org/apache/commons/io/compress/tar/TarTestSuite.java": {
            "message": [
                "Fixed package.\nAn this is the last fix.\nMove finished :-)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140312 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/compress/tar/TarTestSuite.java"
            ]
        },
        "src/java/org/apache/commons/io/compress/bzip2/BZip2Constants.java": {
            "message": [
                "Added long license.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140313 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/compress/bzip2/BZip2Constants.java"
            ]
        },
        "src/java/org/apache/commons/io/compress/bzip2/CBZip2InputStream.java": {
            "message": [
                "Added long license.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140313 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/compress/bzip2/CBZip2InputStream.java"
            ]
        },
        "src/java/org/apache/commons/io/compress/bzip2/CBZip2OutputStream.java": {
            "message": [
                "Added long license.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140313 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/compress/bzip2/CBZip2OutputStream.java"
            ]
        },
        "src/java/org/apache/commons/io/compress/bzip2/CRC.java": {
            "message": [
                "Added long license.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140313 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/compress/bzip2/CRC.java"
            ]
        },
        "src/java/org/apache/commons/io/compress/tar/TarBuffer.java": {
            "message": [
                "Added long license.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140313 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/compress/tar/TarBuffer.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/compress/tar/TarBuffer.java"
            ]
        },
        "src/java/org/apache/commons/io/compress/tar/TarConstants.java": {
            "message": [
                "Added long license.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140313 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/compress/tar/TarConstants.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/compress/tar/TarConstants.java"
            ]
        },
        "src/java/org/apache/commons/io/compress/tar/TarEntry.java": {
            "message": [
                "Added long license.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140313 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/compress/tar/TarEntry.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/compress/tar/TarEntry.java"
            ]
        },
        "src/java/org/apache/commons/io/compress/tar/TarInputStream.java": {
            "message": [
                "Added long license.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140313 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/compress/tar/TarInputStream.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/compress/tar/TarInputStream.java"
            ]
        },
        "src/java/org/apache/commons/io/compress/tar/TarOutputStream.java": {
            "message": [
                "Added long license.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140313 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/compress/tar/TarOutputStream.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/compress/tar/TarOutputStream.java"
            ]
        },
        "src/java/org/apache/commons/io/compress/tar/TarUtils.java": {
            "message": [
                "Added long license.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140313 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/compress/tar/TarUtils.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/compress/tar/TarUtils.java"
            ]
        },
        "src/java/org/apache/commons/io/compress/zip/AsiExtraField.java": {
            "message": [
                "Added long license.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140313 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/compress/zip/AsiExtraField.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/compress/zip/AsiExtraField.java"
            ]
        },
        "src/java/org/apache/commons/io/compress/zip/ExtraFieldUtils.java": {
            "message": [
                "Added long license.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140313 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/compress/zip/ExtraFieldUtils.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/compress/zip/ExtraFieldUtils.java"
            ]
        },
        "src/java/org/apache/commons/io/compress/zip/UnixStat.java": {
            "message": [
                "Added long license.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140313 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/compress/zip/UnixStat.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/compress/zip/UnixStat.java"
            ]
        },
        "src/java/org/apache/commons/io/compress/zip/UnrecognizedExtraField.java": {
            "message": [
                "Added long license.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140313 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/compress/zip/UnrecognizedExtraField.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/compress/zip/UnrecognizedExtraField.java"
            ]
        },
        "src/java/org/apache/commons/io/compress/zip/ZipEntry.java": {
            "message": [
                "Added long license.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140313 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/compress/zip/ZipEntry.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/compress/zip/ZipEntry.java"
            ]
        },
        "src/java/org/apache/commons/io/compress/zip/ZipExtraField.java": {
            "message": [
                "Added long license.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140313 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/compress/zip/ZipExtraField.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/compress/zip/ZipExtraField.java"
            ]
        },
        "src/java/org/apache/commons/io/compress/zip/ZipLong.java": {
            "message": [
                "Added long license.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140313 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/compress/zip/ZipLong.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/compress/zip/ZipLong.java"
            ]
        },
        "src/java/org/apache/commons/io/compress/zip/ZipOutputStream.java": {
            "message": [
                "Added long license.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140313 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/compress/zip/ZipOutputStream.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/compress/zip/ZipOutputStream.java"
            ]
        },
        "src/java/org/apache/commons/io/compress/zip/ZipShort.java": {
            "message": [
                "Added long license.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140313 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/compress/zip/ZipShort.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/compress/zip/ZipShort.java"
            ]
        },
        "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java": {
            "message": [
                "Added licence.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140316 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "Oops. Now the licence without FileUtils :)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140317 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "Now FileFilter's are Predicates. Thus new classes.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140333 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "Refactor filefilter directory to remove dependency on lang\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140357 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "Correct license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140371 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "removed lots of finals\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140457 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "moved to licence 2.0\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140517 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "Let java.io.File join the directory and the filename for us.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140615 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@155419 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "Removing my @author tag\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@471628 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "IO-120 Improve file filter toString() methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@539231 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "Use Class getSimpleName()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@736891 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java"
            ]
        },
        "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java": {
            "message": [
                "Added licence.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140316 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "Oops. Now the licence without FileUtils :)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140317 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "Now FileFilter's are Predicates. Thus new classes.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140333 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "Refactor filefilter directory to remove dependency on lang\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140357 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "Correct license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140371 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "moved to licence 2.0\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140517 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@155419 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "Removing my @author tag\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@471628 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "IO-120 Improve file filter toString() methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@539231 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "IO-131 Implement java.io.Serializable in IOFileFilter implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@587916 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "IO-133 - Make fields final so classes are immutable/threadsafe - thanks to Sebb for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@591058 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java"
            ]
        },
        "src/java/org/apache/commons/io/filefilter/FileFilter.java": {
            "message": [
                "Added licence.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140316 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FileFilter.java",
                "Oops. Now the licence without FileUtils :)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140317 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FileFilter.java",
                "Now FileFilter's are Predicates. Thus new classes.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140333 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FileFilter.java"
            ]
        },
        "src/java/org/apache/commons/io/filefilter/NullFileFilter.java": {
            "message": [
                "Added licence.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140316 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                "Oops. Now the licence without FileUtils :)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140317 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/NullFileFilter.java"
            ]
        },
        "src/java/org/apache/commons/io/CountingOutputStream.java": {
            "message": [
                "Count an InputStream too. Typo fixed in OutputStream.\n\nNeed to decide how much to increase a count by when an int is read or written.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140321 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/CountingOutputStream.java"
            ]
        },
        "src/test/org/apache/commons/io/IOTestSuite.java": {
            "message": [
                "More tests added to FileFilter, Demux fixed to use right package names.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140332 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOTestSuite.java",
                "Added three tests.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140346 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOTestSuite.java",
                "IOUtil to IOUtils and EndianUtil to EndianUtils.\nFix references so dependant classes reference *Utils\nSubmitted by: Matthew Hawthorne <mhawthorne@alumni.pitt.edu>\n\nDeprecate IOUtil and EndianUtil.\nFix some of the license headers (more to do)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140365 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOTestSuite.java",
                "Renamed IOUtilTestCase to IOUtilsTestCase.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140370 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOTestSuite.java",
                "Bugzilla 22075: Copy copy methods from IOUtils to CopyUtils, deprecate old copy methods.\nBugzilla 22332: Deprecated FileUtils string methods, Code style-up\nSubmitted by: Matthew Hawthorne <mhawthorne at alumni.pitt.edu>\n\nTestcases (and infrastructure) modified a bit by myself after applying Matthew's patches.\nCopyUtils testcases are done in memory now instead of using files.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140385 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOTestSuite.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOTestSuite.java",
                "removed finals from test code\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140459 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOTestSuite.java",
                "moved to v2.0 of the licence\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140523 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOTestSuite.java",
                "Add code from CopyUtils to IOUtils, refactoring to be simpler, clearer and more efficient\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140596 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOTestSuite.java"
            ]
        },
        "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java": {
            "message": [
                "More tests added to FileFilter, Demux fixed to use right package names.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140332 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Make the test compile against the current code\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140338 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Removed examples/ logic from build.xml in the hope gump will build.\nAdded some more tests to the FileFilter tests.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140345 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "fixed FileFilterTestCase, was not running due to a few NPEs and faulty test cases\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140348 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "oops, file filter test case, directory-filter tests for non-existent directory 'test' now fixed\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140349 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "TTesting the DirectoryFileFilter against a \"non-existent\" directory\nof the name \"test\" was causing problems due to the fact that another\nTestCase for FileUtils was creating this directory.  On Linux, this\ndirectory was being created and deleted, on Windows this directory\nwas being created but not deleted.  Hence, this test case was failing\non Windows machines and not on Linux machine.  To remedy the situation\nthe test now checks for a directory named \"imaginary\" which does not\nexist.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140350 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Refactor filefilter directory to remove dependency on lang\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140357 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Correct license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140371 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "More tests (especially the bug I just fixed in PrefixFileFilter and the new NameFileFilter)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140402 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "added a set of tests for when NameFileFilter is created with a List\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140413 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "removed finals from test code\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140459 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "moved to v2.0 of the licence\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140523 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "WildcardFilter (Bugzilla #31115)\n\nSubmitted by:\tJason Anderson\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140604 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Fix bug in makeCVSAware that rendered the method useless\nbug 33023, from Masato Tezuka\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@153623 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Added a FileFilterUtils.makeSVNAware() taking the makeCVSAware() as a template.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@201606 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Increased test coverage for file filter tests, and also fixed some nits in CountingInputStreamTest.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@201764 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Handle null List constructor more gracefully\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@232900 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Add AgeFileFilter and SizeFileFilter\nrfe 36824, from Rahul Akolkar\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@360504 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Fix tests to handle last modified date behaviour on Win2k\nbug 38130, from Niall Pemberton\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@369049 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Allow one second to avoid test failures\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@383224 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "spin(long) with a Thread.sleep to idle the cpu\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@383450 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Comment on the expected working dir for a test.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@383452 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Test and fix case sensitive wildcard filter\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@418641 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Add case sensitivity support to NameFileFilter\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@418643 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "IO-85  IOFileFilter implementations for File.canRead(), File.canWrite(), File.isHidden() and empty files/directories\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@424601 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Add FileFileFilter that accepts files and not directories\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@424742 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "TrueFileFilter/FalseFileFilter/DirectoryFileFilter new constants\n  - New singleton instance constants (TRUE/FALSE/DIRECTORY)\n  - The new constants are more JDK 1.5 friendly with regards to static imports\n    (whereas if everything uses INSTANCE, then they just clash)\n  - The old INSTANCE constants are still present and have not been deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@424745 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "IO-87 - Provide a convenience mehod in FileFilterUtils to create a Size Range filter\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@424885 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "IO-87 - change parameter names and javadoc to make it more explicit that the maximum/minimum values are inclusive. Also rename method to indicate its a \"range\" filter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@425240 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Fixing the failed tests on the vmbuild machine. Rather than trying to pause for a second and hoping that means the file's will have different timestamps - the new code just sits and creates the new file repeatedly until it has a different timestamp. A pause of a second means that repeatedly should usually be a very small number of times - such as one. Also changed the code so the long millisecond variable is the date's getTime method and not a different time all together. The previous one irritated my sense of aesthetics :)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@433162 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Apply single license layout to all java files\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437680 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "FileFilterUtils.makeDirectoryOnly/makeFileOnly\n- two new methods that decorate a file filter to make it apply to directories only or files only\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@463940 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "For some reason, the directory \".svn\" is NOT hidden on my machine. Makes hidden filter tests take this into account.\n(Microsoft Windows XP [Version 5.1.2600] SP2 + current patches)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@484839 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Use LICENSE.txt instead of STATUS.html in file/directory filter tests (STATUS.html isn't in the source distro created by the ant build)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@493980 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "IO-126 Add facility to specify case sensitivity for prefix and suffix file filters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@584162 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "IO-74 - add new Regular Expression file IOFileFilter implementation - thanks to Oliver Siegmar for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@584263 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "IO-74 Refactor RegexFilter - add ability to construct instances with either pattern flags or case sensitivity. Also simplify by removing the array/list of String patterns constructors since adding all variants with flags/case sensitivity would be cumbersome and also the logic is limited to \"OR\" and some users may want \"AND\" - AND/OR logic can be achieved by combining RegexFilter instances using the AndFileFilter and OrFileFilter implementations.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@584278 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Add messages to IllegalArgumentExceptions, add tests for thrown expections\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@584302 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "IO-74 Rename RegexFilter to RegexFileFilter to conform to the naming convention of other implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@584359 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "IO-127 - add ant build script to check JDK 1.3 compatibility and remove references to JDK 1.4 dependant class from FileFilterUtils\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@584823 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "IO-127 - Changes so that the tests run on JDK 1.3 using the Ant build:\n- Remove RegexFileFilter tests from FileFilterTestCase and put them in a new separate test case (RegexFileFilterTestCase)\n- Remove the other JDK 1.4 dependant classes from the package test suites\n- change the Ant build to conditionally compile and run the tests based on whether Java version is JDK 1.3 or higher\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@612686 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Remove tabs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@658831 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Fix up some raw types and unthrown Exceptions\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@806007 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "project.xml has been deleted; replace with pom.xml in test cases\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@896984 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Tidy up tests:\n- remove suite() and main() methods\n- Deleted package test classes and All test classes\n- Allow Ant build to run a single test; default to all\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919474 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "IO-210 Create MagicNumberFileFilter\nApplied patch, with following fixes:\n- remove additional null checks in FileFilterUtils static methods; leave the checks to the ctors\n- close RandomAcessFile in MagicNumberFileFilter.accept()\n- close streams in test cases\n- Javadoc fix (wrap < in {@code})\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919682 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "assertTrue(actual==expected) => assertEquals(expected, actual)\nGives more info in failure cases\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@934112 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "IO-232 Add Case Sensitive Creation Methods to FileFilterUtils - thanks to Michael Wooten for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@982447 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "IO-229 FileFilterUtils - add varargs methods for AndFileFilter and OrFileFilter - thanks to Michael Wooten\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002394 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "IO-198 FileFilterUtils - add ability to apply file filters to collections and arrays - thanks to Michael Wooten for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002454 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Fix test javadoc warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003659 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Replace use of deprecated methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003661 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Fix some issues identified by FindBugs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004077 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ]
        },
        "src/java/org/apache/commons/io/IOUtil.java": {
            "message": [
                "StreamUtils is redundant, all the functionality is in IOUtils.\nProxyStreams are needed as FilterStream's are not 'honest' about\ncalling the same method that was called upon themselves. I find this\na pain to code to.\nCountingOutput/TeeOutput both changed to be Proxy's.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140335 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtil.java",
                "Javadocs\nthe most important copy() methods now return the number of bytes copied.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140358 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtil.java",
                "IOUtil to IOUtils and EndianUtil to EndianUtils.\nFix references so dependant classes reference *Utils\nSubmitted by: Matthew Hawthorne <mhawthorne@alumni.pitt.edu>\n\nDeprecate IOUtil and EndianUtil.\nFix some of the license headers (more to do)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140365 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtil.java"
            ]
        },
        "src/java/org/apache/commons/io/output/CountingOutputStream.java": {
            "message": [
                "StreamUtils is redundant, all the functionality is in IOUtils.\nProxyStreams are needed as FilterStream's are not 'honest' about\ncalling the same method that was called upon themselves. I find this\na pain to code to.\nCountingOutput/TeeOutput both changed to be Proxy's.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140335 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/CountingOutputStream.java",
                "Correct license\nJavadocs\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140375 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/CountingOutputStream.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/CountingOutputStream.java",
                "moved to licence 2.0\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140517 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/CountingOutputStream.java",
                "reset feature added to counting classes as requested by Lars Beuster\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140583 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/CountingOutputStream.java",
                "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@155419 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/CountingOutputStream.java",
                "now deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@421532 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/CountingOutputStream.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/CountingOutputStream.java",
                "Undeprecating - I deprecated these classes by mistake and not the ones in the source library that they came from\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@454182 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/CountingOutputStream.java",
                "Fix for IO-84 - Files over 2GB will result in an incorrect count being returned by the getCount() and resetCount() methods (as they return an integer). These methods have been deprecated and new getByteCount() and resetByteCount() methods have been added which return a long.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@454217 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/CountingOutputStream.java",
                "Javadoc, checkstyle and since tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@462807 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/CountingOutputStream.java",
                "IO-84 - Change int methods from deprecated to exception throwng\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@462818 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/CountingOutputStream.java",
                "javadoc only\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@463536 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/CountingOutputStream.java",
                "Removing my @author tag\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@471628 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/CountingOutputStream.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/CountingOutputStream.java",
                "IO-191 - Possible improvements using static analysis - patch from Peter Lawrey\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@736890 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/CountingOutputStream.java",
                "IO-211: Pre- and post-processing support for proxied streams\n\nCommitted the proposed patch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805151 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/CountingOutputStream.java",
                "Unused import\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805894 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/CountingOutputStream.java",
                "@since Commons IO 2.0 tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003647 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/CountingOutputStream.java",
                "IO-201 Fix inconsistent synchronization\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004079 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/CountingOutputStream.java"
            ]
        },
        "src/java/org/apache/commons/io/output/TeeOutputStream.java": {
            "message": [
                "StreamUtils is redundant, all the functionality is in IOUtils.\nProxyStreams are needed as FilterStream's are not 'honest' about\ncalling the same method that was called upon themselves. I find this\na pain to code to.\nCountingOutput/TeeOutput both changed to be Proxy's.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140335 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/TeeOutputStream.java",
                "Correct license\nJavadocs\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140375 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/TeeOutputStream.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/TeeOutputStream.java",
                "moved to licence 2.0\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140517 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/TeeOutputStream.java",
                "added a bit of javadoc\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140520 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/TeeOutputStream.java",
                "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@155419 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/TeeOutputStream.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/TeeOutputStream.java",
                "Removing my @author tag\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@471628 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/TeeOutputStream.java",
                "Checkstyle/javadoc only - @see no longer works since checkstyle 4 - see http://tinyurl.com/2x8cev\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@610010 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/TeeOutputStream.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/TeeOutputStream.java"
            ]
        },
        "src/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java": {
            "message": [
                "Refactor filefilter directory to remove dependency on lang\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140357 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "Correct license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140371 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "removed lots of finals\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140457 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "Reapply final modifier for static constants.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140465 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "moved to licence 2.0\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140517 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@155419 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "TrueFileFilter/FalseFileFilter/DirectoryFileFilter new constants\n  - New singleton instance constants (TRUE/FALSE/DIRECTORY)\n  - The new constants are more JDK 1.5 friendly with regards to static imports\n    (whereas if everything uses INSTANCE, then they just clash)\n  - The old INSTANCE constants are still present and have not been deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@424745 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "Apply single license layout to all java files\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437680 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "Removing my @author tag\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@471628 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "IO-131 Implement java.io.Serializable in IOFileFilter implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@587916 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java"
            ]
        },
        "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java": {
            "message": [
                "Refactor filefilter directory to remove dependency on lang\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140357 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Correct license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140371 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Javadoc\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140389 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Add the new name filter.\nAdd method to decorate a filter to become \"CVS-aware\", thus filtering out all CVS directories. This is driven by some functionality in FileUtils as I'm refactoring that class.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140399 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "fixed grammar\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140500 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "moved to licence 2.0\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140517 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Fix bug in makeCVSAware that rendered the method useless\nbug 33023, from Masato Tezuka\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@153623 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Added a FileFilterUtils.makeSVNAware() taking the makeCVSAware() as a template.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@201606 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Add AgeFileFilter and SizeFileFilter\nrfe 36824, from Rahul Akolkar\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@360504 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Fix checkstyle errors\nbug 38145, from Niall Pemberton\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@369075 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Add FileFileFilter that accepts files and not directories\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@424742 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "TrueFileFilter/FalseFileFilter/DirectoryFileFilter new constants\n  - New singleton instance constants (TRUE/FALSE/DIRECTORY)\n  - The new constants are more JDK 1.5 friendly with regards to static imports\n    (whereas if everything uses INSTANCE, then they just clash)\n  - The old INSTANCE constants are still present and have not been deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@424745 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "IO-87 - Provide a convenience mehod in FileFilterUtils to create a Size Range filter\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@424885 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "IO-87 - change parameter names and javadoc to make it more explicit that the maximum/minimum values are inclusive. Also rename method to indicate its a \"range\" filter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@425240 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "FileFilterUtils.makeDirectoryOnly/makeFileOnly\n- two new methods that decorate a file filter to make it apply to directories only or files only\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@463940 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Javadoc and Group filter decoration methods together in the source file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@463941 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Removing my @author tag\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@471628 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "IO-74 Refactor RegexFilter - add ability to construct instances with either pattern flags or case sensitivity. Also simplify by removing the array/list of String patterns constructors since adding all variants with flags/case sensitivity would be cumbersome and also the logic is limited to \"OR\" and some users may want \"AND\" - AND/OR logic can be achieved by combining RegexFilter instances using the AndFileFilter and OrFileFilter implementations.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@584278 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "IO-74 Rename RegexFilter to RegexFileFilter to conform to the naming convention of other implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@584359 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "IO-127 - add ant build script to check JDK 1.3 compatibility and remove references to JDK 1.4 dependant class from FileFilterUtils\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@584823 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Remove unused import org.apache.commons.io.IOCase\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@590151 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Style fix - Unify @since tag format\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609286 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "IO-210 Create MagicNumberFileFilter\nApplied patch, with following fixes:\n- remove additional null checks in FileFilterUtils static methods; leave the checks to the ctors\n- close RandomAcessFile in MagicNumberFileFilter.accept()\n- close streams in test cases\n- Javadoc fix (wrap < in {@code})\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919682 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "IO-221 Add methods for suffix and prefix filters which take an IOCase object\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@982435 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "IO-240 ensure cvsFilter and svnFilter are only created once.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@982437 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "IO-232 Add Case Sensitive Creation Methods to FileFilterUtils - thanks to Michael Wooten for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@982447 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "IO-229 FileFilterUtils - add varargs methods for AndFileFilter and OrFileFilter - thanks to Michael Wooten\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002394 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "IO-198 FileFilterUtils - add ability to apply file filters to collections and arrays - thanks to Michael Wooten for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002454 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "@since Commons IO 2.0 tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003647 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Replace use of deprecated methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003661 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Missing annotations; extraneous semi-colon\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003685 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FileFilterUtils.java"
            ]
        },
        "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java": {
            "message": [
                "Refactor filefilter directory to remove dependency on lang\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140357 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "Correct license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140371 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "Javadoc\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140389 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "Bugfix for single prefix constructor (copy/paste-error)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140397 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "removed lots of finals\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140457 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "moved to licence 2.0\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140517 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@155419 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "Removing my @author tag\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@471628 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "IO-120 Improve file filter toString() methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@539231 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "IO-126 Add facility to specify case sensitivity for prefix and suffix file filters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@584162 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "IO-131 Implement java.io.Serializable in IOFileFilter implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@587916 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "IO-133 - Make fields final so classes are immutable/threadsafe - thanks to Sebb for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@591058 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "Remove unused imports and organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@606381 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "IO-140 JDK 1.5 changes: Use generics\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619103 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "IO-140 JDK 1.5 changes: Use StringBuilder (not-sync) instead of StringBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619112 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "IO-191 - Possible improvements using static analysis - patch from Peter Lawrey\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@736890 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "Fix some issues identified by FindBugs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004077 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java"
            ]
        },
        "src/java/org/apache/commons/io/EndianUtil.java": {
            "message": [
                "IOUtil to IOUtils and EndianUtil to EndianUtils.\nFix references so dependant classes reference *Utils\nSubmitted by: Matthew Hawthorne <mhawthorne@alumni.pitt.edu>\n\nDeprecate IOUtil and EndianUtil.\nFix some of the license headers (more to do)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140365 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/EndianUtil.java"
            ]
        },
        "src/java/org/apache/commons/io/input/SwappedDataInputStream.java": {
            "message": [
                "IOUtil to IOUtils and EndianUtil to EndianUtils.\nFix references so dependant classes reference *Utils\nSubmitted by: Matthew Hawthorne <mhawthorne@alumni.pitt.edu>\n\nDeprecate IOUtil and EndianUtil.\nFix some of the license headers (more to do)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140365 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                "Correct license\nJavadocs\nUse ProxyInputStream as base class to reduce code.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140372 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                "removed lots of finals\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140457 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                "removed last couple of finals\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140458 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                "moved to licence 2.0\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140517 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                "improved javadoc\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140521 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@155419 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                "Javadoc - unify paragraph tags to code readable style\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@424747 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                "Checkstyle/javadoc only - @see no longer works since checkstyle 4 - see http://tinyurl.com/2x8cev\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@610010 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                "IO-243 SwappedDataInputStream readBoolean is inverted - thanks to Ray Myers for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@995160 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/SwappedDataInputStream.java"
            ]
        },
        "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java": {
            "message": [
                "Removed unused import.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140366 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                "removed finals from test code\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140459 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                "Reapply final modifier for static constants.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140469 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                "moved to v2.0 of the licence\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140523 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                "Apply single license layout to all java files\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437680 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                "IO-97 - ByteArrayOutputStream performance enhancements, from Holger Hoffstatte\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@491007 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                "IO-152 - Add ByteArrayOutputStream.write(InputStream)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609421 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                "Fix up some raw types and unthrown Exceptions\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@806007 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java"
            ]
        },
        "src/java/org/apache/commons/io/IOUtils.java": {
            "message": [
                "Remove already deprecated method.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140367 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "Javadocs\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140378 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "Remove private constructors because of problems with Velocity which needs an instance (Christoph Reck)\nsome todos.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140380 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "Bugzilla 22075: Copy copy methods from IOUtils to CopyUtils, deprecate old copy methods.\nBugzilla 22332: Deprecated FileUtils string methods, Code style-up\nSubmitted by: Matthew Hawthorne <mhawthorne at alumni.pitt.edu>\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140382 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "Use Commons IO ByteArrayOutputStream\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140404 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "Renamed shutdownXxx methods to closeQuietly(Xxx).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140449 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "removed lots of finals\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140456 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "removed deprecated methods from IOUtils\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140460 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "Removed unused imports.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140468 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "Removed methods that take a bufferSize parameter.\nDiscussion:\nhttp://www.mail-archive.com/commons-dev@jakarta.apache.org/msg19703.html\nhttp://nagoya.apache.org/eyebrowse/BrowseList?listName=commons-dev@jakarta.apache.org&by=thread&from=572862\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140473 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "moved to licence 2.0\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140517 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "Javadoc rewritten in both these classes to match the refactoring that happened a while back.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140571 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "removed final from 2 Utils to fit the XxxUtils pattern\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140579 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "deprecated toByteArray\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140584 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "Add encoding specific methods, Javadoc, Reformat to standards\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140593 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "Deprecate methods not actually doing IO, Javadoc buffer behaviour\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140595 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "Add code from CopyUtils to IOUtils, refactoring to be simpler, clearer and more efficient\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140596 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "Add toCharArray()\nbug 28979, from Gareth Davis\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140600 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "Fix Javadoc warnings.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140612 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "Made a start on getting us Checkstyle clean. Fixed a few hundred gripes,\nbut there are still many, many more.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140614 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@155419 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "Add toInputStream(String) methods\nbug 32958, from Ian Springer \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@160345 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "Add methods to read a FIle/Stream/Reader by lines\nrfe 36214\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@233069 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "Since tags and minor style changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@240470 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "Fix since tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@241816 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "Add IOUtils.writeLines\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@279170 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "Improve javadoc for v1.1\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@289999 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "Implement a LineIterator over the lines in a file or reader\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@366364 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "Fix javadoc and method return type\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@383206 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "Improve javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@383221 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "Cleaned up LineIterator changes include:\n* Removed the IOIterator interface, it can be added back later when there is more than one\nIterator implementations with a close method.\n* Doesn't automatically close the Reader at EOF.\n* made LineIterator final because the hasNext method isn't implemented in a subclassable way.\n* constructor throws an IllegaArgumentException, not a NPE when the argument is bogus.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@383730 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "Further adjustments to javadoc/implementation of LineIterator\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@384037 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "Fix javadoc warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@385117 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "IO-84 - IOUtils.copy - Comment about result byte/char count being limited to an int, thus being inacurate for large streams\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@453893 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "IO-84 Modify copy() methods that return an int to throw an ArithmeticException if the returned size is too large for an int to handle. Add two new equivalent copyLarge() methods that return a long for large files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@463154 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "IO-84 - Make IOUtils.copy return -1 not an exception for large files, as more backwards compatible\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@481854 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "IO-140 JDK 1.5 changes: Use generics\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619103 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "IO-155 Use nio to copy files - based on a patch from Nicolas de Loof\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619156 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "IO-140 JDK 1.5 changes: Add new CharSequence flavours of methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619188 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "IO-140 JDK 1.5 changes: Switch from StringWriter to StringBuilderWriter\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619195 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "Remove unnecessary semicolon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619998 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "Use generics.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@620174 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "Revert revision 620174 see http://commons.markmail.org/message/ex5ndwgs7kfnp6cp\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@634470 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "Generify remaining raw types in the public API\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@634474 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "IO-137 Added method for getting InputStream from ByteArrayOutputStream & IOUtils avoiding unnecessary array allocation and copy - thanks to Nikunj Trivedi for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@723507 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "IO-191 - Possible improvements using static analysis - patch from Peter Lawrey\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@736890 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "Ensure Printwriter is closed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805996 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "IO-223 IOUtils.copy Javadoc inconsistency (return -1 vs. throw ArithmeticException)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@896739 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "IO-224 Add IOUTils.closeQuietly(Closeable) method - thanks to Sean Cote\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@897582 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "Add skipFully() methods for InputStream and Reader\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@920114 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "IO-203 - Add skipFully() method for InputStreams\nImplement our own skip() methods; rewrite skipFully() to use them\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@920483 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "IO-224 Add closeQuietly(Socket) to IOUtils\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@920497 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "IO-247 Add closeQuietly() examples to the javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@995152 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "@since Commons IO 2.0 tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003647 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "IO-224 Remove IOUtils.closeQuietly(Channel) added as part of IO-155 - redundant now there is IOUtils.closeQuietly(Closeable) \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003652 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "remove unused import\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003672 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java",
                "@since Commons IO 2.0 tag\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003721 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOUtils.java"
            ]
        },
        "src/java/org/apache/commons/io/filefilter/AndFileFilter.java": {
            "message": [
                "Correct license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140371 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "Javadoc\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140389 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "removed lots of finals\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140457 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "moved to licence 2.0\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140517 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "Bug #30705 - Add conditional file filters.\n\nI effectively merged these new filters into the existing And and Or\nfilters, rather than having multiple flavours of them. In practice, this\nmeans that I added the contructors from the original filters to these new\nones, and then replaced the old with the new. All of the pre-existing\ntests work with the resulting filters, along with all the new tests\nsupplied with the enhancement request. Thanks to Steven Caswell for the\ncode.\n\nI also had to exclude the abstract test cases in the Maven build file, so\nthat JUnit wouldn't try to instantiate and run them, and regenerate the\nAnt build file.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140618 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "Fix formatting to four spaces\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140619 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "Add since tags\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140622 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@155419 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "Javadoc fixes only.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@201613 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "Added validation of List constructor argument.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@201763 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "Handle null List constructor more gracefully\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@232900 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "Apply single license layout to all java files\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437680 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "Removing IOFilter from the implements for OrFileFilter and AndFileFilter - it's already in AbstractFileFilter. Thanks to FindBugs. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@490425 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "IO-120 Improve file filter toString() methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@539231 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "IO-131 Implement java.io.Serializable in IOFileFilter implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@587916 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "Remove unused imports and organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@606381 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "IO-140 JDK 1.5 changes: Use generics\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619103 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "IO-140 JDK 1.5 changes: Use StringBuilder (not-sync) instead of StringBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619112 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "Add missing @Override annotations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@723942 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "IO-191 - Possible improvements using static analysis - patch from Peter Lawrey\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@736890 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AndFileFilter.java"
            ]
        },
        "src/java/org/apache/commons/io/filefilter/FalseFileFilter.java": {
            "message": [
                "Correct license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140371 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "Javadoc\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140389 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "removed lots of finals\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140457 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "Reapply final modifier for static constants.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140465 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "moved to licence 2.0\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140517 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@155419 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "TrueFileFilter/FalseFileFilter/DirectoryFileFilter new constants\n  - New singleton instance constants (TRUE/FALSE/DIRECTORY)\n  - The new constants are more JDK 1.5 friendly with regards to static imports\n    (whereas if everything uses INSTANCE, then they just clash)\n  - The old INSTANCE constants are still present and have not been deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@424745 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "Apply single license layout to all java files\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437680 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "Removing my @author tag\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@471628 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "IO-131 Implement java.io.Serializable in IOFileFilter implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@587916 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "Doh! doesn't even compile! My bad - thanks to Sebb\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@587978 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FalseFileFilter.java"
            ]
        },
        "src/java/org/apache/commons/io/filefilter/IOFileFilter.java": {
            "message": [
                "Correct license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140371 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/IOFileFilter.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/IOFileFilter.java",
                "moved to licence 2.0\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140517 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/IOFileFilter.java",
                "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@155419 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/IOFileFilter.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/IOFileFilter.java",
                "Removing my @author tag\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@471628 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/IOFileFilter.java"
            ]
        },
        "src/java/org/apache/commons/io/filefilter/NotFileFilter.java": {
            "message": [
                "Correct license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140371 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "Javadoc\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140389 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "removed lots of finals\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140457 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "moved to licence 2.0\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140517 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@155419 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "IO-120 Improve file filter toString() methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@539231 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "IO-131 Implement java.io.Serializable in IOFileFilter implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@587916 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "IO-133 - Make fields final so classes are immutable/threadsafe - thanks to Sebb for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@591058 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "Fix IO-202 NotFileFilter documentation is incorrect - thanks to Matthew Flaschen for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@768750 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/NotFileFilter.java"
            ]
        },
        "src/java/org/apache/commons/io/filefilter/OrFileFilter.java": {
            "message": [
                "Correct license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140371 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "Javadoc\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140389 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "removed lots of finals\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140457 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "moved to licence 2.0\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140517 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "Bug #30705 - Add conditional file filters.\n\nI effectively merged these new filters into the existing And and Or\nfilters, rather than having multiple flavours of them. In practice, this\nmeans that I added the contructors from the original filters to these new\nones, and then replaced the old with the new. All of the pre-existing\ntests work with the resulting filters, along with all the new tests\nsupplied with the enhancement request. Thanks to Steven Caswell for the\ncode.\n\nI also had to exclude the abstract test cases in the Maven build file, so\nthat JUnit wouldn't try to instantiate and run them, and regenerate the\nAnt build file.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140618 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "Fix formatting to four spaces\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140619 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "Add since tags\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140622 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@155419 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "Javadoc fixes only.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@201613 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "Handle null List constructor more gracefully\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@232900 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "Apply single license layout to all java files\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437680 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "Removing IOFilter from the implements for OrFileFilter and AndFileFilter - it's already in AbstractFileFilter. Thanks to FindBugs. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@490425 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "IO-120 Improve file filter toString() methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@539231 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "IO-131 Implement java.io.Serializable in IOFileFilter implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@587916 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "Remove unused imports and organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@606381 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "IO-140 JDK 1.5 changes: Use generics\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619103 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "IO-140 JDK 1.5 changes: Use StringBuilder (not-sync) instead of StringBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619112 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "IO-191 - Possible improvements using static analysis - patch from Peter Lawrey\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@736890 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/OrFileFilter.java"
            ]
        },
        "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java": {
            "message": [
                "Correct license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140371 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "Javadoc\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140389 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "removed lots of finals\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140457 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "moved to licence 2.0\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140517 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@155419 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "Removing my @author tag\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@471628 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "IO-120 Improve file filter toString() methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@539231 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "IO-126 Add facility to specify case sensitivity for prefix and suffix file filters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@584162 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "IO-131 Implement java.io.Serializable in IOFileFilter implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@587916 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "IO-133 - Make fields final so classes are immutable/threadsafe - thanks to Sebb for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@591058 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "Remove unused imports and organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@606381 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "IO-140 JDK 1.5 changes: Use generics\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619103 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "IO-140 JDK 1.5 changes: Use StringBuilder (not-sync) instead of StringBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619112 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "IO-191 - Possible improvements using static analysis - patch from Peter Lawrey\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@736890 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "Fix some issues identified by FindBugs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004077 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java"
            ]
        },
        "src/java/org/apache/commons/io/filefilter/TrueFileFilter.java": {
            "message": [
                "Correct license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140371 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "Javadoc\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140389 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "removed lots of finals\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140457 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "Reapply final modifier for static constants.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140465 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "moved to licence 2.0\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140517 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@155419 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "TrueFileFilter/FalseFileFilter/DirectoryFileFilter new constants\n  - New singleton instance constants (TRUE/FALSE/DIRECTORY)\n  - The new constants are more JDK 1.5 friendly with regards to static imports\n    (whereas if everything uses INSTANCE, then they just clash)\n  - The old INSTANCE constants are still present and have not been deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@424745 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "Apply single license layout to all java files\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437680 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "Removing my @author tag\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@471628 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "IO-131 Implement java.io.Serializable in IOFileFilter implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@587916 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "Doh! doesn't even compile! My bad - thanks to Sebb\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@587978 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/TrueFileFilter.java"
            ]
        },
        "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java": {
            "message": [
                "Javadocs\nComment out currently usused method\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140373 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "removed lots of finals\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140457 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "Removed System.out calls.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140464 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "moved to licence 2.0\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140517 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "noted the call over to the byte[] method\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140519 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "Removed unused, commented code.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140561 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@155419 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "Fix checkstyle errors\nbug 38145, from Niall Pemberton\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@369075 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "Javadoc exceptions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@387355 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "Apply single license layout to all java files\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437680 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "javadoc changes only\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@462773 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@462824 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "IO-97 - ByteArrayOutputStream performance enhancements, from Holger Hoffstatte\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@491007 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "IO-152 - Add ByteArrayOutputStream.write(InputStream)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609421 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "Checkstyle/javadoc only - @see no longer works since checkstyle 4 - see http://tinyurl.com/2x8cev\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@610010 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "IO-140 JDK 1.5 changes: Use generics\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619103 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "IO-137 Added method for getting InputStream from ByteArrayOutputStream & IOUtils avoiding unnecessary array allocation and copy - thanks to Nikunj Trivedi for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@723507 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "IO-191 - Possible improvements using static analysis - patch from Peter Lawrey\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@736890 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "IO-214 Inconsistent synchronization of fields\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002791 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "@since Commons IO 2.0 tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003647 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ByteArrayOutputStream.java"
            ]
        },
        "src/java/org/apache/commons/io/output/NullOutputStream.java": {
            "message": [
                "Remove unused imports\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140374 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/NullOutputStream.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/NullOutputStream.java",
                "moved to licence 2.0\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140517 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/NullOutputStream.java",
                "Remove synchronized from methods, general tidy\nbug 33481\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@153621 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/NullOutputStream.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/NullOutputStream.java",
                "IO-143 Added Singleton Constants in several stream classes - thanks to Nikunj Trivedi for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@601751 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/NullOutputStream.java",
                "Checkstyle/javadoc only - @see no longer works since checkstyle 4 - see http://tinyurl.com/2x8cev\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@610010 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/NullOutputStream.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/NullOutputStream.java"
            ]
        },
        "src/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java": {
            "message": [
                "Correct license\nJavadocs\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140375 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                "removed lots of finals\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140457 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                "moved to licence 2.0\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140517 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@155419 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                "Format class to IO coding standards for first release\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@241817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                "Fix checkstyle errors\nbug 38145, from Niall Pemberton\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@369075 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                "IO-140 JDK 1.5 changes: Use generics\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619103 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                "Fix raw type\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@634485 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                "IO-191 - Possible improvements using static analysis - patch from Peter Lawrey\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@736890 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java"
            ]
        },
        "src/java/org/apache/commons/io/input/CountingInputStream.java": {
            "message": [
                "Correct license\nJavadocs\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140375 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/CountingInputStream.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/CountingInputStream.java",
                "modified so that when a read(byte[]) method returns a different number of bytes read than requested, the count is correct\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140414 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/CountingInputStream.java",
                "count to this.count so I can point out a change in the last commit from Filter to Proxy stream. FilterStream does not correctly proxy methods but optimises.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140415 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/CountingInputStream.java",
                "Removed unused import.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140463 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/CountingInputStream.java",
                "improved javadoc\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140503 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/CountingInputStream.java",
                "moved to licence 2.0\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140517 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/CountingInputStream.java",
                "reset feature added to counting classes as requested by Lars Beuster\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140583 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/CountingInputStream.java",
                "Formatting and Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@154513 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/CountingInputStream.java",
                "Fix bug where count inaccurate after End of File\nbug 33336, from Marcelo Liberato\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@154514 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/CountingInputStream.java",
                "CountingInputStream now implements skip(long) method.\nPR: 34311\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@160202 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/CountingInputStream.java",
                "now deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@421532 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/CountingInputStream.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/CountingInputStream.java",
                "Undeprecating - I deprecated these classes by mistake and not the ones in the source library that they came from\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@454182 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/CountingInputStream.java",
                "Fix for IO-84 - Files over 2GB will result in an incorrect count being returned by the getCount() and resetCount() methods (as they return an integer). These methods have been deprecated and new getByteCount() and resetByteCount() methods have been added which return a long.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@454217 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/CountingInputStream.java",
                "Javadoc style (less loud) and Checkstyle spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@462795 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/CountingInputStream.java",
                "Javadoc, checkstyle and since tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@462807 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/CountingInputStream.java",
                "IO-84 - Change int methods from deprecated to exception throwng\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@462818 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/CountingInputStream.java",
                "Removing my @author tag\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@471628 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/CountingInputStream.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/CountingInputStream.java",
                "IO-211: Pre- and post-processing support for proxied streams\n\nCommitted the proposed patch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805151 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/CountingInputStream.java",
                "@since Commons IO 2.0 tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003647 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/CountingInputStream.java",
                "IO-201 Fix inconsistent synchronization\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004079 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/CountingInputStream.java"
            ]
        },
        "src/java/org/apache/commons/io/input/DemuxInputStream.java": {
            "message": [
                "Correct license\nJavadocs\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140375 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/DemuxInputStream.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/DemuxInputStream.java",
                "removed lots of finals\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140457 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/DemuxInputStream.java",
                "moved to licence 2.0\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140517 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/DemuxInputStream.java",
                "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@155419 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/DemuxInputStream.java",
                "Javadoc fixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@293039 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/DemuxInputStream.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/DemuxInputStream.java",
                "IO-140 JDK 1.5 changes: Use generics\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619103 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/DemuxInputStream.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/DemuxInputStream.java",
                "IO-191 - Possible improvements using static analysis - patch from Peter Lawrey\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@736890 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/DemuxInputStream.java"
            ]
        },
        "src/java/org/apache/commons/io/output/DemuxOutputStream.java": {
            "message": [
                "Correct license\nJavadocs\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140375 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/DemuxOutputStream.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/DemuxOutputStream.java",
                "removed lots of finals\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140457 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/DemuxOutputStream.java",
                "moved to licence 2.0\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140517 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/DemuxOutputStream.java",
                "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@155419 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/DemuxOutputStream.java",
                "Javadoc fixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@293039 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/DemuxOutputStream.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/DemuxOutputStream.java",
                "IO-140 JDK 1.5 changes: Use generics\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619103 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/DemuxOutputStream.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/DemuxOutputStream.java",
                "IO-191 - Possible improvements using static analysis - patch from Peter Lawrey\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@736890 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/DemuxOutputStream.java"
            ]
        },
        "src/java/org/apache/commons/io/output/LockableFileWriter.java": {
            "message": [
                "Correct license\nJavadocs\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140375 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/LockableFileWriter.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/LockableFileWriter.java",
                "removed the javadoc as commons-util is long dead\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140441 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/LockableFileWriter.java",
                "removed lots of finals\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140457 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/LockableFileWriter.java",
                "Reapply final modifier for static constants.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140465 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/LockableFileWriter.java",
                "moved to licence 2.0\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140517 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/LockableFileWriter.java",
                "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@155419 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/LockableFileWriter.java",
                "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@292298 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/LockableFileWriter.java",
                "LockableFileWriter, add encoding support, and general tidy\nbug 36825, from Andy Lehane\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@292340 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/LockableFileWriter.java",
                "Improve validation and directory creation in LockableFileWriter\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@292959 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/LockableFileWriter.java",
                "LockableFileWriter locking mechanism was broken and only provided limited protection\nFile deletion and locking in case of constructor error was broken\nbug 38942\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@385293 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/LockableFileWriter.java",
                "Correct mail-archive links and a couple of minor javadoc/checkstyle corrections\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@424607 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/LockableFileWriter.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/LockableFileWriter.java",
                "Checkstyle/javadoc only - @see no longer works since checkstyle 4 - see http://tinyurl.com/2x8cev\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@610010 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/LockableFileWriter.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/LockableFileWriter.java",
                "IO-216 Delete files quietly when an exception is thrown during initialization\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002142 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/LockableFileWriter.java",
                "IO-216 - Document that lock file deletion failure is not reported\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002182 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/LockableFileWriter.java"
            ]
        },
        "src/java/org/apache/commons/io/EndianUtils.java": {
            "message": [
                "Javadocs\nRemoved unnecessary constants\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140376 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/EndianUtils.java",
                "Remove private constructors because of problems with Velocity which needs an instance (Christoph Reck)\nsome todos.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140380 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/EndianUtils.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/EndianUtils.java",
                "It seems that the values passed into writeShort methods should be shorts not ints.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140432 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/EndianUtils.java",
                "The byte array element when shifted is only in an 'int' scope I believe,\nso when it's shifted by more than 24, it goes off the end.\n\nMy solution is to break in two parts and then shift them on top once they're\nin a long scope.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140433 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/EndianUtils.java",
                "Removed comment about unit tests coming soon. It's been 2 years and the\nother stuff never had ut's anyway. I hope. Else I just wasted a lot of time.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140437 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/EndianUtils.java",
                "removed lots of finals\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140456 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/EndianUtils.java",
                "removed lots of finals\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140457 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/EndianUtils.java",
                "removed unnecessary line\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140483 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/EndianUtils.java",
                "Fixed what I think is a bug in readSwappedLong(InputStream) by rewriting the method to use the readSwappedLong(byte[])\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140485 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/EndianUtils.java",
                "added the classic should NOT be constructed warning\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140512 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/EndianUtils.java",
                "moved to licence 2.0\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140517 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/EndianUtils.java",
                "removed final from 2 Utils to fit the XxxUtils pattern\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140579 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/EndianUtils.java",
                "Made a start on getting us Checkstyle clean. Fixed a few hundred gripes,\nbut there are still many, many more.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140614 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/EndianUtils.java",
                "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@155419 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/EndianUtils.java",
                "Checkstyle\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@239228 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/EndianUtils.java",
                "Improve javadoc for v1.1\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@289999 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/EndianUtils.java",
                "Javadoc for v1.1\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@291742 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/EndianUtils.java",
                "Javadoc fixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@293039 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/EndianUtils.java",
                "Remove unnecessary casts from int to int.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@387353 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/EndianUtils.java",
                "Remove unnecessary casts from int to long.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@387356 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/EndianUtils.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/EndianUtils.java",
                "Apply single license layout to all java files\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437680 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/EndianUtils.java",
                "Applying my patch from #IO-102 - fixes readSwappedLong(InputStream) for the possibility that not all 8 bytes would be read by input.read(bytes)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@482840 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/EndianUtils.java",
                "Committing my patch from #IO-101, fixing an <int> overrun in readSwappedLong. Many thanks to Jose Pinto for finding this\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@482841 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/EndianUtils.java",
                "Applying Robert Michel's more correct patch for #IO-101. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@484864 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/EndianUtils.java",
                "Remove unnecessary cast from long to long.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@491359 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/EndianUtils.java",
                "Applying Hiroshi's test from IO-117 with my fix. Fixes negative number possibilities in EndianUtils.readSwappedUnsignedInteger()\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@539632 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/EndianUtils.java"
            ]
        },
        "src/java/org/apache/commons/io/HexDump.java": {
            "message": [
                "Javadocs\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140378 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/HexDump.java",
                "Remove private constructors because of problems with Velocity which needs an instance (Christoph Reck)\nsome todos.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140380 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/HexDump.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/HexDump.java",
                "removed lots of finals\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140456 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/HexDump.java",
                "added the classic should NOT be constructed warning\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140512 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/HexDump.java",
                "fixed the grammar a touch, though probably needs p tags\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140515 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/HexDump.java",
                "moved to licence 2.0\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140517 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/HexDump.java",
                "Made a start on getting us Checkstyle clean. Fixed a few hundred gripes,\nbut there are still many, many more.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140614 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/HexDump.java",
                "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@155419 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/HexDump.java",
                "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@239232 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/HexDump.java",
                "Improve javadoc for v1.1\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@289999 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/HexDump.java",
                "Fix checkstyle errors\nbug 38145, from Niall Pemberton\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@369075 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/HexDump.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/HexDump.java",
                "Apply single license layout to all java files\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437680 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/HexDump.java",
                "IO-136 HexDump's use of static StringBuffers isn't thread-safe\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@596642 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/HexDump.java",
                "Javadoc only\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@596667 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/HexDump.java",
                "IO-140 JDK 1.5 changes: Use StringBuilder (not-sync) instead of StringBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619112 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/HexDump.java",
                "IO-189: update javadoc on HexDump.dump method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@736507 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/HexDump.java"
            ]
        },
        "src/test/org/apache/commons/io/FileUtilsTestCase.java": {
            "message": [
                "Bugzilla 22075: Copy copy methods from IOUtils to CopyUtils, deprecate old copy methods.\nBugzilla 22332: Deprecated FileUtils string methods, Code style-up\nSubmitted by: Matthew Hawthorne <mhawthorne at alumni.pitt.edu>\n\nTestcases (and infrastructure) modified a bit by myself after applying Matthew's patches.\nCopyUtils testcases are done in memory now instead of using files.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140385 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "Bugzilla #22738 from yours truly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140394 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "Adjust to new method signatures (File instead of String)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140407 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "Remove test for deleted getFilesFromExtension\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140408 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "Fix test for contentEquals which throws an exception upon comparing directories now.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140410 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "moved all filename methods out of FileUtils and into the new FilenameUtils class. Updated the unit tests, though one test in FileUtilsTest does a bit of Filename testing. Javadoc will need a bit of checking. Updated tasks.xml to reflect this.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140425 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "removed finals from test code\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140459 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "Reapply final modifier for static constants.\nRemoved unused imports.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140471 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "moved to v2.0 of the licence\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140523 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "Reestablish JDK 1.3 compatibility.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140540 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "File copy operations now preserve the file date by default. An additional copyFile variant enables to disable this feature.\nSuggested by: Craig Doremus <craig.at.maine.com> in Bugzilla #27615\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140542 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "Looks like the 200ms weren't enough. Gump failed in one of the tests. Maybe this helps. sleeps are never good but I don't know how to do this in a better way.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140544 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "Tests for file date time for copy operations disabled for now because my method with Thread.sleep() isn't reliable.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140545 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "Commenting out FilenameUtils usage as it is not a part of 1.0\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140551 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "Removed the necessity to have the data/test directory.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140556 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "Bugzilla 28496\nFix for: org.apache.commons.io.FileUtils.copyFile shouldn't allow to copy a file on itself\nSubmitted by: dany rizzi <drizzi.at.largesys.it>\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140558 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "Bug #29821\nBugfix for FileUtils.touch(). An existings file was overwritten. With new testcase.\nSubmitted by:\tChristoffer Hammarstr\ufffdm <kreiger.at.linuxgods.com>\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140585 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "Fixed imports. Realized the * too late.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140586 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "FileUtils.read/write byte array methods\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140588 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "Testing prerequisites for touch() test, making it safer.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140590 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "Fix test case for Win98\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140591 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "Add FileUtils.toFiles(urls)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140592 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "Handle encodings in URL to File conversion\nbug 32575, from Jason Madden\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@154517 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "Add copyDirectory, and refactor copyFile\nbug 32944, from Ian Springer\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@154553 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "Add methods to read a FIle/Stream/Reader by lines\nrfe 36214\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@233069 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "Add FileUtils.writeLines\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@292293 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "FileUtils.contentEquals(File,File)\nPerformance improved by adding length and file location checking\nfrom discussion at The Server Side\nhttp://www.theserverside.com/news/thread.tss?thread_id=37035\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@321245 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "FileUtils methods to provide iterators over directory contents\nrfe 38083, from Jim Harrington\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@360495 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "Update to 2006\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@360503 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "New FileUtils method to copy a directory to within another directory\nrfe 36315\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@369070 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "Fix tests for v1.2\nBug 38927\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@385118 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "Break out waitFor test for Windows2000 reasons\nbug 38927, from Niall Pemberton\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@385294 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "IO-88 Add isFileOlder() methods to FileUtils (counterparts to existing isFileNewer() methods)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@425111 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "Fixing the failed tests on the vmbuild machine. Rather than trying to pause for a second and hoping that means the file's will have different timestamps - the new code just sits and creates the new file repeatedly until it has a different timestamp. A pause of a second means that repeatedly should usually be a very small number of times - such as one. Also changed the code so the long millisecond variable is the date's getTime method and not a different time all together. The previous one irritated my sense of aesthetics :)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@433162 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "IO-54 - Add FileUtils.checksum / FileUtils.checksumCRC32 to simplify calculating checksums\nfrom Emmanuel Bourg\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@438281 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "IO-107 - Add FileUtils.openOutputStream, creating parent directories if required\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@490858 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "IO-107 - Increase test robustness for openOutputStream\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@490988 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "IO-107 - Add FileUtils.openInputStream, with better error messages than the JDK\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@490997 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "[IO-112] NPE in FileUtils.openOutputStream(File) when file has no parent in path.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@503497 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "Replace the use of deprecated classes (in un-related tests) with non-deprecated versions\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@596583 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "IO-147 - Deletion of orphaned Softlinks does not work - reported by Stefan Lischke, patch from Sebb\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@608338 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "IO-141 - Infinite loop on FileUtils.copyDirectory when the destination directory is within the source directory - reported by Mark Bryan Yu\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609147 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "IO-135 - Add convenience deleteQuietly to FileUtils - adapted from patch by Kevin Conaway\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609253 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "IO-105 - Add a FileUtils copyDirectory method that makes use of FileFilter\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609471 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "IO-77 add moveFile() and moveDirectory() methods to FileUtils - thanks to Nicolas de Loof for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609622 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "IO-77 - change moveDirectory/moveFile mehtods to throw IllegalArgumentException rather than NullPointerException - thanks to Holger Hoffst\u00e4tte\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609683 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "IO-77 revert to throwing NullPointerException rather than IllegalArgumentException\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@610810 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "IO-140 JDK 1.5 changes: Add new CharSequence flavours of methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619188 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "IO-163 Change FileUtils.toURLs() to use File.toURI().toURL() rather than File.toURL() - thanks to Alex Miller for the suggestion\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@647000 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "IO-157 FileUtils - Return target File from copyFileToDirectory() - thanks to Kenny MacLeod\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@661658 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "Fix fir IO-175 IOUtils.doCopyFile() issues with very large files and closing file input streams - thanks to David Sitsky\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@723199 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "IO-157 revert as this breaks binary compatibility with previous releases\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@744725 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "Fix up raw types in test code\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@896988 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "Change DirectoryWalker to use generified Collection\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@897578 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "Does not make sense to use static fields for sizes of instance Files\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@897581 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "IO-231 FileUtils generate wrong exception message in isFileNewer method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919101 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "Tidy up tests:\n- remove suite() and main() methods\n- Deleted package test classes and All test classes\n- Allow Ant build to run a single test; default to all\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919474 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "IO-157 FileUtils - Return target File from copyFileToDirectory() - thanks to Kenny MacLeod\n(Reapplied)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919684 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "Revert r919684 - not binary compatible (forgot test case)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919996 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "assertTrue(actual==expected) => assertEquals(expected, actual)\nGives more info in failure cases\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@934112 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "IO-219 - Throw FileExistsException when moving a file or directory if the destination already exists\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@982433 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "IO-234 Add Methods For Retrieving System Directories/Paths to FileUtils - thanks to Michael Wooten for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@982449 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "IO-208 Add test case for timeout (connection and read) support for FileUtils.copyURLToFile\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@995078 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "IO-238 Add sizeOf(File) Method to FileUtils - thanks to Michael Wooten for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002367 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "IO-217 FileUtils.copyDirectoryToDirectory makes infinite loops - thanks to Roun Lee for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002424 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "IO-166 Fix URL decoding in FileUtils.toFile() - thanks to Benjamin Bentmann for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002457 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "IO-190 FileUtils copyDirectory preserves destination subdirectories, rather than overwriting with the source subdirectories - thanks to Jukka for the pacth\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002796 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ]
        },
        "src/test/org/apache/commons/io/IOUtilsTestCase.java": {
            "message": [
                "Bugzilla 22075: Copy copy methods from IOUtils to CopyUtils, deprecate old copy methods.\nBugzilla 22332: Deprecated FileUtils string methods, Code style-up\nSubmitted by: Matthew Hawthorne <mhawthorne at alumni.pitt.edu>\n\nTestcases (and infrastructure) modified a bit by myself after applying Matthew's patches.\nCopyUtils testcases are done in memory now instead of using files.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140385 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilsTestCase.java",
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilsTestCase.java",
                "removed finals from test code\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140459 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilsTestCase.java",
                "removed deprecated methods from IOUtils\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140460 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilsTestCase.java",
                "Reapply final modifier for static constants.\nRemoved unused imports.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140471 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilsTestCase.java",
                "removed test cases that only test CopyUtils methods, as these methods now have their own tests in the CopyUtilsTest class\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140475 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilsTestCase.java",
                "moved to v2.0 of the licence\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140523 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilsTestCase.java",
                "Add toCharArray()\nbug 28979, from Gareth Davis\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140600 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilsTestCase.java",
                "Add toInputStream(String) methods\nbug 32958, from Ian Springer \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@160345 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilsTestCase.java",
                "Add methods to read a FIle/Stream/Reader by lines\nrfe 36214\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@233069 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilsTestCase.java",
                "Add IOUtils.writeLines\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@279170 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilsTestCase.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilsTestCase.java",
                "Apply single license layout to all java files\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437680 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilsTestCase.java",
                "IO-140 JDK 1.5 changes: Add new CharSequence flavours of methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619188 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilsTestCase.java",
                "IO-137 Added method for getting InputStream from ByteArrayOutputStream & IOUtils avoiding unnecessary array allocation and copy - thanks to Nikunj Trivedi for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@723507 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilsTestCase.java",
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilsTestCase.java",
                "Fix up raw types in test code\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@896988 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilsTestCase.java",
                "It's never too late to report an error!\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919763 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilsTestCase.java",
                "Add skipFully() methods for InputStream and Reader\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@920114 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilsTestCase.java",
                "Suppress deprecated warnings when testing deprecated methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@920126 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilsTestCase.java",
                "IO-203 - Add skipFully() method for InputStreams\nImplement our own skip() methods; rewrite skipFully() to use them\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@920483 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilsTestCase.java",
                "assertTrue(actual==expected) => assertEquals(expected, actual)\nGives more info in failure cases\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@934112 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilsTestCase.java"
            ]
        },
        "src/java/org/apache/commons/io/CopyUtils.java": {
            "message": [
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/CopyUtils.java",
                "removed lots of finals\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140456 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/CopyUtils.java",
                "Removed methods that take a bufferSize parameter.\nDiscussion:\nhttp://www.mail-archive.com/commons-dev@jakarta.apache.org/msg19703.html\nhttp://nagoya.apache.org/eyebrowse/BrowseList?listName=commons-dev@jakarta.apache.org&by=thread&from=572862\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140473 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/CopyUtils.java",
                "moved to licence 2.0\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140517 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/CopyUtils.java",
                "Javadoc rewritten in both these classes to match the refactoring that happened a while back.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140571 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/CopyUtils.java",
                "Add encoding specific methods, Javadoc, Reformat to standards\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140593 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/CopyUtils.java",
                "Add char[] methods to CopyUtils\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140594 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/CopyUtils.java",
                "Deprecate CopyUtils (reverting to v1.0)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140598 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/CopyUtils.java",
                "Made a start on getting us Checkstyle clean. Fixed a few hundred gripes,\nbut there are still many, many more.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140614 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/CopyUtils.java",
                "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@155419 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/CopyUtils.java",
                "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@239226 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/CopyUtils.java",
                "Improve javadoc for v1.1\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@289999 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/CopyUtils.java",
                "Javadoc - unify paragraph tags to code readable style\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@424747 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/CopyUtils.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/CopyUtils.java",
                "Apply single license layout to all java files\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437680 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/CopyUtils.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/CopyUtils.java"
            ]
        },
        "src/java/org/apache/commons/io/input/ProxyInputStream.java": {
            "message": [
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/ProxyInputStream.java",
                "added a slightly better reason for why this class is of importance\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140412 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/ProxyInputStream.java",
                "slight paragraph change\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140504 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/ProxyInputStream.java",
                "moved to licence 2.0\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140517 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/ProxyInputStream.java",
                "Optimize implementation by using the superclass instance variable\nbug 28977, from Lars Beuster\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@154556 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/ProxyInputStream.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/ProxyInputStream.java",
                "Removing my @author tag\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@471628 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/ProxyInputStream.java",
                "Checkstyle/javadoc only - @see no longer works since checkstyle 4 - see http://tinyurl.com/2x8cev\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@610010 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/ProxyInputStream.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/ProxyInputStream.java",
                "IO-195 Provide exception handling methods in the Proxy streams/readers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@744371 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/ProxyInputStream.java",
                "Fix IO-206 ProxyInputStream: misleading parameter names - thanks to Jeremias Maerki for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@776062 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/ProxyInputStream.java",
                "IO-211: Pre- and post-processing support for proxied streams\n\nCommitted the proposed patch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805151 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/ProxyInputStream.java",
                "IO-212: Incorrect ProxyInputStream.skip() javadoc\n\nFixed the javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805156 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/ProxyInputStream.java",
                "IO-211: Pre- and post-processing support for proxied streams\n\nAdd null protection as pointed out in IO-242\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@934041 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/ProxyInputStream.java"
            ]
        },
        "src/java/org/apache/commons/io/output/ProxyOutputStream.java": {
            "message": [
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                "moved to licence 2.0\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140517 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                "Optimize implementation by using the superclass instance variable\nbug 28977, from Lars Beuster\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@154556 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                "Removing my @author tag\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@471628 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                "Remove unused imports and organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@606381 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                "Checkstyle/javadoc only - @see no longer works since checkstyle 4 - see http://tinyurl.com/2x8cev\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@610010 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                "IO-195 Provide exception handling methods in the Proxy streams/readers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@744371 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                "IO-211: Pre- and post-processing support for proxied streams\n\nCommitted the proposed patch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805151 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                "IO-211: Pre- and post-processing support for proxied streams\n\nAdd null protection as pointed out in IO-242\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@934041 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                "Fix potential NPE if proxied stream supports write((byte[]) null) without complaining\nAdd test for same\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003340 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ProxyOutputStream.java"
            ]
        },
        "src/test/org/apache/commons/io/CopyUtilsTest.java": {
            "message": [
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/CopyUtilsTest.java",
                "Use Commons IO ByteArrayOutputStream\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140404 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/CopyUtilsTest.java",
                "removed finals from test code\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140459 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/CopyUtilsTest.java",
                "Reapply final modifier for static constants.\nRemoved unused imports.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140471 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/CopyUtilsTest.java",
                "moved to v2.0 of the licence\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140523 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/CopyUtilsTest.java",
                "Add char[] methods to CopyUtils\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140594 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/CopyUtilsTest.java",
                "Deprecate CopyUtils (reverting to v1.0)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140598 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/CopyUtilsTest.java",
                "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@155419 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/CopyUtilsTest.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/CopyUtilsTest.java",
                "Remove unused imports and organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@606381 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/CopyUtilsTest.java",
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/CopyUtilsTest.java",
                "Drop or make use of variables returned by method calls\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@896986 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/CopyUtilsTest.java",
                "Suppress deprecation warnings for tests of deprecated class\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919085 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/CopyUtilsTest.java",
                "Tidy up tests:\n- remove suite() and main() methods\n- Deleted package test classes and All test classes\n- Allow Ant build to run a single test; default to all\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919474 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/CopyUtilsTest.java",
                "assertTrue(actual==expected) => assertEquals(expected, actual)\nGives more info in failure cases\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@934112 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/CopyUtilsTest.java",
                "IO-235 Fix Test case - unused YellOnFlushAndCloseOutputStream\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@982430 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/CopyUtilsTest.java"
            ]
        },
        "src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java": {
            "message": [
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                "removed finals from test code\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140459 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                "Reapply final modifier for static constants.\nRemoved unused imports.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140471 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                "moved to v2.0 of the licence\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140523 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                "Fix tests to handle last modified date behaviour on Win2k\nbug 38130, from Niall Pemberton\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@369049 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                "Apply single license layout to all java files\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437680 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                "Remove unused imports and organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@606381 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                "Fix test javadoc warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003659 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java"
            ]
        },
        "src/test/org/apache/commons/io/HexDumpTest.java": {
            "message": [
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/HexDumpTest.java",
                "Use Commons IO ByteArrayOutputStream\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140404 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/HexDumpTest.java",
                "removed finals from test code\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140459 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/HexDumpTest.java",
                "moved to v2.0 of the licence\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140523 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/HexDumpTest.java",
                "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@155419 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/HexDumpTest.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/HexDumpTest.java",
                "Remove unused imports and organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@606381 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/HexDumpTest.java",
                "Tidy up tests:\n- remove suite() and main() methods\n- Deleted package test classes and All test classes\n- Allow Ant build to run a single test; default to all\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919474 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/HexDumpTest.java"
            ]
        },
        "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java": {
            "message": [
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                "Use Commons IO ByteArrayOutputStream\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140403 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                "Renamed shutdownXxx methods to closeQuietly(Xxx).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140449 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                "removed finals from test code\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140459 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                "moved to v2.0 of the licence\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140523 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                "Add toCharArray()\nbug 28979, from Gareth Davis\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140600 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                "Add methods to read a FIle/Stream/Reader by lines\nrfe 36214\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@233069 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                "Fix tests for v1.2\nBug 38927\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@385118 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                "IO-96 - FileBasedTestCase - Fixed bug in compare content methods identified by GNU classpath\nbased on patch from Anthony Green\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@462842 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                "[IO-112] NPE in FileUtils.openOutputStream(File) when file has no parent in path.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@503497 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                "Make mutable static field volatile, in case used from multiple threads\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919238 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/testtools/FileBasedTestCase.java"
            ]
        },
        "src/test/org/apache/commons/io/testtools/YellOnCloseInputStream.java": {
            "message": [
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/testtools/YellOnCloseInputStream.java",
                "moved to v2.0 of the licence\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140523 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/testtools/YellOnCloseInputStream.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/testtools/YellOnCloseInputStream.java",
                "Apply single license layout to all java files\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437680 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/testtools/YellOnCloseInputStream.java",
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/testtools/YellOnCloseInputStream.java"
            ]
        },
        "src/test/org/apache/commons/io/testtools/YellOnFlushAndCloseOutputStream.java": {
            "message": [
                "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/testtools/YellOnFlushAndCloseOutputStream.java",
                "moved to v2.0 of the licence\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140523 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/testtools/YellOnFlushAndCloseOutputStream.java",
                "Add ability to turn yell off\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140597 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/testtools/YellOnFlushAndCloseOutputStream.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/testtools/YellOnFlushAndCloseOutputStream.java",
                "Apply single license layout to all java files\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437680 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/testtools/YellOnFlushAndCloseOutputStream.java",
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/testtools/YellOnFlushAndCloseOutputStream.java"
            ]
        },
        "src/test/org/apache/commons/io/EndianUtilsTest.java": {
            "message": [
                "Filled things in a bit more test wise.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140430 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/EndianUtilsTest.java",
                "Can't say I understand Float.intBitsToFloat and the Double.longBitsToDouble,\nbut seems to pass the test well enough. I just have this feeling it should\nbe complaining about lost bits.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140431 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/EndianUtilsTest.java",
                "Added unit tests for the read/write methods for short/int/long with byte[].\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140434 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/EndianUtilsTest.java",
                "removed unused line and added the read/write float byte methods\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140435 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/EndianUtilsTest.java",
                "added read/write double byte methods\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140436 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/EndianUtilsTest.java",
                "Reapply final modifier for static constants.\nRemoved unused imports.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140471 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/EndianUtilsTest.java",
                "Implemented tests for the unsigned methods and removed the todo comments\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140478 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/EndianUtilsTest.java",
                "removed unnecessary line\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140479 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/EndianUtilsTest.java",
                "moved to v2.0 of the licence\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140523 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/EndianUtilsTest.java",
                "added all readSwapped(InputStream) methods\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140531 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/EndianUtilsTest.java",
                "added all writeSwapped(OutputStream) methods\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140532 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/EndianUtilsTest.java",
                "added newlines before ByteArrayInputStreams\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140533 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/EndianUtilsTest.java",
                "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@155419 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/EndianUtilsTest.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/EndianUtilsTest.java",
                "Removing my @author tag\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@471628 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/EndianUtilsTest.java",
                "Committing my patch from #IO-101, fixing an <int> overrun in readSwappedLong. Many thanks to Jose Pinto for finding this\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@482841 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/EndianUtilsTest.java",
                "Applying Hiroshi's test from IO-117 with my fix. Fixes negative number possibilities in EndianUtils.readSwappedUnsignedInteger()\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@539632 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/EndianUtilsTest.java",
                "Remove unused imports and organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@606381 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/EndianUtilsTest.java",
                "Remove throws clauses that don't apply\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@896987 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/EndianUtilsTest.java"
            ]
        },
        "src/test/org/apache/commons/io/output/TeeOutputStreamTest.java": {
            "message": [
                "removed main method\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140440 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/TeeOutputStreamTest.java",
                "moved to v2.0 of the licence\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140523 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/TeeOutputStreamTest.java",
                "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@155419 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/TeeOutputStreamTest.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/TeeOutputStreamTest.java",
                "Apply single license layout to all java files\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437680 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/TeeOutputStreamTest.java",
                "Removing my @author tag\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@471628 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/TeeOutputStreamTest.java"
            ]
        },
        "src/java/org/apache/commons/io/FilenameUtils.java": {
            "message": [
                "removed avalon comment as not important to segregate now\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140443 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "fixed the links to point to FileUtils\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140451 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "removed lots of finals\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140456 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "Avoid javadoc warnings in Eclipse.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140466 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "added the classic should NOT be constructed warning\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140512 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "moved to licence 2.0\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140517 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "Bugzilla #27612\nFix for catPath not handling Windows-style path separators.\nSubmitted by: Maarten Coene <Maarten.Coene.at.qmedit.com>\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140541 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "moved javadoc about paths into FilenameUtils\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140580 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "improvement to the extension handling from Oliver Jones\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140581 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "removed deprecated methods that are not intended to ever be released\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140582 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "Made a start on getting us Checkstyle clean. Fixed a few hundred gripes,\nbut there are still many, many more.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140614 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "Make getExtension() and hence removeExtension() work for both Windows and\n*nix paths. Enable (and fix) tests for both.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140616 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "Remove deprecated method for first release\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140621 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "not a style we use\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140628 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "added an initial set of TODOs\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140629 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "switched TODO to @todo\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140630 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "updated the KILL notes\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140631 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "Add separatorsToXxx methods to FilenameUtils\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140632 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "Add indexOfXxx methods to FilenameUtils\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140633 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "Remove File based methods as this is a Filename class\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140634 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "Refactor getXxx methods in FilenameUtils\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140635 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "Update removeExtension method and remove unused code from FilenameUtils\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140636 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "Add isExtension methods to test for matching extensions in FilenameUtils\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140637 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "merged WildcardUtils into FilenameUtils; thought the test case is still a separate file\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140639 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "Add commented out implementations of prefix handling, Javadoc\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140640 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "Add methods to handle filename prefixes\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140641 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "Fix breakage when getPrefixLength() is fed a string of length one.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140642 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "Refactor normalize method, and simplify getPrefixLength\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140644 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "Rewrite catPath, renaming to concat\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140645 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "Add equals methods, document Unix/Windows behaviour\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140646 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "Convert wildcard method to match based on OS case sensitivity\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140647 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "Removed TAB characters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@153622 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "Fix bug in wildcard search for advanced repetitive matches\nbug 33303, from Danival Taffarel Calegari\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@156217 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "Make FilenameUtils equals methods case-sensitive, with some optional system case matching\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@160343 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "Fix a little style problem.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@201611 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@239229 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "Handle Windows drive relative paths like C:a\\b\\c\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@240438 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "Fix to handle short prefixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@264868 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "Treat separator at end of filename as sign of directory\nAdjust other methods to this new definition\nAdjust absolute prefix calculation to always end in separator\nAdd new methods that omit the end separator\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@279094 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "Improve javadoc for v1.1\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@289999 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "Refactor windows identification to a method\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@417086 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "Add methods to use IOCase case-sensitivity\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@417091 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "Test and fix case sensitive wildcard filter\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@418641 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "Apply single license layout to all java files\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437680 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "Added findbugs optimisation: 'http://findbugs.sourceforge.net/bugDescriptions.html#ITA_INEFFICIENT_TO_ARRAY'. Pass in a correctly sized array to list.toArray\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@490424 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "IO-128 - currently file name \"normalization\" errors in the equals method causes a mis-leading NullPointerException. Adding a check for this and throwing an IllegalArgumentException with a better message should improve the user experience.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@584325 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "IO-128 Change to NullPointerException so that behaviour is unchanged from before - just better error message\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@592606 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "IO-149 Make FilenameUtils.EXTENSION_SEPARATOR public - proposed by Gary Gregory\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609870 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "IO-140 JDK 1.5 changes: Use generics\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619103 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "IO-140 JDK 1.5 changes: Use StringBuilder (not-sync) instead of StringBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619112 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "Generify remaining raw types in the public API\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@634474 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "IO-167 Fix case-insensitive string handling - thanks to Benjamin Bentmann\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@661822 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "Fix for IO-179 StringIndexOutOfBounds exception on FilenameUtils.getPathNoEndSeparator - thanks to Francisco Borges for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@721610 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "IO-156 Add normalize() and normalizeNoEndSeparator() method flavours which allow the separator character to be specified\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@723186 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "IO-183 Improve javadoc for FilenameUtils.getExtension() method - reported by Vadim Ponomarev\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@723189 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "IO-191 - Possible improvements using static analysis - patch from Peter Lawrey\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@736890 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "IO-246 FilenameUtils - wildcardMatch gives incorrect results - thanks to wa\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002582 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "Javadoc clarifications\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002801 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "Document that \"*?\" does not work properly currently\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002804 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "IO-248 FilenameUtils - getFullPathNoEndSeparator returns empty while path is a one level directory - thanks to hippo spark for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002806 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "@since Commons IO 2.0 tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003647 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java",
                "Fix some issues identified by FindBugs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004077 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FilenameUtils.java"
            ]
        },
        "src/test/org/apache/commons/io/FilenameUtilsTestCase.java": {
            "message": [
                "removed log method as nothing uses it\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140444 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "removed finals from test code\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140459 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Reapply final modifier for static constants.\nRemoved unused imports.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140471 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "moved to v2.0 of the licence\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140523 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Reestablish JDK 1.3 compatibility.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140540 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Bugzilla #27612\nFix for catPath not handling Windows-style path separators.\nSubmitted by: Maarten Coene <Maarten.Coene.at.qmedit.com>\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140541 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "improvement to the extension handling from Oliver Jones\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140581 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "The tests were using explicit Unix-style path separators, whereas the utils\nthemselves were using File.separator, so the tests failed on Windows. Now\nthe tests also use File.separator, and work on Windows. The one tricky part\nis that paths for regex searches need to be escaped if the separator is a\nbackslash.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140609 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Re-enable testGetExtensionWithPaths() and testRemoveExtensionWithPaths(),\nmodifying them to use File.separator. Commented out the Windows paths for\nnow, until we can clarify the intent.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140611 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Make getExtension() and hence removeExtension() work for both Windows and\n*nix paths. Enable (and fix) tests for both.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140616 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Whoops - missed some tests that needed reinstating in their original form.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140617 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Add separatorsToXxx methods to FilenameUtils\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140632 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Add indexOfXxx methods to FilenameUtils\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140633 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Remove File based methods as this is a Filename class\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140634 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Refactor getXxx methods in FilenameUtils\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140635 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Update removeExtension method and remove unused code from FilenameUtils\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140636 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Add isExtension methods to test for matching extensions in FilenameUtils\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140637 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "More tests\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140638 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Add methods to handle filename prefixes\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140641 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Refactor normalize method, and simplify getPrefixLength\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140644 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Rewrite catPath, renaming to concat\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140645 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Add equals methods, document Unix/Windows behaviour\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140646 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@155419 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Make FilenameUtils equals methods case-sensitive, with some optional system case matching\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@160343 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Handle Windows drive relative paths like C:a\\b\\c\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@240438 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Fix to handle short prefixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@264868 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Treat separator at end of filename as sign of directory\nAdjust other methods to this new definition\nAdjust absolute prefix calculation to always end in separator\nAdd new methods that omit the end separator\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@279094 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Add methods to use IOCase case-sensitivity\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@417091 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "IO-128 - currently file name \"normalization\" errors in the equals method causes a mis-leading NullPointerException. Adding a check for this and throwing an IllegalArgumentException with a better message should improve the user experience.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@584325 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "IO-128 Change to NullPointerException so that behaviour is unchanged from before - just better error message\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@592606 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Fix for IO-179 StringIndexOutOfBounds exception on FilenameUtils.getPathNoEndSeparator - thanks to Francisco Borges for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@721610 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "IO-156 Add normalize() and normalizeNoEndSeparator() method flavours which allow the separator character to be specified\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@723186 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Does not make sense to use static fields to hold file sizes for instance File fields\nFix raw types\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@806003 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Tidy up tests:\n- remove suite() and main() methods\n- Deleted package test classes and All test classes\n- Allow Ant build to run a single test; default to all\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919474 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "IO-248 FilenameUtils - getFullPathNoEndSeparator returns empty while path is a one level directory - thanks to hippo spark for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002806 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsTestCase.java"
            ]
        },
        "src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java": {
            "message": [
                "Improved test: Test listFiles with extensions = null\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140447 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                "removed finals from test code\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140459 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                "Added missing license header.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140470 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                "moved to v2.0 of the licence\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140523 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                "Apply single license layout to all java files\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437680 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                "Specify explict types\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619241 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                "Fix up raw types in test code\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@896988 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                "Narrow allowable Exceptions\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003571 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java"
            ]
        },
        "src/java/org/apache/commons/io/filefilter/NameFileFilter.java": {
            "message": [
                "removed lots of finals\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140457 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "moved to licence 2.0\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140517 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@155419 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "Add case sensitivity support to NameFileFilter\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@418643 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "Correct mail-archive links and a couple of minor javadoc/checkstyle corrections\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@424607 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "Apply single license layout to all java files\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437680 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "Removing my @author tag\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@471628 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "IO-120 Improve file filter toString() methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@539231 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "IO-131 Implement java.io.Serializable in IOFileFilter implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@587916 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "IO-133 - Make fields final so classes are immutable/threadsafe - thanks to Sebb for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@591058 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "Remove unused imports and organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@606381 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "IO-140 JDK 1.5 changes: Use generics\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619103 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "IO-140 JDK 1.5 changes: Use StringBuilder (not-sync) instead of StringBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619112 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "IO-191 - Possible improvements using static analysis - patch from Peter Lawrey\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@736890 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "Fix some issues identified by FindBugs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004077 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/NameFileFilter.java"
            ]
        },
        "src/test/org/apache/commons/io/input/CountingInputStreamTest.java": {
            "message": [
                "removed finals from test code\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140459 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/CountingInputStreamTest.java",
                "Removed unused imports.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140468 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/CountingInputStreamTest.java",
                "moved to v2.0 of the licence\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140523 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/CountingInputStreamTest.java",
                "reset feature added to counting classes as requested by Lars Beuster\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140583 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/CountingInputStreamTest.java",
                "Fix bug where count inaccurate after End of File\nbug 33336, from Marcelo Liberato\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@154514 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/CountingInputStreamTest.java",
                "CountingInputStream now implements skip(long) method.\nPR: 34311\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@160202 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/CountingInputStreamTest.java",
                "Increased test coverage for file filter tests, and also fixed some nits in CountingInputStreamTest.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@201764 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/CountingInputStreamTest.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/CountingInputStreamTest.java",
                "Apply single license layout to all java files\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437680 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/CountingInputStreamTest.java",
                "IO-84 - add tests for files > 2GB to IOUtils.copy(), CountingInputStream and CountingOutputStream\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@463537 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/CountingInputStreamTest.java",
                "Removing my @author tag\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@471628 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/CountingInputStreamTest.java",
                "Remove unused imports and organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@606381 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/CountingInputStreamTest.java"
            ]
        },
        "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java": {
            "message": [
                "removed wrong comment due to my misunderstanding of usage\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140482 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                "tests readLong now\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140484 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                "double and float tests succeed now\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140487 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                "skipBytes test added\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140488 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                "readLine 'test' for UnsupportedException added\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140489 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                "moved to v2.0 of the licence\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140523 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                "added test for the unsigned methods, though bit unsure that 0201 is right for readUnsignedShort, would have expected different to reading a signed short\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140535 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                "readFully tested\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140536 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@155419 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                "Apply single license layout to all java files\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437680 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                "Removing my @author tag\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@471628 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                "Remove unnecessary casts.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@606380 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                "Drop or make use of variables returned by method calls\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@896986 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                "IO-243 SwappedDataInputStream readBoolean is inverted - thanks to Ray Myers for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@995160 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java"
            ]
        },
        "src/java/org/apache/commons/io/input/ProxyReader.java": {
            "message": [
                "slight paragraph change\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140504 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/ProxyReader.java",
                "moved to licence 2.0\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140517 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/ProxyReader.java",
                "Optimize implementation by using the superclass instance variable\nbug 28977, from Lars Beuster\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@154556 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/ProxyReader.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/ProxyReader.java",
                "Removing my @author tag\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@471628 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/ProxyReader.java",
                "Checkstyle/javadoc only - @see no longer works since checkstyle 4 - see http://tinyurl.com/2x8cev\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@610010 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/ProxyReader.java",
                "IO-140 JDK 1.5 changes: Add new JDK 1.5 methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619135 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/ProxyReader.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/ProxyReader.java",
                "IO-195 Provide exception handling methods in the Proxy streams/readers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@744371 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/ProxyReader.java",
                "IO-242: Pre- and post-processing support for ProxyReader/Writer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@933964 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/ProxyReader.java",
                "IO-242: Pre- and post-processing support for ProxyReader/Writer\n\nProtect against null arguments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@934035 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/ProxyReader.java",
                "@since Commons IO 2.0 tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003647 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/ProxyReader.java"
            ]
        },
        "src/java/org/apache/commons/io/output/DeferredFileOutputStream.java": {
            "message": [
                "moved to licence 2.0\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140517 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "Improve the javadoc to define a use case\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140587 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "Use the Commons IO ByteArrayOutputStream instead of the java.io one, so\nthat we don't have to preallocate the entire memory size up front. This\nfixes bug #24306 filed against Commons FileUpload.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140607 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@155419 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "Bugzilla #34142: use writeTo() instead of toByteArray in DeferredFileOutputStream.thresholdReached().\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@158731 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "Remove unused field\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@233063 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "DeferredFileOutputStream.writeTo to allow current contents to be written to a stream\nrfe 34173, from gaxzerow\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@280004 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "Javadoc - unify paragraph tags to code readable style\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@424747 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "IO-130 Add support for temporary files to DeferredFileOutputStream\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@586668 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "Remove unused imports and organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@606381 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "IO-191 - Possible improvements using static analysis - patch from Peter Lawrey\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@736890 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/DeferredFileOutputStream.java"
            ]
        },
        "src/java/org/apache/commons/io/output/ProxyWriter.java": {
            "message": [
                "moved to licence 2.0\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140517 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ProxyWriter.java",
                "Optimize implementation by using the superclass instance variable\nbug 28977, from Lars Beuster\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@154556 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ProxyWriter.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ProxyWriter.java",
                "Removing my @author tag\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@471628 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ProxyWriter.java",
                "Remove unused imports and organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@606381 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ProxyWriter.java",
                "Checkstyle/javadoc only - @see no longer works since checkstyle 4 - see http://tinyurl.com/2x8cev\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@610010 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ProxyWriter.java",
                "IO-140 JDK 1.5 changes: Add new JDK 1.5 methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619135 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ProxyWriter.java",
                "Javadoc corrections\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619144 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ProxyWriter.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ProxyWriter.java",
                "IO-195 Provide exception handling methods in the Proxy streams/readers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@744371 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ProxyWriter.java",
                "IO-242: Pre- and post-processing support for ProxyReader/Writer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@933964 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ProxyWriter.java",
                "IO-242: Pre- and post-processing support for ProxyReader/Writer\n\nProtect against null arguments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@934035 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ProxyWriter.java",
                "@since Commons IO 2.0 tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003647 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ProxyWriter.java"
            ]
        },
        "src/java/org/apache/commons/io/output/ThresholdingOutputStream.java": {
            "message": [
                "moved to licence 2.0\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140517 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@155419 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                "Apply single license layout to all java files\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437680 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                "IO-121 - Add a reset() method to ThresholdingOutputStream which sets the count of the bytes written back to zero - thanks to Tom Nichols for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@540644 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                "IO-121 - change the new method name from reset() to resetByteCount() to make it more obvious what its function is\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@540714 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                "IO-191 - Possible improvements using static analysis - patch from Peter Lawrey\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@736890 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ThresholdingOutputStream.java"
            ]
        },
        "src/test/org/apache/commons/io/output/CountingOutputStreamTest.java": {
            "message": [
                "moved to v2.0 of the licence\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140523 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/CountingOutputStreamTest.java",
                "reset feature added to counting classes as requested by Lars Beuster\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140583 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/CountingOutputStreamTest.java",
                "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@155419 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/CountingOutputStreamTest.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/CountingOutputStreamTest.java",
                "Apply single license layout to all java files\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437680 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/CountingOutputStreamTest.java",
                "IO-84 - add tests for files > 2GB to IOUtils.copy(), CountingInputStream and CountingOutputStream\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@463537 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/CountingOutputStreamTest.java",
                "Removing my @author tag\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@471628 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/CountingOutputStreamTest.java",
                "Remove unused imports and organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@606381 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/CountingOutputStreamTest.java"
            ]
        },
        "src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java": {
            "message": [
                "moved to v2.0 of the licence\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140523 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@155419 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                "DeferredFileOutputStream.writeTo to allow current contents to be written to a stream\nrfe 34173, from gaxzerow\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@280004 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                "Apply single license layout to all java files\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437680 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                "IO-130 Add support for temporary files to DeferredFileOutputStream\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@586668 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                "Remove unused imports and organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@606381 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                "Drop or make use of variables returned by method calls\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@896986 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                "assertTrue(actual==expected) => assertEquals(expected, actual)\nGives more info in failure cases\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@934112 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java"
            ]
        },
        "src/test/org/apache/commons/io/output/NullOutputStreamTest.java": {
            "message": [
                "moved to v2.0 of the licence\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140523 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/NullOutputStreamTest.java",
                "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@155419 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/NullOutputStreamTest.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/NullOutputStreamTest.java",
                "Apply single license layout to all java files\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437680 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/NullOutputStreamTest.java",
                "Removing my @author tag\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@471628 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/NullOutputStreamTest.java"
            ]
        },
        "src/test/org/apache/commons/io/output/LockableFileWriterTest.java": {
            "message": [
                "cleans up after itself now, rather than leaving lockfiles\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140530 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@155419 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                "Remove unused local variable\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@292300 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                "LockableFileWriter, add encoding support, and general tidy\nbug 36825, from Andy Lehane\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@292340 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                "LockableFileWriter locking mechanism was broken and only provided limited protection\nFile deletion and locking in case of constructor error was broken\nbug 38942\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@385293 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                "Removing my @author tag\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@471628 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                "Fix up some raw types and unthrown Exceptions\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@806007 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/LockableFileWriterTest.java"
            ]
        },
        "src/test/org/apache/commons/io/find/FileFinderTest.java": {
            "message": [
                "still had old subversion tests in. switched to ignore CVS directory and to expect an extra file in the type test\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140603 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/find/FileFinderTest.java",
                "The tests were using explicit Unix-style path separators, whereas the utils\nthemselves were using File.separator, so the tests failed on Windows. Now\nthe tests also use File.separator, and work on Windows. The one tricky part\nis that paths for regex searches need to be escaped if the separator is a\nbackslash.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140609 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/find/FileFinderTest.java",
                "Patch from Stefan as IO tests have been breaking since the migration to subversion\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@158022 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/find/FileFinderTest.java"
            ]
        },
        "src/java/org/apache/commons/io/find/WildcardUtils.java": {
            "message": [
                "More tests for WildcardUtils.match and a new implementation of the match method.\nMostly the same as Bugzilla #31115, though the old tests were kept and they\nshowed a bug.\n\nSubmitted by:\tJason Anderson\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140606 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/find/WildcardUtils.java"
            ]
        },
        "src/test/org/apache/commons/io/find/WildcardUtilsTest.java": {
            "message": [
                "More tests for WildcardUtils.match and a new implementation of the match method.\nMostly the same as Bugzilla #31115, though the old tests were kept and they\nshowed a bug.\n\nSubmitted by:\tJason Anderson\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140606 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/find/WildcardUtilsTest.java"
            ]
        },
        "src/java/org/apache/commons/io/find/FindingFilter.java": {
            "message": [
                "Directories should not be included when looking for empty files.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140608 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/find/FindingFilter.java",
                "moved WildcardUtils up a directory as it is used in two sub-packages of IO\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140620 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/find/FindingFilter.java",
                "promoted comments to TODOs\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140626 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/find/FindingFilter.java",
                "switched TODO to @todo\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140630 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/find/FindingFilter.java",
                "merged WildcardUtils into FilenameUtils; thought the test case is still a separate file\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140639 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/find/FindingFilter.java"
            ]
        },
        "src/java/org/apache/commons/io/FileCleaner.java": {
            "message": [
                "Made a start on getting us Checkstyle clean. Fixed a few hundred gripes,\nbut there are still many, many more.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140614 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileCleaner.java",
                "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@155419 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileCleaner.java",
                "Improve javadoc for v1.1\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@289999 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileCleaner.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileCleaner.java",
                "Apply single license layout to all java files\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437680 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileCleaner.java",
                "IO-56,IO-70 - FileDeleteStrategy / FileCleaner\n- FileDeleteStrategy is a strategy for handling file deletion and can be used as a calback in FileCleaner\n- Together these allow FileCleaner to do a forceDelete to kill directories and provide hooks for secure delete\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@439102 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileCleaner.java",
                "IO-99 - FileCleaner.exitWhenFinished, to allow the thread to be terminated\nincludes some code from Jochen Wiedmann\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@482437 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileCleaner.java",
                "Removed duplicated {@link. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@482777 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileCleaner.java",
                "Minor javadoc change\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@488667 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileCleaner.java",
                "Document synchronization\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@490987 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileCleaner.java",
                "Created the FileCleaningTracker, basically a non-static\nversion of the FileCleaner, which can be controlled by\nthe user.\nPR: IO-116\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@518041 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileCleaner.java",
                "Javadoc: Missing tag for return type.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@553012 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileCleaner.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileCleaner.java",
                "Add missing @Deprecated annotations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@723969 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileCleaner.java"
            ]
        },
        "src/java/org/apache/commons/io/filefilter/ConditionalFileFilter.java": {
            "message": [
                "Fix formatting to four spaces\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140619 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/ConditionalFileFilter.java",
                "Add since tags\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140622 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/ConditionalFileFilter.java",
                "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@155419 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/ConditionalFileFilter.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/ConditionalFileFilter.java",
                "IO-140 JDK 1.5 changes: Use generics\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619103 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/ConditionalFileFilter.java"
            ]
        },
        "src/java/org/apache/commons/io/filefilter/WildcardFilter.java": {
            "message": [
                "Fix formatting to four spaces\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140619 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "moved WildcardUtils up a directory as it is used in two sub-packages of IO\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140620 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "Add since tags\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140622 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "merged WildcardUtils into FilenameUtils; thought the test case is still a separate file\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140639 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@155419 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "Add WildcardFileFilter deprecating WildcardFilter\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@417092 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "Apply single license layout to all java files\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437680 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "IO-131 Implement java.io.Serializable in IOFileFilter implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@587916 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "IO-133 - Make fields final so classes are immutable/threadsafe - thanks to Sebb for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@591058 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "Remove unused imports and organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@606381 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "IO-140 JDK 1.5 changes: Use generics\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619103 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "Add missing @Override annotations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@723942 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "IO-191 - Possible improvements using static analysis - patch from Peter Lawrey\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@736890 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "Fix some issues identified by FindBugs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004077 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/WildcardFilter.java"
            ]
        },
        "src/java/org/apache/commons/io/WildcardUtils.java": {
            "message": [
                "Add since tags\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140622 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/WildcardUtils.java"
            ]
        },
        "src/test/org/apache/commons/io/WildcardUtilsTest.java": {
            "message": [
                "Organize imports\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140623 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/WildcardUtilsTest.java"
            ]
        },
        "src/java/org/apache/commons/io/find/FileFinder.java": {
            "message": [
                "promoted comment to a TODO\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140627 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/find/FileFinder.java",
                "switched TODO to @todo\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140630 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/find/FileFinder.java",
                "merged WildcardUtils into FilenameUtils; thought the test case is still a separate file\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140639 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/find/FileFinder.java"
            ]
        },
        "src/test/org/apache/commons/io/PackageTestSuite.java": {
            "message": [
                "merged WildcardUtils into FilenameUtils; thought the test case is still a separate file\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140639 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/PackageTestSuite.java",
                "Fix FileSystemUtils and add tests\nfrom Frank W. Zammetti\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@240439 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/PackageTestSuite.java",
                "Handle security restricted directories\nbug 36801, from Chris Eldredge\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@291765 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/PackageTestSuite.java",
                "Implement a LineIterator over the lines in a file or reader\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@366364 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/PackageTestSuite.java",
                "Break out waitFor test for Windows2000 reasons\nbug 38927, from Niall Pemberton\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@385294 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/PackageTestSuite.java",
                "Add IOCase to handle case-sensitivity\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@417090 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/PackageTestSuite.java",
                "Ensure that file filter package tests arent run twice\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@418640 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/PackageTestSuite.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/PackageTestSuite.java",
                "Apply single license layout to all java files\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437680 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/PackageTestSuite.java",
                "IO-56,IO-70 - FileDeleteStrategy / FileCleaner\n- FileDeleteStrategy is a strategy for handling file deletion and can be used as a calback in FileCleaner\n- Together these allow FileCleaner to do a forceDelete to kill directories and provide hooks for secure delete\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@439102 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/PackageTestSuite.java",
                "Add tests for FileDeleteStrategy\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@453903 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/PackageTestSuite.java",
                "Add cancellation support to DirectoryWalker\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@453928 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/PackageTestSuite.java",
                "A first cut on [IO-148] IOException with constructors which take a cause. Only one constructor implemented. Class name up for discussion. Copied from Apache Tika implementation by Jukka Zitting (see http://svn.apache.org/viewvc?view=rev&revision=606139)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@606340 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/PackageTestSuite.java",
                "IO-148 rename CausedIOException to IOExceptionWithCause\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609159 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/PackageTestSuite.java",
                "IO-127 - Changes so that the tests run on JDK 1.3 using the Ant build:\n- Remove RegexFileFilter tests from FileFilterTestCase and put them in a new separate test case (RegexFileFilterTestCase)\n- Remove the other JDK 1.4 dependant classes from the package test suites\n- change the Ant build to conditionally compile and run the tests based on whether Java version is JDK 1.3 or higher\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@612686 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/PackageTestSuite.java",
                "Add FileCleaningTrackerTestCase to the package suite - thanks to Sebb\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@612857 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/PackageTestSuite.java",
                "Switch to JDK 1.5, remove JDK 1.3 logic from ant build\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619102 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/PackageTestSuite.java",
                "IO-192: Tagged input and output streams\n\nAdded the proposed TaggedIOException, TaggedInputStream and TaggedOutputStream classes and related unit tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@741562 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/PackageTestSuite.java",
                "Oops - forgot to update the test suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@902086 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/PackageTestSuite.java"
            ]
        },
        "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java": {
            "message": [
                "Convert wildcard method to match based on OS case sensitivity\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140647 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                "Fix bug in wildcard search for advanced repetitive matches\nbug 33303, from Danival Taffarel Calegari\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@156217 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                "Make FilenameUtils equals methods case-sensitive, with some optional system case matching\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@160343 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                "Add methods to use IOCase case-sensitivity\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@417091 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                "Test and fix case sensitive wildcard filter\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@418641 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                "Apply single license layout to all java files\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437680 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                "IO-167 Fix case-insensitive string handling - thanks to Benjamin Bentmann\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@661822 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                "IO-246 FilenameUtils - wildcardMatch gives incorrect results - thanks to wa\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002582 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                "Some more test cases\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002805 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                "Fix tests so the show \"*?\" bug, and disable for time being\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002807 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java"
            ]
        },
        "src/test/org/apache/commons/io/FileCleanerTestCase.java": {
            "message": [
                "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@155419 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileCleanerTestCase.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileCleanerTestCase.java",
                "Apply single license layout to all java files\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437680 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileCleanerTestCase.java",
                "IO-56,IO-70 - FileDeleteStrategy / FileCleaner\n- FileDeleteStrategy is a strategy for handling file deletion and can be used as a calback in FileCleaner\n- Together these allow FileCleaner to do a forceDelete to kill directories and provide hooks for secure delete\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@439102 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileCleanerTestCase.java",
                "Fixing #IO-82, in JDK 1.6 the gc call does not seem to be giving us the garbage collection, so Stephen came up with this to force that to happen. Speed seems good in JDK 1.4->1.6 and happily this isn't an issue with the underlying source, just the test. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@463310 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileCleanerTestCase.java",
                "IO-99 - FileCleaner.exitWhenFinished, to allow the thread to be terminated\nincludes some code from Jochen Wiedmann\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@482437 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileCleanerTestCase.java",
                "Created the FileCleaningTracker, basically a non-static\nversion of the FileCleaner, which can be controlled by\nthe user.\nPR: IO-116\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@518041 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileCleanerTestCase.java",
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileCleanerTestCase.java",
                "Remove throws clauses that don't apply\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@896987 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileCleanerTestCase.java",
                "Tidy up tests:\n- remove suite() and main() methods\n- Deleted package test classes and All test classes\n- Allow Ant build to run a single test; default to all\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919474 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileCleanerTestCase.java",
                "More deliberate use of deprecated items\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@920127 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileCleanerTestCase.java"
            ]
        },
        "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java": {
            "message": [
                "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@155419 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "IO-84 - add tests for files > 2GB to IOUtils.copy(), CountingInputStream and CountingOutputStream\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@463537 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "IO-84 - Make IOUtils.copy return -1 not an exception for large files, as more backwards compatible\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@481854 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "Remove unused imports and organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@606381 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "Drop or make use of variables returned by method calls\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@896986 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "Tidy up tests:\n- remove suite() and main() methods\n- Deleted package test classes and All test classes\n- Allow Ant build to run a single test; default to all\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919474 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "assertTrue(actual==expected) => assertEquals(expected, actual)\nGives more info in failure cases\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@934112 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "IO-235 Fix Test case - unused YellOnFlushAndCloseOutputStream\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@982450 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilsCopyTestCase.java"
            ]
        },
        "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java": {
            "message": [
                "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@155419 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                "Increased test coverage for file filter tests, and also fixed some nits in CountingInputStreamTest.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@201764 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                "Add IOUtils.writeLines\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@279170 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                "Remove unused imports and organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@606381 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                "IO-140 JDK 1.5 changes: Add new CharSequence flavours of methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619188 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                "Fix up raw types in test code\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@896988 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                "Tidy up tests:\n- remove suite() and main() methods\n- Deleted package test classes and All test classes\n- Allow Ant build to run a single test; default to all\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919474 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOUtilsWriteTestCase.java"
            ]
        },
        "src/test/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java": {
            "message": [
                "Increased test coverage for file filter tests, and also fixed some nits in CountingInputStreamTest.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@201764 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                "Remove unused imports and organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@606381 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                "assertTrue(actual==expected) => assertEquals(expected, actual)\nGives more info in failure cases\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@934112 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java"
            ]
        },
        "src/test/org/apache/commons/io/input/PackageTestSuite.java": {
            "message": [
                "Increased test coverage for file filter tests, and also fixed some nits in CountingInputStreamTest.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@201764 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/PackageTestSuite.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/PackageTestSuite.java",
                "Apply single license layout to all java files\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437680 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/PackageTestSuite.java",
                "IO-94 - MockInputStream/MockReader\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@462847 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/PackageTestSuite.java",
                "IO-94 - Re-name MockInputStream/MockReader to NullInputStream/NullReader\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@463529 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/PackageTestSuite.java",
                "IO-122 add Helper classes for controlling closing of streams - thanks to Jukka Zitting\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@584357 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/PackageTestSuite.java",
                "Add missing tests to suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609154 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/PackageTestSuite.java",
                "IO-127 - Changes so that the tests run on JDK 1.3 using the Ant build:\n- Remove RegexFileFilter tests from FileFilterTestCase and put them in a new separate test case (RegexFileFilterTestCase)\n- Remove the other JDK 1.4 dependant classes from the package test suites\n- change the Ant build to conditionally compile and run the tests based on whether Java version is JDK 1.3 or higher\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@612686 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/PackageTestSuite.java",
                "Switch to JDK 1.5, remove JDK 1.3 logic from ant build\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619102 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/PackageTestSuite.java",
                "IO-193: Broken input and output streams\n\nAdded the proposed BrokenInputStream and BrokenOutputStream classes.\nAlso added simple test cases for the new code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@741531 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/PackageTestSuite.java",
                "IO-192: Tagged input and output streams\n\nAdded the proposed TaggedIOException, TaggedInputStream and TaggedOutputStream classes and related unit tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@741562 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/PackageTestSuite.java"
            ]
        },
        "src/java/org/apache/commons/io/FileSystemUtils.java": {
            "message": [
                "Fix FileSystemUtils and add tests\nfrom Frank W. Zammetti\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@240439 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileSystemUtils.java",
                "Since tags and minor style changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@240470 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileSystemUtils.java",
                "Add comment\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@264867 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileSystemUtils.java",
                "Improve javadoc for v1.1\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@289999 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileSystemUtils.java",
                "Rename the free space method to be commons-io like\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@291741 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileSystemUtils.java",
                "Javadoc fixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@293039 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileSystemUtils.java",
                "Switch to using dir /-c in FileSystemUtils.freeSpace for French locale\nbug 37027, from Thomas Ledoux\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@321346 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileSystemUtils.java",
                "FileSystemUtils.freeSpaceKb to normalize free space to kb\nbug 38574\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@383179 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileSystemUtils.java",
                "FileSystemUtils.freeSpaceKb javadoc fix\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@383201 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileSystemUtils.java",
                "Handle 512byte blocks such as on OS X\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@385680 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileSystemUtils.java",
                "IO-83 - Fix freeSpace for AIX and HP-UX\ncode from Magnus Grimsell, also from James Urie\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@436964 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileSystemUtils.java",
                "IO-90 - Fix freeSpace to avoid infinite loops and other errors\nincludes some code from Thomas Ledoux\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437031 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileSystemUtils.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileSystemUtils.java",
                "Apply single license layout to all java files\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437680 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileSystemUtils.java",
                "IO-91 - FileSystemUtils.freeSpace deprecated, replaced by freeSpaceKb\nDocument freeSpace not working with SunOS 5\ninfo from Magnus Grimsell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@438209 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileSystemUtils.java",
                "javadoc changes - mostly checkstyle\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@448799 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileSystemUtils.java",
                "IO-93 - FileSystemUtils - Fixed resource leak leading to 'Too many open files' error\n- Previously did not destroy Process instances (as JDK Javadoc is so poor)\n- http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4801027\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@453889 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileSystemUtils.java",
                "IO-140 JDK 1.5 changes: Use generics\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619103 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileSystemUtils.java",
                "IO-140 JDK 1.5 changes: Use StringBuilder (not-sync) instead of StringBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619112 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileSystemUtils.java",
                "Remove unnecessary cast from String to String.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619999 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileSystemUtils.java",
                "Fix raw type\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@634483 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileSystemUtils.java",
                "IO-160 FileSystemUtils.freeSpace fails on solaris - thanks to Mike Bristow for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@645787 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileSystemUtils.java",
                "IO-160 Make DF path final\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@645828 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileSystemUtils.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileSystemUtils.java",
                "IO-167 Fix case-insensitive string handling - thanks to Benjamin Bentmann for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@661646 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileSystemUtils.java",
                "IO-187 FileSystemUtils.freeSpaceKb doesn't work with relative paths on Linux\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919687 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileSystemUtils.java",
                "IO-194 FreeSpaceKb() with no input arguments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919691 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileSystemUtils.java",
                "IO-185 FileSystemUtils add freeSpaceKb() methods that take a timeout parameter - fixes FileSystemUtils.freeSpaceWindows blocks - reported by Martin Thelian\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002689 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileSystemUtils.java",
                "Include 'cause' in re-thrown exceptions\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002698 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileSystemUtils.java",
                "IO-209 FileSystemUtils freeSpaceKb fails to return correct size for a windows mount point - reported by Aditya Kishore\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002819 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileSystemUtils.java",
                "IO-209 Fix test failing on Unix - freeSpaceWindows() should always normalize files to Windows (even for the MockFileSystemUtils on Unix)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002917 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileSystemUtils.java",
                "@since Commons IO 2.0 tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003647 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileSystemUtils.java"
            ]
        },
        "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java": {
            "message": [
                "Handle tests being run on Unix\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@263865 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "Change test to try and make it pass Gump\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@267448 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "Rename the free space method to be commons-io like\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@291741 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "Switch to using dir /-c in FileSystemUtils.freeSpace for French locale\nbug 37027, from Thomas Ledoux\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@321346 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "FileSystemUtils.freeSpaceKb to normalize free space to kb\nbug 38574\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@383179 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "Handle 512byte blocks such as on OS X\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@385680 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "IO-83 - Fix freeSpace for AIX and HP-UX\ncode from Magnus Grimsell, also from James Urie\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@436964 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "IO-90 - Fix freeSpace to avoid infinite loops and other errors\nincludes some code from Thomas Ledoux\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437031 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "IO-91 - FileSystemUtils.freeSpace deprecated, replaced by freeSpaceKb\nDocument freeSpace not working with SunOS 5\ninfo from Magnus Grimsell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@438209 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "IO-93 - FileSystemUtils - Fixed resource leak leading to 'Too many open files' error\n- Previously did not destroy Process instances (as JDK Javadoc is so poor)\n- http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4801027\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@453889 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "Remove unnecessary casts.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@606380 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "IO-160 FileSystemUtils.freeSpace fails on solaris - thanks to Mike Bristow for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@645787 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "IO-167 Fix case-insensitive string handling - thanks to Benjamin Bentmann for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@661646 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "Remove throws clauses that don't apply\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@896987 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "Tidy up tests:\n- remove suite() and main() methods\n- Deleted package test classes and All test classes\n- Allow Ant build to run a single test; default to all\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919474 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "More deliberate use of deprecated items\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@920127 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "IO-185 FileSystemUtils add freeSpaceKb() methods that take a timeout parameter - fixes FileSystemUtils.freeSpaceWindows blocks - reported by Martin Thelian\n\n(woops - forgot to commit the test case changes)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002794 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "IO-209 FileSystemUtils freeSpaceKb fails to return correct size for a windows mount point - reported by Aditya Kishore\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002819 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileSystemUtilsTestCase.java"
            ]
        },
        "src/java/org/apache/commons/io/filefilter/AgeFileFilter.java": {
            "message": [
                "Fix checkstyle errors\nbug 38145, from Niall Pemberton\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@369075 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                "IO-89 - Correct AgeFileFilter Javadocs to reflect that it filters either newer files or files equal to or older than the cutoff. Correct SizeFileFilter Javadocs to reflect that it filters either smaller files or files equal to or larger than the threshold.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@463570 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                "IO-120 Improve file filter toString() methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@539231 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                "IO-131 Implement java.io.Serializable in IOFileFilter implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@587916 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                "IO-133 - Make fields final so classes are immutable/threadsafe - thanks to Sebb for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@591058 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                "Remove unused imports and organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@606381 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/AgeFileFilter.java"
            ]
        },
        "src/java/org/apache/commons/io/LineIterator.java": {
            "message": [
                "Add finalize method\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@383220 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/LineIterator.java",
                "Remove finalize method\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@383391 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/LineIterator.java",
                "Cleaned up LineIterator changes include:\n* Removed the IOIterator interface, it can be added back later when there is more than one\nIterator implementations with a close method.\n* Doesn't automatically close the Reader at EOF.\n* made LineIterator final because the hasNext method isn't implemented in a subclassable way.\n* constructor throws an IllegaArgumentException, not a NPE when the argument is bogus.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@383730 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/LineIterator.java",
                "Further adjustments to javadoc/implementation of LineIterator\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@384037 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/LineIterator.java",
                "IO-80 - Make LineIterator implement Iterator\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@412592 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/LineIterator.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/LineIterator.java",
                "IO-140 JDK 1.5 changes: Use generics\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619103 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/LineIterator.java",
                "Fixing javadoc as per IO-180\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@694200 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/LineIterator.java",
                "IO-181 LineIterator should implement Iterable\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919627 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/LineIterator.java",
                "Revert r919627\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@922103 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/LineIterator.java"
            ]
        },
        "src/test/org/apache/commons/io/LineIteratorTestCase.java": {
            "message": [
                "Cleaned up LineIterator changes include:\n* Removed the IOIterator interface, it can be added back later when there is more than one\nIterator implementations with a close method.\n* Doesn't automatically close the Reader at EOF.\n* made LineIterator final because the hasNext method isn't implemented in a subclassable way.\n* constructor throws an IllegaArgumentException, not a NPE when the argument is bogus.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@383730 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/LineIteratorTestCase.java",
                "Further adjustments to javadoc/implementation of LineIterator\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@384037 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/LineIteratorTestCase.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/LineIteratorTestCase.java",
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/LineIteratorTestCase.java",
                "Fix up raw types in test code\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@896988 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/LineIteratorTestCase.java",
                "Tidy up tests:\n- remove suite() and main() methods\n- Deleted package test classes and All test classes\n- Allow Ant build to run a single test; default to all\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919474 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/LineIteratorTestCase.java"
            ]
        },
        "src/test/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java": {
            "message": [
                "If chmod fails don't fail the test\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@385685 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                "Apply single license layout to all java files\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437680 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                "Made the FileCleaningTracker serializable.\nThis is required by commons-fileupload, because the\nDiskFileItem's may be part of the HTTP session while\nstill carrying a reference to the tracker.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@518770 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                "Remove unused imports and organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@606381 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                "Fix up some raw types and unthrown Exceptions\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@806007 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                "Tidy up tests:\n- remove suite() and main() methods\n- Deleted package test classes and All test classes\n- Allow Ant build to run a single test; default to all\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919474 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java"
            ]
        },
        "src/java/org/apache/commons/io/IOCase.java": {
            "message": [
                "Test and fix case sensitive wildcard filter\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@418641 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOCase.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOCase.java",
                "Apply single license layout to all java files\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437680 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOCase.java",
                "2 Javadoc fixes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@484844 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOCase.java",
                "IO-144 Add a compare method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@601797 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOCase.java",
                "A couple of missing EOLs to pretty things up.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@606345 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOCase.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOCase.java",
                "IO-167 Fix case-insensitive string handling - thanks to Benjamin Bentmann\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@661822 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOCase.java",
                "IO-171 Document that IOCase assumes there are only two OSes: Windows and Unix\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002159 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOCase.java",
                "@since Commons IO 2.0 tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003647 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOCase.java"
            ]
        },
        "src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java": {
            "message": [
                "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@418642 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "Apply single license layout to all java files\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437680 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "IO-120 Improve file filter toString() methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@539231 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "IO-131 Implement java.io.Serializable in IOFileFilter implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@587916 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "IO-133 - Make fields final so classes are immutable/threadsafe - thanks to Sebb for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@591058 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "Remove unused imports and organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@606381 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "IO-140 JDK 1.5 changes: Use generics\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619103 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "IO-140 JDK 1.5 changes: Use StringBuilder (not-sync) instead of StringBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619112 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "Fix svn properties only (eol-style, keywords etc)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@658782 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "IO-191 - Possible improvements using static analysis - patch from Peter Lawrey\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@736890 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "Fix some issues identified by FindBugs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004077 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java"
            ]
        },
        "src/java/org/apache/commons/io/FileFinder.java": {
            "message": [
                "Allow subclasses to block skip directory processing\nAdd start and end callback methods\nImprove documentation\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@424748 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileFinder.java",
                "Create DirectoryWalker by extracting from FileFinder\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@424750 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileFinder.java"
            ]
        },
        "src/java/org/apache/commons/io/DirectoryWalker.java": {
            "message": [
                "IO-86 DirectoryWalker modifications, delete FileFinder and rename FileFinderTestCase to DirectoryWalkerTestCase:\n- Change DirectoryWalker methods to use a Collection rather than List\n- Move the handleDirectoryEnd() method within the \"process\" check\n- Change walk() method signature to take a Collection and not return anything\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@425158 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/DirectoryWalker.java",
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/DirectoryWalker.java",
                "Separate handleDirectory from handleDirectoryStart\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@438218 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/DirectoryWalker.java",
                "Correct example in the javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@441487 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/DirectoryWalker.java",
                "javadoc changes - mostly checkstyle\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@448799 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/DirectoryWalker.java",
                "Add cancellation support to DirectoryWalker\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@453928 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/DirectoryWalker.java",
                "IO-86 - Update cancellation behaviour in DirectoryWalker to use a new CancelException, also add IOException to \"lifecycle\" method definitions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@463560 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/DirectoryWalker.java",
                "Add serial version id and unify javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@463909 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/DirectoryWalker.java",
                "Spelling, javadoc, variable names\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@463913 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/DirectoryWalker.java",
                "Add constructor to take directory and file filters separately\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@463942 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/DirectoryWalker.java",
                "Missing / in HTML\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@472344 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/DirectoryWalker.java",
                "Add additional cancellation support, including checkIsCancelled() and handleIsCancelled()\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@481847 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/DirectoryWalker.java",
                "Removed @return javadoc. It's a void method. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@482774 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/DirectoryWalker.java",
                "Fixing the tag reference in the javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@482780 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/DirectoryWalker.java",
                "Adding missing @param for results. I'm assuming that the results 'may be updated'\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@482781 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/DirectoryWalker.java",
                "Use generics.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@620379 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/DirectoryWalker.java",
                "Fix svn properties only (eol-style, keywords etc)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@658782 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/DirectoryWalker.java",
                "IO-176 Add a callback method for filtering directory contents - requested by David Felsenthal\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@721635 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/DirectoryWalker.java",
                "javadoc/checkstyle\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@721742 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/DirectoryWalker.java",
                "IO-191 - Possible improvements using static analysis - patch from Peter Lawrey\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@736890 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/DirectoryWalker.java",
                "Change DirectoryWalker to use generified Collection\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@897578 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/DirectoryWalker.java",
                "IO-229 use new FileFilterUtils.and() and FileFilterUtils.or() varargs methods \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002869 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/DirectoryWalker.java",
                "@since Commons IO 2.0 tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003647 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/DirectoryWalker.java"
            ]
        },
        "src/java/org/apache/commons/io/filefilter/CanReadFileFilter.java": {
            "message": [
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/CanReadFileFilter.java",
                "IO-131 Implement java.io.Serializable in IOFileFilter implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@587916 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/CanReadFileFilter.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/CanReadFileFilter.java"
            ]
        },
        "src/java/org/apache/commons/io/filefilter/CanWriteFileFilter.java": {
            "message": [
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/CanWriteFileFilter.java",
                "IO-131 Implement java.io.Serializable in IOFileFilter implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@587916 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/CanWriteFileFilter.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/CanWriteFileFilter.java"
            ]
        },
        "src/java/org/apache/commons/io/filefilter/EmptyFileFilter.java": {
            "message": [
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/EmptyFileFilter.java",
                "IO-131 Implement java.io.Serializable in IOFileFilter implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@587916 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/EmptyFileFilter.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/EmptyFileFilter.java"
            ]
        },
        "src/java/org/apache/commons/io/filefilter/FileFileFilter.java": {
            "message": [
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FileFileFilter.java",
                "IO-131 Implement java.io.Serializable in IOFileFilter implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@587916 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FileFileFilter.java",
                "Remove extraneous exec properties\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@618694 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FileFileFilter.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/FileFileFilter.java"
            ]
        },
        "src/java/org/apache/commons/io/filefilter/HiddenFileFilter.java": {
            "message": [
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/HiddenFileFilter.java",
                "IO-131 Implement java.io.Serializable in IOFileFilter implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@587916 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/HiddenFileFilter.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/HiddenFileFilter.java"
            ]
        },
        "src/java/org/apache/commons/io/filefilter/SizeFileFilter.java": {
            "message": [
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/SizeFileFilter.java",
                "IO-89 - Correct AgeFileFilter Javadocs to reflect that it filters either newer files or files equal to or older than the cutoff. Correct SizeFileFilter Javadocs to reflect that it filters either smaller files or files equal to or larger than the threshold.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@463570 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/SizeFileFilter.java",
                "IO-120 Improve file filter toString() methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@539231 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/SizeFileFilter.java",
                "IO-131 Implement java.io.Serializable in IOFileFilter implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@587916 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/SizeFileFilter.java",
                "IO-133 - Make fields final so classes are immutable/threadsafe - thanks to Sebb for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@591058 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/SizeFileFilter.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/SizeFileFilter.java"
            ]
        },
        "src/test/org/apache/commons/io/AllIOTestSuite.java": {
            "message": [
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/AllIOTestSuite.java"
            ]
        },
        "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java": {
            "message": [
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                "Separate handleDirectory from handleDirectoryStart\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@438218 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                "Add cancellation support to DirectoryWalker\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@453928 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                "IO-86 - Update cancellation behaviour in DirectoryWalker to use a new CancelException, also add IOException to \"lifecycle\" method definitions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@463560 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                "Add constructor to take directory and file filters separately\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@463942 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                "Add additional cancellation support, including checkIsCancelled() and handleIsCancelled()\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@481847 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                "Replace the use of deprecated classes (in un-related tests) with non-deprecated versions\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@596583 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                "Remove unused imports and organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@606381 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                "Fix up raw types in test code\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@896988 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                "Remove items from try block that don't need to be protected; fixes possible NPE warning in Eclipse.\nStart fixing raw types\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@897193 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                "Change DirectoryWalker to use generified Collection\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@897578 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                "Test File filtering using a String results list\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@897583 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                "Tidy up tests:\n- remove suite() and main() methods\n- Deleted package test classes and All test classes\n- Allow Ant build to run a single test; default to all\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919474 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/DirectoryWalkerTestCase.java"
            ]
        },
        "src/test/org/apache/commons/io/FileUtilsWaitForTestCase.java": {
            "message": [
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsWaitForTestCase.java",
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsWaitForTestCase.java",
                "Remove throws clauses that don't apply\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@896987 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsWaitForTestCase.java",
                "Tidy up tests:\n- remove suite() and main() methods\n- Deleted package test classes and All test classes\n- Allow Ant build to run a single test; default to all\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919474 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsWaitForTestCase.java"
            ]
        },
        "src/test/org/apache/commons/io/IOCaseTestCase.java": {
            "message": [
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOCaseTestCase.java",
                "IO-144 Add a compare method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@601797 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOCaseTestCase.java",
                "IO-167 Fix case-insensitive string handling - thanks to Benjamin Bentmann\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@661822 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOCaseTestCase.java",
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOCaseTestCase.java",
                "Remove throws clauses that don't apply\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@896987 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOCaseTestCase.java",
                "Tidy up tests:\n- remove suite() and main() methods\n- Deleted package test classes and All test classes\n- Allow Ant build to run a single test; default to all\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919474 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOCaseTestCase.java"
            ]
        },
        "src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java": {
            "message": [
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                "Remove unused imports and organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@606381 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                "Fix up raw types in test code\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@896988 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                "Tidy up tests:\n- remove suite() and main() methods\n- Deleted package test classes and All test classes\n- Allow Ant build to run a single test; default to all\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919474 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java"
            ]
        },
        "src/test/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java": {
            "message": [
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java",
                "Remove unnecessary casts.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@606380 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java",
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java",
                "Fix up raw types in test code\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@896988 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java"
            ]
        },
        "src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java": {
            "message": [
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                "Remove unused imports and organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@606381 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                "Fix up raw types in test code\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@896988 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                "Tidy up tests:\n- remove suite() and main() methods\n- Deleted package test classes and All test classes\n- Allow Ant build to run a single test; default to all\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919474 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java"
            ]
        },
        "src/test/org/apache/commons/io/filefilter/PackageTestSuite.java": {
            "message": [
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/PackageTestSuite.java",
                "Apply single license layout to all java files\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437680 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/PackageTestSuite.java",
                "Switch to JDK 1.5, remove JDK 1.3 logic from ant build\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619102 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/PackageTestSuite.java"
            ]
        },
        "src/test/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java": {
            "message": [
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java",
                "Apply single license layout to all java files\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437680 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java",
                "IO-165 set svn:eol-style to native - thanks to Benjamin Bentmann for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@651569 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java",
                "Remove tabs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@658831 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java"
            ]
        },
        "src/test/org/apache/commons/io/output/PackageTestSuite.java": {
            "message": [
                "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/PackageTestSuite.java",
                "Apply single license layout to all java files\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437680 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/PackageTestSuite.java",
                "IO-95 - Add NullWriter\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@462833 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/PackageTestSuite.java",
                "IO-122 add Helper classes for controlling closing of streams - thanks to Jukka Zitting\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@584357 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/PackageTestSuite.java",
                "IO-153 Add a FileWriter that accepts an encoding - patch from Stephen Colebourne\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609864 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/PackageTestSuite.java",
                "IO-127 - Changes so that the tests run on JDK 1.3 using the Ant build:\n- Remove RegexFileFilter tests from FileFilterTestCase and put them in a new separate test case (RegexFileFilterTestCase)\n- Remove the other JDK 1.4 dependant classes from the package test suites\n- change the Ant build to conditionally compile and run the tests based on whether Java version is JDK 1.3 or higher\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@612686 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/PackageTestSuite.java",
                "Switch to JDK 1.5, remove JDK 1.3 logic from ant build\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619102 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/PackageTestSuite.java",
                "Add StringBuilderWriterTest to suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619245 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/PackageTestSuite.java",
                "IO-193: Broken input and output streams\n\nAdded the proposed BrokenInputStream and BrokenOutputStream classes.\nAlso added simple test cases for the new code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@741531 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/PackageTestSuite.java",
                "IO-192: Tagged input and output streams\n\nAdded the proposed TaggedIOException, TaggedInputStream and TaggedOutputStream classes and related unit tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@741562 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/PackageTestSuite.java"
            ]
        },
        "src/java/org/apache/commons/io/FileDeleteStrategy.java": {
            "message": [
                "javadoc changes - mostly checkstyle\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@448799 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileDeleteStrategy.java",
                "Fix id tag\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@453895 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileDeleteStrategy.java",
                "Fix id tag\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@453896 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileDeleteStrategy.java",
                "Add tests for FileDeleteStrategy\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@453903 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileDeleteStrategy.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileDeleteStrategy.java",
                "Add missing @Override annotations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@723942 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileDeleteStrategy.java"
            ]
        },
        "src/java/org/apache/commons/io/input/MockInputStream.java": {
            "message": [
                "javadoc correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@454249 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/MockInputStream.java",
                "IO-94 - MockInputStream/MockReader\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@462847 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/MockInputStream.java"
            ]
        },
        "src/java/org/apache/commons/io/output/NullWriter.java": {
            "message": [
                "IO-95 - Remove throws IOException from methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@462832 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/NullWriter.java",
                "IO-143 Added Singleton Constants in several stream classes - thanks to Nikunj Trivedi for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@601751 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/NullWriter.java",
                "Checkstyle/javadoc only - @see no longer works since checkstyle 4 - see http://tinyurl.com/2x8cev\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@610010 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/NullWriter.java",
                "IO-140 JDK 1.5 changes: Add new JDK 1.5 methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619135 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/NullWriter.java",
                "Javadoc corrections\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619144 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/NullWriter.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/NullWriter.java",
                "@since Commons IO 2.0 tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003647 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/NullWriter.java"
            ]
        },
        "src/test/org/apache/commons/io/output/NullWriterTest.java": {
            "message": [
                "IO-95 - Remove throws IOException from methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@462832 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/NullWriterTest.java"
            ]
        },
        "src/java/org/apache/commons/io/input/MockReader.java": {
            "message": [
                "IO-94 - MockInputStream/MockReader\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@462847 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/MockReader.java"
            ]
        },
        "src/test/org/apache/commons/io/input/MockInputStreamTestCase.java": {
            "message": [
                "IO-94 - MockInputStream/MockReader\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@462847 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/MockInputStreamTestCase.java"
            ]
        },
        "src/test/org/apache/commons/io/input/MockReaderTestCase.java": {
            "message": [
                "IO-94 - MockInputStream/MockReader\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@462847 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/MockReaderTestCase.java"
            ]
        },
        "src/java/org/apache/commons/io/FileCleaningTracker.java": {
            "message": [
                "Made the FileCleaningTracker serializable.\nThis is required by commons-fileupload, because the\nDiskFileItem's may be part of the HTTP session while\nstill carrying a reference to the tracker.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@518770 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileCleaningTracker.java",
                "Merged in changes from 1.3 branch.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@552590 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileCleaningTracker.java",
                "IO-140 JDK 1.5 changes: Use generics\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619103 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileCleaningTracker.java",
                "IO-165 set svn:eol-style to native - thanks to Benjamin Bentmann for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@651569 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileCleaningTracker.java",
                "Add missing @Override annotations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@723942 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileCleaningTracker.java",
                "Fix raw types\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@897360 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileCleaningTracker.java",
                "See IO-159: remove() never returns null\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919676 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileCleaningTracker.java",
                "IO-220 FileCleaningTracker Vector performs badly under load\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@982093 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/FileCleaningTracker.java"
            ]
        },
        "src/test/org/apache/commons/io/FileDeleteStrategyTestCase.java": {
            "message": [
                "Fixing the mailing list addresses\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@560804 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileDeleteStrategyTestCase.java",
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileDeleteStrategyTestCase.java",
                "Tidy up tests:\n- remove suite() and main() methods\n- Deleted package test classes and All test classes\n- Allow Ant build to run a single test; default to all\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919474 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileDeleteStrategyTestCase.java"
            ]
        },
        "src/java/org/apache/commons/io/filefilter/RegexFilter.java": {
            "message": [
                "IO-74 Refactor RegexFilter - add ability to construct instances with either pattern flags or case sensitivity. Also simplify by removing the array/list of String patterns constructors since adding all variants with flags/case sensitivity would be cumbersome and also the logic is limited to \"OR\" and some users may want \"AND\" - AND/OR logic can be achieved by combining RegexFilter instances using the AndFileFilter and OrFileFilter implementations.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@584278 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/RegexFilter.java",
                "Add messages to IllegalArgumentExceptions, add tests for thrown expections\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@584302 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/RegexFilter.java"
            ]
        },
        "src/java/org/apache/commons/io/input/TeeInputStream.java": {
            "message": [
                "IO-129 Add a configurable option to close the OutputStream - patch from Jukka Zitting\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@584746 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/TeeInputStream.java",
                "Add @version to javadocs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@587913 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/TeeInputStream.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/TeeInputStream.java"
            ]
        },
        "src/java/org/apache/commons/io/input/AutoCloseInputStream.java": {
            "message": [
                "Add @version to javadocs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@587913 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/AutoCloseInputStream.java",
                "IO-122 - Helper classes for controlling closing of streams\n    - Added a finalizer to AutoCloseInputStream\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@608744 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/AutoCloseInputStream.java",
                "Checkstyle/javadoc only - @see no longer works since checkstyle 4 - see http://tinyurl.com/2x8cev\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@610010 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/AutoCloseInputStream.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/AutoCloseInputStream.java",
                "IO-211: Pre- and post-processing support for proxied streams\n\nCommitted the proposed patch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805151 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/AutoCloseInputStream.java",
                "@since Commons IO 2.0 tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003647 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/AutoCloseInputStream.java"
            ]
        },
        "src/java/org/apache/commons/io/input/CloseShieldInputStream.java": {
            "message": [
                "Add @version to javadocs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@587913 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/CloseShieldInputStream.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/CloseShieldInputStream.java"
            ]
        },
        "src/java/org/apache/commons/io/input/ClosedInputStream.java": {
            "message": [
                "Add @version to javadocs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@587913 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/ClosedInputStream.java",
                "IO-143 Added Singleton Constants in several stream classes - thanks to Nikunj Trivedi for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@601751 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/ClosedInputStream.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/ClosedInputStream.java"
            ]
        },
        "src/java/org/apache/commons/io/output/CloseShieldOutputStream.java": {
            "message": [
                "Add @version to javadocs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@587913 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/CloseShieldOutputStream.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/CloseShieldOutputStream.java"
            ]
        },
        "src/java/org/apache/commons/io/output/ClosedOutputStream.java": {
            "message": [
                "Add @version to javadocs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@587913 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ClosedOutputStream.java",
                "IO-143 Added Singleton Constants in several stream classes - thanks to Nikunj Trivedi for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@601751 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ClosedOutputStream.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/ClosedOutputStream.java"
            ]
        },
        "src/java/org/apache/commons/io/filefilter/RegexFileFilter.java": {
            "message": [
                "IO-131 Implement java.io.Serializable in IOFileFilter implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@587916 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/RegexFileFilter.java",
                "IO-133 - Make fields final so classes are immutable/threadsafe - thanks to Sebb for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@591058 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/RegexFileFilter.java",
                "Remove unused imports and organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@606381 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/RegexFileFilter.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/RegexFileFilter.java"
            ]
        },
        "src/java/org/apache/commons/io/CausedIOException.java": {
            "message": [
                "A second cut on [IO-148]: IOException with constructors which take a cause. New Throwable constructor. New Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@606371 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/CausedIOException.java",
                "Javadoc: follow Niall's suggestion to make the Javadoc not so close to the Sun version.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@606435 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/CausedIOException.java"
            ]
        },
        "src/test/org/apache/commons/io/CausedIOExceptionTestCase.java": {
            "message": [
                "A second cut on [IO-148]: IOException with constructors which take a cause. New Throwable constructor. New Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@606371 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/CausedIOExceptionTestCase.java"
            ]
        },
        "src/java/org/apache/commons/io/input/CharSequenceReader.java": {
            "message": [
                "Woops - remove JDK 1.5 StringBuilder\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609171 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/CharSequenceReader.java",
                "Removed unnecessary cast.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@610516 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/CharSequenceReader.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/CharSequenceReader.java"
            ]
        },
        "src/java/org/apache/commons/io/IOExceptionWithCause.java": {
            "message": [
                "Style fix - Unify @since tag format\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609286 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOExceptionWithCause.java",
                "IO-165 set svn:eol-style to native - thanks to Benjamin Bentmann for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@651569 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/IOExceptionWithCause.java"
            ]
        },
        "src/java/org/apache/commons/io/output/FileWriterWithEncoding.java": {
            "message": [
                "Checkstyle/javadoc only - @see no longer works since checkstyle 4 - see http://tinyurl.com/2x8cev\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@610010 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                "Correct JavaDoc - encoding must be specified\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@611634 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/FileWriterWithEncoding.java"
            ]
        },
        "src/java/org/apache/commons/io/comparator/DefaultFileComparator.java": {
            "message": [
                "IO-140 JDK 1.5 changes: Use generics\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619103 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/comparator/DefaultFileComparator.java",
                "IO-142 Add facility to sort file lists/arrays to Comparator implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@721626 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/comparator/DefaultFileComparator.java"
            ]
        },
        "src/java/org/apache/commons/io/comparator/ExtensionFileComparator.java": {
            "message": [
                "IO-140 JDK 1.5 changes: Use generics\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619103 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/comparator/ExtensionFileComparator.java",
                "IO-142 Add facility to sort file lists/arrays to Comparator implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@721626 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/comparator/ExtensionFileComparator.java",
                "Add Comparator toString() implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@721740 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/comparator/ExtensionFileComparator.java",
                "Add missing @Override annotations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@723942 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/comparator/ExtensionFileComparator.java",
                "Fix checkstyle errors\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003216 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/comparator/ExtensionFileComparator.java"
            ]
        },
        "src/java/org/apache/commons/io/comparator/LastModifiedFileComparator.java": {
            "message": [
                "IO-140 JDK 1.5 changes: Use generics\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619103 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/comparator/LastModifiedFileComparator.java",
                "IO-142 Add facility to sort file lists/arrays to Comparator implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@721626 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/comparator/LastModifiedFileComparator.java"
            ]
        },
        "src/java/org/apache/commons/io/comparator/NameFileComparator.java": {
            "message": [
                "IO-140 JDK 1.5 changes: Use generics\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619103 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/comparator/NameFileComparator.java",
                "IO-142 Add facility to sort file lists/arrays to Comparator implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@721626 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/comparator/NameFileComparator.java",
                "Add Comparator toString() implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@721740 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/comparator/NameFileComparator.java",
                "Add missing @Override annotations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@723942 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/comparator/NameFileComparator.java"
            ]
        },
        "src/java/org/apache/commons/io/comparator/PathFileComparator.java": {
            "message": [
                "IO-140 JDK 1.5 changes: Use generics\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619103 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/comparator/PathFileComparator.java",
                "IO-142 Add facility to sort file lists/arrays to Comparator implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@721626 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/comparator/PathFileComparator.java",
                "Add Comparator toString() implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@721740 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/comparator/PathFileComparator.java",
                "Add missing @Override annotations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@723942 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/comparator/PathFileComparator.java"
            ]
        },
        "src/java/org/apache/commons/io/comparator/ReverseComparator.java": {
            "message": [
                "IO-140 JDK 1.5 changes: Use generics\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619103 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/comparator/ReverseComparator.java",
                "IO-142 Add facility to sort file lists/arrays to Comparator implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@721626 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/comparator/ReverseComparator.java",
                "Add Comparator toString() implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@721740 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/comparator/ReverseComparator.java",
                "Add missing @Override annotations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@723942 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/comparator/ReverseComparator.java"
            ]
        },
        "src/java/org/apache/commons/io/comparator/SizeFileComparator.java": {
            "message": [
                "IO-140 JDK 1.5 changes: Use generics\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619103 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/comparator/SizeFileComparator.java",
                "IO-142 Add facility to sort file lists/arrays to Comparator implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@721626 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/comparator/SizeFileComparator.java",
                "Add Comparator toString() implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@721740 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/comparator/SizeFileComparator.java",
                "Add missing @Override annotations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@723942 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/comparator/SizeFileComparator.java"
            ]
        },
        "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java": {
            "message": [
                "Add messages to assertions to make it easier where the testFileCleanerExitWhenFinished1() is failing in Continuum\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619436 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                "Fix svn properties only (eol-style, keywords etc)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@658782 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                "Fix IO-161 FileCleaningTrackerTestCase hangs - reported by Sebastiano Vigna\n(copied code to try to force garbage collection from BeanUtils MemoryLeakTestCase)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@723153 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                "Remove throws clauses that don't apply\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@896987 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                "Fix raw types\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@897361 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                "Tidy up tests:\n- remove suite() and main() methods\n- Deleted package test classes and All test classes\n- Allow Ant build to run a single test; default to all\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919474 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                "IO-161 Try to fix the OutOfMemoryError in FileCleaningTrackerTestCase were seeing in Continuum and Gump\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002920 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003695 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java"
            ]
        },
        "src/java/org/apache/commons/io/monitor/FilesystemEntry.java": {
            "message": [
                "minor javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@645548 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/monitor/FilesystemEntry.java",
                "IO-191 - Possible improvements using static analysis - patch from Peter Lawrey\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@736890 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/monitor/FilesystemEntry.java",
                "@since Commons IO 2.0 tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003647 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/monitor/FilesystemEntry.java"
            ]
        },
        "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java": {
            "message": [
                "Provide more info for tests failing in Continuum\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@648903 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                "Increase delay to see if that affects continuum\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@648905 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                "Get a new File instance every time a file is \"touched\" - hopefully might reduce test failures on Gump/Continuum (that I can't reproduce locally)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@922465 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                "IO-196 - make test more focused to avoid the intermitent failures\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002909 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                "Add FileSystemMonitor Test\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003342 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java"
            ]
        },
        "src/test/org/apache/commons/io/comparator/LastModifiedFileComparatorTest.java": {
            "message": [
                "[IO-164] change test case setup to work around apparent Java bug on OS X\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@650580 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/comparator/LastModifiedFileComparatorTest.java",
                "IO-142 Add facility to sort file lists/arrays to Comparator implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@721626 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/comparator/LastModifiedFileComparatorTest.java",
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/comparator/LastModifiedFileComparatorTest.java",
                "Tidy up tests:\n- remove suite() and main() methods\n- Deleted package test classes and All test classes\n- Allow Ant build to run a single test; default to all\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919474 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/comparator/LastModifiedFileComparatorTest.java"
            ]
        },
        "src/test/org/apache/commons/io/IOExceptionWithCauseTestCase.java": {
            "message": [
                "IO-165 set svn:eol-style to native - thanks to Benjamin Bentmann for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@651569 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/IOExceptionWithCauseTestCase.java"
            ]
        },
        "src/java/org/apache/commons/io/input/NullInputStream.java": {
            "message": [
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/NullInputStream.java",
                "IO-191 - Possible improvements using static analysis - patch from Peter Lawrey\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@736890 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/NullInputStream.java"
            ]
        },
        "src/java/org/apache/commons/io/input/NullReader.java": {
            "message": [
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/NullReader.java",
                "IO-191 - Possible improvements using static analysis - patch from Peter Lawrey\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@736890 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/NullReader.java"
            ]
        },
        "src/java/org/apache/commons/io/monitor/FilesystemObserver.java": {
            "message": [
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                "IO-191 - Possible improvements using static analysis - patch from Peter Lawrey\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@736890 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/monitor/FilesystemObserver.java"
            ]
        },
        "src/java/org/apache/commons/io/output/StringBuilderWriter.java": {
            "message": [
                "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/StringBuilderWriter.java",
                "@since Commons IO 2.0 tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003647 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/StringBuilderWriter.java"
            ]
        },
        "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java": {
            "message": [
                "IO-142 Add facility to sort file lists/arrays to Comparator implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@721626 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                "Comparator test improvements\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@721741 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                "Fix up raw types in test code\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@896988 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                "A bit more info if the test fails\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@933994 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                "assertTrue(actual==expected) => assertEquals(expected, actual)\nGives more info in failure cases\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@934112 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                "Oops - bug in r934112. Use assertSame() for Object ==\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@936122 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java"
            ]
        },
        "src/test/org/apache/commons/io/comparator/DefaultFileComparatorTest.java": {
            "message": [
                "IO-142 Add facility to sort file lists/arrays to Comparator implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@721626 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/comparator/DefaultFileComparatorTest.java",
                "Try to fix gump failure\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@721739 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/comparator/DefaultFileComparatorTest.java",
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/comparator/DefaultFileComparatorTest.java",
                "Tidy up tests:\n- remove suite() and main() methods\n- Deleted package test classes and All test classes\n- Allow Ant build to run a single test; default to all\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919474 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/comparator/DefaultFileComparatorTest.java"
            ]
        },
        "src/test/org/apache/commons/io/comparator/ExtensionFileComparatorTest.java": {
            "message": [
                "IO-142 Add facility to sort file lists/arrays to Comparator implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@721626 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/comparator/ExtensionFileComparatorTest.java",
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/comparator/ExtensionFileComparatorTest.java",
                "Tidy up tests:\n- remove suite() and main() methods\n- Deleted package test classes and All test classes\n- Allow Ant build to run a single test; default to all\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919474 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/comparator/ExtensionFileComparatorTest.java",
                "Improve test coverage\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003315 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/comparator/ExtensionFileComparatorTest.java"
            ]
        },
        "src/test/org/apache/commons/io/comparator/NameFileComparatorTest.java": {
            "message": [
                "IO-142 Add facility to sort file lists/arrays to Comparator implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@721626 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/comparator/NameFileComparatorTest.java",
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/comparator/NameFileComparatorTest.java",
                "Tidy up tests:\n- remove suite() and main() methods\n- Deleted package test classes and All test classes\n- Allow Ant build to run a single test; default to all\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919474 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/comparator/NameFileComparatorTest.java",
                "Improve test coverage\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003315 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/comparator/NameFileComparatorTest.java"
            ]
        },
        "src/test/org/apache/commons/io/comparator/PathFileComparatorTest.java": {
            "message": [
                "IO-142 Add facility to sort file lists/arrays to Comparator implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@721626 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/comparator/PathFileComparatorTest.java",
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/comparator/PathFileComparatorTest.java",
                "Tidy up tests:\n- remove suite() and main() methods\n- Deleted package test classes and All test classes\n- Allow Ant build to run a single test; default to all\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919474 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/comparator/PathFileComparatorTest.java",
                "Improve test coverage\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003315 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/comparator/PathFileComparatorTest.java"
            ]
        },
        "src/test/org/apache/commons/io/comparator/SizeFileComparatorTest.java": {
            "message": [
                "IO-142 Add facility to sort file lists/arrays to Comparator implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@721626 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/comparator/SizeFileComparatorTest.java",
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/comparator/SizeFileComparatorTest.java",
                "Tidy up tests:\n- remove suite() and main() methods\n- Deleted package test classes and All test classes\n- Allow Ant build to run a single test; default to all\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919474 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/comparator/SizeFileComparatorTest.java"
            ]
        },
        "src/java/org/apache/commons/io/comparator/AbstractFileComparator.java": {
            "message": [
                "Add Comparator toString() implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@721740 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/comparator/AbstractFileComparator.java",
                "Add missing @Override annotations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@723942 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/comparator/AbstractFileComparator.java",
                "IO-191 - Possible improvements using static analysis - patch from Peter Lawrey\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@736890 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/comparator/AbstractFileComparator.java",
                "Use Class getSimpleName()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@736891 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/comparator/AbstractFileComparator.java",
                "@since Commons IO 2.0 tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003647 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/comparator/AbstractFileComparator.java"
            ]
        },
        "src/java/org/apache/commons/io/comparator/DirectoryFileComparator.java": {
            "message": [
                "Fix Javadoc error\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@723941 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/comparator/DirectoryFileComparator.java"
            ]
        },
        "src/java/org/apache/commons/io/comparator/CompositeFileComparator.java": {
            "message": [
                "Add missing @Override annotations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@723942 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/comparator/CompositeFileComparator.java",
                "IO-191 - Possible improvements using static analysis - patch from Peter Lawrey\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@736890 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/comparator/CompositeFileComparator.java",
                "Fix raw types for private variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@896991 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/comparator/CompositeFileComparator.java"
            ]
        },
        "src/java/org/apache/commons/io/monitor/FilesystemMonitor.java": {
            "message": [
                "IO-191 - Possible improvements using static analysis - patch from Peter Lawrey\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@736890 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/monitor/FilesystemMonitor.java"
            ]
        },
        "src/java/org/apache/commons/io/input/BrokenInputStream.java": {
            "message": [
                "IO-193: Broken input and output streams\n\nThere's no need for BrokenInputStream.reset() to be synchronized like the InputStream.reset() method it overrides.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@741536 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/BrokenInputStream.java",
                "IO-193: Broken input and output streams\n\nNext release version is 2.0\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805160 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/BrokenInputStream.java"
            ]
        },
        "src/java/org/apache/commons/io/input/TaggedInputStream.java": {
            "message": [
                "IO-192 use the new exception handling methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@744372 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/TaggedInputStream.java",
                "IO-192: Tagged input and output streams\n\nAdded static checker methods on TaggedIOException. This simplified the tagged stream classes and should make it easier to reuse just the TaggedIOException class.\n\nMade the tag object Serializable. Switched to using a unique id (UUID) object per tagged stream instead of the stream instance as the tag that binds thrown exceptions to the tagged stream.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@803310 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/TaggedInputStream.java",
                "Javadoc fixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805895 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/TaggedInputStream.java"
            ]
        },
        "src/java/org/apache/commons/io/output/TaggedOutputStream.java": {
            "message": [
                "IO-192 use the new exception handling methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@744372 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/TaggedOutputStream.java",
                "IO-192: Tagged input and output streams\n\nAdded static checker methods on TaggedIOException. This simplified the tagged stream classes and should make it easier to reuse just the TaggedIOException class.\n\nMade the tag object Serializable. Switched to using a unique id (UUID) object per tagged stream instead of the stream instance as the tag that binds thrown exceptions to the tagged stream.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@803310 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/TaggedOutputStream.java"
            ]
        },
        "src/java/org/apache/commons/io/TaggedIOException.java": {
            "message": [
                "Add missing @Override tag\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@744489 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/TaggedIOException.java",
                "IO-192: Tagged input and output streams\n\nAdded static checker methods on TaggedIOException. This simplified the tagged stream classes and should make it easier to reuse just the TaggedIOException class.\n\nMade the tag object Serializable. Switched to using a unique id (UUID) object per tagged stream instead of the stream instance as the tag that binds thrown exceptions to the tagged stream.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@803310 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/TaggedIOException.java",
                "Fix checkstyle errors\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003216 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/TaggedIOException.java"
            ]
        },
        "src/test/org/apache/commons/io/TaggedIOExceptionTest.java": {
            "message": [
                "IO-192: Tagged input and output streams\n\nAdded static checker methods on TaggedIOException. This simplified the tagged stream classes and should make it easier to reuse just the TaggedIOException class.\n\nMade the tag object Serializable. Switched to using a unique id (UUID) object per tagged stream instead of the stream instance as the tag that binds thrown exceptions to the tagged stream.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@803310 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/TaggedIOExceptionTest.java"
            ]
        },
        "src/test/org/apache/commons/io/input/TaggedInputStreamTest.java": {
            "message": [
                "IO-192: Tagged input and output streams\n\nAdded static checker methods on TaggedIOException. This simplified the tagged stream classes and should make it easier to reuse just the TaggedIOException class.\n\nMade the tag object Serializable. Switched to using a unique id (UUID) object per tagged stream instead of the stream instance as the tag that binds thrown exceptions to the tagged stream.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@803310 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/TaggedInputStreamTest.java"
            ]
        },
        "src/test/org/apache/commons/io/output/TaggedOutputStreamTest.java": {
            "message": [
                "IO-192: Tagged input and output streams\n\nAdded static checker methods on TaggedIOException. This simplified the tagged stream classes and should make it easier to reuse just the TaggedIOException class.\n\nMade the tag object Serializable. Switched to using a unique id (UUID) object per tagged stream instead of the stream instance as the tag that binds thrown exceptions to the tagged stream.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@803310 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/TaggedOutputStreamTest.java"
            ]
        },
        "src/java/org/apache/commons/io/output/BrokenOutputStream.java": {
            "message": [
                "IO-193: Broken input and output streams\n\nNext release version is 2.0\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805160 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/BrokenOutputStream.java"
            ]
        },
        "src/test/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java": {
            "message": [
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java",
                "Fix up some raw types and unthrown Exceptions\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@806007 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java",
                "Tidy up tests:\n- remove suite() and main() methods\n- Deleted package test classes and All test classes\n- Allow Ant build to run a single test; default to all\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919474 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java"
            ]
        },
        "src/test/org/apache/commons/io/comparator/CompositeFileComparatorTest.java": {
            "message": [
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/comparator/CompositeFileComparatorTest.java",
                "Fix up raw types in test code\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@896988 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/comparator/CompositeFileComparatorTest.java",
                "Tidy up tests:\n- remove suite() and main() methods\n- Deleted package test classes and All test classes\n- Allow Ant build to run a single test; default to all\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919474 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/comparator/CompositeFileComparatorTest.java",
                "assertTrue(actual==expected) => assertEquals(expected, actual)\nGives more info in failure cases\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@934112 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/comparator/CompositeFileComparatorTest.java"
            ]
        },
        "src/test/org/apache/commons/io/comparator/DirectoryFileComparatorTest.java": {
            "message": [
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/comparator/DirectoryFileComparatorTest.java",
                "Tidy up tests:\n- remove suite() and main() methods\n- Deleted package test classes and All test classes\n- Allow Ant build to run a single test; default to all\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919474 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/comparator/DirectoryFileComparatorTest.java",
                "xdocs directory has moved\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@933995 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/comparator/DirectoryFileComparatorTest.java"
            ]
        },
        "src/test/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java": {
            "message": [
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java",
                "Tidy up tests:\n- remove suite() and main() methods\n- Deleted package test classes and All test classes\n- Allow Ant build to run a single test; default to all\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919474 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java",
                "assertTrue(actual==expected) => assertEquals(expected, actual)\nGives more info in failure cases\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@934112 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java"
            ]
        },
        "src/test/org/apache/commons/io/input/AutoCloseInputStreamTest.java": {
            "message": [
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/AutoCloseInputStreamTest.java"
            ]
        },
        "src/test/org/apache/commons/io/input/BrokenInputStreamTest.java": {
            "message": [
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/BrokenInputStreamTest.java"
            ]
        },
        "src/test/org/apache/commons/io/input/CloseShieldInputStreamTest.java": {
            "message": [
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/CloseShieldInputStreamTest.java"
            ]
        },
        "src/test/org/apache/commons/io/input/NullInputStreamTest.java": {
            "message": [
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/NullInputStreamTest.java",
                "Narrow allowable Exceptions\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003571 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/NullInputStreamTest.java"
            ]
        },
        "src/test/org/apache/commons/io/input/NullReaderTest.java": {
            "message": [
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/NullReaderTest.java",
                "Narrow allowable Exceptions\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003571 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/NullReaderTest.java"
            ]
        },
        "src/test/org/apache/commons/io/input/TeeInputStreamTest.java": {
            "message": [
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/TeeInputStreamTest.java"
            ]
        },
        "src/test/org/apache/commons/io/output/BrokenOutputStreamTest.java": {
            "message": [
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/BrokenOutputStreamTest.java"
            ]
        },
        "src/test/org/apache/commons/io/output/CloseShieldOutputStreamTest.java": {
            "message": [
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/CloseShieldOutputStreamTest.java"
            ]
        },
        "src/test/org/apache/commons/io/output/FileWriterWithEncodingTest.java": {
            "message": [
                "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                "Fix up some raw types and unthrown Exceptions\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@806007 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/FileWriterWithEncodingTest.java"
            ]
        },
        "src/test/org/apache/commons/io/input/CharSequenceReaderTest.java": {
            "message": [
                "Unnecessary cast; javadoc error; raw types\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@806006 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/CharSequenceReaderTest.java"
            ]
        },
        "src/test/org/apache/commons/io/monitor/CollectionFilesystemListener.java": {
            "message": [
                "Fix up some raw types and unthrown Exceptions\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@806007 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/monitor/CollectionFilesystemListener.java",
                "Add FileSystemMonitor Test\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003342 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/monitor/CollectionFilesystemListener.java"
            ]
        },
        "src/test/org/apache/commons/io/output/StringBuilderWriterTest.java": {
            "message": [
                "Fix up some raw types and unthrown Exceptions\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@806007 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/StringBuilderWriterTest.java",
                "assertTrue(actual==expected) => assertEquals(expected, actual)\nGives more info in failure cases\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@934112 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/StringBuilderWriterTest.java",
                "Oops - bug in r934112. Use assertSame() for Object ==\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@936122 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/StringBuilderWriterTest.java"
            ]
        },
        "src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java": {
            "message": [
                "Tidy up tests:\n- remove suite() and main() methods\n- Deleted package test classes and All test classes\n- Allow Ant build to run a single test; default to all\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919474 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                "Suppress raw types warnings as well\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003693 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java"
            ]
        },
        "src/test/org/apache/commons/io/input/ProxyReaderTest.java": {
            "message": [
                "IO-242: Pre- and post-processing support for ProxyReader/Writer\n\nProtect against null arguments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@934035 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/ProxyReaderTest.java",
                "Missing annotations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003686 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/ProxyReaderTest.java"
            ]
        },
        "src/test/org/apache/commons/io/output/ProxyWriterTest.java": {
            "message": [
                "IO-242: Pre- and post-processing support for ProxyReader/Writer\n\nProtect against null arguments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@934035 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/ProxyWriterTest.java",
                "Add a few more tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@934053 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/output/ProxyWriterTest.java"
            ]
        },
        "src/java/org/apache/commons/io/input/BoundedInputStream.java": {
            "message": [
                "IO-197 Improve BoundedInputStream Javadocs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002431 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/BoundedInputStream.java",
                "IO-197 Change size and position from int to long\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002432 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/BoundedInputStream.java",
                "IO-197 Javadoc corrections\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002443 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/BoundedInputStream.java"
            ]
        },
        "src/java/org/apache/commons/io/input/Tailer.java": {
            "message": [
                "Make run field volatile because it is shared between threads\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002908 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/Tailer.java",
                "No longer need synch. here\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002913 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/Tailer.java",
                "Add test for and fix NPE if thread stopped with no file found\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002918 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/Tailer.java",
                "Localise variables to run() method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002922 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/Tailer.java",
                "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002924 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/Tailer.java",
                "Ensure file is closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002931 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/Tailer.java",
                "Original code kept the RAF if the re-open failed.\nRevert to the same behaviour, but explicitly close the file\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002933 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/Tailer.java",
                "Add static helper methods; update Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003156 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/Tailer.java",
                "Cannot be null\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003696 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/Tailer.java",
                "Javadocs only - fix checkstyle issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004062 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/Tailer.java"
            ]
        },
        "src/test/org/apache/commons/io/input/TailerTest.java": {
            "message": [
                "Add test for and fix NPE if thread stopped with no file found\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002918 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/TailerTest.java",
                "Add more checks to ensure callbacks called as expected\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003112 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/TailerTest.java",
                "Test static method and Executor method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003158 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/TailerTest.java"
            ]
        },
        "src/java/org/apache/commons/io/input/TailerListener.java": {
            "message": [
                "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002921 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/TailerListener.java"
            ]
        },
        "src/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java": {
            "message": [
                "@since Commons IO 2.0 tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003647 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java",
                "Fix some issues identified by FindBugs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004077 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java"
            ]
        },
        "src/test/org/apache/commons/io/input/BoundedInputStreamTest.java": {
            "message": [
                "Fix test javadoc warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003659 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/BoundedInputStreamTest.java"
            ]
        },
        "src/java/org/apache/commons/io/ByteOrderMark.java": {
            "message": [
                "Minor Javadoc correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004076 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/ByteOrderMark.java"
            ]
        },
        "src/java/org/apache/commons/io/input/BOMInputStream.java": {
            "message": [
                "IO-178 Fix Bug with firstBytes being consumed by getBOM()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004087 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/BOMInputStream.java",
                "IO-162 and IO-178 Minor refactoring to simplify\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004123 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/BOMInputStream.java"
            ]
        },
        "src/test/org/apache/commons/io/input/BOMInputStreamTest.java": {
            "message": [
                "IO-178 Fix Bug with firstBytes being consumed by getBOM()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004087 13f79535-47bb-0310-9956-ffa450edef68 src/test/org/apache/commons/io/input/BOMInputStreamTest.java"
            ]
        },
        "src/java/org/apache/commons/io/input/XmlStreamReader.java": {
            "message": [
                "Replace BOM detection and XML guess logic with BOMInputStream\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004092 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/XmlStreamReader.java",
                "IO-162 Javadocs improvements and add @Override tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004103 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/XmlStreamReader.java",
                "IO-162 Refactoring to remove the InputStream from XmlStreamReaderException\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004109 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/XmlStreamReader.java",
                "Add @since tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004112 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/XmlStreamReader.java",
                "IO-162 Slight refactoring to simplify\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004121 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/XmlStreamReader.java",
                "IO-162 Minor refactoring to improve readability\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004122 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/XmlStreamReader.java",
                "IO-162 and IO-178 Minor refactoring to simplify\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004123 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/XmlStreamReader.java"
            ]
        },
        "src/java/org/apache/commons/io/output/XmlStreamWriter.java": {
            "message": [
                "IO-162 Javadocs improvements and add @Override tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004103 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/XmlStreamWriter.java",
                "Add @since tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004112 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/output/XmlStreamWriter.java"
            ]
        },
        "src/java/org/apache/commons/io/input/XmlStreamReaderException.java": {
            "message": [
                "IO-162 Refactoring to remove the InputStream from XmlStreamReaderException\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004109 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/XmlStreamReaderException.java",
                "Add @since tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004112 13f79535-47bb-0310-9956-ffa450edef68 src/java/org/apache/commons/io/input/XmlStreamReaderException.java"
            ]
        },
        "src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java": {
            "message": [
                "Build changes - re-organize to standard m2 layout - fix test error\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004368 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Simplify and avoid boxing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302017 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "MOre test coverage\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304127 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Test case bug\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304129 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Test case bug\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304131 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Replace \"<code>null</code>\" with \"{@code null}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307459 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Fix deprecation warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1470209 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Trailing spaces\nThese are the worst offenders; a few still remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471765 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Fix unavoidable deprecations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642759 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Make JavaDoc tool happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1680650 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Language level code changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686260 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Added private and test-scoped sleep method that actually sleeps for a guaranteed minimal time\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718945 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "replace usage of deprecated Charsets constants with StandardCharsets constants src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "replace usage of deprecated IOUtils#closeQuietly with try-with-resources src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Replace custom temporary folder management with JUnit's TemporaryFolder.\nThis will allow Maven to run tests concurrently. src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Remove unnecessary casts. src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Remove setUp and tearDown methods that are no longer necessary after the switch to the TemporaryFolder rule. src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "[IO-605] Add class CanExecuteFileFilter. src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Use try-with-resources in tests and more.\n\n- Don't nest if you do not have to.\n- Document empty blocks.\n- Only run FileFilterTestCase#testCanExecute() on Windows to fix Jenkins\nbuild. src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Use try-with-resources and format to 120 line length. src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "[IO-669] Fix code smells; fix typos (#115)\n\n* fix code smells\r\n\r\n* fix typos\r\n\r\n* l to L\r\n\r\n* use Arrays.fill\r\n\r\n* revert deleting boxing src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Rename test package. src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Let org.apache.commons.io.filefilter classes work with\njava.nio.file.Files.walk* APIs.\n\nAlso: AccumulatorPathVisitor does not track directories properly. src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Simplify new PathFilter interface to a single method. src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Move new PathFilter interface to the file package, annotate it with\n@FunctionalInterface, and add a BasicFileAttributes parameter to accept\nattributes from java.nio.file.FileVisitor. src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Better boolean file filters. src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Use negate() instead of not() to match predicate terminology. src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Sort members. src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "[IO-597] FileUtils.iterateFiles runs out of memory when executed for a\ndirectory with large number of files.\n\nRe-implement FileUtils' iterateFiles(), iterateFilesAndDirs(),\nlistFiles(), listFilesAndDirs() to use NIO file tree walking instead of\nIO file listings to avoid memory consumption issues on large file trees. src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Refactor and simplify new boolean APIs. src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Use Files.notExists() instead of !Files.exists(). src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Try to workaround test failure on Ubuntu by using the NIO API to get a\nfile's last modified timestamp. src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Use varargs. src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Simplify Assertions (#234) src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "- Simplify array declarations.\n- Javadoc.\n- Use try-with-resources. src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Replace construction of FileInputStream and FileOutputStream objects with Files NIO APIs. (#221) src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "IO-746: dropping unnecessary casts and conversions (#267)\n\nSigned-off-by: Davide Angelocola <davide.angelocola@gmail.com> src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Fix FileFilterTestCase use case for symbolic links on non-Windows OS.\n\n- Make SymbolicLinkFileFilter configurable:\n-- Add SymbolicLinkFileFilter.SymbolicLinkFileFilter(FileVisitResult,\nFileVisitResult)\n-- Add AbstractFileFilter(FileVisitResult, FileVisitResult)\n- CountingPathVisitor should not follow links by default to properly\ncount from FileUtils. src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "Refactor tests to break out WildcardFileFilterTest. src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ]
        },
        "src/main/java/org/apache/commons/io/ByteOrderMark.java": {
            "message": [
                "remove redundant code\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004467 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/ByteOrderMark.java",
                "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004841 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/ByteOrderMark.java",
                "JavaDoc improvements\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005099 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/ByteOrderMark.java",
                "[IO-310] Add ByteOrderMark constants for UTF-32.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302750 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/ByteOrderMark.java",
                "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304048 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/ByteOrderMark.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/ByteOrderMark.java",
                "@since 2.2 markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304106 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/ByteOrderMark.java",
                "Fix checkstyle for line length > 120.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304166 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/ByteOrderMark.java",
                "[IO-321] ByteOrderMark UTF_32LE is incorrect.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1310398 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/ByteOrderMark.java",
                "Javadoc typos\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1347571 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/ByteOrderMark.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/ByteOrderMark.java",
                "IO-341 A constant for holding the BOM character (U+FEFF)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1468905 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/ByteOrderMark.java",
                "Trailing spaces\nThese are the worst offenders; others remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471767 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/ByteOrderMark.java",
                "Replace \"String.length()\" == 0 with \"String.isEmpty()\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1586504 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/ByteOrderMark.java",
                "IO-557: UnsupportedEncodingException when opening an ISO-8859-1 XML stream with Turkish as the default locale (closes #51)\n\nPerform locale independent upper case conversions.\n\nTo handle properly lower cased character encoding name in XML prolog\nwith any default system locale, notably Turkish. src/main/java/org/apache/commons/io/ByteOrderMark.java",
                "Remove @version $Id$ tags from pre-git SVN days. src/main/java/org/apache/commons/io/ByteOrderMark.java",
                "Javadoc and formatting. src/main/java/org/apache/commons/io/ByteOrderMark.java",
                "Add and use IOUtils.byteArray(*). src/main/java/org/apache/commons/io/ByteOrderMark.java",
                "Simplify copying arrays. src/main/java/org/apache/commons/io/ByteOrderMark.java",
                "Sort members. src/main/java/org/apache/commons/io/ByteOrderMark.java",
                "Use Objects.requireNonNull()\n\nUpdate Javadoc for existing calls. src/main/java/org/apache/commons/io/ByteOrderMark.java",
                "Reuse StandardCharsets src/main/java/org/apache/commons/io/ByteOrderMark.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/XmlStreamReader.java": {
            "message": [
                "Remove unnecessary throws throws XmlStreamReaderException from methods (already declares throwing IOException - which XmlStreamReaderException is)\n            \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004508 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "Remove unsafe *static* MessageFormats instances.\n\nFrom the MessageFormat JavaDocs:\n\"Message formats are not synchronized. It is recommended to create separate format instances for each thread. If multiple threads access a format concurrently, it must be synchronized externally.\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004511 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "Refactoring to remove the InputStream from XmlStreamReaderException in r1004109 means we don't need to pass the InputStream to the calculateRawEncoding() and calculateHttpEncoding() methods \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004512 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "Refactoring - move mine/encoding content type detection into the calculateHttpEncoding() method where its used\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004514 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "Refactor the calculateRawEncoding() & calculateHttpEncoding() methods to make them easier to understand\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004517 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "IO-162 Improve testing of Encoding Utility functionality (changed the visibility of some XmlStreamReader methods from private to package)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004822 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "IO-162 Throw XmlStreamReaderException instead of IOException (looks like this was missed when it was introduced in ROME)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004825 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "Immutable private field might as well be final\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004843 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "IO-162 Refactor lenient processing - simplifies the code and avoids reprocessing the stream\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004871 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "IO-162 Remove the static setDefaultEncoding() accessor - IMO this is a bad practice. Add two constructors to compensate\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004874 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "Minor formatting changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004878 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "Make reader and encoding fields immutable\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004882 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "Minor re-organization\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004891 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "Organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1021884 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "IO-258 - Fix XmlStreamReader consumes the stream during encoding detection\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1052161 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "Use fixed Locale for upcasing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1299947 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "[IO-320] Add XmlStreamReader support for UTF-32.\n[IO-331] BOMInputStream wrongly detects UTF-32LE_BOM files as UTF-16LE_BOM files in method getBOM().\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1346400 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "Trailing spaces\nThese are the worst offenders; others remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471767 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "Silence impossible \"possible NPE\" warning\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471788 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "Language level code changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686260 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "Fixed all checkstyle errors and a findbugs error\n\nFindbugs error was:\norg.apache.commons.io.output.DeferredFileOutputStream#thresholdReached\npossible file handle leak upon exception\n\nAlso contains fix for IO-446, submitted by Jeffrey Barrus\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686747 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "Fix Javadoc typos from https://github.com/apache/commons-io/pull/10.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1739188 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "Fix Javadoc typos (closes #30) src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "IO-557: UnsupportedEncodingException when opening an ISO-8859-1 XML stream with Turkish as the default locale (closes #51)\n\nPerform locale independent upper case conversions.\n\nTo handle properly lower cased character encoding name in XML prolog\nwith any default system locale, notably Turkish. src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "Don't need to nest else clause. Refactor magic numbers into constants. src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "name \"is\" -> \"inputStream\". src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "[IO-666] Normalize internal buffers to 8192 bytes. src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "IO-665  ensure that passing a null InputStream results in NPE with tests (#112)\n\n* ensure that passing a null InputStream results in NPE with tests\r\n\r\n* remove stray import from bad autocomplete\r\n\r\n* per review, fix formating for lamda () ->\r\n\r\n* per review, protect other constructors src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "Abbreviate and only call readLine() once in the loop. src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "Javadoc: Close paragraph tags. src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "Javadoc. src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "- Javadoc.\n- Add @SuppressWarnings(\"resource\") for parameter null checks.\n- Better private method name.\n- Format nits. src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "Provide an exception message. src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "Sort members. src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "Add @SuppressWarnings with comments. src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "Javadoc: Sentences end in a period. src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "In-line constant reference. src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "Add and use IOUtils.byteArray(*). src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "Fix Typos in JavaDoc, Comments and Tests (#201)\n\n* Fixed incorrect/missing JavaDoc.\r\n\r\n* Fixed misc. typos in comments and tests.\r\n\r\n* Fixed typos in exception messages. src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "- Simplify array declarations.\n- Javadoc.\n- Use try-with-resources. src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "Replace construction of FileInputStream and FileOutputStream objects with Files NIO APIs. (#221) src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "Add and use XmlStreamReader(Path).\n\nRemove leading underscores in test method names.\nRemove useless parentheses.\nUse try-with-resources.\nUse longer lines in some places. src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "Use StringBuilder instead of StringBuffer.\n\nUse final. src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "Better param name. src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "Reimplement internals to use try-with-resources. src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "Javadoc src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "Format tweak src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "Whitespace and name tweaks src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "Reuse StandardCharsets\n\nJavadoc src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "Add and reuse IOConsumer.forEach(*) and forEachIndexed(*).\n\nUse forEach and streams. src/main/java/org/apache/commons/io/input/XmlStreamReader.java"
            ]
        },
        "src/main/java/org/apache/commons/io/output/XmlStreamWriter.java": {
            "message": [
                "IO-162 Allow the default encoding to be configurable\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004737 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/XmlStreamWriter.java",
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/XmlStreamWriter.java",
                "Remove unnecessary parens.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1298020 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/XmlStreamWriter.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/XmlStreamWriter.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/XmlStreamWriter.java",
                "Fix Javadoc typos from https://github.com/apache/commons-io/pull/10.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1739188 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/XmlStreamWriter.java",
                "Javadoc: Use the active voice.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1739189 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/XmlStreamWriter.java",
                "Fix Javadoc typo.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1739190 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/XmlStreamWriter.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/output/XmlStreamWriter.java",
                "Fix Javadoc typos (closes #30) src/main/java/org/apache/commons/io/output/XmlStreamWriter.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/output/XmlStreamWriter.java",
                "IO-557: UnsupportedEncodingException when opening an ISO-8859-1 XML stream with Turkish as the default locale (closes #51)\n\nPerform locale independent upper case conversions.\n\nTo handle properly lower cased character encoding name in XML prolog\nwith any default system locale, notably Turkish. src/main/java/org/apache/commons/io/output/XmlStreamWriter.java",
                "Add @SuppressWarnings. src/main/java/org/apache/commons/io/output/XmlStreamWriter.java",
                "[IO-666] Normalize internal buffers to 8192 bytes. src/main/java/org/apache/commons/io/output/XmlStreamWriter.java",
                "Combine nested 'if' statement in 'else' block to 'else if'. src/main/java/org/apache/commons/io/output/XmlStreamWriter.java",
                "Sort members. src/main/java/org/apache/commons/io/output/XmlStreamWriter.java",
                "Inline single constant reference to other constant src/main/java/org/apache/commons/io/output/XmlStreamWriter.java",
                "Add Add XmlStreamWriter(OutputStream, Charset) src/main/java/org/apache/commons/io/output/XmlStreamWriter.java",
                "Sort main members src/main/java/org/apache/commons/io/output/XmlStreamWriter.java"
            ]
        },
        "src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java": {
            "message": [
                "IO-162 Allow the default encoding to be configurable\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004737 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java",
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java",
                "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java",
                "Replace custom temporary folder management with JUnit's TemporaryFolder.\nThis will allow Maven to run tests concurrently. Clean up imports. src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java",
                "IO-557: UnsupportedEncodingException when opening an ISO-8859-1 XML stream with Turkish as the default locale (closes #51)\n\nPerform locale independent upper case conversions.\n\nTo handle properly lower cased character encoding name in XML prolog\nwith any default system locale, notably Turkish. src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java",
                "IO-557: UnsupportedEncodingException when opening an ISO-8859-1 XML stream with Turkish as the default locale\n\nimprove tests by copying parts of the SystemDefaults rule from commons-lang\n\nadd changes.xml entry src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java",
                "IO-557: UnsupportedEncodingException when opening an ISO-8859-1 XML stream with Turkish as the default locale\n\nimprove test name src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java",
                "Remove @version $Id$ tags from pre-git SVN days. src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java",
                "Use try-with-resources in tests and more.\n\n- Don't nest if you do not have to.\n- Document empty blocks.\n- Only run FileFilterTestCase#testCanExecute() on Windows to fix Jenkins\nbuild. src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java",
                "Simplify Assertions (#234) src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java",
                "Add Add XmlStreamWriter(OutputStream, Charset) src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java",
                "Reuse StandardCharsets src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java",
                "Organize test imports src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java": {
            "message": [
                "IO-162 Throw XmlStreamReaderException instead of IOException (looks like this was missed when it was introduced in ROME)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004825 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                "Create a version of the XmlStreamReaderUtilitiesTest to run against the original XmlStreamReader implementation (Sanity check to make sure all the refactoring hasn't screwed things up)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004857 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                "Not thrown\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1090205 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                "Formating.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1310339 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                "[IO-320] Add XmlStreamReader support for UTF-32. Split out some @Test methods for finer grain failure reporting. Port to JUnit 4. Fix a param name typo.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1310360 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                "[IO-320] Add XmlStreamReader support for UTF-32.\n[IO-331] BOMInputStream wrongly detects UTF-32LE_BOM files as UTF-16LE_BOM files in method getBOM().\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1346400 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                "Ensure stream is closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1441282 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                "Unimportant boxing warning\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1441285 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                "Trailing spaces\nThese are the worst offenders; a few still remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471765 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                "Make JavaDoc tool happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1680650 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                "Minor improvement: (#176)\n\n* Add Final\r\n* Unused import\r\n* Unnecessary semicolon src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                "Fix Typos in JavaDoc, Comments and Tests (#201)\n\n* Fixed incorrect/missing JavaDoc.\r\n\r\n* Fixed misc. typos in comments and tests.\r\n\r\n* Fixed typos in exception messages. src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                "Add StringInputStream. src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                "Use try-with-resources src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/BOMInputStream.java": {
            "message": [
                "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004841 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/BOMInputStream.java",
                "JavaDoc improvements\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005099 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/BOMInputStream.java",
                "IO-257 Fix BOMInputStream's read(byte[]) can return 0 which it should not - thanks to Teemu L\u00e5ng\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1052095 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/BOMInputStream.java",
                "[IO-302] ArrayIndexOutOfBoundsException in BOMInputStream when reading a file without BOM multiple times\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1292455 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/BOMInputStream.java",
                "Drop $Date$ SVN variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302050 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/BOMInputStream.java",
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/BOMInputStream.java",
                "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/BOMInputStream.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/BOMInputStream.java",
                "[IO-320] Add XmlStreamReader support for UTF-32.\n[IO-331] BOMInputStream wrongly detects UTF-32LE_BOM files as UTF-16LE_BOM files in method getBOM().\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1346400 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/BOMInputStream.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/BOMInputStream.java",
                "Refactor magic number into constant.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1586307 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/BOMInputStream.java",
                "Use import static org.apache.commons.io.IOUtils.EOF instead of local constants.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1586342 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/BOMInputStream.java",
                "IO-428 BOMInputStream.skip returns wrong count if stream contains no BOM\n\nPatch by Stefan Gmeiner, applied with minor changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686527 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/BOMInputStream.java",
                "Add missing '@Override' annotations. src/main/java/org/apache/commons/io/input/BOMInputStream.java",
                "Fix Javadoc typos (closes #30) src/main/java/org/apache/commons/io/input/BOMInputStream.java",
                "[IO-537] BOMInputStream shouldn't sort array of BOMs in-place. src/main/java/org/apache/commons/io/input/BOMInputStream.java",
                "Make code style of hasBOM() consistent with getBOMCharsetName() src/main/java/org/apache/commons/io/input/BOMInputStream.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/input/BOMInputStream.java",
                "Use final for parameters. src/main/java/org/apache/commons/io/input/BOMInputStream.java",
                "Consistently use the final modifier with local variables. src/main/java/org/apache/commons/io/input/BOMInputStream.java",
                "Remove @version $Id$ tags from pre-git SVN days. src/main/java/org/apache/commons/io/input/BOMInputStream.java",
                "Fix \"unexpected heading\" Javadoc errors on Java 13+. src/main/java/org/apache/commons/io/input/BOMInputStream.java",
                "Refactor null-safe length query code into new IOUtils methods. src/main/java/org/apache/commons/io/input/BOMInputStream.java",
                "Remove trailing white spaces on all lines.\nMore lambdas, less boilerplate. src/main/java/org/apache/commons/io/input/BOMInputStream.java",
                "Make some simplifications (#121) src/main/java/org/apache/commons/io/input/BOMInputStream.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/input/BOMInputStream.java",
                "Javadoc. Close HTML tags. Use paragraph tags. src/main/java/org/apache/commons/io/input/BOMInputStream.java",
                "Raise embedded if into parent. src/main/java/org/apache/commons/io/input/BOMInputStream.java",
                "Organize imports. src/main/java/org/apache/commons/io/input/BOMInputStream.java",
                "Sort members. src/main/java/org/apache/commons/io/input/BOMInputStream.java",
                "Add final and remove useless parentheses. src/main/java/org/apache/commons/io/input/BOMInputStream.java",
                "Remove noisy inline comments. src/main/java/org/apache/commons/io/input/BOMInputStream.java",
                "Stream instead of loop src/main/java/org/apache/commons/io/input/BOMInputStream.java",
                "Fix exception message typo src/main/java/org/apache/commons/io/input/BOMInputStream.java",
                "Use Objects.equals()\n\nJavadoc, simplify lambda. src/main/java/org/apache/commons/io/input/BOMInputStream.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/main/java/org/apache/commons/io/input/BOMInputStream.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java": {
            "message": [
                "Unnecessary casts\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004842 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                "IO-162 Remove the static setDefaultEncoding() accessor - IMO this is a bad practice. Add two constructors to compensate\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004874 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                "Remove unnecessary try/finally\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004875 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                "Re-instated checks for non UTF-16 encodings (had to comment out 2 tests which failed)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004876 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                "Organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1021884 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                "IO-258 - Fix XmlStreamReader consumes the stream during encoding detection\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1052161 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                "Tests https://issues.apache.org/jira/browse/IO-277 (@Ignore'd). Port to JUnit 4.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1147916 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                "Convert to Java 5 enhanced for loops.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1169520 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                "[IO-320] Add XmlStreamReader support for UTF-32. Add DOM data and commented out call sites for UTF-32 BE and LE tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1310328 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                "[IO-320] Add XmlStreamReader support for UTF-32. Split out some @Test methods for finer grain failure reporting. Port to JUnit 4.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1310331 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                "[IO-320] Add XmlStreamReader support for UTF-32. Order annotation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1310337 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                "[IO-320] Add XmlStreamReader support for UTF-32.\n[IO-331] BOMInputStream wrongly detects UTF-32LE_BOM files as UTF-16LE_BOM files in method getBOM().\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1346400 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                "Ensure stream is closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1441282 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                "Trailing spaces\nThese are the worst offenders; a few still remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471765 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                "Make JavaDoc tool happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1680650 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                "Language level code changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686260 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                "Ensure streams are closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1695021 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                "Static imports come first. src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                "IO-557: UnsupportedEncodingException when opening an ISO-8859-1 XML stream with Turkish as the default locale (closes #51)\n\nPerform locale independent upper case conversions.\n\nTo handle properly lower cased character encoding name in XML prolog\nwith any default system locale, notably Turkish. src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                "IO-557: UnsupportedEncodingException when opening an ISO-8859-1 XML stream with Turkish as the default locale\n\nimprove tests by copying parts of the SystemDefaults rule from commons-lang\n\nadd changes.xml entry src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                "Remove redundant semicolons src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                "IO-665  ensure that passing a null InputStream results in NPE with tests (#112)\n\n* ensure that passing a null InputStream results in NPE with tests\r\n\r\n* remove stray import from bad autocomplete\r\n\r\n* per review, fix formating for lamda () ->\r\n\r\n* per review, protect other constructors src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                "Remove unused exceptions. Use try-with-resoruces.\nClean ups. Formatting. src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                "Minor improvement: (#176)\n\n* Add Final\r\n* Unused import\r\n* Unnecessary semicolon src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                "Minor improvement: (#177)\n\n* Unnecessary conversion to String\r\n* Add final\r\n* Use Standard Charset object\r\n* Redundant 'close()' src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                "Fix Typos in JavaDoc, Comments and Tests (#201)\n\n* Fixed incorrect/missing JavaDoc.\r\n\r\n* Fixed misc. typos in comments and tests.\r\n\r\n* Fixed typos in exception messages. src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                "Add and use XmlStreamReader(Path).\n\nRemove leading underscores in test method names.\nRemove useless parentheses.\nUse try-with-resources.\nUse longer lines in some places. src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                "Add StringInputStream. src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                "Add final and remove useless parentheses. src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                "Use try-with-resources src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                "Refactor magic strings src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                "Reuse StandardCharsets src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                "Add missing XmlStreamReader test src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java": {
            "message": [
                "Change the visibility of the *utility* methods from private to package (so that the XmlStreamReaderUtilitiesTest can also be run against the \"compatibility\" version of XmlStreamReader)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004854 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                "Apply the same fix to Throw XmlStreamReaderException instead of IOException to compatibility version\n\nhttp://svn.apache.org/viewvc?view=revision&revision=1004825\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004856 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                "Organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1021884 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                "Missing @Override\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1090206 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                "[IO-320] Add XmlStreamReader support for UTF-32.\n[IO-331] BOMInputStream wrongly detects UTF-32LE_BOM files as UTF-16LE_BOM files in method getBOM().\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1346400 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                "Remove unused parameter from private method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1441283 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                "Silence impossible \"possible NPE\" warning\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471788 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                "Make JavaDoc tool happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1680650 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                "Fix Javadoc typos from https://github.com/apache/commons-io/pull/10.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1739188 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                "Fix Javadoc typos (closes #30) src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                "IO-557: UnsupportedEncodingException when opening an ISO-8859-1 XML stream with Turkish as the default locale (closes #51)\n\nPerform locale independent upper case conversions.\n\nTo handle properly lower cased character encoding name in XML prolog\nwith any default system locale, notably Turkish. src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                "[io] use non-short-circuit operator\n\nThis should have identical semantics but is less confusing to read. src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                "Use try-with-resources in tests and more.\n\n- Don't nest if you do not have to.\n- Document empty blocks.\n- Only run FileFilterTestCase#testCanExecute() on Windows to fix Jenkins\nbuild. src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                "[IO-666] Normalize internal buffers to 8192 bytes. src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                "Abbreviate and only call readLine() once in the loop. src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                "Minor improvement: (#176)\n\n* Add Final\r\n* Unused import\r\n* Unnecessary semicolon src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                "Minor Improvement: (#190)\n\n* Add final\r\n* Remove redundant initializer\r\n* simplify conditions src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                "Supress warning, rename params. src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                "Javadoc. Close HTML tags. Use paragraph tags. src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                "Add and use IOUtils.byteArray(*). src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                "Raise embedded if into parent. src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                "No need to nest in else. src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                "Replace construction of FileInputStream and FileOutputStream objects with Files NIO APIs. (#221) src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                "Use StringBuilder instead of StringBuffer.\n\nUse final. src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                "Sort test members. src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                "Reimplement internals to use try-with-resources. src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                "Add final and remove useless parentheses. src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                "Reuse StandardCharsets src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderException.java": {
            "message": [
                "Create a version of the XmlStreamReaderUtilitiesTest to run against the original XmlStreamReader implementation (Sanity check to make sure all the refactoring hasn't screwed things up)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004857 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderException.java",
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderException.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderException.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderException.java",
                "Supress warning, rename params. src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderException.java",
                "Javadoc. Close HTML tags. Use paragraph tags. src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderException.java"
            ]
        },
        "src/main/java/org/apache/commons/io/comparator/DirectoryFileComparator.java": {
            "message": [
                "JavaDoc improvements\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005099 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/DirectoryFileComparator.java",
                "EOL:=native\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005121 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/DirectoryFileComparator.java",
                "Drop $Date$ SVN variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302050 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/DirectoryFileComparator.java",
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/DirectoryFileComparator.java",
                "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/DirectoryFileComparator.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/DirectoryFileComparator.java",
                "[IO-343] org.apache.commons.io.comparator Javadoc is inconsistent with real code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1378539 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/DirectoryFileComparator.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/DirectoryFileComparator.java",
                "[IO-343] org.apache.commons.io.comparator Javadoc is inconsistent with real code.\nRevert r1378539 as it broke binary compatibility\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1469102 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/DirectoryFileComparator.java",
                "[IO-343] org.apache.commons.io.comparator Javadoc is inconsistent with real code.\nFix Javadoc to agree with code\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1469107 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/DirectoryFileComparator.java",
                "+= generated serialVersionUID\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642757 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/DirectoryFileComparator.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/comparator/DirectoryFileComparator.java",
                "Add missing '@Override' annotations. src/main/java/org/apache/commons/io/comparator/DirectoryFileComparator.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/comparator/DirectoryFileComparator.java",
                "Don't need to nest else clause. Refactor magic numbers into constants. src/main/java/org/apache/commons/io/comparator/DirectoryFileComparator.java",
                "Rename internal class from ReverseComparator to ReverseFileComparator. src/main/java/org/apache/commons/io/comparator/DirectoryFileComparator.java",
                "Fix Javadoc 17 errors. src/main/java/org/apache/commons/io/comparator/DirectoryFileComparator.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/comparator/DirectoryFileComparator.java",
                "Update DirectoryFileComparator.java\n\nCheckstyle. src/main/java/org/apache/commons/io/comparator/DirectoryFileComparator.java",
                "Checkstyle. src/main/java/org/apache/commons/io/comparator/DirectoryFileComparator.java"
            ]
        },
        "src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java": {
            "message": [
                "JavaDoc improvements\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005099 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                "+= generated serialVersionUID\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642757 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                "Fix Javadoc typos (closes #30) src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                "Javadoc: Use \"file name\" instead of \"filename\".\n\nCamel case vars \"filename\" to \"fileName\". src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                "Control flow issues (#93)\n\n* Control flow issues src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                "Minor formatting. src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                "Sort members. src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                "Remove dead comment. src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                "Javadoc: Close HTML tags. src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                "Better Javadocs and param names. src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                "Let org.apache.commons.io.filefilter classes work with\njava.nio.file.Files.walk* APIs.\n\nAlso: AccumulatorPathVisitor does not track directories properly. src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                "Move new PathFilter interface to the file package, annotate it with\n@FunctionalInterface, and add a BasicFileAttributes parameter to accept\nattributes from java.nio.file.FileVisitor. src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                "[IO-597] FileUtils.iterateFiles runs out of memory when executed for a\ndirectory with large number of files.\n\nRe-implement FileUtils' iterateFiles(), iterateFilesAndDirs(),\nlistFiles(), listFilesAndDirs() to use NIO file tree walking instead of\nIO file listings to avoid memory consumption issues on large file trees. src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                "Minor improvement: (#176)\n\n* Add Final\r\n* Unused import\r\n* Unnecessary semicolon src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                "Add and use FileUtils.lastModified[Unchecked](File) to workaround\nhttps://bugs.openjdk.java.net/browse/JDK-8177809. src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                "Add AgeFileFilter.AgeFileFilter(Instant, boolean)\n\n- Add PathUtils.isNewer(Path, Instant, LinkOption...)\n- Add PathUtils.isNewer(Path, FileTime, LinkOption...). src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                "Add FileUtils.lastModifiedFileTime(File).\n\nAdd AgeFileFilter.AgeFileFilter(Instant). src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                "Cleaner Javadoc examples. src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                "Fix FileFilterTestCase use case for symbolic links on non-Windows OS.\n\n- Make SymbolicLinkFileFilter configurable:\n-- Add SymbolicLinkFileFilter.SymbolicLinkFileFilter(FileVisitResult,\nFileVisitResult)\n-- Add AbstractFileFilter(FileVisitResult, FileVisitResult)\n- CountingPathVisitor should not follow links by default to properly\ncount from FileUtils. src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                "Javadoc. src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                "inline some-single use variables.\n\nFormatting nits. src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                "Internal refactoring src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java"
            ]
        },
        "src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java": {
            "message": [
                "JavaDoc improvements\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005099 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "Use Collection.isEmpty() instead of size() == 0\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1199986 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "Drop $Date$ SVN variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302050 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "Use \"@since 1.1\" instead of \"@since Commons IO 1.1\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1303950 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "Replace \"<code>true</code>\" with \"{@code true}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307461 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "Replace \"<code>false</code>\" with \"{@code false}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307462 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "+= generated serialVersionUID\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642757 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "Add missing '@Override' annotations. src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "Fix Javadoc typos (closes #30) src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "Remove Subversion's \"@version $Id$\". src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "Sort members. src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "Let org.apache.commons.io.filefilter classes work with\njava.nio.file.Files.walk* APIs.\n\nAlso: AccumulatorPathVisitor does not track directories properly. src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "Simplify new PathFilter interface to a single method. src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "Move new PathFilter interface to the file package, annotate it with\n@FunctionalInterface, and add a BasicFileAttributes parameter to accept\nattributes from java.nio.file.FileVisitor. src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "New PathFilter no longer throws to play nice with predicates and other\nfunctional interfaces. src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "Refactor and simplify new boolean APIs. src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "Use final. src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "Minor improvement: (#177)\n\n* Unnecessary conversion to String\r\n* Add final\r\n* Use Standard Charset object\r\n* Redundant 'close()' src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "Provide an exception message. src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "Remove unused exceptions and trailing whitespace. src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "Sort members. src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "Refactor commons code src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "Javadoc: Replace @code with @link src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "Use forEach() src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "Add and reuse IOConsumer.forEach(*) and forEachIndexed(*).\n\nUse forEach and streams. src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java"
            ]
        },
        "src/main/java/org/apache/commons/io/filefilter/DelegateFileFilter.java": {
            "message": [
                "JavaDoc improvements\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005099 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "Drop $Date$ SVN variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302050 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "Trailing spaces\nThese are the worst offenders; others remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471767 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "+= generated serialVersionUID\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642757 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "Fix Javadoc typos (closes #30) src/main/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "Don't need to nest else clause. Refactor magic numbers into constants. src/main/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "Remove Subversion's \"@version $Id$\". src/main/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "Javadoc: Use \"file name\" instead of \"filename\".\n\nCamel case vars \"filename\" to \"fileName\". src/main/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "Sort members. src/main/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "Let org.apache.commons.io.filefilter classes work with\njava.nio.file.Files.walk* APIs.\n\nAlso: AccumulatorPathVisitor does not track directories properly. src/main/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "Refactor null-checks. src/main/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "Use Objects.requireNonNull()\n\nUpdate Javadoc for existing calls. src/main/java/org/apache/commons/io/filefilter/DelegateFileFilter.java"
            ]
        },
        "src/main/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java": {
            "message": [
                "JavaDoc improvements\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005099 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "Drop $Date$ SVN variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302050 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "+= generated serialVersionUID\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642757 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "Fix Javadoc typos (closes #30) src/main/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "Remove Subversion's \"@version $Id$\". src/main/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "Sort members. src/main/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "Format to line length 120. src/main/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "Let org.apache.commons.io.filefilter classes work with\njava.nio.file.Files.walk* APIs.\n\nAlso: AccumulatorPathVisitor does not track directories properly. src/main/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "Move new PathFilter interface to the file package, annotate it with\n@FunctionalInterface, and add a BasicFileAttributes parameter to accept\nattributes from java.nio.file.FileVisitor. src/main/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "[IO-597] FileUtils.iterateFiles runs out of memory when executed for a\ndirectory with large number of files.\n\nRe-implement FileUtils' iterateFiles(), iterateFilesAndDirs(),\nlistFiles(), listFilesAndDirs() to use NIO file tree walking instead of\nIO file listings to avoid memory consumption issues on large file trees. src/main/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "Fix FileFilterTestCase use case for symbolic links on non-Windows OS.\n\n- Make SymbolicLinkFileFilter configurable:\n-- Add SymbolicLinkFileFilter.SymbolicLinkFileFilter(FileVisitResult,\nFileVisitResult)\n-- Add AbstractFileFilter(FileVisitResult, FileVisitResult)\n- CountingPathVisitor should not follow links by default to properly\ncount from FileUtils. src/main/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "Javadoc: Replace @code with @link src/main/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java"
            ]
        },
        "src/main/java/org/apache/commons/io/filefilter/FalseFileFilter.java": {
            "message": [
                "JavaDoc improvements\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005099 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "Drop $Date$ SVN variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302050 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304058 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "+= generated serialVersionUID\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642757 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "Add missing '@Override' annotations. src/main/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "Fix Javadoc typos (closes #30) src/main/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "Remove Subversion's \"@version $Id$\". src/main/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "Javadoc: Use \"file name\" instead of \"filename\".\n\nCamel case vars \"filename\" to \"fileName\". src/main/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "Sort members. src/main/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "Let org.apache.commons.io.filefilter classes work with\njava.nio.file.Files.walk* APIs.\n\nAlso: AccumulatorPathVisitor does not track directories properly. src/main/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "Simplify filter tree construction by reusing new APIs.\n\nMinor formatting.\nMinor refactoring of private method for fluency. src/main/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "Simplify new PathFilter interface to a single method. src/main/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "Move new PathFilter interface to the file package, annotate it with\n@FunctionalInterface, and add a BasicFileAttributes parameter to accept\nattributes from java.nio.file.FileVisitor. src/main/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "Better boolean file filters. src/main/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "Use negate() instead of not() to match predicate terminology. src/main/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "Refactor and simplify new boolean APIs. src/main/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "Use final. src/main/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "Remove unused exceptions and trailing whitespace. src/main/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "Sort members. src/main/java/org/apache/commons/io/filefilter/FalseFileFilter.java"
            ]
        },
        "src/main/java/org/apache/commons/io/filefilter/FileFileFilter.java": {
            "message": [
                "JavaDoc improvements\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005099 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/FileFileFilter.java",
                "Drop $Date$ SVN variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302050 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/FileFileFilter.java",
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/FileFileFilter.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/FileFileFilter.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/FileFileFilter.java",
                "+= generated serialVersionUID\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642757 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/FileFileFilter.java",
                "Fix Javadoc typos (closes #30) src/main/java/org/apache/commons/io/filefilter/FileFileFilter.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/filefilter/FileFileFilter.java",
                "Remove Subversion's \"@version $Id$\". src/main/java/org/apache/commons/io/filefilter/FileFileFilter.java",
                "Sort members. src/main/java/org/apache/commons/io/filefilter/FileFileFilter.java",
                "Let org.apache.commons.io.filefilter classes work with\njava.nio.file.Files.walk* APIs.\n\nAlso: AccumulatorPathVisitor does not track directories properly. src/main/java/org/apache/commons/io/filefilter/FileFileFilter.java",
                "Move new PathFilter interface to the file package, annotate it with\n@FunctionalInterface, and add a BasicFileAttributes parameter to accept\nattributes from java.nio.file.FileVisitor. src/main/java/org/apache/commons/io/filefilter/FileFileFilter.java",
                "[IO-597] FileUtils.iterateFiles runs out of memory when executed for a\ndirectory with large number of files.\n\nRe-implement FileUtils' iterateFiles(), iterateFilesAndDirs(),\nlistFiles(), listFilesAndDirs() to use NIO file tree walking instead of\nIO file listings to avoid memory consumption issues on large file trees. src/main/java/org/apache/commons/io/filefilter/FileFileFilter.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/filefilter/FileFileFilter.java",
                "Javadoc. src/main/java/org/apache/commons/io/filefilter/FileFileFilter.java",
                "Fix FileFilterTestCase use case for symbolic links on non-Windows OS.\n\n- Make SymbolicLinkFileFilter configurable:\n-- Add SymbolicLinkFileFilter.SymbolicLinkFileFilter(FileVisitResult,\nFileVisitResult)\n-- Add AbstractFileFilter(FileVisitResult, FileVisitResult)\n- CountingPathVisitor should not follow links by default to properly\ncount from FileUtils. src/main/java/org/apache/commons/io/filefilter/FileFileFilter.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/filefilter/FileFileFilter.java",
                "Javadoc: Replace @code with @link src/main/java/org/apache/commons/io/filefilter/FileFileFilter.java"
            ]
        },
        "src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java": {
            "message": [
                "JavaDoc improvements\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005099 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Use \"@since 1.1\" instead of \"@since Commons IO 1.1\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1303950 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Replace \"<code>null</code>\" with \"{@code null}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307459 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Trailing spaces\nThese are the worst offenders; others remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471767 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Fix Javadoc typos (closes #30) src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "IO-442: Javadoc contradictory for FileFilterUtils.ageFileFilter(cutoff) and the filter it constructs: AgeFileFilter(cutoff)\n\ncorrect FileFilterUtils.ageFileFilter(cutoff) javadoc src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Don't need to nest else clause. Refactor magic numbers into constants. src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Remove Subversion's \"@version $Id$\". src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Javadoc: Use \"file name\" instead of \"filename\".\n\nCamel case vars \"filename\" to \"fileName\". src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Performance Enhancement: Call toArray with Zero Array Size (closes #65)\n\ntoArray should, at least since Java 7, be used with new T[0] instead of size, since it is \"faster, safer, and contractually cleaner\" (https://shipilev.net/blog/2016/arrays-wisdom-ancients/#_conclusion) src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "No need to allocate empty File arrays over and over. src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Make some simplifications (#121) src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Sort members. src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "In-line local vars. src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Let org.apache.commons.io.filefilter classes work with\njava.nio.file.Files.walk* APIs.\n\nAlso: AccumulatorPathVisitor does not track directories properly. src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Use negate() instead of not() to match predicate terminology. src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "[IO-597] FileUtils.iterateFiles runs out of memory when executed for a\ndirectory with large number of files.\n\nRe-implement FileUtils' iterateFiles(), iterateFilesAndDirs(),\nlistFiles(), listFilesAndDirs() to use NIO file tree walking instead of\nIO file listings to avoid memory consumption issues on large file trees. src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Remove dead comments. src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Use Stream.of(). src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Remove \"line\" in-line comments. src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Add AgeFileFilter.AgeFileFilter(Instant, boolean)\n\n- Add PathUtils.isNewer(Path, Instant, LinkOption...)\n- Add PathUtils.isNewer(Path, FileTime, LinkOption...). src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Add and use IOCase.value(IOCase, IOCase). src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Sort members. src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Change to uppercase variable constant. (#323) src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "[IO-763]Javadoc] o.a.c.i.filefilter.FileFilterUtils doc does not match\nimpl: missing some file filters\n\nUpdate Javadoc src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Use Objects.requireNonNull()\n\nUpdate Javadoc for existing calls. src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Use for-each loop src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Javadoc: Replace @code with @link src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "Add and reuse IOConsumer.forEach(*) and forEachIndexed(*).\n\nUse forEach and streams. src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java"
            ]
        },
        "src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java": {
            "message": [
                "JavaDoc improvements\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005099 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java",
                "Replace \"<code>null</code>\" with \"{@code null}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307459 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java",
                "Replace \"<code>true</code>\" with \"{@code true}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307461 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java",
                "Replace \"<code>false</code>\" with \"{@code false}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307462 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java",
                "Make explicit where the default platform encoding is being used\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1468885 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java",
                "Remove incorrect Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1468908 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java",
                "Trailing spaces\nThese are the worst offenders; others remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471767 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java",
                "[IO-424] Javadoc fixes, mostly to appease 1.8.0. Patch from Ville Skytt\u00e4\". 3 files in the patch did not applied cleanly, so they are not in the commit.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1563227 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java",
                "Replace \"String.length()\" == 0 with \"String.isEmpty()\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1586504 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java",
                "Fixed all checkstyle errors and a findbugs error\n\nFindbugs error was:\norg.apache.commons.io.output.DeferredFileOutputStream#thresholdReached\npossible file handle leak upon exception\n\nAlso contains fix for IO-446, submitted by Jeffrey Barrus\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686747 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java",
                "[IO-505] Deprecated of all IOUtils.closeQuietly() methods and use try-with-resources internally.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1742675 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java",
                "Sort members. src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java",
                "Let org.apache.commons.io.filefilter classes work with\njava.nio.file.Files.walk* APIs.\n\nAlso: AccumulatorPathVisitor does not track directories properly. src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java",
                "Move new PathFilter interface to the file package, annotate it with\n@FunctionalInterface, and add a BasicFileAttributes parameter to accept\nattributes from java.nio.file.FileVisitor. src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java",
                "[IO-597] FileUtils.iterateFiles runs out of memory when executed for a\ndirectory with large number of files.\n\nRe-implement FileUtils' iterateFiles(), iterateFilesAndDirs(),\nlistFiles(), listFilesAndDirs() to use NIO file tree walking instead of\nIO file listings to avoid memory consumption issues on large file trees. src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java",
                "Add and use IOUtils.byteArray(*). src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java",
                "Fix FileFilterTestCase use case for symbolic links on non-Windows OS.\n\n- Make SymbolicLinkFileFilter configurable:\n-- Add SymbolicLinkFileFilter.SymbolicLinkFileFilter(FileVisitResult,\nFileVisitResult)\n-- Add AbstractFileFilter(FileVisitResult, FileVisitResult)\n- CountingPathVisitor should not follow links by default to properly\ncount from FileUtils. src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java",
                "Add and use RandomAccessFileMode. src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java",
                "Simplify copying arrays. src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java",
                "inline some-single use variables.\n\nFormatting nits. src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java",
                "Refactor null-checks. src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java",
                "Refactor null-checks. src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java",
                "Simplify copying arrays. src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java",
                "PMD: ignore empty catch block src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java",
                "PMD: Remove unnecessary final src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java",
                "Use Objects.requireNonNull()\n\nUpdate Javadoc for existing calls. src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java"
            ]
        },
        "src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java": {
            "message": [
                "JavaDoc improvements\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005099 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "Drop $Date$ SVN variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302050 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304058 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "Remove incorrect Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1468911 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "Trailing spaces\nThese are the worst offenders; others remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471767 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "+= generated serialVersionUID\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642757 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "Fix Javadoc typos (closes #30) src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "Remove Subversion's \"@version $Id$\". src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "Javadoc: Use \"file name\" instead of \"filename\".\n\nCamel case vars \"filename\" to \"fileName\". src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "Use varargs in a few more places. src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "Performance Enhancement: Call toArray with Zero Array Size (closes #65)\n\ntoArray should, at least since Java 7, be used with new T[0] instead of size, since it is \"faster, safer, and contractually cleaner\" (https://shipilev.net/blog/2016/arrays-wisdom-ancients/#_conclusion) src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "No need to allocate empty String arrays over and over. src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "Sort members. src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "Let org.apache.commons.io.filefilter classes work with\njava.nio.file.Files.walk* APIs.\n\nAlso: AccumulatorPathVisitor does not track directories properly. src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "Simplify new PathFilter interface to a single method. src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "Move new PathFilter interface to the file package, annotate it with\n@FunctionalInterface, and add a BasicFileAttributes parameter to accept\nattributes from java.nio.file.FileVisitor. src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "Use default values instead of null to clarify code, add Javadoc HTML\nclosing tags, refactor common code into a new private method. src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "[IO-597] FileUtils.iterateFiles runs out of memory when executed for a\ndirectory with large number of files.\n\nRe-implement FileUtils' iterateFiles(), iterateFilesAndDirs(),\nlistFiles(), listFilesAndDirs() to use NIO file tree walking instead of\nIO file listings to avoid memory consumption issues on large file trees. src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "Fix possible NPEs in some file filters when paths have no parent or no\nelements. src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "Fix FileFilterTestCase use case for symbolic links on non-Windows OS.\n\n- Make SymbolicLinkFileFilter configurable:\n-- Add SymbolicLinkFileFilter.SymbolicLinkFileFilter(FileVisitResult,\nFileVisitResult)\n-- Add AbstractFileFilter(FileVisitResult, FileVisitResult)\n- CountingPathVisitor should not follow links by default to properly\ncount from FileUtils. src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "Add and use IOCase.value(IOCase, IOCase). src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "Simplify copying arrays. src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "Refactor null-checks. src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "Javadoc nits. src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "Use Objects.requireNonNull()\n\nUpdate Javadoc for existing calls. src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "Refactor commons code src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "Use forEach() src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java"
            ]
        },
        "src/main/java/org/apache/commons/io/filefilter/NotFileFilter.java": {
            "message": [
                "JavaDoc improvements\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005099 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "Drop $Date$ SVN variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302050 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "Trailing spaces\nThese are the worst offenders; others remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471767 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "+= generated serialVersionUID\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642757 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "Fix Javadoc typos (closes #30) src/main/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "Remove Subversion's \"@version $Id$\". src/main/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "Javadoc: Use \"file name\" instead of \"filename\".\n\nCamel case vars \"filename\" to \"fileName\". src/main/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "Fix formatting. src/main/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "Fix formatting. src/main/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "Use stock JRE null checking Objects.requireNonNull(). src/main/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "Revert \"Use stock JRE null checking Objects.requireNonNull().\"\n\nThis reverts commit d0cd953c69a39bc2605ac08dbce8b39e084f4ef0. src/main/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "Let org.apache.commons.io.filefilter classes work with\njava.nio.file.Files.walk* APIs.\n\nAlso: AccumulatorPathVisitor does not track directories properly. src/main/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "Simplify new PathFilter interface to a single method. src/main/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "Move new PathFilter interface to the file package, annotate it with\n@FunctionalInterface, and add a BasicFileAttributes parameter to accept\nattributes from java.nio.file.FileVisitor. src/main/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "New PathFilter no longer throws to play nice with predicates and other\nfunctional interfaces. src/main/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "Refactor and simplify new boolean APIs. src/main/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "inline some-single use variables.\n\nFormatting nits. src/main/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "Refactor null-checks. src/main/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "Use Objects.requireNonNull()\n\nUpdate Javadoc for existing calls. src/main/java/org/apache/commons/io/filefilter/NotFileFilter.java"
            ]
        },
        "src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java": {
            "message": [
                "JavaDoc improvements\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005099 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "Drop $Date$ SVN variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302050 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "Use \"@since 1.1\" instead of \"@since Commons IO 1.1\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1303950 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "Replace \"<code>true</code>\" with \"{@code true}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307461 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "Replace \"<code>false</code>\" with \"{@code false}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307462 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "+= generated serialVersionUID\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642757 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "Add missing '@Override' annotations. src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "Fix Javadoc typos (closes #30) src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "Remove Subversion's \"@version $Id$\". src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "Sort members. src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "Format to line length 120. src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "Let org.apache.commons.io.filefilter classes work with\njava.nio.file.Files.walk* APIs.\n\nAlso: AccumulatorPathVisitor does not track directories properly. src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "Simplify new PathFilter interface to a single method. src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "Move new PathFilter interface to the file package, annotate it with\n@FunctionalInterface, and add a BasicFileAttributes parameter to accept\nattributes from java.nio.file.FileVisitor. src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "New PathFilter no longer throws to play nice with predicates and other\nfunctional interfaces. src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "Refactor and simplify new boolean APIs. src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "Minor improvement: (#177)\n\n* Unnecessary conversion to String\r\n* Add final\r\n* Use Standard Charset object\r\n* Redundant 'close()' src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "Provide an exception message. src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "Remove unused exceptions and trailing whitespace. src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "Refactor commons code src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "Javadoc: Replace @code with @link src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "Use forEach() src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "Add and reuse IOConsumer.forEach(*) and forEachIndexed(*).\n\nUse forEach and streams. src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java"
            ]
        },
        "src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java": {
            "message": [
                "JavaDoc improvements\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005099 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "Drop $Date$ SVN variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302050 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "Remove incorrect Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1468911 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "Trailing spaces\nThese are the worst offenders; others remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471767 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "+= generated serialVersionUID\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642757 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "Fix Javadoc typos (closes #30) src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "Remove Subversion's \"@version $Id$\". src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "Javadoc: Use \"file name\" instead of \"filename\".\n\nCamel case vars \"filename\" to \"fileName\". src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "Use varargs in a few more places. src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "Performance Enhancement: Call toArray with Zero Array Size (closes #65)\n\ntoArray should, at least since Java 7, be used with new T[0] instead of size, since it is \"faster, safer, and contractually cleaner\" (https://shipilev.net/blog/2016/arrays-wisdom-ancients/#_conclusion) src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "No need to allocate empty String arrays over and over. src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "Sort members. src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "Refactor common code into a private method. src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "Refactor common code into a private method. src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "Let org.apache.commons.io.filefilter classes work with\njava.nio.file.Files.walk* APIs.\n\nAlso: AccumulatorPathVisitor does not track directories properly. src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "Simplify new PathFilter interface to a single method. src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "Move new PathFilter interface to the file package, annotate it with\n@FunctionalInterface, and add a BasicFileAttributes parameter to accept\nattributes from java.nio.file.FileVisitor. src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "[IO-597] FileUtils.iterateFiles runs out of memory when executed for a\ndirectory with large number of files.\n\nRe-implement FileUtils' iterateFiles(), iterateFilesAndDirs(),\nlistFiles(), listFilesAndDirs() to use NIO file tree walking instead of\nIO file listings to avoid memory consumption issues on large file trees. src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "Fix possible NPEs in some file filters when paths have no parent or no\nelements. src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "Fix FileFilterTestCase use case for symbolic links on non-Windows OS.\n\n- Make SymbolicLinkFileFilter configurable:\n-- Add SymbolicLinkFileFilter.SymbolicLinkFileFilter(FileVisitResult,\nFileVisitResult)\n-- Add AbstractFileFilter(FileVisitResult, FileVisitResult)\n- CountingPathVisitor should not follow links by default to properly\ncount from FileUtils. src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "Add and use IOCase.value(IOCase, IOCase). src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "Simplify copying arrays. src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "Refactor null-checks. src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "Refactor null-checks. src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "Use Objects.requireNonNull()\n\nUpdate Javadoc for existing calls. src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "Refactor commons code src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "Use forEach() src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java"
            ]
        },
        "src/main/java/org/apache/commons/io/filefilter/SizeFileFilter.java": {
            "message": [
                "JavaDoc improvements\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005099 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/SizeFileFilter.java",
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/SizeFileFilter.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/SizeFileFilter.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/SizeFileFilter.java",
                "+= generated serialVersionUID\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642757 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/SizeFileFilter.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/filefilter/SizeFileFilter.java",
                "Fix Javadoc typos (closes #30) src/main/java/org/apache/commons/io/filefilter/SizeFileFilter.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/filefilter/SizeFileFilter.java",
                "Javadoc: Use \"file name\" instead of \"filename\".\n\nCamel case vars \"filename\" to \"fileName\". src/main/java/org/apache/commons/io/filefilter/SizeFileFilter.java",
                "Control flow issues (#93)\n\n* Control flow issues src/main/java/org/apache/commons/io/filefilter/SizeFileFilter.java",
                "In-line local var. Javadoc: Close paragraph tags. Format nits. src/main/java/org/apache/commons/io/filefilter/SizeFileFilter.java",
                "Let org.apache.commons.io.filefilter classes work with\njava.nio.file.Files.walk* APIs.\n\nAlso: AccumulatorPathVisitor does not track directories properly. src/main/java/org/apache/commons/io/filefilter/SizeFileFilter.java",
                "Move new PathFilter interface to the file package, annotate it with\n@FunctionalInterface, and add a BasicFileAttributes parameter to accept\nattributes from java.nio.file.FileVisitor. src/main/java/org/apache/commons/io/filefilter/SizeFileFilter.java",
                "[IO-597] FileUtils.iterateFiles runs out of memory when executed for a\ndirectory with large number of files.\n\nRe-implement FileUtils' iterateFiles(), iterateFilesAndDirs(),\nlistFiles(), listFilesAndDirs() to use NIO file tree walking instead of\nIO file listings to avoid memory consumption issues on large file trees. src/main/java/org/apache/commons/io/filefilter/SizeFileFilter.java",
                "Fix FileFilterTestCase use case for symbolic links on non-Windows OS.\n\n- Make SymbolicLinkFileFilter configurable:\n-- Add SymbolicLinkFileFilter.SymbolicLinkFileFilter(FileVisitResult,\nFileVisitResult)\n-- Add AbstractFileFilter(FileVisitResult, FileVisitResult)\n- CountingPathVisitor should not follow links by default to properly\ncount from FileUtils. src/main/java/org/apache/commons/io/filefilter/SizeFileFilter.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/filefilter/SizeFileFilter.java",
                "Internal refactoring src/main/java/org/apache/commons/io/filefilter/SizeFileFilter.java"
            ]
        },
        "src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java": {
            "message": [
                "JavaDoc improvements\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005099 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "Drop $Date$ SVN variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302050 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "Remove incorrect Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1468911 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "Trailing spaces\nThese are the worst offenders; others remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471767 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "+= generated serialVersionUID\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642757 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "Fix Javadoc typos (closes #30) src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "Remove Subversion's \"@version $Id$\". src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "Javadoc: Use \"file name\" instead of \"filename\".\n\nCamel case vars \"filename\" to \"fileName\". src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "Use varargs in a few more places. src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "Performance Enhancement: Call toArray with Zero Array Size (closes #65)\n\ntoArray should, at least since Java 7, be used with new T[0] instead of size, since it is \"faster, safer, and contractually cleaner\" (https://shipilev.net/blog/2016/arrays-wisdom-ancients/#_conclusion) src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "No need to allocate empty String arrays over and over. src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "Sort members. src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "Refactor common code into a private method. src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "Let org.apache.commons.io.filefilter classes work with\njava.nio.file.Files.walk* APIs.\n\nAlso: AccumulatorPathVisitor does not track directories properly. src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "Simplify new PathFilter interface to a single method. src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "Move new PathFilter interface to the file package, annotate it with\n@FunctionalInterface, and add a BasicFileAttributes parameter to accept\nattributes from java.nio.file.FileVisitor. src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "[IO-597] FileUtils.iterateFiles runs out of memory when executed for a\ndirectory with large number of files.\n\nRe-implement FileUtils' iterateFiles(), iterateFilesAndDirs(),\nlistFiles(), listFilesAndDirs() to use NIO file tree walking instead of\nIO file listings to avoid memory consumption issues on large file trees. src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "Fix possible NPEs in some file filters when paths have no parent or no\nelements. src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "Fix FileFilterTestCase use case for symbolic links on non-Windows OS.\n\n- Make SymbolicLinkFileFilter configurable:\n-- Add SymbolicLinkFileFilter.SymbolicLinkFileFilter(FileVisitResult,\nFileVisitResult)\n-- Add AbstractFileFilter(FileVisitResult, FileVisitResult)\n- CountingPathVisitor should not follow links by default to properly\ncount from FileUtils. src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "Add and use IOCase.value(IOCase, IOCase). src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "Simplify copying arrays. src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "Refactor null-checks. src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "Refactor null-checks. src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "Use Objects.requireNonNull()\n\nUpdate Javadoc for existing calls. src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "Refactor commons code src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "Use forEach() src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java"
            ]
        },
        "src/main/java/org/apache/commons/io/filefilter/TrueFileFilter.java": {
            "message": [
                "JavaDoc improvements\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005099 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "Drop $Date$ SVN variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302050 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304058 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "[IO-352] Spelling fixes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1401522 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "+= generated serialVersionUID\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642757 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "Add missing '@Override' annotations. src/main/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "Remove Subversion's \"@version $Id$\". src/main/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "Javadoc: Use \"file name\" instead of \"filename\".\n\nCamel case vars \"filename\" to \"fileName\". src/main/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "Format to line length 120. src/main/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "Let org.apache.commons.io.filefilter classes work with\njava.nio.file.Files.walk* APIs.\n\nAlso: AccumulatorPathVisitor does not track directories properly. src/main/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "Simplify new PathFilter interface to a single method. src/main/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "Move new PathFilter interface to the file package, annotate it with\n@FunctionalInterface, and add a BasicFileAttributes parameter to accept\nattributes from java.nio.file.FileVisitor. src/main/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "Better boolean file filters. src/main/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "Use negate() instead of not() to match predicate terminology. src/main/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "Refactor and simplify new boolean APIs. src/main/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "Remove unused exceptions and trailing whitespace. src/main/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "Sort members. src/main/java/org/apache/commons/io/filefilter/TrueFileFilter.java"
            ]
        },
        "src/main/java/org/apache/commons/io/monitor/FilesystemObserver.java": {
            "message": [
                "JavaDoc improvements\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005099 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                "IO-196 FilesystemObserverTestCase failures - revert r1002909 to test case and change how FilesystemMonitor compares files for changes to see if this resolves the original test failures\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005676 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                "IO-132 Always do the compare on files names, but provide case-sensitivity options (allowing any comparator is going to result in someone shooting themselves in the foot)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005682 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                "IO-132 Detect changes on File's size and type as well as last modified and \"refresh\" the values that were compared\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005693 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                "JavaDoc corrections\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1006296 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FilesystemObserver.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java": {
            "message": [
                "EOL:=native\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005121 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "Organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1021884 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "IO-257 Fix BOMInputStream's read(byte[]) can return 0 which it should not - thanks to Teemu L\u00e5ng\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1052095 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "[IO-302] ArrayIndexOutOfBoundsException in BOMInputStream when reading a file without BOM multiple times\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1292455 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "[IO-302] ArrayIndexOutOfBoundsException in BOMInputStream when reading a file without BOM multiple times. Refactor tests to use both BOM and no-BOM test files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1292460 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "Remove unused offset parameter.\nWas it for expected or actual anyway?\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1309619 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "More tests while working out possible issue with UTF-32.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1371703 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "Makes test fixture methods private.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1371705 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "Port to JUnit 4 and more tests while working out possible issue with UTF-32.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1371707 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "Port to JUnit 4 and more tests while working out possible issue with UTF-32.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1371719 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "More tests while working out possible issue with UTF-32.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1371739 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "Add comments.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1371740 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "More tests while working out possible issue with UTF-32.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1371743 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "Sort all members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1371744 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "Fix bug in tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1371748 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "Add testReadXmlWithBOMUcs2. Better comments.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1371754 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "Clean up testReadXmlWithBOMUcs2 and add testReadXmlWithBOMUcs4 (but no such enc on Oracle 1.6.0_31...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1371756 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "Using Niall Pemberton's tip.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1371836 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "Ensure stream is closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1441241 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "Trailing spaces\nThese are the worst offenders; a few still remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471765 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "Close some resources\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1582843 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "Fix unavoidable deprecations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642759 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "IO-428 BOMInputStream.skip returns wrong count if stream contains no BOM\n\nPatch by Stefan Gmeiner, applied with minor changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686527 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "Cleaned up testcase logic, removed duplication\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686532 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "CLose streams\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686727 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "Unused import\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686728 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "Ensure streams are closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1695021 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "Added detection of XML parser charset for IBM JDK\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1721094 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "Fix Checkstyle: always use blocks.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1742677 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "replace usage of deprecated Charsets constants with StandardCharsets constants src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "remove unused imports src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "Static imports come first. src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "Use final for parameters. src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "Consistently use the final modifier with local variables. src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "Clean up tests. Javadocs. src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "Use try-with-resources in tests and more.\n\n- Don't nest if you do not have to.\n- Document empty blocks.\n- Only run FileFilterTestCase#testCanExecute() on Windows to fix Jenkins\nbuild. src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "Remove unused exceptions and trailing whitespace. src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "- Simplify array declarations.\n- Javadoc.\n- Use try-with-resources. src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "Remove extra empty lines. src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "Add StringInputStream. src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "Add final and remove useless parentheses. src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "Migrate from JUnit 4 to 5 src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "Use try-with-resources src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "Remove useless comments src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "Migrate from JUnit 4 to 5\n\nException cleanups in tests. src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/FileCleaningTracker.java": {
            "message": [
                "IO-161 try to fix OutOfMemoryError being thrown by FileCleaningTrackerTestCase in Gump and fix a potential *hanging* situation.\n\nRemove the tracker from the list first. Theres a potential loop-for-ever situation if for some reason the delete fails because the Tracker will have been removed from the queue but still be in the List - and this method loops until the List is empty.\n\nHopefully this will also resolve the FileCleaningTrackerTestCase's OutOfMemoryError in Gump and Continuum. Its failing during the file.delete() operation - the test code to fill-up-memory continues until the Tracker List is zero.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005515 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileCleaningTracker.java",
                "Fix to resolve OutOfMemoryError has now caused another issue. Try adding a *pause* to see if additional times allows the file delete to complete. If not provide a facility to show that the delete failed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005707 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileCleaningTracker.java",
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileCleaningTracker.java",
                "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileCleaningTracker.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileCleaningTracker.java",
                "Replace \"<code>true</code>\" with \"{@code true}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307461 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileCleaningTracker.java",
                "Replace \"<code>false</code>\" with \"{@code false}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307462 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileCleaningTracker.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileCleaningTracker.java",
                "[IO-424] Javadoc fixes, mostly to appease 1.8.0. Attempt to appease Javadoc 1.8.0 but getting \"[ERROR] Failed to execute goal org.apache.maven.plugins:maven-javadoc-plugin:2.9.1:javadoc (default-cli) on project commons-io: An error has occurred in JavaDocs report generation:\n[ERROR] Exit code: 1 - javadoc: warning - Error fetching URL: http://download.oracle.com/javase/6/docs/api\n[ERROR] javadoc: warning - Error fetching URL: http://download.oracle.com/javaee/6/api\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1563233 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileCleaningTracker.java",
                "Make JavaDoc tool happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1680650 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileCleaningTracker.java",
                "Language level code changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686260 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileCleaningTracker.java",
                "No need for variables to be package protected\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686512 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileCleaningTracker.java",
                "Reverted r1686512 changes back to package protected to make code compile\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686531 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileCleaningTracker.java",
                "Document why package protection used here\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686703 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileCleaningTracker.java",
                "Fixed all checkstyle errors and a findbugs error\n\nFindbugs error was:\norg.apache.commons.io.output.DeferredFileOutputStream#thresholdReached\npossible file handle leak upon exception\n\nAlso contains fix for IO-446, submitted by Jeffrey Barrus\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686747 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileCleaningTracker.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileCleaningTracker.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/FileCleaningTracker.java",
                "Fix Javadoc typos (closes #30) src/main/java/org/apache/commons/io/FileCleaningTracker.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/FileCleaningTracker.java",
                "Use Objects.requireNonNull() instead of custom check. src/main/java/org/apache/commons/io/FileCleaningTracker.java",
                "Use isEmpty(). src/main/java/org/apache/commons/io/FileCleaningTracker.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/FileCleaningTracker.java",
                "Minor Improvement: (#190)\n\n* Add final\r\n* Remove redundant initializer\r\n* simplify conditions src/main/java/org/apache/commons/io/FileCleaningTracker.java",
                "Minor improvements: (#233)\n\n* Use Method reference\r\n* Use List.sort()\r\n* Change Explicit with <>\r\n* Simplify conditional expression src/main/java/org/apache/commons/io/FileCleaningTracker.java",
                "- Use final.\n- Simpler boolean tests.\n- Fix test. src/main/java/org/apache/commons/io/FileCleaningTracker.java",
                "Remove \"line\" in-line comments. src/main/java/org/apache/commons/io/FileCleaningTracker.java",
                "Javadoc nits. src/main/java/org/apache/commons/io/FileCleaningTracker.java",
                "Sort members. src/main/java/org/apache/commons/io/FileCleaningTracker.java",
                "Javadoc: Replace @code with @link src/main/java/org/apache/commons/io/FileCleaningTracker.java"
            ]
        },
        "src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java": {
            "message": [
                "IO-161 try to fix OutOfMemoryError being thrown by FileCleaningTrackerTestCase in Gump and fix a potential *hanging* situation.\n\nRemove the tracker from the list first. Theres a potential loop-for-ever situation if for some reason the delete fails because the Tracker will have been removed from the queue but still be in the List - and this method loops until the List is empty.\n\nHopefully this will also resolve the FileCleaningTrackerTestCase's OutOfMemoryError in Gump and Continuum. Its failing during the file.delete() operation - the test code to fill-up-memory continues until the Tracker List is zero.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005515 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                "Fix to resolve OutOfMemoryError has now caused another issue. Try adding a *pause* to see if additional times allows the file delete to complete. If not provide a facility to show that the delete failed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005707 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                "Improve test output\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1006088 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                "IO-161 Try to reduce test failures\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1006091 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                "IO-161 Try garbage collecting before trying to fill memory\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1006099 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                "Simplify and avoid boxing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302017 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                "Trailing spaces\nThese are the worst offenders; a few still remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471765 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                "Language level code changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686260 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                "Added private and test-scoped sleep method that actually sleeps for a guaranteed minimal time\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718945 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                "replace usage of deprecated IOUtils#closeQuietly with try-with-resources src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                "Replace custom temporary folder management with JUnit's TemporaryFolder.\nThis will allow Maven to run tests concurrently. src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                "Remove trailing white spaces on all lines. src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                "Remove unnecessary casts. src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                "Rename test package. src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                "Remove unused exceptions. src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                "Simplify Assertions (#234) src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                "Replace construction of FileInputStream and FileOutputStream objects with Files NIO APIs. (#221) src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                "Remove \"line\" in-line comments. src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                "Sort test members. src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                "Refactor commons code. src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                "Clean up. src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                "Resue own API. src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                "Clean ups. src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                "Add and use RandomAccessFileMode. src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java"
            ]
        },
        "src/main/java/org/apache/commons/io/monitor/FilesystemEntry.java": {
            "message": [
                "IO-196 FilesystemObserverTestCase failures - revert r1002909 to test case and change how FilesystemMonitor compares files for changes to see if this resolves the original test failures\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005676 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FilesystemEntry.java",
                "IO-132 Detect changes on File's size and type as well as last modified and \"refresh\" the values that were compared\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005693 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FilesystemEntry.java",
                "Javadoc correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005694 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FilesystemEntry.java",
                "JavaDoc corrections\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1006296 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FilesystemEntry.java"
            ]
        },
        "src/test/java/org/apache/commons/io/monitor/FilesystemObserverTestCase.java": {
            "message": [
                "IO-196 FilesystemObserverTestCase failures - revert r1002909 to test case and change how FilesystemMonitor compares files for changes to see if this resolves the original test failures\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005676 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                "Refactor tests to share common code\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1006027 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                "Refactor tests to share common code\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1006051 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                "Fix FileSystemMonitorTestCase broken in refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1006079 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/monitor/FilesystemObserverTestCase.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/Tailer.java": {
            "message": [
                "IO-177 Should be handling InterruptedException when sleeping - not calling the exception handler\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005921 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/Tailer.java",
                "Organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1021884 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/Tailer.java",
                "Improve Tailer examples in JavaDocs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1033786 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/Tailer.java",
                "IO-274 - Tailer returning partial lines when reaching EOF before EOL\nAdded version of readLine() that returns null if EOF seen before EOL\nRe-enabled test case\nHad to add sleep call to allow test file to be cleared up properly\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1127854 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/Tailer.java",
                "[IO-304] The second constructor of Tailer class does not pass 'delay' to the third one\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1295587 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/Tailer.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/Tailer.java",
                "[IO-332] Improve tailer's reading performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1345279 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/Tailer.java",
                "Rename delay to delayMillis for param name, Javadoc, and private ivar; accessor remains the same.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1345280 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/Tailer.java",
                "Use constant instead of magic number.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1345281 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/Tailer.java",
                "Make private field final since it is not reassigned\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1347052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/Tailer.java",
                "IO-335 - Tailer#readLines - incorrect CR handling\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1347829 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/Tailer.java",
                "IO-279 - Tailer erroneously considers file as new.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1347836 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/Tailer.java",
                "[IO-269] Tailer locks file from deletion/rename on Windows.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1348698 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/Tailer.java",
                "[IO-345] Supply a hook method allowing Tailer actively determining stop condition.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1391419 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/Tailer.java",
                "Remove extra whitespace.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1411980 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/Tailer.java",
                "[IO-358][Tailer] InterruptedException while the thread is sleeping is silently ignored.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1412391 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/Tailer.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/Tailer.java",
                "Delegate to create method with all parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1468652 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/Tailer.java",
                "IO-354 Commons IO Tailer does not respect UTF-8 Charset\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1468703 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/Tailer.java",
                "IO-338 When a file is rotated, finish reading previous file prior to starting new one\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1468723 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/Tailer.java",
                "Trailing spaces\nThese are the worst offenders; others remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471767 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/Tailer.java",
                "IO-279  Tailer erroneously considers file as new.\n        Fix to use file.lastModified() rather than System.currentTimeMillis()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1476097 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/Tailer.java",
                "IO-354 Commons IO Tailer does not respect UTF-8 Charset\nRework to allow charset to be specified\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1483340 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/Tailer.java",
                "Oops - remove temp marker\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1483344 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/Tailer.java",
                "[IO-424] Javadoc fixes, mostly to appease 1.8.0. Patch from Ville Skytt\u00e4\". 3 files in the patch did not applied cleanly, so they are not in the commit.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1563227 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/Tailer.java",
                "[IO-424] Javadoc fixes, mostly to appease 1.8.0.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1563230 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/Tailer.java",
                "<action issue=\"IO-437\" dev=\"ggregory\" type=\"add\">\n  Make IOUtils.EOF public and reuse it in various classes.\n</action>\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1586350 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/Tailer.java",
                "Fixed all checkstyle errors and a findbugs error\n\nFindbugs error was:\norg.apache.commons.io.output.DeferredFileOutputStream#thresholdReached\npossible file handle leak upon exception\n\nAlso contains fix for IO-446, submitted by Jeffrey Barrus\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686747 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/Tailer.java",
                "Removed added method from interface that broke binary compatibility.\n\nClients wishing to use this feature must subclass TailerListenerAdapter until we break compatibility or go java8 minumum.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1714076 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/Tailer.java",
                "[IO-505] Deprecated of all IOUtils.closeQuietly() methods and use try-with-resources internally.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1742675 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/Tailer.java",
                "Add missing '@Override' annotations. src/main/java/org/apache/commons/io/input/Tailer.java",
                "Fix Javadoc typos (closes #30) src/main/java/org/apache/commons/io/input/Tailer.java",
                "IO-528: fix Tailer.run race condition runaway logging (closes #29) src/main/java/org/apache/commons/io/input/Tailer.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/input/Tailer.java",
                "Consistently use the final modifier with local variables. src/main/java/org/apache/commons/io/input/Tailer.java",
                "Don't need to nest else clause. src/main/java/org/apache/commons/io/input/Tailer.java",
                "Better ivar and param names. src/main/java/org/apache/commons/io/input/Tailer.java",
                "Remove Subversion's \"@version $Id$\". src/main/java/org/apache/commons/io/input/Tailer.java",
                "[IO-666] Normalize internal buffers to 8192 bytes. src/main/java/org/apache/commons/io/input/Tailer.java",
                "[IO-669] Fix code smells; fix typos (#115)\n\n* fix code smells\r\n\r\n* fix typos\r\n\r\n* l to L\r\n\r\n* use Arrays.fill\r\n\r\n* revert deleting boxing src/main/java/org/apache/commons/io/input/Tailer.java",
                "Javadoc: Close paragraph tags. src/main/java/org/apache/commons/io/input/Tailer.java",
                "Formatting. src/main/java/org/apache/commons/io/input/Tailer.java",
                "Replace magic numbers with constants with the new IOUtils.CR and LF. src/main/java/org/apache/commons/io/input/Tailer.java",
                "Add and use FileUtils.lastModified[Unchecked](File) to workaround\nhttps://bugs.openjdk.java.net/browse/JDK-8177809. src/main/java/org/apache/commons/io/input/Tailer.java",
                "Add and use IOUtils.byteArray(*). src/main/java/org/apache/commons/io/input/Tailer.java",
                "Use Duration instead of long for Tailer internals.\n\nAdd org.apache.commons.io.input.Tailer.getDelayDuration(). src/main/java/org/apache/commons/io/input/Tailer.java",
                "Add and use PathUtils.isNewer(Path, ChronoZonedDateTime, LinkOption...)\nfor more precision.\n\n- Add and use PathUtils.isNewer(Path, Path) for more precision.\n- Add and use FileUtils.isNewer(File, FileTime) for more precision.\n- Tailer uses more precise file time checks. src/main/java/org/apache/commons/io/input/Tailer.java",
                "Patch from PR 32 from jonfreedman with additional changes and cleanups\n\n- Add Tailable interface to tail files accessed using alternative\nlibraries such as jCIFS or commons-vfs.\n- Changes to the PR:\n- Use Objects.requireNonNull() instead manual checks.\n- Normalize Javadoc.\n- Add missing Javadoc.\n- Add missing Javadoc tags.\n- Sort members.\n- Don't initialize ivars to defaults.\n- Renamed some types, ivars, and params.\n- Fix some Javadoc.\n- No need to use FQCNs in Javadoc @link.\n- Use {@code} instead of <code></code>.\n- YAGNI: Remove some methods that are not tested and never called.\n- Re-implement some internals using NIO.\n- Add some constructor parameter validation.\n- Add a toString() methods. src/main/java/org/apache/commons/io/input/Tailer.java",
                "Method that allocates should release resources.\n\nUse try-with-resources with Tailer as an AutoCloseable.\nAll tests now manage its own resource. src/main/java/org/apache/commons/io/input/Tailer.java",
                "Javadoc. src/main/java/org/apache/commons/io/input/Tailer.java",
                "Add final and remove useless parentheses. src/main/java/org/apache/commons/io/input/Tailer.java",
                "Javadoc: Don't use FQCN in throws clause. src/main/java/org/apache/commons/io/input/Tailer.java",
                "Javadoc src/main/java/org/apache/commons/io/input/Tailer.java",
                "Javadoc: Replace @code with @link src/main/java/org/apache/commons/io/input/Tailer.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/TailerTest.java": {
            "message": [
                "IO-177 Should be handling InterruptedException when sleeping - not calling the exception handler\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005921 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Try to improve tests to stop Continuum occasionally failing - don't you just hate tests based on Files & Threads\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005927 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Clean up after test\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1006295 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Missing @Override\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1090203 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Ensure that tailer is stopped even if test aborts\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1090714 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Add testcase fix for IO-269\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1090718 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/TailerTest.java",
                "IO-274 - Tailer returning partial lines when reaching EOF before EOL\nAdded test case (disabled).\nN.B. Had to add tailer.stop() call to allow test file to be cleared up properly\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1127586 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/TailerTest.java",
                "IO-274 - Tailer returning partial lines when reaching EOF before EOL\nAdded version of readLine() that returns null if EOF seen before EOL\nRe-enabled test case\nHad to add sleep call to allow test file to be cleared up properly\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1127854 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Make the test sleep longer waiting for the Tailer to do its work.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1178227 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Formatting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1308114 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Trailing spaces and tab removal\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1347787 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Add extra tests from IO-278\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1347789 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/TailerTest.java",
                "IO-335 - Tailer#readLines - incorrect CR handling\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1347829 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Make test easier to follow by using multiple strings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1347831 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/TailerTest.java",
                "[IO-269] Tailer locks file from deletion/rename on Windows.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1348698 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/TailerTest.java",
                "[IO-358][Tailer] InterruptedException while the thread is sleeping is silently ignored.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1412391 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Try to avoid random-ish failures.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1416650 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/TailerTest.java",
                "IO-354 Commons IO Tailer does not respect UTF-8 Charset\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1468703 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Fix deprecation warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1470205 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Tabs and trailing spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471762 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Add more detail when test fails\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1483249 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Test data file needs to be read/written using UTF-8\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1483304 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/TailerTest.java",
                "IO-354 Commons IO Tailer does not respect UTF-8 Charset\nRework to allow charset to be specified\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1483340 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Reuse our Charsets constants.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1483363 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Fix unavoidable deprecations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642759 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Make JavaDoc tool happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1680650 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Fixed all checkstyle errors and a findbugs error\n\nFindbugs error was:\norg.apache.commons.io.output.DeferredFileOutputStream#thresholdReached\npossible file handle leak upon exception\n\nAlso contains fix for IO-446, submitted by Jeffrey Barrus\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686747 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Fixed testcase to use Adapter instead of interface\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1714088 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Added private and test-scoped sleep method that actually sleeps for a guaranteed minimal time\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718945 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Remved potential race condition between stop and interrupt in testcase\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1721360 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Improved test that was failing on windows\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1721368 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Changed test filename for test\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1721380 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/TailerTest.java",
                "replace usage of deprecated Charsets constants with StandardCharsets constants src/test/java/org/apache/commons/io/input/TailerTest.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/test/java/org/apache/commons/io/input/TailerTest.java",
                "fix some warnings in tests src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Add missing '@Override' annotations. src/test/java/org/apache/commons/io/input/TailerTest.java",
                "TrailerTest: replace usages of IOUtils#closeQuietly with try-with-resources statements\n\n(side effects: close #7, close #21, close #20) src/test/java/org/apache/commons/io/input/TailerTest.java",
                "TailerTest: clean-up is done in tearDown so remove clean-up from individual test methods src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Replace custom temporary folder management with JUnit's TemporaryFolder.\nThis will allow Maven to run tests concurrently. src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Remove setUp and tearDown methods that are no longer necessary after the switch to the TemporaryFolder rule. src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Consistently use the final modifier with local variables. src/test/java/org/apache/commons/io/input/TailerTest.java",
                "The the patrol. src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Revert \"The the patrol.\"\n\nThis reverts commit 41059e4a4827e882b7c77667ff62c9b0567e5e21. src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Comment out System.out.println. src/test/java/org/apache/commons/io/input/TailerTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Javadoc standardize \"behaviour\" -> \"behavior\". src/test/java/org/apache/commons/io/input/TailerTest.java",
                "[IO-666] Normalize internal buffers to 8192 bytes. src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Suppress some SonarLint warnings src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Revert changes -- wrong branch src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Rename test package. src/test/java/org/apache/commons/io/input/TailerTest.java",
                "closeQuietly is deprecated src/test/java/org/apache/commons/io/input/TailerTest.java",
                "assertion may fail src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Remove trailing white spaces. Use final. src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Move test fixtures to package specific location. src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Prevent NullPointerException in ReversedLinesFileReader constructors\n#117. src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Use US English spelling. src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Use US English spelling. src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Remove unused exceptions and trailing whitespace. src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Minor Improvement: (#190)\n\n* Add final\r\n* Remove redundant initializer\r\n* simplify conditions src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Replace construction of FileInputStream and FileOutputStream objects with Files NIO APIs. (#221) src/test/java/org/apache/commons/io/input/TailerTest.java",
                "IO-746: dropping unnecessary casts and conversions (#267)\n\nSigned-off-by: Davide Angelocola <davide.angelocola@gmail.com> src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Patch from PR 32 from jonfreedman with additional changes and cleanups\n\n- Add Tailable interface to tail files accessed using alternative\nlibraries such as jCIFS or commons-vfs.\n- Changes to the PR:\n- Use Objects.requireNonNull() instead manual checks.\n- Normalize Javadoc.\n- Add missing Javadoc.\n- Add missing Javadoc tags.\n- Sort members.\n- Don't initialize ivars to defaults.\n- Renamed some types, ivars, and params.\n- Fix some Javadoc.\n- No need to use FQCNs in Javadoc @link.\n- Use {@code} instead of <code></code>.\n- YAGNI: Remove some methods that are not tested and never called.\n- Re-implement some internals using NIO.\n- Add some constructor parameter validation.\n- Add a toString() methods. src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Method that allocates should release resources.\n\nUse try-with-resources with Tailer as an AutoCloseable.\nAll tests now manage its own resource. src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Trying to fix random failures on GitHub builds. src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Sort members. src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Add and use RandomAccessFileMode. src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Try to fix random GitHub test failure on macOS. src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Checkstyle and fix test sources.\n\n- Move Checkstyle configuration from root folder to src/conf.\n- Remove unused imports.\n- Remove trailing whitespace.\n- Adjust line lengths.\n- No tabs.\n- Use final. src/test/java/org/apache/commons/io/input/TailerTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Use Objects.requireNonNull()\n\nUpdate Javadoc for existing calls. src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Remove unused parameter in test src/test/java/org/apache/commons/io/input/TailerTest.java",
                "Reuse StandardCharsets src/test/java/org/apache/commons/io/input/TailerTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/monitor/FileSystemMonitorTestCase.java": {
            "message": [
                "IO-196 Increase pause() when touching files\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1006011 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/monitor/FileSystemMonitorTestCase.java",
                "Refactor tests to share common code\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1006027 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/monitor/FileSystemMonitorTestCase.java",
                "Refactor tests to share common code\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1006051 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/monitor/FileSystemMonitorTestCase.java",
                "IO-196 Increase pauses to try to reduce continuum failures\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1006054 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/monitor/FileSystemMonitorTestCase.java",
                "Fix FileSystemMonitorTestCase broken in refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1006079 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/monitor/FileSystemMonitorTestCase.java",
                "Nit: removed unused import of org.apache.commons.io.FileUtils\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1006254 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/monitor/FileSystemMonitorTestCase.java"
            ]
        },
        "src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java": {
            "message": [
                "IO-196 Increase pauses to try to reduce continuum failures\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1006054 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java",
                "Fix FileSystemMonitorTestCase broken in refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1006079 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java",
                "Organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1021884 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java",
                "IO-132 Rename FilesystemEntry/Listener/Observer to FilesEntry/Listener/Observer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1021892 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java",
                "Rename to FilerAlteration*\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1022311 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java",
                "Additional tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1022804 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java",
                "Trailing spaces\nThese are the worst offenders; a few still remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471765 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java",
                "Make JavaDoc tool happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1680650 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java",
                "Added private and test-scoped sleep method that actually sleeps for a guaranteed minimal time\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718945 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java",
                "remove unused imports src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java",
                "Fix Javadoc typos (closes #30) src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java",
                "Static imports come first. src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java",
                "Remove setUp and tearDown methods that are no longer necessary after the switch to the TemporaryFolder rule. src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java",
                "FileAlterationMonitorTestCase and FileAlterationObserverTestCase: use TemporaryFolder rule, so that tests are independent src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java",
                "Rename test package. src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java",
                "Minor improvement: (#177)\n\n* Unnecessary conversion to String\r\n* Add final\r\n* Use Standard Charset object\r\n* Redundant 'close()' src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java",
                "Add and use FileUtils.lastModified[Unchecked](File) to workaround\nhttps://bugs.openjdk.java.net/browse/JDK-8177809. src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java",
                "Remove unused exception. src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java",
                "Sort test members. src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java"
            ]
        },
        "src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java": {
            "message": [
                "Clean up after test\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1006295 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                "Fix OutOfMemoryError when running test using Apache Harmony 6.0M3\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1032189 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                "unused import\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1032190 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                "Simplify and avoid boxing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302017 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                "Drop $Date$ SVN variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302050 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                "Trailing spaces\nThese are the worst offenders; a few still remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471765 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                "Further improved test coverage\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1687787 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                "Try a simpler character to please build system\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1687823 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                "Changed testdata to avoid unmappable characters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1687830 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                "Typo\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1688240 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                "remove unused imports src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                "Make private fields final. src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                "Replace custom temporary folder management with JUnit's TemporaryFolder.\nThis will allow Maven to run tests concurrently. src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                "Use final for parameters. src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                "Remove setUp and tearDown methods that are no longer necessary after the switch to the TemporaryFolder rule. src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                "FileWriterWithEncodingTest: simplify setUp method src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                "Consistently use the final modifier with local variables. src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                "[IO-669] Fix code smells; fix typos (#115)\n\n* fix code smells\r\n\r\n* fix typos\r\n\r\n* l to L\r\n\r\n* use Arrays.fill\r\n\r\n* revert deleting boxing src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                "Rename test package. src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                "Try with resources src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                "Try with resources/assert Throws src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                "Remove trailing white spaces. Use final. src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                "Fix compiler warnings, remove exceptions not thrown from method\nsignatures. src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                "Remove dead comments. src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                "Minor improvement: (#176)\n\n* Add Final\r\n* Unused import\r\n* Unnecessary semicolon src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                "- Simplify array declarations.\n- Javadoc.\n- Use try-with-resources. src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                "Replace construction of FileInputStream and FileOutputStream objects with Files NIO APIs. (#221) src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                "[IO-744] FileWriterWithEncoding for an existing file no longer truncates\nthe file. #251.\n\nThis commit is a much simpler fix than PR 251. The test from the PR is\nthe same, just reformatted. src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                "Sort members. src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                "Fix compiler warnings. src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                "A null Charset in FileWriterWithEncoding uses the default Charset. src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                "[IO-744] FileWriterWithEncoding for an existing file no longer truncates\nthe file. #251.\n\nBring in test from PR #252 and add a fix. src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                "Use final and remove trailing whitespace. src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                "Add some missing tests. src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                "Reuse StandardCharsets src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/comparator/ReverseComparator.java": {
            "message": [
                "Organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1021884 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/ReverseComparator.java",
                "Drop $Date$ SVN variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302050 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/ReverseComparator.java",
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/ReverseComparator.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/ReverseComparator.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/ReverseComparator.java",
                "+= generated serialVersionUID\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642757 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/ReverseComparator.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/comparator/ReverseComparator.java",
                "Add missing '@Override' annotations. src/main/java/org/apache/commons/io/comparator/ReverseComparator.java",
                "Fix Javadoc typos (closes #30) src/main/java/org/apache/commons/io/comparator/ReverseComparator.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/comparator/ReverseComparator.java"
            ]
        },
        "src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java": {
            "message": [
                "Organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1021884 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1153506 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "[IO-352] Spelling fixes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1401522 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "Unimportant warning about unclosed resource\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1441286 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "Make explicit where the default platform encoding is being used\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1468885 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "IO-346 Add ByteArrayOutputStream.toInputStream()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1468938 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "IO-314 Deprecate all methods that use the default encoding\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1468992 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "Add support for Charset encoding (already supports String)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1470213 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "Trailing spaces\nThese are the worst offenders; others remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471767 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "IO-395 overload IOUtils buffer methods to accept buffer size.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1535612 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "<action issue=\"IO-437\" dev=\"ggregory\" type=\"add\">\n  Make IOUtils.EOF public and reuse it in various classes.\n</action>\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1586350 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "Use the more modern, compact, and flexible Javadoc \"{@code ...}\" instead of the HTML \"<tt>...</tt>\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1612034 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "[IO-515] Allow Specifying Initial Buffer Size of\nDeferredFileOutputStream. Redo submitted patch. src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "Fix Javadoc typos (closes #30) src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "Use final for parameters. src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "Consistently use the final modifier with local variables. src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "Add/remove blank lines in Javadoc to aid clarity src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "Refactor ByteArrayOutputStream into synchronized and non-synchronized versions (#108)\n\n* Split ByteArrayOutputStream into synchronized and non-synchronized versions\r\n\r\n* Improve the test coverage of AbstractByteArrayOutputStream and sub-classes\r\n\r\n* Address review comments by @aherbert\r\n\r\n* Address review comments by @garydgregory\r\n\r\n* Address further review comments by @garydgregory\r\n\r\n* Remove </p> tags, breaks the javadoc build\r\n\r\n* Address review comments by @aherbert\r\n\r\n* Improve coverage of tests src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "Unsynchronized ByteArrayInputStream implementation (#109)\n\n* Add a non-synchronized ByteArrayInputStream implementation - FastByteArrayInputStream\r\n\r\n* Address review comments by @garydgregory src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "[IO-662] Refactor ByteArrayOutputStream into synchronized and\nunsynchronized versions #108.\n\nSimplify method name. src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "Reuse constant, normalize spelling. src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "Don't hard code values in Javadoc, use {@value reference}. src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "Fix FindBUgs. src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "Javadoc: Sentences end in a period. src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "No need to nest in else. src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "Sort members. src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "Add final and remove useless parentheses. src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "PMD: Remove unnecessary final src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "Javadoc: Replace @code with @link src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "Use longer lines src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/TaggedInputStreamTest.java": {
            "message": [
                "Organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1021884 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/TaggedInputStreamTest.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/TaggedInputStreamTest.java",
                "Ensure stream is closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1441248 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/TaggedInputStreamTest.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/TaggedInputStreamTest.java",
                "remove unused imports src/test/java/org/apache/commons/io/input/TaggedInputStreamTest.java",
                "Let JUnit handle the exceptions src/test/java/org/apache/commons/io/input/TaggedInputStreamTest.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/input/TaggedInputStreamTest.java",
                "Static imports come first. src/test/java/org/apache/commons/io/input/TaggedInputStreamTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/input/TaggedInputStreamTest.java",
                "Resue org.apache.commons.io.input.ClosedInputStream.CLOSED_INPUT_STREAM. src/test/java/org/apache/commons/io/input/TaggedInputStreamTest.java",
                "Add ClosedInputStream.INSTANCE and deprecate CLOSED_INPUT_STREAM. src/test/java/org/apache/commons/io/input/TaggedInputStreamTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/input/TaggedInputStreamTest.java",
                "Use try-with-resources src/test/java/org/apache/commons/io/input/TaggedInputStreamTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java": {
            "message": [
                "Organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1021884 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                "Convert to Java 5 enhanced for loops.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1169520 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                "Ensure stream is closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1441282 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                "IO-346 Add ByteArrayOutputStream.toInputStream()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1468938 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                "Trailing spaces\nThese are the worst offenders; a few still remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471765 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                "Close some resources\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1582843 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                "Replace custom temporary folder management with JUnit's TemporaryFolder.\nThis will allow Maven to run tests concurrently. Clean up imports. src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                "Consistently use the final modifier with local variables. src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                "Refactor ByteArrayOutputStream into synchronized and non-synchronized versions (#108)\n\n* Split ByteArrayOutputStream into synchronized and non-synchronized versions\r\n\r\n* Improve the test coverage of AbstractByteArrayOutputStream and sub-classes\r\n\r\n* Address review comments by @aherbert\r\n\r\n* Address review comments by @garydgregory\r\n\r\n* Address further review comments by @garydgregory\r\n\r\n* Remove </p> tags, breaks the javadoc build\r\n\r\n* Address review comments by @aherbert\r\n\r\n* Improve coverage of tests src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                "Further functional interfaces (#110)\n\n* Fix a warning over generics\r\n\r\n* Extract IOFunction from test case to be usable elsewhere. Complements IOConsumer\r\n\r\n* Add IOSupplier to complement IOFunction and IOConsumer src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                "Use try-with-resources and format to 120 line length. src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                "Fix warnings src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                "Fix compiler warnings, use try-with-resources. src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                "Make public and reuse IOUtils.EMPTY_BYTE_ARRAY. src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                "Sort test members. src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java"
            ]
        },
        "src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java": {
            "message": [
                "Organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1021884 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java",
                "Drop $Date$ SVN variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302050 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java",
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java",
                "Ensure stream is closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1441253 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java",
                "Make JavaDoc tool happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1680650 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java",
                "Language level code changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686260 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java",
                "Replace custom temporary folder management with JUnit's TemporaryFolder.\nThis will allow Maven to run tests concurrently. Clean up imports. src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java",
                "Use try-with-resources in tests and more.\n\n- Don't nest if you do not have to.\n- Document empty blocks.\n- Only run FileFilterTestCase#testCanExecute() on Windows to fix Jenkins\nbuild. src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java",
                "- Simplify array declarations.\n- Javadoc.\n- Use try-with-resources. src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java",
                "Fomrat nit. src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java",
                "Migrate from JUnit 4 to 5\n\nException cleanups in tests. src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java",
                "Organize test imports src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/output/TaggedOutputStreamTest.java": {
            "message": [
                "Organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1021884 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/TaggedOutputStreamTest.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/TaggedOutputStreamTest.java",
                "Ensure stream is closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1441255 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/TaggedOutputStreamTest.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/TaggedOutputStreamTest.java",
                "remove unused imports src/test/java/org/apache/commons/io/output/TaggedOutputStreamTest.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/output/TaggedOutputStreamTest.java",
                "Replace custom temporary folder management with JUnit's TemporaryFolder.\nThis will allow Maven to run tests concurrently. Clean up imports. src/test/java/org/apache/commons/io/output/TaggedOutputStreamTest.java",
                "Use try-with-resources in tests and more.\n\n- Don't nest if you do not have to.\n- Document empty blocks.\n- Only run FileFilterTestCase#testCanExecute() on Windows to fix Jenkins\nbuild. src/test/java/org/apache/commons/io/output/TaggedOutputStreamTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/output/TaggedOutputStreamTest.java",
                "Resue ClosedOutputStream.CLOSED_OUTPUT_STREAM. src/test/java/org/apache/commons/io/output/TaggedOutputStreamTest.java",
                "Add ClosedOutputStream.INSTANCE and deprecate CLOSED_OUTPUT_STREAM. src/test/java/org/apache/commons/io/output/TaggedOutputStreamTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/output/TaggedOutputStreamTest.java",
                "Migrate from JUnit 4 to 5\n\nException cleanups in tests. src/test/java/org/apache/commons/io/output/TaggedOutputStreamTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/output/TaggedOutputStreamTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/CopyUtilsTest.java": {
            "message": [
                "Even though CopyUtils is deprecated, bring it to 100% code coverage.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1021986 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/CopyUtilsTest.java",
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/CopyUtilsTest.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/CopyUtilsTest.java",
                "Suppress warnings for streams deliberately left unclosed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1441231 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/CopyUtilsTest.java",
                "Trailing spaces\nThese are the worst offenders; a few still remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471765 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/CopyUtilsTest.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/CopyUtilsTest.java",
                "remove unused imports src/test/java/org/apache/commons/io/CopyUtilsTest.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/test/java/org/apache/commons/io/CopyUtilsTest.java",
                "Static imports come first. src/test/java/org/apache/commons/io/CopyUtilsTest.java",
                "Remove unnecessary casts. src/test/java/org/apache/commons/io/CopyUtilsTest.java",
                "remove TemporaryFolder Rule from test classes that do not use it src/test/java/org/apache/commons/io/CopyUtilsTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/CopyUtilsTest.java",
                "Rename test package. src/test/java/org/apache/commons/io/CopyUtilsTest.java",
                "Rename test classes from \"Yell\" to \"Throw\" prefix. src/test/java/org/apache/commons/io/CopyUtilsTest.java",
                "Minor improvement: (#177)\n\n* Unnecessary conversion to String\r\n* Add final\r\n* Use Standard Charset object\r\n* Redundant 'close()' src/test/java/org/apache/commons/io/CopyUtilsTest.java",
                "Simplify Assertions (#234) src/test/java/org/apache/commons/io/CopyUtilsTest.java",
                "Add StringInputStream. src/test/java/org/apache/commons/io/CopyUtilsTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/CopyUtilsTest.java",
                "Remove useless comments. src/test/java/org/apache/commons/io/CopyUtilsTest.java",
                "Reuse StandardCharsets src/test/java/org/apache/commons/io/CopyUtilsTest.java",
                "Add missing test CopyUtils#copy_stringToOutputStreamString() src/test/java/org/apache/commons/io/CopyUtilsTest.java",
                "Add missing test CopyUtils#testCopy_readerToOutputStreamString() src/test/java/org/apache/commons/io/CopyUtilsTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/EndianUtilsTest.java": {
            "message": [
                "Improve code coverage.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1021989 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/EndianUtilsTest.java",
                "Not thrown\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1090208 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/EndianUtilsTest.java",
                "Convert to Java 5 enhanced for loops.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1169520 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/EndianUtilsTest.java",
                "Drop $Date$ SVN variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302050 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/EndianUtilsTest.java",
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/EndianUtilsTest.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/EndianUtilsTest.java",
                "Trailing spaces\nThese are the worst offenders; a few still remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471765 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/EndianUtilsTest.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/EndianUtilsTest.java",
                "Static imports come first. src/test/java/org/apache/commons/io/EndianUtilsTest.java",
                "Remove Subversion's \"@version $Id$\". src/test/java/org/apache/commons/io/EndianUtilsTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/EndianUtilsTest.java",
                "- Simplify array declarations.\n- Javadoc.\n- Use try-with-resources. src/test/java/org/apache/commons/io/EndianUtilsTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/EndianUtilsTest.java",
                "Migrate from JUnit 4 to 5\n\nException cleanups in tests. src/test/java/org/apache/commons/io/EndianUtilsTest.java",
                "Organize test imports src/test/java/org/apache/commons/io/EndianUtilsTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/monitor/FileEntry.java": {
            "message": [
                "Rename to FilerAlteration*\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1022311 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FileEntry.java",
                "Move/reuse static empty arrays\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1022723 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FileEntry.java",
                "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FileEntry.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FileEntry.java",
                "Replace \"<code>true</code>\" with \"{@code true}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307461 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FileEntry.java",
                "Replace \"<code>false</code>\" with \"{@code false}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307462 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FileEntry.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FileEntry.java",
                "Javadoc clean up.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1563231 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FileEntry.java",
                "Javadoc clean up.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1563232 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FileEntry.java",
                "+= generated serialVersionUID\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642757 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FileEntry.java",
                "Language level code changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686260 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FileEntry.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/monitor/FileEntry.java",
                "Fix \"unexpected heading\" Javadoc errors on Java 13+. src/main/java/org/apache/commons/io/monitor/FileEntry.java",
                "Use varargs in a few more places. src/main/java/org/apache/commons/io/monitor/FileEntry.java",
                "Rename package-private constant consistently. src/main/java/org/apache/commons/io/monitor/FileEntry.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/monitor/FileEntry.java",
                "Add and use FileUtils.lastModified[Unchecked](File) to workaround\nhttps://bugs.openjdk.java.net/browse/JDK-8177809. src/main/java/org/apache/commons/io/monitor/FileEntry.java",
                "Use final. src/main/java/org/apache/commons/io/monitor/FileEntry.java",
                "- Simplify array declarations.\n- Javadoc.\n- Use try-with-resources. src/main/java/org/apache/commons/io/monitor/FileEntry.java",
                "Update FileEntry to use FileTime instead of long for file time stamps.\n\nAdd FileTimes. src/main/java/org/apache/commons/io/monitor/FileEntry.java",
                "Javadoc. src/main/java/org/apache/commons/io/monitor/FileEntry.java",
                "Sort members. src/main/java/org/apache/commons/io/monitor/FileEntry.java",
                "Use Objects.requireNonNull()\n\nUpdate Javadoc for existing calls. src/main/java/org/apache/commons/io/monitor/FileEntry.java",
                "Keep org.apache.commons.io.monitor.FileEntry Serializble for behavioral\ncompatibility src/main/java/org/apache/commons/io/monitor/FileEntry.java",
                "Sort main members src/main/java/org/apache/commons/io/monitor/FileEntry.java"
            ]
        },
        "src/test/java/org/apache/commons/io/monitor/CollectionFileListener.java": {
            "message": [
                "Rename to FilerAlteration*\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1022311 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/monitor/CollectionFileListener.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/monitor/CollectionFileListener.java",
                "+= generated serialVersionUID\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642757 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/monitor/CollectionFileListener.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/monitor/CollectionFileListener.java",
                "Add missing '@Override' annotations. src/test/java/org/apache/commons/io/monitor/CollectionFileListener.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/monitor/CollectionFileListener.java",
                "Use try-with-resources in tests and more.\n\n- Don't nest if you do not have to.\n- Document empty blocks.\n- Only run FileFilterTestCase#testCanExecute() on Windows to fix Jenkins\nbuild. src/test/java/org/apache/commons/io/monitor/CollectionFileListener.java",
                "Sort test members. src/test/java/org/apache/commons/io/monitor/CollectionFileListener.java"
            ]
        },
        "src/test/java/org/apache/commons/io/LineIteratorTestCase.java": {
            "message": [
                "Improve code coverage.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1022317 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/LineIteratorTestCase.java",
                "Improve code coverage.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1022321 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/LineIteratorTestCase.java",
                "Remove unused import\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1022718 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/LineIteratorTestCase.java",
                "Improve unit test code coverage.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1022739 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/LineIteratorTestCase.java",
                "Improve unit test code coverage.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1022740 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/LineIteratorTestCase.java",
                "Remove my @author tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1088801 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/LineIteratorTestCase.java",
                "Remove assert because the iterator always deals Strings. \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1165970 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/LineIteratorTestCase.java",
                "Iterator always deals Strings (FindBugs).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1165983 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/LineIteratorTestCase.java",
                "Iterator always deals Strings (FindBugs).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1165984 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/LineIteratorTestCase.java",
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/LineIteratorTestCase.java",
                "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/LineIteratorTestCase.java",
                "[IO-318] Add Charset sister APIs to method that take a String charset name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307397 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/LineIteratorTestCase.java",
                "Organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1308109 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/LineIteratorTestCase.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/LineIteratorTestCase.java",
                "Trailing spaces\nThese are the worst offenders; a few still remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471765 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/LineIteratorTestCase.java",
                "Make JavaDoc tool happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1680650 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/LineIteratorTestCase.java",
                "Language level code changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686260 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/LineIteratorTestCase.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/LineIteratorTestCase.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/LineIteratorTestCase.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/test/java/org/apache/commons/io/LineIteratorTestCase.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/LineIteratorTestCase.java",
                "Static imports come first. src/test/java/org/apache/commons/io/LineIteratorTestCase.java",
                "Replace static TemporaryFolders with instances ones, so that tests are truly independent. src/test/java/org/apache/commons/io/LineIteratorTestCase.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/LineIteratorTestCase.java",
                "Try with resources src/test/java/org/apache/commons/io/LineIteratorTestCase.java",
                "closeQuietly is deprecated src/test/java/org/apache/commons/io/LineIteratorTestCase.java",
                "Try with resources src/test/java/org/apache/commons/io/LineIteratorTestCase.java",
                "Remove trailing white spaces. Use final. src/test/java/org/apache/commons/io/LineIteratorTestCase.java",
                "Minor improvement: (#176)\n\n* Add Final\r\n* Unused import\r\n* Unnecessary semicolon src/test/java/org/apache/commons/io/LineIteratorTestCase.java",
                "Remove unused exceptions. src/test/java/org/apache/commons/io/LineIteratorTestCase.java",
                "Simplify Assertions (#234) src/test/java/org/apache/commons/io/LineIteratorTestCase.java",
                "Replace construction of FileInputStream and FileOutputStream objects with Files NIO APIs. (#221) src/test/java/org/apache/commons/io/LineIteratorTestCase.java",
                "Add and use PathUtils.sizeOf(Path)\n\n- Add and use PathUtils.sizeOfAsBigInteger(Path)\n- Add and use PathUtils.sizeOfDirectory(Path)\n- Add and use PathUtils.sizeOfDirectoryAsBigInteger(Path)\n- Use assertThrows in tests. src/test/java/org/apache/commons/io/LineIteratorTestCase.java",
                "Sort test members. src/test/java/org/apache/commons/io/LineIteratorTestCase.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/test/java/org/apache/commons/io/LineIteratorTestCase.java"
            ]
        },
        "src/main/java/org/apache/commons/io/LineIterator.java": {
            "message": [
                "Now that we are on Java 5, we can use the Throwable version of the exception constructor and avoid loosing the original exception information.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1022322 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/LineIterator.java",
                "Remove my @author tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1088801 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/LineIterator.java",
                "Document why we don't implement Iterable\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1102128 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/LineIterator.java",
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/LineIterator.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/LineIterator.java",
                "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304073 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/LineIterator.java",
                "Replace \"<code>true</code>\" with \"{@code true}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307461 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/LineIterator.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/LineIterator.java",
                "Trailing spaces\nThese are the worst offenders; others remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471767 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/LineIterator.java",
                "[IO-505] Make LineIterator implement Closeable to support try-with-resources statements.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1742672 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/LineIterator.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/LineIterator.java",
                "Add missing '@Override' annotations. src/main/java/org/apache/commons/io/LineIterator.java",
                "[IO-635] Add org.apache.commons.io.IOUtils.close(Closeable).\n\nReuse own API. src/main/java/org/apache/commons/io/LineIterator.java",
                "[IO-636] Add and reuse org.apache.commons.io.IOUtils.close(Closeable,\nConsumer<IOException>) src/main/java/org/apache/commons/io/LineIterator.java",
                "[IO-636]\n\n- Add and reuse org.apache.commons.io.IOUtils.closeQuitely(Closeable,\nConsumer<IOException>).\n- [IO-636] Add and reuse org.apache.commons.io.IOUtils.close(Closeable,\nIOConsumer<IOException>). src/main/java/org/apache/commons/io/LineIterator.java",
                "Fix Javadoc comments WRT deprecation. src/main/java/org/apache/commons/io/LineIterator.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/LineIterator.java",
                "Minor Improvement: (#190)\n\n* Add final\r\n* Remove redundant initializer\r\n* simplify conditions src/main/java/org/apache/commons/io/LineIterator.java",
                "Add and use a package-private factory for UnsupportedOperationException\nto provide exception messages with a consistent formatting. src/main/java/org/apache/commons/io/LineIterator.java",
                "No need to nest in else. src/main/java/org/apache/commons/io/LineIterator.java",
                "Minor improvements: (#233)\n\n* Use Method reference\r\n* Use List.sort()\r\n* Change Explicit with <>\r\n* Simplify conditional expression src/main/java/org/apache/commons/io/LineIterator.java",
                "Remove \"line\" in-line comments. src/main/java/org/apache/commons/io/LineIterator.java",
                "Sort members. src/main/java/org/apache/commons/io/LineIterator.java",
                "Javadoc: Replace @code with @link src/main/java/org/apache/commons/io/LineIterator.java",
                "Use Objects.requireNonNull()\n\nJavadoc. Reuse own API. src/main/java/org/apache/commons/io/LineIterator.java",
                "Reuse StandardCharsets src/main/java/org/apache/commons/io/LineIterator.java"
            ]
        },
        "src/test/java/org/apache/commons/io/FileUtilsTestCase.java": {
            "message": [
                "IO-252 Add test to prove that this is fixed by IO-166\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1022336 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Improve unit test code coverage.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1022738 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "IO-182 Add new \"append\" parameter to methods writing to files - thanks to Benoit Lafontaine for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1081011 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "IO-261 Add getFile() methods with varargs parameter\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1081025 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "[IO-226] question with byteCountToDisplaySize(long size). Add more tests. Add commented out code for processing terabyte, petabyte and exabyte. Add constants for terabyte, petabyte and exabyte, zettabyte, and yottabyte.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1153952 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "[IO-282] Add API FileUtils.copyFile(File input, OutputStream output)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1163295 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "IO-275 FileUtils.contentEquals/IOUtils.contentEquals - Add option to ignore \"line endings\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1200693 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Check files fail to compare byte-wise\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1200697 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Adding EB/PB/TB per IO-287 and Ron Kuris' patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1201022 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "IO-276 \"FileUtils#deleteDirectoryOnExit(File)\" does not work\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1295683 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "IO-173 FileUtils.listFiles() doesn't return directories\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1295700 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "IO-300 FileUtils.moveDirectoryToDirectory removes source directory if destination is a subdirectory\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1300447 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Simplify and avoid boxing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302017 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Don't use assertTrue for comparing equals\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304139 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "[IO-318] Add Charset sister APIs to method that take a String charset name. FileUtils.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307412 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "[IO-318] Add Charset sister APIs to method that take a String charset name. ReversedLinesFileReader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307428 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Use blocks.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1308108 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "[IO-319] FileUtils.sizeOfDirectory follows symbolic links.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1326588 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "[IO-324] Add Charset sister APIs to method that take a String charset name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1326612 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "[IO-324] Add Charset sister APIs to method that take a String charset name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1326613 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Add tests to ensure directory size is non-zero\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1326677 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "First cut at [IO-326] Add new FileUtils.sizeOf[Directory] APIs to return BigInteger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1326785 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "[IO-327] Add byteCountToDisplaySize(BigInteger)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1327496 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Add empty array test\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1347785 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "[IO-326] Add new FileUtils.sizeOf[Directory] APIs to return BigInteger. Thanks to Bruno P. Kinoshita for the fix and test case.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1349488 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "[IO-349] Add API with array offset and length argument to FileUtils.writeByteArrayToFile. Applied patch with changes: (1) Fixed bugs in unit tests (2) Added @since tags (3) Fixed formatting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1401648 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "[IO-361] Add API FileUtils.forceMkdirsParent().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1423916 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Fix remaining deprecation warnings in test cases\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1470210 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Tabs and trailing spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471762 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Add test case to show file sizes are compared at end\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1488714 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "IO-390 \nFileUtils.sizeOfDirectoryAsBigInteger can overflow.\nEnsure that recursive calls all use BigInteger\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1501735 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "[IO-435] Document thrown IllegalArgumentException in FileUtils. Thanks to Dominik Stadler.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1611192 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "add default svnuids\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642754 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Spurious spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642800 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Make JavaDoc tool happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1680650 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Language level code changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686260 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Added private and test-scoped sleep method that actually sleeps for a guaranteed minimal time\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718945 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "FileUtilsTestCase: usage of IOUtils#closeQuietly with try-with-resources statements src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "FileUtilsTestCase: test directory is delete in tear down method, so remove clean up in individual tests src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "IO-534 FileUtilTestCase.testForceDeleteDir() should not delete\ntestDirectory parent src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "IO-367: Add convenience methods for copyToDirectory (closes #34, closes #18)\n\nbased on patch supplied by James Sawle src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Static imports come first. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Remove unnecessary casts. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Use final for parameters. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Replace static TemporaryFolders with instances ones, so that tests are truly independent. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Consistently use the final modifier with local variables. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "IO-589 Some tests fail if the base path contains a space src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "[IO-643] NPE in org.apache.commons.io.FileUtils.contentEquals(File,\nFile) when only one input is null. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "[IO-644] NPE in\norg.apache.commons.io.FileUtils.contentEqualsIgnoreEOL(File, File) when\nonly one input is null. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "IO-672 - FileCopy sets date to 01 Jan 1970 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Rename test package. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Refactor error prone magic numbers.\n\nRefactor call to read last modified on a file. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Better test src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Don't use depreacted constants. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Don't call File.lastModified() directly but go through wrapper method to\nallow experimenting with Files.getLastModifiedTime(). src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Don't call File.setLastModified() directly but go through wrapper method\nto\nallow experimenting with Files.setLastModifiedTime(). src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Better test method name. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "More assertions to validate test set ups. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Simpler way to get the current time. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Wrong file checked for size. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Millis are longs. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Unused src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Expected value should be first parameter src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Better test comparison src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Enable  tests previously dependent on sleep src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Address -1 from Sebb by only stamping target file with the source's\ntimestamp if requested and ignoring test assertions on Windows since the\nJRE Files class copies the last modified time by default for me on\nMicrosoft Windows [Version 10.0.16299.1992] and OpenJDK Runtime\nEnvironment (AdoptOpenJDK)(build 1.8.0_265-b01). src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Better test assert message. Javadoc fix.\nFollow links when disabling readonly flag for a delete path call. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Remove trailing white spaces. Use final. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Deprecate IOUtils.LINE_SEPARATOR in favor of Java 7's\nSystem.lineSeparator().\n\n- Remove unused imports.\n- Fix compiler warnings by using try-with-resources.\n- Document empty block.\n- Remove checked exceptions from test methods that do not throw them. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "[IO-676] Add isFileNewer() and isFileOlder() methods that support the Java 8 Date/Time API. (#124)\n\n* Add isFileOlder methods that support the Java 8 Date/Time API.\r\n\r\n* Add isFileNewer methods that support the Java 8 Date/Time API.\r\n\r\n* Apply Javadoc comment changes suggested in PR comment.\r\n\r\n* Use Objects.requireNonNull() in the isFileNewer() and isFileOlder() methods.\r\n\r\n* Use ChronoLocalDate, ChronoLocalDateTime and ChronoZonedDateTime instead of LocalDate, LocalDateTime and ZonedDateTime to support other date/time formats such as JapaneseDate.\r\n\r\n* Add 'since' tags.\r\n\r\n* Set Instant to the current zone ID before doing the timestamp comparison. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Format comments. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Bring back previous version of this file. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "[IO-597] FileUtils.iterateFiles runs out of memory when executed for a\ndirectory with large number of files.\n\nRe-implement FileUtils' iterateFiles(), iterateFilesAndDirs(),\nlistFiles(), listFilesAndDirs() to use NIO file tree walking instead of\nIO file listings to avoid memory consumption issues on large file trees. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Use final. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Remove redundant calls to super(). src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Add test testForceDeleteReadOnlyFile. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "FileUtils.forceDelete(File) actually forces deletion of read-only files\nas it did in version 2.6. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Minor improvement: (#176)\n\n* Add Final\r\n* Unused import\r\n* Unnecessary semicolon src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Minor improvement: (#177)\n\n* Unnecessary conversion to String\r\n* Add final\r\n* Use Standard Charset object\r\n* Redundant 'close()' src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Add FileUtils.delete(File), refactor, reuse.\n\nJavadoc. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "FileUtils throws IllegalArgumentException for (most) illegal input to\nmethods.\n\n- There are cases where FileNotFoundException is more appropriate and\ncases where we cannot throw FileNotFoundException in order to maintain\nBC.\n- Refactor to reuse private require*() methods.\n- Check for illegal inputs early in methods with\nObjects.requireNonNull() and custom private require() methods.\n- Convert a few unit tests to assertThrows().\n- Fix [IO-699] Wrong logging in FileUtils.setLastModified. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "IO-700: provide method overload for moveFile (#185)\n\n- added test cases\r\n- updated javadoc for \"copy and delete\" with setLastModified src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Use the JRE CopyOption enum instead of asrc boolean. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Sort methods. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Add FileUtils.isEmptyDirectory(File). src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Remove unused import and unused exceptions. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Remove unused exceptions and trailing whitespace. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Add and use FileUtils.lastModified[Unchecked](File) to workaround\nhttps://bugs.openjdk.java.net/browse/JDK-8177809. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "[IO-709] Add null-safe variants of Files.isDirectory and Files.isRegularFile (#194)\n\nFixes https://issues.apache.org/jira/browse/IO-709 src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Generics. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Use the scale in the var name. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Use varargs. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Simplify Assertions (#234) src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "- Simplify array declarations.\n- Javadoc.\n- Use try-with-resources. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Minor changes: (#243)\n\n* Remove Unnecessary interface modifier\r\n* Make final var\r\n* Simplify conditions\r\n* Simplify assertions src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Replace construction of FileInputStream and FileOutputStream objects with Files NIO APIs. (#221) src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Remove \"line\" in-line comments. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Add and use PathUtils.isOlder(Path, FileTime, LinkOption...)\n\n- Add and use PathUtils.isOlder(Path, Instant, LinkOption...)\n- Add and use PathUtils.isOlder(Path, long, LinkOption...)\n- Add and use PathUtils.isOlder(Path, Path)\n- Add FileUtils.byteCountToDisplaySize(Number) src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Sort members. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Add and use PathUtils.sizeOf(Path)\n\n- Add and use PathUtils.sizeOfAsBigInteger(Path)\n- Add and use PathUtils.sizeOfDirectory(Path)\n- Add and use PathUtils.sizeOfDirectoryAsBigInteger(Path)\n- Use assertThrows in tests. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Sort test members. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Use assertThrows and don't catch and rethrow exceptions in tests.\n\nSimplify some exception assertion. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Use NIO to create sum links but keep OS commands as a back up. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Update Javadoc and test to reflect implementation. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Add missing test case. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Use NIO internally to avoid using finalizable FileInputStream. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/test/java/org/apache/commons/io/FileUtilsTestCase.java",
                "Sort members. src/test/java/org/apache/commons/io/FileUtilsTestCase.java"
            ]
        },
        "src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java": {
            "message": [
                "Move/reuse static empty arrays\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1022723 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java",
                "Remove some accessors\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1022803 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java",
                "IO-262 add getter for FileFilter - thanks to Lae\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1080820 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java",
                "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java",
                "+= generated serialVersionUID\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642757 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java",
                "Language level code changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686260 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java",
                "Extracted duplicated logic into methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686450 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java",
                "Fixed all checkstyle errors and a findbugs error\n\nFindbugs error was:\norg.apache.commons.io.output.DeferredFileOutputStream#thresholdReached\npossible file handle leak upon exception\n\nAlso contains fix for IO-446, submitted by Jeffrey Barrus\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686747 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java",
                "Fix Javadoc typos (closes #30) src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java",
                "Use final for parameters. src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java",
                "Comment empty block. Formatting. src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java",
                "Remove Subversion's \"@version $Id$\". src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java",
                "Javadoc: Use \"file system\" instead of \"filesystem\". src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java",
                "Use HTTPS links to commons.apache.org. src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java",
                "Javadoc. src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java",
                "Rename package-private constant consistently. src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java",
                "Add '@SuppressWarnings(\"unused\") // Possibly thrown from subclasses' to\neliminate compiler warnings. src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java",
                "Add and use IOCase.value(IOCase, IOCase). src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java",
                "Javadoc nits. src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java",
                "Sort members. src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java",
                "Use removeIf() for a more efficient implementation which also deals with\nthe PMD empty while loop error. src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java",
                "No need for an empty block\n\nUse inline comments src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java",
                "Use Objects.requireNonNull() src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java",
                "Use forEach() src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java",
                "Add and reuse IOConsumer.forEach(*) and forEachIndexed(*).\n\nUse forEach and streams. src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java"
            ]
        },
        "src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java": {
            "message": [
                "Improve unit test code coverage.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1022736 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                "Improve unit test code coverage.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1022738 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                "Trailing spaces\nThese are the worst offenders; a few still remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471765 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                "Language level code changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686260 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                "IO-511: After a few unit tests, a few newly created directories not cleaned completely. Thanks to Ahmet Celik. This also closes #13 from GitHub.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1750250 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                "Static imports come first. src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                "Replace static TemporaryFolders with instances ones, so that tests are truly independent. src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                "Format comments. src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                "Remove unused exceptions. src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                "Sort test members. src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java"
            ]
        },
        "src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java": {
            "message": [
                "Guard against trying to start am already running monitor or stop one not running and add an accessor for the interval\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1022799 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java",
                "Minor code re-organization\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1052102 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java",
                "IO-256 - Provide ThreadFactory for FileAlternationMonitor - thanks to Martin Ber\u00e1nek\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1052114 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java",
                "IO-256 - Fix \"Inconsistent Synchonization\" on new ThreadFactory highlighted by FindBugs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1052118 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java",
                "IO-259 - add stop(long) method that specifies the amount of time to wait before stopping the monitor - thanks to Dan Checkoway\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1080843 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java",
                "javadoc corrections\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1080846 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java",
                "IO-259 - simplify stop(long) method  - just use Thread.join(long)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1080934 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java",
                "Add missing '@Override' annotations. src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java",
                "Fix Javadoc typos (closes #30) src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java",
                "IO-535: Thread bug in FileAlterationMonitor#stop(int) (closes #58, #36)\n\nInterrupt the thread created by FileAlterationMonitor on stop() src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java",
                "Remove @version $Id$ tags from pre-git SVN days. src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java",
                "Comment empty block. Formatting. src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java",
                "Javadoc. src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java",
                "Minor Improvement: (#190)\n\n* Add final\r\n* Remove redundant initializer\r\n* simplify conditions src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java",
                "Add constructor accepting collection of file alteration observers (#236)\n\n* Add constructor accepting collection of file alteration observers\r\n\r\n* Add missing whitespace\r\n\r\n* Use optionals for null-safe implementation\r\n\r\n* Add unit-tests for collection constructor\r\n\r\n* Add missing param descriptions\r\n\r\nCo-authored-by: Rotmann, Maksim <maksim.rotmann@soptim.de> src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java",
                "Add constructor accepting collection of file alteration observers #236. src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java",
                "- Use final.\n- Simpler boolean tests.\n- Fix test. src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java",
                "- Simplify array declarations.\n- Javadoc.\n- Use try-with-resources. src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java",
                "Better internal name and Javadoc.\n\nSimple impl for PathUtils#waitFor(). src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java",
                "Sort members. src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java",
                "Use removeIf() for a more efficient implementation which also deals with\nthe PMD empty while loop error. src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java",
                "Use forEach() src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java",
                "Add and reuse IOConsumer.forEach(*) and forEachIndexed(*).\n\nUse forEach and streams. src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java"
            ]
        },
        "src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java": {
            "message": [
                "Guard against trying to start am already running monitor or stop one not running and add an accessor for the interval\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1022799 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java",
                "IO-256 - Provide ThreadFactory for FileAlternationMonitor - thanks to Martin Ber\u00e1nek\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1052114 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java",
                "IO-256 - Fix \"Inconsistent Synchonization\" on new ThreadFactory highlighted by FindBugs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1052118 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java",
                "Trailing spaces\nThese are the worst offenders; a few still remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471765 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java",
                "Added private and test-scoped sleep method that actually sleeps for a guaranteed minimal time\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718945 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java",
                "Fail if expected Exception not thrown src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java",
                "Let JUnit handle the exceptions src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java",
                "Static imports come first. src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java",
                "FileAlterationMonitorTestCase and FileAlterationObserverTestCase: use TemporaryFolder rule, so that tests are independent src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java",
                "IO-535: Thread bug in FileAlterationMonitor#stop(int) (closes #58, #36)\n\nInterrupt the thread created by FileAlterationMonitor on stop() src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java",
                "Use final. src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java",
                "Rename test package. src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java",
                "No need to initialize to default value. src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java",
                "Add constructor accepting collection of file alteration observers (#236)\n\n* Add constructor accepting collection of file alteration observers\r\n\r\n* Add missing whitespace\r\n\r\n* Use optionals for null-safe implementation\r\n\r\n* Add unit-tests for collection constructor\r\n\r\n* Add missing param descriptions\r\n\r\nCo-authored-by: Rotmann, Maksim <maksim.rotmann@soptim.de> src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java",
                "Add constructor accepting collection of file alteration observers #236. src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java",
                "- Use final.\n- Simpler boolean tests.\n- Fix test. src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java",
                "Sort test members. src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java"
            ]
        },
        "src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java": {
            "message": [
                "Additional tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1022804 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java",
                "Fix test failing with Unix file names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1022806 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java",
                "Trailing spaces\nThese are the worst offenders; a few still remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471765 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java",
                "Let JUnit handle the exceptions src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java",
                "Let JUnit handle the exceptions src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java",
                "Static imports come first. src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java",
                "FileAlterationMonitorTestCase and FileAlterationObserverTestCase: use TemporaryFolder rule, so that tests are independent src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java",
                "No need to initialize to default value. src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java",
                "Remove unused exceptions and trailing whitespace. src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java",
                "Add and use FileUtils.lastModified[Unchecked](File) to workaround\nhttps://bugs.openjdk.java.net/browse/JDK-8177809. src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java",
                "Sort test members. src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java"
            ]
        },
        "src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java": {
            "message": [
                "IO-253 add \"buffered\" test for UTF-16 and new tests for UTF-16BE and UTF-16LE\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1023596 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java",
                "IO-253 switch new buffered tests from \"large2\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1023598 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java",
                "Convert to Java 5 enhanced for loops.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1169520 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java",
                "Ensure stream is closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1441253 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java",
                "Trailing spaces\nThese are the worst offenders; a few still remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471765 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java",
                "Added test for broken UTF-16 on IBM jdk's to WriterOutputStream, adjusted\ntestcases to expect UOE\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1721095 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java",
                "Replace custom temporary folder management with JUnit's TemporaryFolder.\nThis will allow Maven to run tests concurrently. Clean up imports. src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java",
                "Consistently use the final modifier with local variables. src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java",
                "Use try-with-resources and format to 120 line length. src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java",
                "Minor improvement: (#177)\n\n* Unnecessary conversion to String\r\n* Add final\r\n* Use Standard Charset object\r\n* Redundant 'close()' src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java",
                "WriterOutputStream maps null Charset, Charset name, and CharsetEncoder\nname to the platform default instead of throwing a NullPointerException. src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java",
                "Reuse StandardCharsets src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java",
                "Sort test members src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/FileUtils.java": {
            "message": [
                "IO-264 Add FileExistsException to FileUilts javadoc for move file/directory methods - thanks to Maciej Bi\u0142as\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1080825 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "IO-182 Add new \"append\" parameter to methods writing to files - thanks to Benoit Lafontaine for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1081011 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "IO-261 Add getFile() methods with varargs parameter\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1081025 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Remove my @author tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1088801 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1090272 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "IO-251 Add new read method \"toByteArray\" to handle InputStream with known size.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1090783 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Fix comment\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1100516 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Rename for clarity\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1100543 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "IO-266 FileUtils.copyFile() throws IOException when copying large files to a shared directory\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1101118 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-226] question with byteCountToDisplaySize(long size). Add more tests. Add commented out code for processing terabyte, petabyte and exabyte. Add constants for terabyte, petabyte and exabyte, zettabyte, and yottabyte.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1153952 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "IO-280 Dubious use of mkdirs() return code\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1163210 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-282] Add API FileUtils.copyFile(File input, OutputStream output)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1163295 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "IO-275 FileUtils.contentEquals/IOUtils.contentEquals - Add option to ignore \"line endings\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1200693 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Adding EB/PB/TB per IO-287 and Ron Kuris' patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1201022 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-291] Add new function FileUtils.directoryContains.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1201713 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Refactor new directortContains method for https://issues.apache.org/jira/browse/IO-291. Change behavior: an unrealized child File is NOT contained in a directory in FileUtils. If you want to test with file names, use FilenameUtils#directoryContains(String, String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1234902 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Link to related methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1234943 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "IO-298 Various methods of class 'org.apache.commons.io.FileUtils' incorrectly suppress 'java.io.IOException'\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1295618 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "IO-276 \"FileUtils#deleteDirectoryOnExit(File)\" does not work\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1295683 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "IO-173 FileUtils.listFiles() doesn't return directories\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1295700 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Fix tab in source and reformat 2 methods for longer lines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1297696 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Rename private method setupEfectiveFileFilter to setUpEffectiveFileFilter\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1299789 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Rename private method setupEffectiveDirFilter to setUpEffectiveDirFilter\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1299790 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1299796 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Javadoc, Checkstyle. More precise throw clause in private method.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1299815 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "@since 2.2 markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1300341 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "IO-300 FileUtils.moveDirectoryToDirectory removes source directory if destination is a subdirectory\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1300447 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Document current Windows behaviour.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1300451 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Remove accidental import\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1300452 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Use \"@since 1.1\" instead of \"@since Commons IO 1.1\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1303950 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Missing @since 2.2 markers; standardise format\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304044 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-318] Add Charset sister APIs to method that take a String charset name. FileUtils.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307412 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Replace \"<code>null</code>\" with \"{@code null}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307459 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Replace \"<code>true</code>\" with \"{@code true}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307461 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Replace \"<code>false</code>\" with \"{@code false}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307462 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-319] FileUtils.sizeOfDirectory follows symbolic links.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1326588 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-324] Add Charset sister APIs to method that take a String charset name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1326609 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "IO-319 Simplify; no need for boolean var.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1326678 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "IO-319 document empty catch block.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1326680 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "No need for a message local var.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1326681 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "IO-319 document behavior with size > long and stop counting when long is < 0.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1326766 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "First cut at [IO-326] Add new FileUtils.sizeOf[Directory] APIs to return BigInteger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1326785 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-327] Add byteCountToDisplaySize(BigInteger)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1327496 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-329] FileUtils.writeLines uses unbuffered IO.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1343253 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-329] FileUtils.writeLines uses unbuffered IO.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1343264 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "IO-334 FileUtils.toURLs throws NPE for null parameter\nDocumented the behaviour\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1347799 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Add missing Javadoc for org.apache.commons.io.FileUtils.checkDirectory(File)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1349306 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Fix @since.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1349311 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-326] Add new FileUtils.sizeOf[Directory] APIs to return BigInteger. Thanks to Bruno P. Kinoshita for the fix and test case.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1349488 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-336] Yottabyte (YB) incorrectly defined in FileUtils.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1349509 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-348] Missing information in IllegalArgumentException thrown by org.apache.commons.io.FileUtils#validateListFilesParameters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1395139 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-349] Add API with array offset and length argument to FileUtils.writeByteArrayToFile. Applied patch with changes: (1) Fixed bugs in unit tests (2) Added @since tags (3) Fixed formatting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1401648 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Change 2 @since tags from \"@since IO 2.1\" to \"@since 2.1\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1401654 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-361] Add API FileUtils.forceMkdirsParent().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1423916 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "IO-372 FileUtils.moveDirectory can produce misleading error message on failiure\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1468602 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "IO-323 What should happen in FileUtils.sizeOf[Directory] when an overflow takes place?\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1468637 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "IO-372 FileUtils.moveDirectory can produce misleading error message on failiure\nOops - wrong separator used\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1468668 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Javadoc: better method available when using Java 1.7+\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1468706 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Make explicit where the default platform encoding is being used\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1468883 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "IO-314 Deprecate all methods that use the default encoding\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1468992 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "IO-328 FileUtils.listFilesAndDirs includes original dir in results even when it doesn't match filter\n       Javadoc: clarify that original dir is included in the results\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1470362 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Trailing spaces\nThese are the worst offenders; others remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471767 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "IO-380 FileUtils.copyInputStreamToFile should document it closes the input source\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1480284 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "IO-381 Add FileUtils.copyInputStreamToFile API with option to leave the source open.\nSee copyInputStreamToFile(final InputStream source, final File destination, boolean closeSource)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1480300 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-381] Fix Javadoc. The whole method might be removed though...\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1480308 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-381] Alternative implementation suggested by Sebb.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1480346 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Javadoc fix\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1480491 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Reuse our Charsets constants.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1483363 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "IO-383 FileUtils.doCopyFile caches the file size; needs to be documented\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1488708 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Point to JIRA with details of inconsistency\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1488711 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Document possible exception when file is truncated during copying\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1489119 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "IO-385 FileUtils.doCopyFile can potentially loop for ever\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1489171 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "IO-390 \nFileUtils.sizeOfDirectoryAsBigInteger can overflow.\nEnsure that recursive calls all use BigInteger\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1501735 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "IO-389 FileUtils.sizeOfDirectory can throw IllegalArgumentException\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1501744 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Better name for private method.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1501745 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-424] Javadoc fixes, mostly to appease 1.8.0. Patch from Ville Skytt\u00e4\". 3 files in the patch did not applied cleanly, so they are not in the commit.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1563227 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-426] Add API IOUtils.closeQuietly(Closeable...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1565317 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-435] Document thrown IllegalArgumentException in FileUtils. Thanks to Dominik Stadler.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1611192 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "IO-453 - Regression in FileUtils.readFileToString from 2.0.1\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1614791 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Clarify Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1616322 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Fix unavoidable deprecations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642759 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Typo\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1652148 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Language level code changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686260 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Extracted duplicated logic into methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686450 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "IO-452 broken symlink support\n\nPatch by David Standish.\n\nAlso added reflection-based java7 symlink support from maven code (original author is me)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686472 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "IO-488 FileUtils.waitFor(...) swallows thread interrupted status\n\nPatch by Bj\u00f6rn Buchner, testcase by me\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686477 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Fixed javadoc for jdk8\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686496 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Fixed all checkstyle errors and a findbugs error\n\nFindbugs error was:\norg.apache.commons.io.output.DeferredFileOutputStream#thresholdReached\npossible file handle leak upon exception\n\nAlso contains fix for IO-446, submitted by Jeffrey Barrus\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686747 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "IO-481 Changed algorithm for waitFor.\n\nEmpirical studies now show this typically completes in 200X ms for a\ndelay of 2 seconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1687108 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Fix NPE since java.io.File.listFiles(FileFilter) can return null.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1687886 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "typo\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1713456 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Fix some JavaDocs warnings. No functional change.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1714353 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "use long math when calculating a long\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1722481 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Fix Javadoc typos from https://github.com/apache/commons-io/pull/10.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1739188 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-502] Exceptions are suppressed incorrectly when copying files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1741124 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-505] Deprecated of all IOUtils.closeQuietly() methods and use try-with-resources internally.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1742675 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "SPecify the charset\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1747189 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Remind people to use the encoding\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1747237 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Now using Java 7 so can avoid the deprecated constant\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1747238 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "Not needed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1747252 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileUtils.java",
                "IO-514: Remove org.apache.commons.io.Java7Support src/main/java/org/apache/commons/io/FileUtils.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/FileUtils.java",
                "Fix Javadoc typos (closes #30) src/main/java/org/apache/commons/io/FileUtils.java",
                "IO-531 - Improve Javadoc for FileUtils.listFiles\n\nThis fixes #33 src/main/java/org/apache/commons/io/FileUtils.java",
                "FileUtils#listFiles: fix javadoc warnings src/main/java/org/apache/commons/io/FileUtils.java",
                "IO-367: Add convenience methods for copyToDirectory (closes #34, closes #18)\n\nbased on patch supplied by James Sawle src/main/java/org/apache/commons/io/FileUtils.java",
                "IO-542: FileUtils#readFileToByteArray: optimize reading of files with known size (closes #38) src/main/java/org/apache/commons/io/FileUtils.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/FileUtils.java",
                "Use final for parameters. src/main/java/org/apache/commons/io/FileUtils.java",
                "Consistently use the final modifier with local variables. src/main/java/org/apache/commons/io/FileUtils.java",
                "Add/remove blank lines in Javadoc to aid clarity src/main/java/org/apache/commons/io/FileUtils.java",
                "Don't need to nest else clause. Refactor magic numbers into constants. src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-571] Remove redundant isDirectory() check in\norg.apache.commons.io.FileUtils.listFilesAndDirs(File, IOFileFilter,\nIOFileFilter). src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-572] Refactor duplicate code in org.apache.commons.io.FileUtils. src/main/java/org/apache/commons/io/FileUtils.java",
                "FileUtils#forceMkdir: Minor fix in method javadoc (closes #60) src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-554] FileUtils.copyToFile(InputStream source, File destination)\nshould not close input stream. Closes #49. src/main/java/org/apache/commons/io/FileUtils.java",
                "Use final. src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-604] FileUtils.doCopyFile(File, File, boolean) can throw\nClosedByInterruptException. src/main/java/org/apache/commons/io/FileUtils.java",
                "Clean up tests. Javadocs. src/main/java/org/apache/commons/io/FileUtils.java",
                "Fix checkstyle violation. src/main/java/org/apache/commons/io/FileUtils.java",
                "Comment empty block. src/main/java/org/apache/commons/io/FileUtils.java",
                "Close Javadoc tags. src/main/java/org/apache/commons/io/FileUtils.java",
                "Remove throws IOException in method isSymlink() (#80)\n\n* Remove throws IOException in method isSymlink()\r\n\r\nThe IOException is caught in 'Files.isSymbolicLink(Path path)' and therefore not thrown anymore in 'public static boolean isSymlink(final File file)'.\r\n\r\n* Update FileUtils.java\r\n\r\nRemove some not thrown IOExceptions\r\n\r\n* Update FileUtils.java\r\n\r\nRemove some not thrown IOExceptions src/main/java/org/apache/commons/io/FileUtils.java",
                "Fix \"unexpected heading\" Javadoc errors on Java 13+. src/main/java/org/apache/commons/io/FileUtils.java",
                "Change part of \"Fix \"unexpected heading\" Javadoc errors on Java 13+.\" so that it also works version before Java 13. src/main/java/org/apache/commons/io/FileUtils.java",
                "Remove trailing white spaces on all lines src/main/java/org/apache/commons/io/FileUtils.java",
                "Use final. src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-625] FileUtils.copyDirectoryToDirectory does not reflect srcDir in exception message when srcDir is not a directory (#95)\n\n* [IO-625] FileUtils.copyDirectoryToDirectory does not reflect srcDir in exception message when srcDir is not a directory\r\n\r\n* [IO-625] final variables, removed empty line, fixed link\r\n\r\n* [IO-625] added entry to changes.xml src/main/java/org/apache/commons/io/FileUtils.java",
                "Use varargs in a few more places. src/main/java/org/apache/commons/io/FileUtils.java",
                "Sort members. src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-630] Deprecate\n`org.apache.commons.io.output.NullOutputStream.NullOutputStream()` in\nfavor of `org.apache.commons.io.output.NullOutputStream.NULL_OUTPUT_STREAM`. src/main/java/org/apache/commons/io/FileUtils.java",
                "Javadoc. src/main/java/org/apache/commons/io/FileUtils.java",
                "Whitespace. src/main/java/org/apache/commons/io/FileUtils.java",
                "IO-629: Providing more meaningful exceptions on file delete (#98)\n\n* IO-629: Providing more meaningful exceptions on file delete\r\n\r\n* IS-629: Refactoring FileUtils#forceDelete to use PathUtils delete api\r\n\r\n* IO-629: Providing more meaningful exceptions on file delete\r\n\r\n* IS-629: Refactoring FileUtils#forceDelete to use PathUtils delete api\r\n\r\n* IO-629: Providing more meaningful exceptions on file delete\r\n\r\n* IO-629: Fixing checkstyle src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-629] FileUtils#forceDelete should use Files#delete rather than\nFile#delete so exception messages includes reason for failure. src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-635] Add org.apache.commons.io.IOUtils.close(Closeable).\n\nReuse own API. src/main/java/org/apache/commons/io/FileUtils.java",
                "Javadoc standardize \"behaviour\" -> \"behavior\". src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-636] Add and reuse org.apache.commons.io.IOUtils.close(Closeable,\nConsumer<IOException>) src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-636]\n\n- Add and reuse org.apache.commons.io.IOUtils.closeQuitely(Closeable,\nConsumer<IOException>).\n- [IO-636] Add and reuse org.apache.commons.io.IOUtils.close(Closeable,\nIOConsumer<IOException>). src/main/java/org/apache/commons/io/FileUtils.java",
                "In-line. src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-643] NPE in org.apache.commons.io.FileUtils.contentEquals(File,\nFile) when only one input is null. src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-644] NPE in\norg.apache.commons.io.FileUtils.contentEqualsIgnoreEOL(File, File) when\nonly one input is null. src/main/java/org/apache/commons/io/FileUtils.java",
                "Clean ups. src/main/java/org/apache/commons/io/FileUtils.java",
                "Normalize on 'charsetName' as a parameter name since this is the named\nused in the JRE for Charset.forName(String).\n\n- Use 'charset' instead of 'encoding' Charset parameter names.\n- Fix 1 checkstyle issue. src/main/java/org/apache/commons/io/FileUtils.java",
                "Implement directory content equality. (#100) src/main/java/org/apache/commons/io/FileUtils.java",
                "Use Objects.requireNonNull() instead of custom check. src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-664] org.apache.commons.io.FileUtils.copyURLToFile(*) open but do\nnot close streams. src/main/java/org/apache/commons/io/FileUtils.java",
                "Fix SpotBugs issues in org.apache.commons.io.FileUtils. src/main/java/org/apache/commons/io/FileUtils.java",
                "Refactor FileUtils to create new APIs surfacing CopyOption.\n\n- copyDirectory(File, File, FileFilter, boolean, CopyOption...)\n- copyFile(File, File, boolean, CopyOption...)\n- Sort test methods. src/main/java/org/apache/commons/io/FileUtils.java",
                "IO-672 - FileCopy sets date to 01 Jan 1970 src/main/java/org/apache/commons/io/FileUtils.java",
                "Since the default behavior of file copying of attributes is OS\ndependent, we give the new target file the current timestamp when\npreserveFileDate is false. src/main/java/org/apache/commons/io/FileUtils.java",
                "Quieten sonarlint src/main/java/org/apache/commons/io/FileUtils.java",
                "Address -1 from Sebb by only stamping target file with the source's\ntimestamp if requested and ignoring test assertions on Windows since the\nJRE Files class copies the last modified time by default for me on\nMicrosoft Windows [Version 10.0.16299.1992] and OpenJDK Runtime\nEnvironment (AdoptOpenJDK)(build 1.8.0_265-b01). src/main/java/org/apache/commons/io/FileUtils.java",
                "Throw an IOException if calling setLastModified() fails. src/main/java/org/apache/commons/io/FileUtils.java",
                "Javadoc. src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-684] Add force version of PathUtils.delete() APIs and friends.\n\n- Add PathUtils.delete(Path, DeleteOption...).\n- Add PathUtils.deleteDirectory(Path, DeleteOption...).\n- Add PathUtils.deleteFile(Path, DeleteOption...).\n- Add PathUtils.setReadOnly(Path, boolean, LinkOption...).\n- Add CleaningPathVisitor.CleaningPathVisitor(PathCounters,\nDeleteOption[], String...).\n- Add DeletingPathVisitor.DeletingPathVisitor(PathCounters,\nDeleteOption[], String...).\n\nSince the NIO APIs in Files class are parameterized with interfaces\nimplemented by enums (e.g. StandardCopyOption implements CopyOption),\nthe new PathUtils APIs here similarly work with a new enum called\nStandardDeleteOption that implements a new DeleteOption interface. This\nallow the API signature to remain stable while additional features can\nbe provided by new enums or adding values to StandardDeleteOption. src/main/java/org/apache/commons/io/FileUtils.java",
                "Better test assert message. Javadoc fix.\nFollow links when disabling readonly flag for a delete path call. src/main/java/org/apache/commons/io/FileUtils.java",
                "Repairing build on Linux... reverting old behavior. src/main/java/org/apache/commons/io/FileUtils.java",
                "Reuse IOExceptionList and fix checkstyle unused imports. src/main/java/org/apache/commons/io/FileUtils.java",
                "Remove trailing white spaces. Use final. src/main/java/org/apache/commons/io/FileUtils.java",
                "Add IOUtils.consume(InputStream). src/main/java/org/apache/commons/io/FileUtils.java",
                "Deprecate IOUtils.LINE_SEPARATOR in favor of Java 7's\nSystem.lineSeparator().\n\n- Remove unused imports.\n- Fix compiler warnings by using try-with-resources.\n- Document empty block.\n- Remove checked exceptions from test methods that do not throw them. src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-676] Add isFileNewer() and isFileOlder() methods that support the Java 8 Date/Time API. (#124)\n\n* Add isFileOlder methods that support the Java 8 Date/Time API.\r\n\r\n* Add isFileNewer methods that support the Java 8 Date/Time API.\r\n\r\n* Apply Javadoc comment changes suggested in PR comment.\r\n\r\n* Use Objects.requireNonNull() in the isFileNewer() and isFileOlder() methods.\r\n\r\n* Use ChronoLocalDate, ChronoLocalDateTime and ChronoZonedDateTime instead of LocalDate, LocalDateTime and ZonedDateTime to support other date/time formats such as JapaneseDate.\r\n\r\n* Add 'since' tags.\r\n\r\n* Set Instant to the current zone ID before doing the timestamp comparison. src/main/java/org/apache/commons/io/FileUtils.java",
                "Use @since 2.8.0. src/main/java/org/apache/commons/io/FileUtils.java",
                "Sort methods in AB order. src/main/java/org/apache/commons/io/FileUtils.java",
                "Remove //-- spacers. src/main/java/org/apache/commons/io/FileUtils.java",
                "IO-689: FileUtils: Document use of ZoneId.systemDefault() src/main/java/org/apache/commons/io/FileUtils.java",
                "IO-689: FileUtils: Remove Instant->ZonedDateTime->Instant round-trip\n\nThis to/from round-trip conversion has no effect on the value of the\nInstant. src/main/java/org/apache/commons/io/FileUtils.java",
                "Tiny performance improvements. (#163) src/main/java/org/apache/commons/io/FileUtils.java",
                "Simplify filter tree construction by reusing new APIs.\n\nMinor formatting.\nMinor refactoring of private method for fluency. src/main/java/org/apache/commons/io/FileUtils.java",
                "Fix Checkstyle issues. src/main/java/org/apache/commons/io/FileUtils.java",
                "Use negate() instead of not() to match predicate terminology. src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-597] FileUtils.iterateFiles runs out of memory when executed for a\ndirectory with large number of files.\n\nRe-implement FileUtils' iterateFiles(), iterateFilesAndDirs(),\nlistFiles(), listFilesAndDirs() to use NIO file tree walking instead of\nIO file listings to avoid memory consumption issues on large file trees. src/main/java/org/apache/commons/io/FileUtils.java",
                "Use final. src/main/java/org/apache/commons/io/FileUtils.java",
                "Better local var name. src/main/java/org/apache/commons/io/FileUtils.java",
                "Remove redundant calls to super(). src/main/java/org/apache/commons/io/FileUtils.java",
                "Use final. src/main/java/org/apache/commons/io/FileUtils.java",
                "FileUtils.forceDelete(File) actually forces deletion of read-only files\nas it did in version 2.6. src/main/java/org/apache/commons/io/FileUtils.java",
                "In-line local var. src/main/java/org/apache/commons/io/FileUtils.java",
                "Reimplement some FileUtils internals in terms of refactored PathUtils\nmethods to provide better behavioral compatibility with older versions\nlike 2.6 in the area of deleting read-only file system elements.\n\nAlso clean up some Javadocs. src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-694] Behaviour change in FileUtils.copyDirectory() file last\nmodified date/times preservation\n\nMatch Javadoc to code. src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-694] Behaviour change in FileUtils.copyDirectory() file last\nmodified date/times preservation.\n\nJavadoc. src/main/java/org/apache/commons/io/FileUtils.java",
                "Javadoc to specify IOException if an error occurs or setting the\nlast-modified time didn't succeeded. src/main/java/org/apache/commons/io/FileUtils.java",
                "Minor improvement: (#176)\n\n* Add Final\r\n* Unused import\r\n* Unnecessary semicolon src/main/java/org/apache/commons/io/FileUtils.java",
                "Minor improvement: (#177)\n\n* Unnecessary conversion to String\r\n* Add final\r\n* Use Standard Charset object\r\n* Redundant 'close()' src/main/java/org/apache/commons/io/FileUtils.java",
                "Fix Javadoc for validateMoveParameters(). src/main/java/org/apache/commons/io/FileUtils.java",
                "Tiny performance improvement in FileUtils#moveDirectoryToDirectory() (#174)\n\n* Tiny performance improvements.\r\n\r\n* Optimizing number of I/O related calls\r\n\r\n* fix checkstyle issue\r\n\r\n* if a file is a directory, it exists, so no need to test for existence; reducing File calls src/main/java/org/apache/commons/io/FileUtils.java",
                "Local var not needed. src/main/java/org/apache/commons/io/FileUtils.java",
                "Add FileUtils.delete(File), refactor, reuse.\n\nJavadoc. src/main/java/org/apache/commons/io/FileUtils.java",
                "FileUtils throws IllegalArgumentException for (most) illegal input to\nmethods.\n\n- There are cases where FileNotFoundException is more appropriate and\ncases where we cannot throw FileNotFoundException in order to maintain\nBC.\n- Refactor to reuse private require*() methods.\n- Check for illegal inputs early in methods with\nObjects.requireNonNull() and custom private require() methods.\n- Convert a few unit tests to assertThrows().\n- Fix [IO-699] Wrong logging in FileUtils.setLastModified. src/main/java/org/apache/commons/io/FileUtils.java",
                "Javadoc. src/main/java/org/apache/commons/io/FileUtils.java",
                "Javadoc. src/main/java/org/apache/commons/io/FileUtils.java",
                "Inline single use local vars.\nUse \"require\" prefix for private method like Objects.require*.\nNormalize spelling.\nFix spelling.\nRemove dead comments. src/main/java/org/apache/commons/io/FileUtils.java",
                "IO-700: provide method overload for moveFile (#185)\n\n- added test cases\r\n- updated javadoc for \"copy and delete\" with setLastModified src/main/java/org/apache/commons/io/FileUtils.java",
                "Use the JRE CopyOption enum instead of asrc boolean. src/main/java/org/apache/commons/io/FileUtils.java",
                "Fix regression from previous commit. src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-701] Make PathUtils.setReadOnly deal with LinuxDosFileAttributeView. (#186)\n\nAdd FileUtilsDeleteDirectory*TestCases. Use java.nio.file.Files.delete for FileUtils.delete. src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-701] Make PathUtils.setReadOnly deal with LinuxDosFileAttributeView\n#186.\n\nClean ups post PR merge. src/main/java/org/apache/commons/io/FileUtils.java",
                "Add FileUtils.isEmptyDirectory(File). src/main/java/org/apache/commons/io/FileUtils.java",
                "Use less cryptic variable names. src/main/java/org/apache/commons/io/FileUtils.java",
                "Javadoc. src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-690] IOUtils.toByteArray(null) no longer throws a\nNullPointerException. src/main/java/org/apache/commons/io/FileUtils.java",
                "Javadoc exceptions. src/main/java/org/apache/commons/io/FileUtils.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/FileUtils.java",
                "Remove unused exceptions and trailing whitespace. src/main/java/org/apache/commons/io/FileUtils.java",
                "Minor Improvement: (#190)\n\n* Add final\r\n* Remove redundant initializer\r\n* simplify conditions src/main/java/org/apache/commons/io/FileUtils.java",
                "Reuse IOUtils.length(Object[]). src/main/java/org/apache/commons/io/FileUtils.java",
                "Sort members. src/main/java/org/apache/commons/io/FileUtils.java",
                "Add and use FileUtils.lastModified[Unchecked](File) to workaround\nhttps://bugs.openjdk.java.net/browse/JDK-8177809. src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-709] Add null-safe variants of Files.isDirectory and Files.isRegularFile (#194)\n\nFixes https://issues.apache.org/jira/browse/IO-709 src/main/java/org/apache/commons/io/FileUtils.java",
                "Remove trailing whitespace. src/main/java/org/apache/commons/io/FileUtils.java",
                "Use final. src/main/java/org/apache/commons/io/FileUtils.java",
                "Add and use IOExceptionList(String, List). src/main/java/org/apache/commons/io/FileUtils.java",
                "Update some exceptions to UncheckedIOException.\n\nInspired by Boris Unckel's #195 GH PR. src/main/java/org/apache/commons/io/FileUtils.java",
                "Reuse EOF constant.\n\nJavadoc tweaks. Format to max line length. Simplify. src/main/java/org/apache/commons/io/FileUtils.java",
                "Use the scale in the var name. src/main/java/org/apache/commons/io/FileUtils.java",
                "Fix Typos in JavaDoc, Comments and Tests (#201)\n\n* Fixed incorrect/missing JavaDoc.\r\n\r\n* Fixed misc. typos in comments and tests.\r\n\r\n* Fixed typos in exception messages. src/main/java/org/apache/commons/io/FileUtils.java",
                "Raise embedded if into parent. src/main/java/org/apache/commons/io/FileUtils.java",
                "No need to nest in else. src/main/java/org/apache/commons/io/FileUtils.java",
                "Minor improvements: (#233)\n\n* Use Method reference\r\n* Use List.sort()\r\n* Change Explicit with <>\r\n* Simplify conditional expression src/main/java/org/apache/commons/io/FileUtils.java",
                "- Simplify array declarations.\n- Javadoc.\n- Use try-with-resources. src/main/java/org/apache/commons/io/FileUtils.java",
                "Minor changes: (#243)\n\n* Remove Unnecessary interface modifier\r\n* Make final var\r\n* Simplify conditions\r\n* Simplify assertions src/main/java/org/apache/commons/io/FileUtils.java",
                "IO-724 deleteDirectory exception javadoc inaccurate update (#245)\n\n* IO-724 deleteDirectory exception javadoc update\r\n\r\nFileUtils.deleteDirectory javadoc is inaccurate for nonexistent directory\r\n\r\n* Remove NullPointerException from javadoc\r\n\r\nRemove NullPointerException from javadoc as future annotation may comes to place\r\n\r\n* Update condition src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-741] FileUtils.listFiles does not list matching files if File\nparameter is a symbolic link. src/main/java/org/apache/commons/io/FileUtils.java",
                "Replace construction of FileInputStream and FileOutputStream objects with Files NIO APIs. (#221) src/main/java/org/apache/commons/io/FileUtils.java",
                "Refactor internals into new methods:\n\n- Add FileUtils.newOutputStream(File, boolean).\n- Add PathUtils.newOutputStream(Path, boolean). src/main/java/org/apache/commons/io/FileUtils.java",
                "Add Javadoc see tags. src/main/java/org/apache/commons/io/FileUtils.java",
                "Document using a try-with-resources, remove reference to deprecated\nmethod. src/main/java/org/apache/commons/io/FileUtils.java",
                "Add and reuse UncheckedIOExceptions. src/main/java/org/apache/commons/io/FileUtils.java",
                "Remove useless parens. src/main/java/org/apache/commons/io/FileUtils.java",
                "@SuppressWarnings and Javadoc. src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-748] FileUtils.moveToDirectory() exception documentation and\nexception message error. src/main/java/org/apache/commons/io/FileUtils.java",
                "Add FileUtils.lastModifiedFileTime(File).\n\nAdd AgeFileFilter.AgeFileFilter(Instant). src/main/java/org/apache/commons/io/FileUtils.java",
                "Javadoc nits. src/main/java/org/apache/commons/io/FileUtils.java",
                "Add PathUtils.waitFor(Path, Duration, LinkOption...). src/main/java/org/apache/commons/io/FileUtils.java",
                "Add FileUtils.current(). src/main/java/org/apache/commons/io/FileUtils.java",
                "Javadoc. src/main/java/org/apache/commons/io/FileUtils.java",
                "Fix Javadoc 17 errors. src/main/java/org/apache/commons/io/FileUtils.java",
                "isRegularFile checks for regular files, not directories... src/main/java/org/apache/commons/io/FileUtils.java",
                "Better internal names. src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-748] FileUtils.moveToDirectory() exception documentation and\nexception message error. src/main/java/org/apache/commons/io/FileUtils.java",
                "Add and use PathUtils.setLastModifiedTime(Path) for better precision.\n\nAdd and use PathUtils.setLastModifiedTime(Path, Path) for better\nprecision. src/main/java/org/apache/commons/io/FileUtils.java",
                "Add and use PathUtils.isNewer(Path, ChronoZonedDateTime, LinkOption...)\nfor more precision.\n\n- Add and use PathUtils.isNewer(Path, Path) for more precision.\n- Add and use FileUtils.isNewer(File, FileTime) for more precision.\n- Tailer uses more precise file time checks. src/main/java/org/apache/commons/io/FileUtils.java",
                "Add and use PathUtils.isOlder(Path, FileTime, LinkOption...)\n\n- Add and use PathUtils.isOlder(Path, Instant, LinkOption...)\n- Add and use PathUtils.isOlder(Path, long, LinkOption...)\n- Add and use PathUtils.isOlder(Path, Path)\n- Add FileUtils.byteCountToDisplaySize(Number) src/main/java/org/apache/commons/io/FileUtils.java",
                "Format tweak. src/main/java/org/apache/commons/io/FileUtils.java",
                "Use NIO for internals. src/main/java/org/apache/commons/io/FileUtils.java",
                "Add and use PathUtils.sizeOf(Path)\n\n- Add and use PathUtils.sizeOfAsBigInteger(Path)\n- Add and use PathUtils.sizeOfDirectory(Path)\n- Add and use PathUtils.sizeOfDirectoryAsBigInteger(Path)\n- Use assertThrows in tests. src/main/java/org/apache/commons/io/FileUtils.java",
                "Update Javadoc and test to reflect implementation. src/main/java/org/apache/commons/io/FileUtils.java",
                "Simplify.\n\nRemove TODO inline comments I previously wrote. src/main/java/org/apache/commons/io/FileUtils.java",
                "Internal Javadoc fix. src/main/java/org/apache/commons/io/FileUtils.java",
                "Use NIO internally to avoid using finalizable FileInputStream. src/main/java/org/apache/commons/io/FileUtils.java",
                "Use NIO internally to avoid using finalizable FileInputStream. src/main/java/org/apache/commons/io/FileUtils.java",
                "Javadoc. src/main/java/org/apache/commons/io/FileUtils.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/FileUtils.java",
                "FileUtils.listFiles() does not list matching files if File parameter is\na symbolic link. src/main/java/org/apache/commons/io/FileUtils.java",
                "Correction in typo error in javadocs (#276)\n\nCorrected typo error in javadocs for method convertFileCollectionToFileArray src/main/java/org/apache/commons/io/FileUtils.java",
                "Format method. src/main/java/org/apache/commons/io/FileUtils.java",
                "Some formatting to Checkstyle max line length.\n\nUse final. src/main/java/org/apache/commons/io/FileUtils.java",
                "Javadoc nits. src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-750] FileUtils.iterateFiles also lists directories. src/main/java/org/apache/commons/io/FileUtils.java",
                "FileUtils.copyURLToFile(URL, File, int, int) leaks its URLConnection.\n\nCalled by FileUtils.copyURLToFile(URL, File). src/main/java/org/apache/commons/io/FileUtils.java",
                "Reimplement internals to use try-with-resources. src/main/java/org/apache/commons/io/FileUtils.java",
                "Add IOExceptionList.checkEmpty(List, Object). src/main/java/org/apache/commons/io/FileUtils.java",
                "Add and reuse IOConsumer.forEach(T[], IOConsumer<T>) and\nforEachIndexed(Stream<T>, IOConsumer<T>) src/main/java/org/apache/commons/io/FileUtils.java",
                "Javadoc. src/main/java/org/apache/commons/io/FileUtils.java",
                "Better NPE message. src/main/java/org/apache/commons/io/FileUtils.java",
                "FileUtils.copyURLToFile should create target parent directories and\noverwrite target file #319.\n\n- Based on PR #39 but different.\n- New assert method leaks input stream; this bug was copied from\nexisting code into a new method.\n- Use NIO.\n- Tests don't need to schedule files for deletion on exit when JUnit\nalready manages the directory. src/main/java/org/apache/commons/io/FileUtils.java",
                "Use java8 reference (#321) src/main/java/org/apache/commons/io/FileUtils.java",
                "Move ctor. src/main/java/org/apache/commons/io/FileUtils.java",
                "Add missing javadoc for exceptions thrown for invalid arguments (#339) src/main/java/org/apache/commons/io/FileUtils.java",
                "Reduce boilerplate through new UncheckedIO class and friends in\norg.apache.commons.io.function. src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-769] FileUtils.copyFileToDirectory can lead to not accessible file\nwhen preserving the file date\n\nUpdate Javadoc src/main/java/org/apache/commons/io/FileUtils.java",
                "Add PathUtils.touch(Path)\n\nRefactor src/main/java/org/apache/commons/io/FileUtils.java",
                "PMD: ignore empty catch block src/main/java/org/apache/commons/io/FileUtils.java",
                "PMD: Remove unnecessary final src/main/java/org/apache/commons/io/FileUtils.java",
                "Javadoc: Replace @code with @link src/main/java/org/apache/commons/io/FileUtils.java",
                "Sort members src/main/java/org/apache/commons/io/FileUtils.java",
                "Javadoc and format tweaks src/main/java/org/apache/commons/io/FileUtils.java",
                "Add FileUtils.isFileNewer(File, ChronoLocalDate, OffsetTime).\n\nAdd FileUtils.isFileNewer(File, OffsetDateTime).\nAdd FileUtils.isFileOlder(File, ChronoLocalDate, OffsetTime).\nAdd FileUtils.isFileOlder(File, OffsetDateTime). src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-755] Using FileUtils.listFiles() with background changes fails on\nLinux src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-755] Using FileUtils.listFiles() with background changes fails on\nLinux src/main/java/org/apache/commons/io/FileUtils.java",
                "Reuse StandardCharsets src/main/java/org/apache/commons/io/FileUtils.java",
                "Use longer lines src/main/java/org/apache/commons/io/FileUtils.java",
                "Use forEach() src/main/java/org/apache/commons/io/FileUtils.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/main/java/org/apache/commons/io/FileUtils.java",
                "Add and reuse IOConsumer forAll(*), forEach(*) src/main/java/org/apache/commons/io/FileUtils.java",
                "Rename new class src/main/java/org/apache/commons/io/FileUtils.java",
                "Move new class and test it explicitly\n\nAs opposed to testing it by running other code. src/main/java/org/apache/commons/io/FileUtils.java",
                "Change parameter order of new methods, use var-args, improve tests src/main/java/org/apache/commons/io/FileUtils.java",
                "[IO-386] FileUtils.doCopyFile uses different methods to check the file\nsizes.\n\n- The method org.apache.commons.io.FileUtils.copyFile(File, File,\nCopyOption...) no longer checks file sizes.\n- [IO-443] FileUtils.copyFile methods throw an unnecessary \"Failed to\ncopy full contents from\" exception.\n- Remove test that does not reflect what happens on disk since we use\nFiles.copy(Path,Path,CopyOptions) src/main/java/org/apache/commons/io/FileUtils.java",
                "Simplify internals of FileUtils#iterateFiles(File, String[], boolean) src/main/java/org/apache/commons/io/FileUtils.java",
                "Use streams src/main/java/org/apache/commons/io/FileUtils.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java": {
            "message": [
                "IO-260 Fix ClassLoaderObjectInputStream does not handle Proxy classes - thanks to John Carrino\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1080833 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                "Javadoc improvements\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1080933 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                "Use \"@since 1.1\" instead of \"@since Commons IO 1.1\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1303950 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                "IO-368 ClassLoaderObjectInputStream does not handle primitive typed members\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1468926 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                "Trailing spaces\nThese are the worst offenders; others remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471767 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                "Consistently use the final modifier with local variables. src/main/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                "Javadoc. Close HTML tags. Use paragraph tags. src/main/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                "Javadoc: Replace @code with @link src/main/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java": {
            "message": [
                "IO-260 Fix ClassLoaderObjectInputStream does not handle Proxy classes - thanks to John Carrino\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1080833 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java",
                "Ensure stream is closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1441253 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java",
                "Add some more tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1468635 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java",
                "Oops - restore disabled tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1468674 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java",
                "Better name\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1468675 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java",
                "Add some more fields to the test class\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1468858 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java",
                "More tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1468867 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java",
                "Trailing spaces\nThese are the worst offenders; a few still remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471765 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java",
                "Language level code changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686260 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java",
                "added test to exercise ClassLoaderObjectInputStream::resolveProxyClass with multiple interfaces src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java",
                "Make private fields final. src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java",
                "Static imports come first. src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java",
                "Use final for parameters. src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java",
                "Consistently use the final modifier with local variables. src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java",
                "Clean up tests. Javadocs. src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java",
                "Remove redundant modifiers src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java",
                "- Simplify array declarations.\n- Javadoc.\n- Use try-with-resources. src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java",
                "Migrate from JUnit 4 to 5\n\nException cleanups in tests. src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java",
                "Use SerializationUtils to build test fixtures src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/IOUtils.java": {
            "message": [
                "Remove my @author tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1088801 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "IO-251 Add new read method \"toByteArray\" to handle InputStream with known size.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1090783 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "Make toString(InputStream input) reuse toString(InputStream input, String encoding).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1091651 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "Add IOUtils.toString(URL) and IOUtils.toString(URL, String)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1091652 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "Add IOUtils.toString(URI) and IOUtils.toString(URI, String)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1091653 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "IO-275 FileUtils.contentEquals/IOUtils.contentEquals - Add option to ignore \"line endings\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1200693 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "IO-290 Add read/readFully methods to IOUtils\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1202513 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "IO-292 IOUtils.closeQuietly() should take a ServerSocket as a parameter\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1202515 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "[IO-301] Add IOUtils.closeQuietly(Selector) necessary.\nPatch applied, thank you. Also added another test to get the test code coverage to 100%.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1233978 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "Document why safe to create skip buffers without synch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1299949 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "@since 2.2 markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1300341 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1301432 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "IO-305:  New copyLarge() method in IOUtils that takes additional offset, length arguments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1301851 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "Use \"@since 1.1\" instead of \"@since Commons IO 1.1\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1303950 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "Fix some odd formatting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1303957 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "Javadoc - fix copy-paste error\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1303992 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "Missing @since 2.2 markers; standardise format\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304044 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "Replace magic number (-1) with new private constant EOF.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304049 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "IO-311 IOUtils.read(InputStream/Reader) ignores the offset parameter\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304066 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "Calculate buffer lengthe once\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304074 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "Javadoc - rename offset as that is usually used for destination buffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304077 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "Alignment\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304078 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "IO-308 Allow applications to provide buffer (or size) for copyLarge methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304086 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "Add missing tests as discovered with Cobertura. Add a new method IOUTils.toBufferedReader(Reader).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304177 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "[IO-318] Add Charset sister APIs to method that take a String charset name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307397 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "[IO-318] Add Charset sister APIs to method that take a String charset name. FileUtils.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307412 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "Clean up @since tags \"@since 2.1.\" -> \"@since 2.1\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1326600 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "[IO-325] Add IOUtils.toByteArray methods to work with URL and URI.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1326636 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "[IO-352] Spelling fixes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1401522 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "[IO-353] Add API IOUtils.copy(InputStream, OutputStream, int).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1402280 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "IO-355 - document why we use read() rather than skip()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1404331 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "IO-355 - document why we use read() rather than skip()\nAdd comments to skipFully methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1404343 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1406212 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "<action issue=\"IO-358\" dev=\"ggregory\" type=\"add\" due-to=\"yukoba\">Add IOUtils.read and readFully(ReadableByteChannel, ByteBuffer buffer).</action>\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415223 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "<action issue=\"IO-359\" dev=\"ggregory\" type=\"add\" due-to=\"yukoba\">Add IOUtils.skip and skipFully(ReadableByteChannel, long).</action>\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415648 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "Javadoc: Use the active voice.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415793 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "[IO-362] IOUtils.contentEquals* methods returns false if input1 == input2, should return true.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1428941 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "Make explicit where the default platform encoding is being used\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1468883 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "IO-314 Deprecate all methods that use the default encoding\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1468992 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "Javadoc clarification\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1470202 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "IO-330 IOUtils#toBufferedOutputStream/toBufferedWriter to conditionally wrap the output\nAdded asBufferedInputStream, asBufferedOutputStream, asBufferedReader, asBufferedWriter \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1470251 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "Trailing spaces\nThese are the worst offenders; others remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471767 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "IO-233 IO-330 Add Methods for Buffering Streams/Writers To IOUtils\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1483859 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "Javadoc correction - no encoding is involved copying char[] to a writer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1487683 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "IO-382 Chunked IO for large arrays\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1489238 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "IO-395 overload IOUtils buffer methods to accept buffer size.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1535612 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "IO-410 Readfully() That Returns A Byte Array\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1545141 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "@since\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1545144 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "[IO-424] Javadoc fixes, mostly to appease 1.8.0. Patch from Ville Skytt\u00e4\". 3 files in the patch did not applied cleanly, so they are not in the commit.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1563227 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "[IO-426] Add API IOUtils.closeQuietly(Closeable...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1565317 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "Make EOF public for use as a static import.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1586310 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "Start to fix up closeQuietly Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1586853 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "Spurious spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642800 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "Clarify why skip buffers can be shared\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1657527 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "Comment is incorrect; the example does not ignore IOException\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1658441 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "Add note regarding buffer re-use in applications\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1658448 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "Make JavaDoc tool happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1680650 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "Fixed all checkstyle errors and a findbugs error\n\nFindbugs error was:\norg.apache.commons.io.output.DeferredFileOutputStream#thresholdReached\npossible file handle leak upon exception\n\nAlso contains fix for IO-446, submitted by Jeffrey Barrus\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686747 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "@since markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1704426 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "Fix some JavaDocs warnings. No functional change.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1714353 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "[IO-492] Typo: In an IOUtils.java comment it says \"focussed\" instead of \"focused\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1722156 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "[IO-505] Deprecated of all IOUtils.closeQuietly() methods and use try-with-resources internally.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1742675 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "Note deprecated methods in class Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1753638 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "Fix compiler warnings, use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1753725 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOUtils.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/IOUtils.java",
                "[IO-513] Add convenience methods for reading class path resources.\n\nApply and evlove patch from Behrang Saeedzadeh. src/main/java/org/apache/commons/io/IOUtils.java",
                "Correct error message in IOUtils (closes #35)\n\nThis corrects the wording of the error message in IOUtils: There's\nno such word as \"readed\", and the author probably meant \"expected\"\nas opposed to \"excepted\". src/main/java/org/apache/commons/io/IOUtils.java",
                "IOUtils#toByteArray: fix spelling of local variable name src/main/java/org/apache/commons/io/IOUtils.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/IOUtils.java",
                "Use final for parameters. src/main/java/org/apache/commons/io/IOUtils.java",
                "Consistently use the final modifier with local variables. src/main/java/org/apache/commons/io/IOUtils.java",
                "Add/remove blank lines in Javadoc to aid clarity src/main/java/org/apache/commons/io/IOUtils.java",
                "Javadoc: don't list methods that this constant. src/main/java/org/apache/commons/io/IOUtils.java",
                "Sort methods. src/main/java/org/apache/commons/io/IOUtils.java",
                "[IO-594] IOUtils copy methods with java.lang.Appendable as the target. src/main/java/org/apache/commons/io/IOUtils.java",
                "[IO-594] IOUtils copy methods with java.lang.Appendable as the target. src/main/java/org/apache/commons/io/IOUtils.java",
                "Refactor null-safe length query code into new IOUtils methods. src/main/java/org/apache/commons/io/IOUtils.java",
                "Added AppendableWriter. (#87)\n\n* Added AppendableWriter.\r\n\r\n* Added IOUtils.writer method. src/main/java/org/apache/commons/io/IOUtils.java",
                "Fix Javadoc errors src/main/java/org/apache/commons/io/IOUtils.java",
                "Control flow issues (#93)\n\n* Control flow issues src/main/java/org/apache/commons/io/IOUtils.java",
                "Remove obsolete // comments. src/main/java/org/apache/commons/io/IOUtils.java",
                "[IO-635] Add org.apache.commons.io.IOUtils.close(Closeable). src/main/java/org/apache/commons/io/IOUtils.java",
                "[IO-636] Add and reuse org.apache.commons.io.IOUtils.close(Closeable,\nConsumer<IOException>) src/main/java/org/apache/commons/io/IOUtils.java",
                "[IO-636]\n\n- Add and reuse org.apache.commons.io.IOUtils.closeQuitely(Closeable,\nConsumer<IOException>).\n- [IO-636] Add and reuse org.apache.commons.io.IOUtils.close(Closeable,\nIOConsumer<IOException>). src/main/java/org/apache/commons/io/IOUtils.java",
                "Fix Javadoc comments WRT deprecation. src/main/java/org/apache/commons/io/IOUtils.java",
                "Use own util APIs. src/main/java/org/apache/commons/io/IOUtils.java",
                "[IO-640] NPE in org.apache.commons.io.IOUtils.contentEquals(InputStream,\nInputStream) when only one input is null. src/main/java/org/apache/commons/io/IOUtils.java",
                "[IO-641] NPE in org.apache.commons.io.IOUtils.contentEquals(Reader,\nReader) when only one input is null. src/main/java/org/apache/commons/io/IOUtils.java",
                "[IO-642] NPE in\norg.apache.commons.io.IOUtils.contentEqualsIgnoreEOL(Reader, Reader)\nwhen only one input is null. src/main/java/org/apache/commons/io/IOUtils.java",
                "Normalize on 'charsetName' as a parameter name since this is the named\nused in the JRE for Charset.forName(String).\n\n- Use 'charset' instead of 'encoding' Charset parameter names.\n- Fix 1 checkstyle issue. src/main/java/org/apache/commons/io/IOUtils.java",
                "No need to allocate empty byte arrays over and over. src/main/java/org/apache/commons/io/IOUtils.java",
                "Use Objects.requireNonNull() instead of custom check. src/main/java/org/apache/commons/io/IOUtils.java",
                "[IO-666] Normalize internal buffers to 8192 bytes. src/main/java/org/apache/commons/io/IOUtils.java",
                "[IO-669] Fix code smells; fix typos (#115)\n\n* fix code smells\r\n\r\n* fix typos\r\n\r\n* l to L\r\n\r\n* use Arrays.fill\r\n\r\n* revert deleting boxing src/main/java/org/apache/commons/io/IOUtils.java",
                "IO-681 IOUtils.close(Closeable) - allow a list src/main/java/org/apache/commons/io/IOUtils.java",
                "Null-guard IOUtils.close(Closeable, IOConsumer). src/main/java/org/apache/commons/io/IOUtils.java",
                "Restore binary compatibility in IOUtils with latest released version\n2.7.\n\n- Refactor IOUtils to restore BC.\n- Make the GitHub build reuse the POM default goal.\n- Replace Apache CLIRR with JApiCmp since CLIRR is not Java 8 aware. src/main/java/org/apache/commons/io/IOUtils.java",
                "Quieten sonarlint src/main/java/org/apache/commons/io/IOUtils.java",
                "Remove trailing white spaces. Use final. src/main/java/org/apache/commons/io/IOUtils.java",
                "Sort methods in AB order. src/main/java/org/apache/commons/io/IOUtils.java",
                "Add IOUtils.consume(InputStream). src/main/java/org/apache/commons/io/IOUtils.java",
                "Allow null input IOUtils.copyLarge(InputStream, OutputStream, byte[]) to\nact as a noop and return 0 bytes copied count. src/main/java/org/apache/commons/io/IOUtils.java",
                "Reuse skip buffer instead of allocating a new one on each call. Make the\nskip buffer size the same as DEFAULT_BUFFER_SIZE. src/main/java/org/apache/commons/io/IOUtils.java",
                "Deprecate IOUtils.LINE_SEPARATOR in favor of Java 7's\nSystem.lineSeparator().\n\n- Remove unused imports.\n- Fix compiler warnings by using try-with-resources.\n- Document empty block.\n- Remove checked exceptions from test methods that do not throw them. src/main/java/org/apache/commons/io/IOUtils.java",
                "Add @SuppressWarnings(\"resource\") with a comment. src/main/java/org/apache/commons/io/IOUtils.java",
                "Abbreviate and only call readLine() once in the loop. src/main/java/org/apache/commons/io/IOUtils.java",
                "- Javadoc.\n- Add @SuppressWarnings(\"resource\") for parameter null checks.\n- Better private method name.\n- Format nits. src/main/java/org/apache/commons/io/IOUtils.java",
                "[IO-686] IOUtils.toByteArray(InputStream) Javadoc does not match code. src/main/java/org/apache/commons/io/IOUtils.java",
                "Un-derpecate IOUtils.closeQuietly() methods. src/main/java/org/apache/commons/io/IOUtils.java",
                "Update Javadoc. src/main/java/org/apache/commons/io/IOUtils.java",
                "Remove redundant calls to super(). src/main/java/org/apache/commons/io/IOUtils.java",
                "Add StandardLineSeparator. src/main/java/org/apache/commons/io/IOUtils.java",
                "Replace magic numbers with constants with the new IOUtils.CR and LF. src/main/java/org/apache/commons/io/IOUtils.java",
                "Javadoc exceptions. src/main/java/org/apache/commons/io/IOUtils.java",
                "Typo in exception message. src/main/java/org/apache/commons/io/IOUtils.java",
                "Use constant. src/main/java/org/apache/commons/io/IOUtils.java",
                "Use reader and writer as parameter names to distinguish them from\nstreams in other methods. src/main/java/org/apache/commons/io/IOUtils.java",
                "Use less cryptic variable names. src/main/java/org/apache/commons/io/IOUtils.java",
                "[IO-690] IOUtils.toByteArray(null) no longer throws a\nNullPointerException. src/main/java/org/apache/commons/io/IOUtils.java",
                "Javadoc exceptions. src/main/java/org/apache/commons/io/IOUtils.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/IOUtils.java",
                "Remove unused exceptions and trailing whitespace. src/main/java/org/apache/commons/io/IOUtils.java",
                "Javadoc. src/main/java/org/apache/commons/io/IOUtils.java",
                "Javadoc: Sentences end in a period. src/main/java/org/apache/commons/io/IOUtils.java",
                "Improved performance of IOUtils.contentEquals(InputStream, InputStream).\n\nThis is based on the PR https://github.com/apache/commons-io/pull/118 by\nXenoAmess but only for this one method. src/main/java/org/apache/commons/io/IOUtils.java",
                "Improve performance of IOUtils.contentEquals(Reader, Reader).\n\nThis is based on the PR https://github.com/apache/commons-io/pull/118 by\nXenoAmess but only for this one method. src/main/java/org/apache/commons/io/IOUtils.java",
                "Remove warning annotation. src/main/java/org/apache/commons/io/IOUtils.java",
                "Javadoc. src/main/java/org/apache/commons/io/IOUtils.java",
                "Add and use IOUtils.byteArray(*). src/main/java/org/apache/commons/io/IOUtils.java",
                "Make public and reuse IOUtils.EMPTY_BYTE_ARRAY. src/main/java/org/apache/commons/io/IOUtils.java",
                "Sort members. src/main/java/org/apache/commons/io/IOUtils.java",
                "Add IOUtils.copy(URL, File) and copy(URL, OutputStream). src/main/java/org/apache/commons/io/IOUtils.java",
                "Remove trailing whitepsace. src/main/java/org/apache/commons/io/IOUtils.java",
                "[IO-718] FileUtils.checksumCRC32 and FileUtils.checksum are not thread\nsafe. src/main/java/org/apache/commons/io/IOUtils.java",
                "Use final. Remove trailing whitepace. src/main/java/org/apache/commons/io/IOUtils.java",
                "- IOUtils.toByteArray(InputStream) should used an unsynchronized\nByteArrayOutputStream internally.\n- Improve Javadoc for IOUtils.copy(InputStream OutputStream). src/main/java/org/apache/commons/io/IOUtils.java",
                "[IO-429] Check for long streams in IOUtils.toByteArray #175. src/main/java/org/apache/commons/io/IOUtils.java",
                "Remove trailing whitespace. src/main/java/org/apache/commons/io/IOUtils.java",
                "Minor improvements: (#233)\n\n* Use Method reference\r\n* Use List.sort()\r\n* Change Explicit with <>\r\n* Simplify conditional expression src/main/java/org/apache/commons/io/IOUtils.java",
                "- Simplify array declarations.\n- Javadoc.\n- Use try-with-resources. src/main/java/org/apache/commons/io/IOUtils.java",
                "Replace construction of FileInputStream and FileOutputStream objects with Files NIO APIs. (#221) src/main/java/org/apache/commons/io/IOUtils.java",
                "Remove IOException from the method signatures that no longer\nthrow IOException.\n        This maintains binary compatibility but not source\ncompatibility.\n        - FilenameUtils\n            directoryContains(String, String)\n        - BoundedReader\n            BoundedReader(java.io.Reader, int)\n        - IOUtils\n            lineIterator(java.io.InputStream, Charset)\n            lineIterator(java.io.InputStream, String)\n            toByteArray(String)\n            toInputStream(CharSequence, String)\n            toInputStream(String, String)\n            toString(byte[])\n            toString(byte[], String) src/main/java/org/apache/commons/io/IOUtils.java",
                "Add NullOutputStream.INSTANCE and deprecate NULL_OUTPUT_STREAM. src/main/java/org/apache/commons/io/IOUtils.java",
                "Document using a try-with-resources, remove reference to deprecated\nmethod. src/main/java/org/apache/commons/io/IOUtils.java",
                "IO-746: dropping unnecessary casts and conversions (#267)\n\nSigned-off-by: Davide Angelocola <davide.angelocola@gmail.com> src/main/java/org/apache/commons/io/IOUtils.java",
                "Javadoc: Close HTML tags. src/main/java/org/apache/commons/io/IOUtils.java",
                "Javadoc: Use links in @depreacted comments. src/main/java/org/apache/commons/io/IOUtils.java",
                "Reimplement internals to use try-with-resources. src/main/java/org/apache/commons/io/IOUtils.java",
                "[IO-753] Add IOUtils method to copy output stream to input stream (#281)\n\n* IO-753 - added method to copy ByteArrayOutputStream to InputStream\r\n\r\n* IO-753 fixed auto-indentation and organize-import changes\r\n\r\n* IO-753 fixed organize-import changes\r\n\r\n* IO-753 fixed checkstyle warnings\r\n\r\n* IO-753 fixed javadoc errors\r\n\r\n* IO-753 fixed PR remarks src/main/java/org/apache/commons/io/IOUtils.java",
                "Sort new method. src/main/java/org/apache/commons/io/IOUtils.java",
                "Use lambdas, in-line single use local variable, remove some whitespace. src/main/java/org/apache/commons/io/IOUtils.java",
                "Add and reuse IOConsumer.forEach(T[], IOConsumer<T>) and\nforEachIndexed(Stream<T>, IOConsumer<T>) src/main/java/org/apache/commons/io/IOUtils.java",
                "[IO-697] Fix IOUtils.toByteArray documentation. src/main/java/org/apache/commons/io/IOUtils.java",
                "Add missing javadoc for exceptions thrown for invalid arguments (#339) src/main/java/org/apache/commons/io/IOUtils.java",
                "[IO-764] IOUtils.write() throws\nOutOfMemoryError/NegativeArraySizeException while writing big strings\n\n- Adapt PR #343 by DaGeRe.\n- Use a ternary expression. src/main/java/org/apache/commons/io/IOUtils.java",
                "[IO-764] IOUtils.write() throws\nOutOfMemoryError/NegativeArraySizeException while writing big strings\n\nReuse solution. src/main/java/org/apache/commons/io/IOUtils.java",
                "PMD: Remove unnecessary final src/main/java/org/apache/commons/io/IOUtils.java",
                "Javadoc: Replace @code with @link src/main/java/org/apache/commons/io/IOUtils.java",
                "[IO-772] Confusing Javadoc on IOUtils#resourceToURL() and other\nresource* methods. src/main/java/org/apache/commons/io/IOUtils.java",
                "Add IOUtils.closeQuietly(Collection<Closeable>).\n\nAdd IOUtils.closeQuietly(Stream<Closeable>).\nInternal refactoring to avoid type casts. src/main/java/org/apache/commons/io/IOUtils.java",
                "Javadoc src/main/java/org/apache/commons/io/IOUtils.java",
                "Reuse StandardCharsets src/main/java/org/apache/commons/io/IOUtils.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/main/java/org/apache/commons/io/IOUtils.java",
                "Add and reuse IOConsumer.forEach(*) and forEachIndexed(*).\n\nUse forEach and streams. src/main/java/org/apache/commons/io/IOUtils.java",
                "Add and reuse IOConsumer forAll(*), forEach(*) src/main/java/org/apache/commons/io/IOUtils.java",
                "More precise exceptions src/main/java/org/apache/commons/io/IOUtils.java",
                "Fix Javadoc src/main/java/org/apache/commons/io/IOUtils.java",
                "Add IOUtils.consume(Reader). src/main/java/org/apache/commons/io/IOUtils.java",
                "Change parameter order of new methods, use var-args, improve tests src/main/java/org/apache/commons/io/IOUtils.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderUtilitiesCompatibilityTest.java": {
            "message": [
                "Missing @Override\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1090207 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderUtilitiesCompatibilityTest.java",
                "Inline needless lvar.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1345621 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderUtilitiesCompatibilityTest.java",
                "[IO-320] Add XmlStreamReader support for UTF-32.\n[IO-331] BOMInputStream wrongly detects UTF-32LE_BOM files as UTF-16LE_BOM files in method getBOM().\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1346400 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderUtilitiesCompatibilityTest.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderUtilitiesCompatibilityTest.java",
                "Ensure stream is closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1441282 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderUtilitiesCompatibilityTest.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderUtilitiesCompatibilityTest.java",
                "Consistently use the final modifier with local variables. src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderUtilitiesCompatibilityTest.java",
                "Use try-with-resources in tests and more.\n\n- Don't nest if you do not have to.\n- Document empty blocks.\n- Only run FileFilterTestCase#testCanExecute() on Windows to fix Jenkins\nbuild. src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderUtilitiesCompatibilityTest.java",
                "Add StringInputStream. src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderUtilitiesCompatibilityTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderUtilitiesCompatibilityTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderUtilitiesCompatibilityTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/FileSystemUtils.java": {
            "message": [
                "IO-263 FileSystemUtils.freeSpaceKb throws exception for Windows volumes with no visible files.\nImprove coverage by also looking for hidden files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1090779 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "Use FileUtils.ONE_KB instead of 1024 magic number.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1169528 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "Use Collection.isEmpty() instead of size() == 0\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1199986 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "Use \"@since 1.1\" instead of \"@since Commons IO 1.1\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1303950 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1468707 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "Make explicit where the default platform encoding is being used\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1468883 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "Trailing spaces\nThese are the worst offenders; others remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471767 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "Replace \"String.length()\" == 0 with \"String.isEmpty()\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1586504 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "Fix typos: timout -> timeout\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1586506 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "Javadoc: POSIX an acronym.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1586507 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "Typo in exception message\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1599805 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "IO-462 IOExceptionWithCause no longer needed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642799 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "Language level code changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686260 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "Fixed all checkstyle errors and a findbugs error\n\nFindbugs error was:\norg.apache.commons.io.output.DeferredFileOutputStream#thresholdReached\npossible file handle leak upon exception\n\nAlso contains fix for IO-446, submitted by Jeffrey Barrus\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686747 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "[IO-502] Exceptions are suppressed incorrectly when copying files. Fix NPEs due to the patch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1741122 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "[IO-502] Exceptions are suppressed incorrectly when copying files. 2nd patch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1741296 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "[IO-506] Deprecate methods FileSystemUtils.freeSpaceKb().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1742670 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "[IO-547] Throw a IllegalArgumentException instead of\nNullPointerException in FileSystemUtils.freeSpaceWindows(). src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "Use final for parameters. src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "IO-506: javadoc that freeSpaceKb returns kibibytes\n\n.. not pre-1998 kilobytes -- it was misleadingly named before.\n\nAlso fix @deprecated as it is not actually removed in 2.6, just deprecated src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "IO-506: Deprecate FileSystemUtils class src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "Remove redundant calls to super(). src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "Use isEmpty(). src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "Javadoc. src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "Re-implement package-private class ThreadMonitor timeouts with\njava.time.Duration. src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "Re-implement FileSystemUtils internal timeouts with\njava.time.Duration. src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "No need to nest in else. src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "- Simplify array declarations.\n- Javadoc.\n- Use try-with-resources. src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "Minor changes: (#243)\n\n* Remove Unnecessary interface modifier\r\n* Make final var\r\n* Simplify conditions\r\n* Simplify assertions src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "Remove \"line\" in-line comments. src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "Comment typo. src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "Checkstyle. src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "Sort members. src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "Add final and remove useless parentheses. src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "Use Objects.requireNonNull()\n\nUpdate Javadoc for existing calls. src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/main/java/org/apache/commons/io/FileSystemUtils.java",
                "Add and reuse IOConsumer.forEach(*) and forEachIndexed(*).\n\nUse forEach and streams. src/main/java/org/apache/commons/io/FileSystemUtils.java"
            ]
        },
        "src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java": {
            "message": [
                "IO-263 FileSystemUtils.freeSpaceKb throws exception for Windows volumes with no visible files.\nImprove coverage by also looking for hidden files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1090779 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "Test bullet-proofing (FindBugs)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1165968 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "JUnit 3 -> 4: replace import of junit.framework.Assert with org.junit.Assert.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1437523 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "Trailing spaces\nThese are the worst offenders; a few still remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471765 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "Unnecessary\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1644080 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "Language level code changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686260 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "fix warnings in FileBasedTestCase\n\n(side-effects: close #15, close #16) src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "Static imports come first. src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "remove TemporaryFolder Rule from test classes that do not use it src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "Avoid fine-sensitivity when testing freeSpace\n\nInstead of a fixed delta of 256 kB, assume disk space does not change by\nmore than 1% between calling freeSpacfe and the second call to\nfreeSpaceKb - e.g. 1 GB on a 100 GB drive. 1% is still small enough to\ndetect if the code accidentally changes from kibibytes (1024) to\nkilobytes (1000) src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "Consistently use the final modifier with local variables. src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "Add more varied input data to tests in FileSystemUtilsTestCase (closes #48)\n\nAdd tests with larger and smaller disk spaces on Windows\n\n(side effect: close #57, close #45) src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "Class under test is deprecated src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "Revert changes -- wrong branch src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "Remove unused exceptions. src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "Fix Typos in JavaDoc, Comments and Tests (#201)\n\n* Fixed incorrect/missing JavaDoc.\r\n\r\n* Fixed misc. typos in comments and tests.\r\n\r\n* Fixed typos in exception messages. src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "Re-implement FileSystemUtils internal timeouts with\njava.time.Duration. src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "Remove \"line\" in-line comments. src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "fix wrong usage of assertNotNull (#269)\n\nSignature of assertNoNull() is taking \"actual\" as first parameter:\r\n\r\n    public static void assertNotNull(Object actual, String message) {\r\n        AssertNotNull.assertNotNull(actual, message);\r\n    }\r\n\r\nSigned-off-by: Davide Angelocola <davide.angelocola@gmail.com> src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "Sort test members. src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java"
            ]
        },
        "src/test/java/org/apache/commons/io/IOUtilsTestCase.java": {
            "message": [
                "IO-251 Add new read method \"toByteArray\" to handle InputStream with known size.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1090783 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Add IOUtils.toString(URL) and IOUtils.toString(URL, String)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1091652 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Add IOUtils.toString(URI) and IOUtils.toString(URI, String)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1091653 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "IO-275 FileUtils.contentEquals/IOUtils.contentEquals - Add option to ignore \"line endings\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1200693 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "IO-290 Add read/readFully methods to IOUtils\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1202513 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "[IO-301] Add IOUtils.closeQuietly(Selector) necessary.\nPatch applied, thank you. Also added another test to get the test code coverage to 100%.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1233978 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Missing @Overrides\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1295634 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "IO-305:  New copyLarge() method in IOUtils that takes additional offset, length arguments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1301851 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Rename testClose* methods to testCloseQuietly* to reflect the API tested: closeQuietly.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304056 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "IO-311 IOUtils.read(InputStream/Reader) ignores the offset parameter\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304066 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Don't use assertTrue for comparing equals\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304139 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Add missing tests as discovered with Cobertura.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304170 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Fix method name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304172 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Add missing tests as discovered with Cobertura. Add a new method IOUTils.toBufferedReader(Reader).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304177 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "[IO-318] Add Charset sister APIs to method that take a String charset name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307397 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "[IO-318] Add Charset sister APIs to method that take a String charset name. FileUtils.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307412 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "[IO-318] Add Charset sister APIs to method that take a String charset name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307568 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Add missing @Override.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1308107 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1308109 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "[IO-325] Add IOUtils.toByteArray methods to work with URL and URI.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1326636 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "<action issue=\"IO-358\" dev=\"ggregory\" type=\"add\" due-to=\"yukoba\">Add IOUtils.read and readFully(ReadableByteChannel, ByteBuffer buffer).</action>\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415223 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Normalize method names: method_paratype\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415227 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Normalize method names: method_paratype\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415240 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Fix formatting in copyLarge methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415243 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Fix formatting in copyLarge methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415244 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Normalize method names: method_paratype\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415245 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Normalize method names: method_paratype\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415248 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Remove comment: // ---...\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415249 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Normalize method names: method_paratype\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415251 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Now that the method names are normalized, sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415252 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415254 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "<action issue=\"IO-359\" dev=\"ggregory\" type=\"add\" due-to=\"yukoba\">Add IOUtils.skip and skipFully(ReadableByteChannel, long).</action>\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415648 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "[IO-362] IOUtils.contentEquals* methods returns false if input1 == input2, should return true.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1428941 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Overriding synch. method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1441254 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Suppress deprecation warnings for code that tests the deprecated methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1470207 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "IO-330 IOUtils#toBufferedOutputStream/toBufferedWriter to conditionally wrap the output\nAdded asBufferedInputStream, asBufferedOutputStream, asBufferedReader, asBufferedWriter \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1470251 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Trailing spaces\nThese are the worst offenders; a few still remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471765 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "IO-233 IO-330 Add Methods for Buffering Streams/Writers To IOUtils\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1483859 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "IO-395 overload IOUtils buffer methods to accept buffer size.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1535612 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "IO-410 Readfully() That Returns A Byte Array\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1545141 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "[IO-426] Add API IOUtils.closeQuietly(Closeable...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1565317 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Fix unavoidable deprecations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642759 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Spurious spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642800 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "replace usage of deprecated Charsets constants with StandardCharsets constants src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "fix some warnings in tests src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Add missing '@Override' annotations. src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "[IO-513] Add convenience methods for reading class path resources.\n\nApply and evlove patch from Behrang Saeedzadeh. src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Correct error message in IOUtils (closes #35)\n\nThis corrects the wording of the error message in IOUtils: There's\nno such word as \"readed\", and the author probably meant \"expected\"\nas opposed to \"excepted\". src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "IOUtilsTestCase#testToByteArray_InputStream_NegativeSize: fix typo src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Missing Test Case for negative offset value (closes #41)\n\nThe method copyLarge(InputStream input, InputStream output, int offset, buffer) copies the content of input into output. If offset is a positive number, it will skip a number of bytes from input equal to offset value. By performing mutation testing analysis we noticed that the copyLarge method was never tested for a negative value for offset. The added test call copyLarge with a negative value and check that the behavior is the same as for offset = 0, where no bytes are skipped from input. src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Static imports come first. src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Remove unnecessary casts. src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Use final for parameters. src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Replace static TemporaryFolders with instances ones, so that tests are truly independent. src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Consistently use the final modifier with local variables. src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "IO-589 Some tests fail if the base path contains a space src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Added AppendableWriter. (#87)\n\n* Added AppendableWriter.\r\n\r\n* Added IOUtils.writer method. src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Remove trailing white spaces on all lines.\nMore lambdas, less boilerplate. src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "[IO-640] NPE in org.apache.commons.io.IOUtils.contentEquals(InputStream,\nInputStream) when only one input is null. src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "[IO-641] NPE in org.apache.commons.io.IOUtils.contentEquals(Reader,\nReader) when only one input is null. src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "[IO-642] NPE in\norg.apache.commons.io.IOUtils.contentEqualsIgnoreEOL(Reader, Reader)\nwhen only one input is null. src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Suppress some SonarLint warnings src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Revert changes -- wrong branch src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Simplify by using assertThrows src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Simplify using assertDoesNotThrow src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Try with resources tidy-up src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Test cases for close() methods added in 2.7 src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Unused src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "IO-681 IOUtils.close(Closeable) - allow a list src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Restore binary compatibility in IOUtils with latest released version\n2.7.\n\n- Refactor IOUtils to restore BC.\n- Make the GitHub build reuse the POM default goal.\n- Replace Apache CLIRR with JApiCmp since CLIRR is not Java 8 aware. src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Rename test package. src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Rename test classes from \"Yell\" to \"Throw\" prefix. src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Remove trailing white spaces. Use final. src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Sort methods in AB order. src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Add IOUtils.consume(InputStream). src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Move test fixtures to package specific location. src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Prevent NullPointerException in ReversedLinesFileReader constructors\n#117. src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Replace magic numbers with constants with the new IOUtils.CR and LF. src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Minor improvement: (#176)\n\n* Add Final\r\n* Unused import\r\n* Unnecessary semicolon src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Minor improvement: (#177)\n\n* Unnecessary conversion to String\r\n* Add final\r\n* Use Standard Charset object\r\n* Redundant 'close()' src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Put @Test on their own lines.\n\nFormat to 120 line length. src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Add a test. src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Remove unused exceptions. src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Minor Improvement: (#190)\n\n* Add final\r\n* Remove redundant initializer\r\n* simplify conditions src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Don't use \"m_\" prefix for instance variables. src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Tests with larger inputs that DEFAULT_BUFFER_SIZE in case internal\nbuffers are used. src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Refactor. src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Improved performance of IOUtils.contentEquals(InputStream, InputStream).\n\nThis is based on the PR https://github.com/apache/commons-io/pull/118 by\nXenoAmess but only for this one method. src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Add IOConsumer.noop().\n\nFix local var name typos. src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "[IO-429] Check for long streams in IOUtils.toByteArray #175. src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Simplify Assertions (#234) src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "- Simplify array declarations.\n- Javadoc.\n- Use try-with-resources. src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Replace construction of FileInputStream and FileOutputStream objects with Files NIO APIs. (#221) src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Add StringInputStream. src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Add NullOutputStream.INSTANCE and deprecate NULL_OUTPUT_STREAM. src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "IO-746: dropping unnecessary casts and conversions (#267)\n\nSigned-off-by: Davide Angelocola <davide.angelocola@gmail.com> src/test/java/org/apache/commons/io/IOUtilsTestCase.java",
                "Sort test members. src/test/java/org/apache/commons/io/IOUtilsTestCase.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java": {
            "message": [
                "Tests https://issues.apache.org/jira/browse/IO-277 (@Ignore'd). Port to JUnit 4.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1147907 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java",
                "Implement sebb's suggestions. Thank you Sebb.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1147977 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java",
                "IO-277 ReaderInputStream enters infinite loop when it encounters an unmappable character - thanks to Mike Thomas\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1165453 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java",
                "Organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1169516 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java",
                "Convert to Java 5 enhanced for loops.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1169520 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java",
                "IO-306 ReaderInputStream#read(byte[] b, int off, int len) should always return 0 for length == 0\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1300249 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java",
                "Ensure stream is closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1441248 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java",
                "Suppress deprecation warnings for code that tests the deprecated methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1470207 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java",
                "Trailing spaces\nThese are the worst offenders; a few still remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471765 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java",
                "Make JavaDoc tool happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1680650 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java",
                "Remove unused exceptions. Use try-with-resoruces.\nClean ups. Formatting. src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java",
                "Minor improvement: (#177)\n\n* Unnecessary conversion to String\r\n* Add final\r\n* Use Standard Charset object\r\n* Redundant 'close()' src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java",
                "- Simplify array declarations.\n- Javadoc.\n- Use try-with-resources. src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java",
                "[IO-717] Infinite loop in ReaderInputStream instead of throwing\nexception for CodingErrorAction.REPORT. src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java",
                "Reuse own API. src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java",
                "[IO-716] ReaderInputStream enter infinite loop for too small buffer\nsizes. src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java",
                "[IO-638] Infinite loop in CharSequenceInputStream.read for 4-byte\ncharacters with UTF-8 and 3-byte buffer.\n\n[IO-716] ReaderInputStream enter infinite loop for too small buffer\nsizes.\n\nUse CharsetEncoder#maxBytesPerChar() * 2 the min. src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java",
                "Checkstyle and fix test sources.\n\n- Move Checkstyle configuration from root folder to src/conf.\n- Remove unused imports.\n- Remove trailing whitespace.\n- Adjust line lengths.\n- No tabs.\n- Use final. src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java",
                "[IO-714] Fixed ReaderInputStream not calling CharsetEncoder.flush issue (#283)\n\nCo-authored-by: Zhigang Wang <zhigang.wang@ingenico.com> src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java",
                "ReaderInputStream maps null Charset, Charset name, and CharsetEmcoder to\nthe platform default instead of throwing an NullPointerException. src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java",
                "Sort members. src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java",
                "Remove unused exceptions from test method signatures src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java",
                "Reuse StandardCharsets src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/ReaderInputStream.java": {
            "message": [
                "IO-277 ReaderInputStream enters infinite loop when it encounters an unmappable character - thanks to Mike Thomas\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1165453 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ReaderInputStream.java",
                "IO-296 ReaderInputStream optimization: more efficient reading of small chunks of data\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1295622 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ReaderInputStream.java",
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ReaderInputStream.java",
                "Javadoc, Checkstyle. More precise throw clause in private method.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1299815 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ReaderInputStream.java",
                "IO-306 ReaderInputStream#read(byte[] b, int off, int len) should always return 0 for length == 0\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1300249 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ReaderInputStream.java",
                "IO-307 ReaderInputStream#read(byte[] b, int off, int len) should check for valid parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1300443 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ReaderInputStream.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ReaderInputStream.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ReaderInputStream.java",
                "IO-314 Deprecate all methods that use the default encoding\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1468992 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ReaderInputStream.java",
                "Trailing spaces\nThese are the worst offenders; others remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471767 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ReaderInputStream.java",
                "<action issue=\"IO-437\" dev=\"ggregory\" type=\"add\">\n  Make IOUtils.EOF public and reuse it in various classes.\n</action>\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1586350 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ReaderInputStream.java",
                "Use the more modern, compact, and flexible Javadoc \"{@code ...}\" instead of the HTML \"<tt>...</tt>\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1612034 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ReaderInputStream.java",
                "Remove unnecessary else.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1668816 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ReaderInputStream.java",
                "fix javadoc errors reported by java 9 src/main/java/org/apache/commons/io/input/ReaderInputStream.java",
                "Use Objects.requireNonNull() instead of custom check. src/main/java/org/apache/commons/io/input/ReaderInputStream.java",
                "Don't hard code values in Javadoc, use {@value reference}. src/main/java/org/apache/commons/io/input/ReaderInputStream.java",
                "Javadoc: Close paragraph tags. src/main/java/org/apache/commons/io/input/ReaderInputStream.java",
                "Use less cryptic variable names. src/main/java/org/apache/commons/io/input/ReaderInputStream.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/input/ReaderInputStream.java",
                "Javadoc: Sentences end in a period. src/main/java/org/apache/commons/io/input/ReaderInputStream.java",
                "Javadoc nits. src/main/java/org/apache/commons/io/input/ReaderInputStream.java",
                "Javadoc fixes.\n\n- Minor formatting.\n- Normalize exception message. src/main/java/org/apache/commons/io/input/ReaderInputStream.java",
                "Sort members. src/main/java/org/apache/commons/io/input/ReaderInputStream.java",
                "[IO-717] Infinite loop in ReaderInputStream instead of throwing\nexception for CodingErrorAction.REPORT. src/main/java/org/apache/commons/io/input/ReaderInputStream.java",
                "[IO-716] ReaderInputStream enter infinite loop for too small buffer\nsizes. src/main/java/org/apache/commons/io/input/ReaderInputStream.java",
                "[IO-638] Infinite loop in CharSequenceInputStream.read for 4-byte\ncharacters with UTF-8 and 3-byte buffer.\n\n[IO-716] ReaderInputStream enter infinite loop for too small buffer\nsizes.\n\nUse CharsetEncoder#maxBytesPerChar() * 2 the min. src/main/java/org/apache/commons/io/input/ReaderInputStream.java",
                "Remove trailing whitespace. src/main/java/org/apache/commons/io/input/ReaderInputStream.java",
                "[IO-714] Fixed ReaderInputStream not calling CharsetEncoder.flush issue (#283)\n\nCo-authored-by: Zhigang Wang <zhigang.wang@ingenico.com> src/main/java/org/apache/commons/io/input/ReaderInputStream.java",
                "ReaderInputStream maps null Charset, Charset name, and CharsetEmcoder to\nthe platform default instead of throwing an NullPointerException. src/main/java/org/apache/commons/io/input/ReaderInputStream.java",
                "Improve `ReaderInputStream` documentation (#291)\n\n* [IO-715] Mention ReaderInputStream behavior regarding CharsetEncoder.reset()\r\n\r\n* [IO-713] Remove incorrect documentation about ReaderInputStream.available()\r\n\r\n* (doc) Describe default CodingErrorAction of ReaderInputStream\r\n\r\n* (doc) Close <p> tags in ReaderInputStream documentation\r\n\r\n* Remove redundant ReaderInputStream.available() override again src/main/java/org/apache/commons/io/input/ReaderInputStream.java",
                "PMD: Remove unnecessary parentheses src/main/java/org/apache/commons/io/input/ReaderInputStream.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/main/java/org/apache/commons/io/input/ReaderInputStream.java"
            ]
        },
        "src/main/java/org/apache/commons/io/output/WriterOutputStream.java": {
            "message": [
                "IO-277 ReaderInputStream enters infinite loop when it encounters an unmappable character - thanks to Mike Thomas\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1165453 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/WriterOutputStream.java",
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/WriterOutputStream.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/WriterOutputStream.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/WriterOutputStream.java",
                "IO-314 Deprecate all methods that use the default encoding\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1468992 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/WriterOutputStream.java",
                "Use the more modern, compact, and flexible Javadoc \"{@code ...}\" instead of the HTML \"<tt>...</tt>\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1612034 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/WriterOutputStream.java",
                "Fixed all checkstyle errors and a findbugs error\n\nFindbugs error was:\norg.apache.commons.io.output.DeferredFileOutputStream#thresholdReached\npossible file handle leak upon exception\n\nAlso contains fix for IO-446, submitted by Jeffrey Barrus\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686747 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/WriterOutputStream.java",
                "Added test for broken UTF-16 on IBM jdk's to WriterOutputStream, adjusted\ntestcases to expect UOE\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1721095 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/WriterOutputStream.java",
                "Always use blocks.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1739131 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/WriterOutputStream.java",
                "fix checkstyle violations by adding javadoc src/main/java/org/apache/commons/io/output/WriterOutputStream.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/output/WriterOutputStream.java",
                "Use final for parameters. src/main/java/org/apache/commons/io/output/WriterOutputStream.java",
                "Consistently use the final modifier with local variables. src/main/java/org/apache/commons/io/output/WriterOutputStream.java",
                "Unnecessary semicolon. src/main/java/org/apache/commons/io/output/WriterOutputStream.java",
                "Don't hard code values in Javadoc, use {@value reference}. src/main/java/org/apache/commons/io/output/WriterOutputStream.java",
                "Javadoc: Sentences end in a period. src/main/java/org/apache/commons/io/output/WriterOutputStream.java",
                "Javadoc: Close HTML tags. src/main/java/org/apache/commons/io/output/WriterOutputStream.java",
                "Add and use IOUtils.byteArray(*). src/main/java/org/apache/commons/io/output/WriterOutputStream.java",
                "Fix Typos in JavaDoc, Comments and Tests (#201)\n\n* Fixed incorrect/missing JavaDoc.\r\n\r\n* Fixed misc. typos in comments and tests.\r\n\r\n* Fixed typos in exception messages. src/main/java/org/apache/commons/io/output/WriterOutputStream.java",
                "Sort members. src/main/java/org/apache/commons/io/output/WriterOutputStream.java",
                "WriterOutputStream maps null Charset, Charset name, and CharsetEncoder\nname to the platform default instead of throwing a NullPointerException. src/main/java/org/apache/commons/io/output/WriterOutputStream.java",
                "Add final and remove useless parentheses. src/main/java/org/apache/commons/io/output/WriterOutputStream.java",
                "Reuse StandardCharsets src/main/java/org/apache/commons/io/output/WriterOutputStream.java"
            ]
        },
        "src/test/java/org/apache/commons/io/DemuxTestCase.java": {
            "message": [
                "Convert to Java 5 enhanced for loops.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1169520 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/DemuxTestCase.java",
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/DemuxTestCase.java",
                "Port to JUnit 4.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1310143 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/DemuxTestCase.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/DemuxTestCase.java",
                "Fix deprecation warning\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1470214 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/DemuxTestCase.java",
                "Fix unavoidable deprecations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642759 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/DemuxTestCase.java",
                "Language level code changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686260 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/DemuxTestCase.java",
                "Added private and test-scoped sleep method that actually sleeps for a guaranteed minimal time\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718945 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/DemuxTestCase.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/DemuxTestCase.java",
                "replace usage of deprecated Charsets constants with StandardCharsets constants src/test/java/org/apache/commons/io/DemuxTestCase.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/DemuxTestCase.java",
                "Consistently use the final modifier with local variables. src/test/java/org/apache/commons/io/DemuxTestCase.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/DemuxTestCase.java",
                "Rename test package. src/test/java/org/apache/commons/io/DemuxTestCase.java",
                "Remove unused exceptions. src/test/java/org/apache/commons/io/DemuxTestCase.java",
                "Don't use \"m_\" prefix for instance variables. src/test/java/org/apache/commons/io/DemuxTestCase.java",
                "Add StringInputStream. src/test/java/org/apache/commons/io/DemuxTestCase.java",
                "Organize imports. src/test/java/org/apache/commons/io/DemuxTestCase.java",
                "Sort test members. src/test/java/org/apache/commons/io/DemuxTestCase.java"
            ]
        },
        "src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java": {
            "message": [
                "Convert to Java 5 enhanced for loops.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1169520 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java",
                "Simplify and avoid boxing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302017 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java",
                "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java",
                "Port to JUnit 4.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1310143 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java",
                "Fix Checkstyle line length > 120 and organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1311751 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java",
                "[IO-352] Spelling fixes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1401522 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java",
                "JUnit 3 -> 4: replace import of junit.framework.Assert with org.junit.Assert.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1437523 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java",
                "Trailing spaces\nThese are the worst offenders; a few still remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471765 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java",
                "Language level code changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686260 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java",
                "Fix Javadoc typos from https://github.com/apache/commons-io/pull/10.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1739188 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java",
                "Static imports come first. src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java",
                "Let org.apache.commons.io.filefilter classes work with\njava.nio.file.Files.walk* APIs.\n\nAlso: AccumulatorPathVisitor does not track directories properly. src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java",
                "Remove redundant calls to super(). src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java",
                "Minor improvement: (#176)\n\n* Add Final\r\n* Unused import\r\n* Unnecessary semicolon src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java",
                "- Simplify array declarations.\n- Javadoc.\n- Use try-with-resources. src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java",
                "Remove \"line\" in-line comments. src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java",
                "Sort test members. src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java"
            ]
        },
        "src/test/java/org/apache/commons/io/FilenameUtilsWildcardTestCase.java": {
            "message": [
                "Convert to Java 5 enhanced for loops.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1169520 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                "Simplify and avoid boxing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302017 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                "IO-375 FilenameUtils.splitOnTokens(String text) check for '**' could be simplified \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1465505 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                "Trailing spaces\nThese are the worst offenders; a few still remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471765 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                "Static imports come first. src/test/java/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                "Remove \"line\" in-line comments. src/test/java/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                "Sort test members. src/test/java/org/apache/commons/io/FilenameUtilsWildcardTestCase.java"
            ]
        },
        "src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java": {
            "message": [
                "Convert to Java 5 enhanced for loops.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1169520 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java",
                "Trailing spaces\nThese are the worst offenders; a few still remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471765 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java",
                "Utility methods can be static\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1680740 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java",
                "Use enhanced for loop\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1680741 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java",
                "Format source code\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1680742 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java",
                "Language level code changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686260 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java",
                "Static imports come first. src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java",
                "Consistently use the final modifier with local variables. src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java",
                "Remove unused exceptions and trailing whitespace. src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java",
                "Simplify Assertions (#234) src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java",
                "Sort test members. src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java"
            ]
        },
        "src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java": {
            "message": [
                "Convert to Java 5 enhanced for loops.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1169520 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                "Trailing spaces\nThese are the worst offenders; a few still remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471765 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                "+= generated serialVersionUID\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642757 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                "Make JavaDoc tool happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1680650 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                "Format source code\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1680667 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                "Remove irrelevant return statements\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1680739 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                "Utility methods can be static\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1680740 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                "remove unused imports src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                "Static imports come first. src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                "Let org.apache.commons.io.filefilter classes work with\njava.nio.file.Files.walk* APIs.\n\nAlso: AccumulatorPathVisitor does not track directories properly. src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                "Move new PathFilter interface to the file package, annotate it with\n@FunctionalInterface, and add a BasicFileAttributes parameter to accept\nattributes from java.nio.file.FileVisitor. src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                "Remove unused exceptions and trailing whitespace. src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                "Sort test members. src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/AutoCloseInputStreamTest.java": {
            "message": [
                "Convert to Java 5 enhanced for loops.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1169520 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/AutoCloseInputStreamTest.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/AutoCloseInputStreamTest.java",
                "Make JavaDoc tool happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1680650 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/AutoCloseInputStreamTest.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/AutoCloseInputStreamTest.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/input/AutoCloseInputStreamTest.java",
                "Static imports come first. src/test/java/org/apache/commons/io/input/AutoCloseInputStreamTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/input/AutoCloseInputStreamTest.java",
                "Add test case related to [IO-568]. src/test/java/org/apache/commons/io/input/AutoCloseInputStreamTest.java",
                "Use final. src/test/java/org/apache/commons/io/input/AutoCloseInputStreamTest.java",
                "Add missing AutoCloseInputStream test src/test/java/org/apache/commons/io/input/AutoCloseInputStreamTest.java",
                "Organize test imports src/test/java/org/apache/commons/io/input/AutoCloseInputStreamTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/testtools/FileBasedTestCase.java": {
            "message": [
                "Convert to Java 5 enhanced for loops.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1169520 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/testtools/FileBasedTestCase.java",
                "Remove superfluous ().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1178225 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/testtools/FileBasedTestCase.java",
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/testtools/FileBasedTestCase.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/testtools/FileBasedTestCase.java",
                "Trailing spaces\nThese are the worst offenders; a few still remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471765 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/testtools/FileBasedTestCase.java",
                "Make JavaDoc tool happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1680650 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/testtools/FileBasedTestCase.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/testtools/FileBasedTestCase.java",
                "Use temporary dir that can be fully deleted src/test/java/org/apache/commons/io/testtools/FileBasedTestCase.java"
            ]
        },
        "src/main/java/org/apache/commons/io/filefilter/ConditionalFileFilter.java": {
            "message": [
                "Remove superfluous public keyword from method in interface declarations.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1178224 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/ConditionalFileFilter.java",
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/ConditionalFileFilter.java",
                "Drop $Date$ SVN variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302050 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/ConditionalFileFilter.java",
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/ConditionalFileFilter.java",
                "Use \"@since 1.1\" instead of \"@since Commons IO 1.1\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1303950 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/ConditionalFileFilter.java",
                "Replace \"<code>true</code>\" with \"{@code true}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307461 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/ConditionalFileFilter.java",
                "Replace \"<code>false</code>\" with \"{@code false}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307462 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/ConditionalFileFilter.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/filefilter/ConditionalFileFilter.java",
                "Remove Subversion's \"@version $Id$\". src/main/java/org/apache/commons/io/filefilter/ConditionalFileFilter.java",
                "Javadoc: Remove extra line. src/main/java/org/apache/commons/io/filefilter/ConditionalFileFilter.java",
                "Javadoc: Use \"Gets\" for start of getter method. src/main/java/org/apache/commons/io/filefilter/ConditionalFileFilter.java"
            ]
        },
        "src/main/java/org/apache/commons/io/filefilter/IOFileFilter.java": {
            "message": [
                "Remove superfluous public keyword from method in interface declarations.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1178224 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/IOFileFilter.java",
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/IOFileFilter.java",
                "Drop $Date$ SVN variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302050 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/IOFileFilter.java",
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/IOFileFilter.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/IOFileFilter.java",
                "Trailing spaces\nThese are the worst offenders; others remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471767 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/IOFileFilter.java",
                "Add missing '@Override' annotations. src/main/java/org/apache/commons/io/filefilter/IOFileFilter.java",
                "Remove Subversion's \"@version $Id$\". src/main/java/org/apache/commons/io/filefilter/IOFileFilter.java",
                "Javadoc: Use \"file name\" instead of \"filename\".\n\nCamel case vars \"filename\" to \"fileName\". src/main/java/org/apache/commons/io/filefilter/IOFileFilter.java",
                "No need to allocate empty String arrays over and over. src/main/java/org/apache/commons/io/filefilter/IOFileFilter.java",
                "Javadoc. src/main/java/org/apache/commons/io/filefilter/IOFileFilter.java",
                "Javadoc: Close HTML tags. src/main/java/org/apache/commons/io/filefilter/IOFileFilter.java",
                "Let org.apache.commons.io.filefilter classes work with\njava.nio.file.Files.walk* APIs.\n\nAlso: AccumulatorPathVisitor does not track directories properly. src/main/java/org/apache/commons/io/filefilter/IOFileFilter.java",
                "Simplify new PathFilter interface to a single method. src/main/java/org/apache/commons/io/filefilter/IOFileFilter.java",
                "Move new PathFilter interface to the file package, annotate it with\n@FunctionalInterface, and add a BasicFileAttributes parameter to accept\nattributes from java.nio.file.FileVisitor. src/main/java/org/apache/commons/io/filefilter/IOFileFilter.java",
                "Better boolean file filters. src/main/java/org/apache/commons/io/filefilter/IOFileFilter.java",
                "Use negate() instead of not() to match predicate terminology. src/main/java/org/apache/commons/io/filefilter/IOFileFilter.java",
                "New PathFilter no longer throws to play nice with predicates and other\nfunctional interfaces. src/main/java/org/apache/commons/io/filefilter/IOFileFilter.java",
                "[IO-597] FileUtils.iterateFiles runs out of memory when executed for a\ndirectory with large number of files.\n\nRe-implement FileUtils' iterateFiles(), iterateFilesAndDirs(),\nlistFiles(), listFilesAndDirs() to use NIO file tree walking instead of\nIO file listings to avoid memory consumption issues on large file trees. src/main/java/org/apache/commons/io/filefilter/IOFileFilter.java",
                "Refactor and simplify new boolean APIs. src/main/java/org/apache/commons/io/filefilter/IOFileFilter.java",
                "Refactor common code, Javadoc, reuse constants, use 120 max line length.\nJavadoc: Sentences end in a period. src/main/java/org/apache/commons/io/filefilter/IOFileFilter.java",
                "- Simplify array declarations.\n- Javadoc.\n- Use try-with-resources. src/main/java/org/apache/commons/io/filefilter/IOFileFilter.java",
                "Fix FileFilterTestCase use case for symbolic links on non-Windows OS.\n\n- Make SymbolicLinkFileFilter configurable:\n-- Add SymbolicLinkFileFilter.SymbolicLinkFileFilter(FileVisitResult,\nFileVisitResult)\n-- Add AbstractFileFilter(FileVisitResult, FileVisitResult)\n- CountingPathVisitor should not follow links by default to properly\ncount from FileUtils. src/main/java/org/apache/commons/io/filefilter/IOFileFilter.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/TailerListener.java": {
            "message": [
                "Remove superfluous public keyword from method in interface declarations.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1178224 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/TailerListener.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/TailerListener.java",
                "Fixed all checkstyle errors and a findbugs error\n\nFindbugs error was:\norg.apache.commons.io.output.DeferredFileOutputStream#thresholdReached\npossible file handle leak upon exception\n\nAlso contains fix for IO-446, submitted by Jeffrey Barrus\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686747 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/TailerListener.java",
                "@since markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1704426 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/TailerListener.java",
                "Removed added method from interface that broke binary compatibility.\n\nClients wishing to use this feature must subclass TailerListenerAdapter until we break compatibility or go java8 minumum.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1714076 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/TailerListener.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/input/TailerListener.java",
                "Javadoc: Close HTML tags. src/main/java/org/apache/commons/io/input/TailerListener.java",
                "Fix whitespace. src/main/java/org/apache/commons/io/input/TailerListener.java",
                "Fix Javadoc 17 errors. src/main/java/org/apache/commons/io/input/TailerListener.java",
                "Sort members. src/main/java/org/apache/commons/io/input/TailerListener.java"
            ]
        },
        "src/main/java/org/apache/commons/io/FilenameUtils.java": {
            "message": [
                "Remove superfluous parens.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1198978 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Use Collection.isEmpty() instead of size() == 0\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1199986 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Refactor new directortContains method for https://issues.apache.org/jira/browse/IO-291. Change behavior: an unrealized child File is NOT contained in a directory in FileUtils. If you want to test with file names, use FilenameUtils#directoryContains(String, String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1234902 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Link to related methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1234943 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Checkstyle: Line length <= 120.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1244110 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Use \"@since 1.1\" instead of \"@since Commons IO 1.1\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1303950 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Replace \"<code>null</code>\" with \"{@code null}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307459 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Replace \"<code>true</code>\" with \"{@code true}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307461 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Replace \"<code>false</code>\" with \"{@code false}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307462 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Fetch char once from array\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1465504 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FilenameUtils.java",
                "IO-375 FilenameUtils.splitOnTokens(String text) check for '**' could be simplified \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1465505 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FilenameUtils.java",
                "IO-299  getPrefixLength returns null if filename has leading slashes\n        Javadoc: add examples to show correct behaviour; add unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1470636 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Trailing spaces\nThese are the worst offenders; others remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471767 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FilenameUtils.java",
                "[IO-424] Javadoc fixes, mostly to appease 1.8.0. Patch from Ville Skytt\u00e4\". 3 files in the patch did not applied cleanly, so they are not in the commit.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1563227 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FilenameUtils.java",
                "<action issue=\"IO-436\" dev=\"ggregory\" type=\"fix\" due-to=\"christoph.schneegans\">\n  Improper JavaDoc comment for FilenameUtils.indexOfExtension.\n</action>            \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1586305 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Refactor magic number into constant.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1586309 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Replace \"String.length()\" == 0 with \"String.isEmpty()\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1586504 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Language level code changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686260 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FilenameUtils.java",
                "IO-484 Fix with testcase\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1694464 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FilenameUtils.java",
                "IO-484 Added filtering to getPath and getPrefix\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1694480 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FilenameUtils.java",
                "IO-484 Changed solution to always throw exception\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1702170 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FilenameUtils.java",
                "[IO-483] FilenameUtils.getPrefixLength now works correctly for unix files/folder that are in the root folder and start with colons src/main/java/org/apache/commons/io/FilenameUtils.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Fix Javadoc typos (closes #30) src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Use final for parameters. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Consistently use the final modifier with local variables. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "[IO-553] Add\norg.apache.commons.io.FilenameUtils.WINDOWS_ILLEGAL_FILE_NAME_CHARS. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "[IO-553] Add\norg.apache.commons.io.FilenameUtils.isIllegalWindowsFileName(char). src/main/java/org/apache/commons/io/FilenameUtils.java",
                "[IO-553] Add\norg.apache.commons.io.FilenameUtils.isIllegalWindowsFileName(char).\nJavadoc. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Typos and clarifications src/main/java/org/apache/commons/io/FilenameUtils.java",
                "[IO-553] Add\norg.apache.commons.io.FilenameUtils.isIllegalWindowsFileName(char).\nFix Javadoc HTML nonesense. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "[IO-555] Recasting this issue away from a new method in FilenameUtils to\na solution to convert Strings to legal files names with the new enum\nFileSystem. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "PR: IO-567\n\nThrow an IllegalArgumentException in FilenameUtils.getExtension(String)\nfor ADS names. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "PR: IO-567\n\nThrow an IllegalArgumentException in FilenameUtils.getExtension(String)\nfor ADS names. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "IO-567:  Implement special case handling for NTFS ADS names\n\nfix checkstyle violation by replacing tabs with spaces src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Javadoc fixes on Java 8. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Don't need to nest else clause. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Simplify. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Refactor magic string into a constant. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Add missing Javadoc for Checkstyle. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Fix param names 'filename' -> 'fileName' in code and Javadocs. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Fix param names '*Filename*' -> '*FileName*' in code and Javadocs. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "IO-559 verify hostname part of suspected UNC paths in FileNameUtils src/main/java/org/apache/commons/io/FilenameUtils.java",
                "checkstyle requires javadocs on private methods? src/main/java/org/apache/commons/io/FilenameUtils.java",
                "isRFC3986HostName applies to IPv4 addresses so we can safe the test src/main/java/org/apache/commons/io/FilenameUtils.java",
                "remove IPv4 checks that are unnnecessary due to matching regex src/main/java/org/apache/commons/io/FilenameUtils.java",
                "[IO-580] Update org.apache.commons.io.FilenameUtils.isExtension(String,\nString[]) to use var args. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Remove redundant type arguments. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Use final. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Remove trailing white spaces on all lines. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Control flow issues (#93)\n\n* Control flow issues src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Fixed a mistake in the FilenameUtils.concat()'s Javadoc about an absolute path. (#96)\n\n* Fixed.\r\n/foo/a/ + ../bar     -->   /foo/bar src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Slightly better Javadoc. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "[IO-634] Make getCause synchronized and use a Deque instead of Stack (#64)\n\n* Fix \"Non-synchronized override of synchronized method\".\r\n\r\n* Replace synchronized Stack with unsynchronized Deque in FilenameUtils. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Performance Enhancement: Call toArray with Zero Array Size (closes #65)\n\ntoArray should, at least since Java 7, be used with new T[0] instead of size, since it is \"faster, safer, and contractually cleaner\" (https://shipilev.net/blog/2016/arrays-wisdom-ancients/#_conclusion) src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Fix formating. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "No need to allocate empty String arrays over and over. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Use Objects.requireNonNull() instead of custom check. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Make `FilenameUtils.equals()` not throw an exception (#154)\n\n* Improve exception thrown by FilenameUtils.equals()\r\n\r\n* Remove unused import\r\n\r\n* Don't throw exception src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Remove redundant calls to super(). src/main/java/org/apache/commons/io/FilenameUtils.java",
                "[IO-600] Fix getPrefixLength method for Linux filename (#179)\n\n* IO-600: fix getPrefixLength method for Linux filename\r\n\r\n* IO-600: fix javadoc src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Use Objects.requireNonNull(). src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Inline single use local vars.\nUse \"require\" prefix for private method like Objects.require*.\nNormalize spelling.\nFix spelling.\nRemove dead comments. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Reimplement FilenameUtils.requireNonNullChars() to reuse JRE method.\n\nThis is simpler; bonus: no repeated calls to charAt(). src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Use isEmpty(). src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Remove unused exceptions and trailing whitespace. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Javadoc. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Fix Typos in JavaDoc, Comments and Tests (#201)\n\n* Fixed incorrect/missing JavaDoc.\r\n\r\n* Fixed misc. typos in comments and tests.\r\n\r\n* Fixed typos in exception messages. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Combine nested 'if' statement in 'else' block to 'else if'. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "No need to nest in else. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "- Simplify array declarations.\n- Javadoc.\n- Use try-with-resources. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "IO-585: Sanitize double slash after prefix (#79)\n\nWhen a double slash immediately followed a prefix\r\nsuch as \"C:\\\\\" we would fail to merge the adjoining slashes.\r\nThis change ensures that slashes of these type are merged. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Minor changes: (#243)\n\n* Remove Unnecessary interface modifier\r\n* Make final var\r\n* Simplify conditions\r\n* Simplify assertions src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Remove IOException from the method signatures that no longer\nthrow IOException.\n        This maintains binary compatibility but not source\ncompatibility.\n        - FilenameUtils\n            directoryContains(String, String)\n        - BoundedReader\n            BoundedReader(java.io.Reader, int)\n        - IOUtils\n            lineIterator(java.io.InputStream, Charset)\n            lineIterator(java.io.InputStream, String)\n            toByteArray(String)\n            toInputStream(CharSequence, String)\n            toInputStream(String, String)\n            toString(byte[])\n            toString(byte[], String) src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Remove \"line\" in-line comments. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Javadoc. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "[IO-727] FilenameUtils directoryContains() should handle files with the\nsame prefix #217.\n\nApply a modified PR #217 from trungPa to resolve conflicts. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Sort members. Refactor common code into private toSeparator(boolean)\nmethod. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Don't create extra strings. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "In-line some single use variables.\n\n- Let requireNonNullChars() be used like Objects.requireNonNull().\n- Format tweaks.\n- Refactor commons code.\n- No need to search some strings twice in separatorsTo*\n- Javadoc close HTML tags. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Add FileSystem.normalizeSeparators().\n\nClose Javadoc tags. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Add and use IOCase.value(IOCase, IOCase). src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Typos. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Sort members. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "(doc) [IO-484] Fix incorrect FilenameUtils documentation for null bytes (#310)\n\n* (doc) [IO-484] Fix incorrect FilenameUtils documentation for null bytes\r\n\r\n* (doc) Consistently use term \"null character\"\r\n\r\n* (doc) Remove TODO comments for null character handling src/main/java/org/apache/commons/io/FilenameUtils.java",
                "PMD: Remove unnecessary parentheses src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Use forEach() src/main/java/org/apache/commons/io/FilenameUtils.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Add and reuse IOConsumer.forEach(*) and forEachIndexed(*).\n\nUse forEach and streams. src/main/java/org/apache/commons/io/FilenameUtils.java",
                "Better param name src/main/java/org/apache/commons/io/FilenameUtils.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java": {
            "message": [
                "Checkstyle - replace tab characters with spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1228548 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "Checkstyle fixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1228550 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "Add missing @since 2.2 tag.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1234162 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "Checkstyle wants Javadoc for private methods ...\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1299951 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1300199 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "[IO-318] Add Charset sister APIs to method that take a String charset name. ReversedLinesFileReader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307428 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "[IO-352] Spelling fixes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1401522 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "IO-314 Deprecate all methods that use the default encoding\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1468992 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "Formatting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1483351 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "Reuse our Charsets constants.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1483363 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "Fix unavoidable deprecations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642759 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "IO-471 Support for additional encodings in ReversedLinesFileReader\n\nPatch by Leandro Reis, applied with patch adjustments to trunk\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686739 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "Fixed all checkstyle errors and a findbugs error\n\nFindbugs error was:\norg.apache.commons.io.output.DeferredFileOutputStream#thresholdReached\npossible file handle leak upon exception\n\nAlso contains fix for IO-446, submitted by Jeffrey Barrus\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686747 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "Changed order of checking supported charset and opening file.\n\nThis avoids file handle leak in testcase when unsupported charsets would leave file open\n\n(Could also happen in real code, but probably not in real-life issues)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718429 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "replace usage of deprecated Charsets constants with StandardCharsets constants src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "Add missing '@Override' annotations. src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "Don't need to nest else clause. Refactor magic numbers into constants. src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "Refactor magic int into a constant. src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "Refactor magic string into a constant. src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "Remove trailing white spaces on all lines. src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "IO-578: Support java.nio.Path and non-default filesystems for ReversedLinesFileReader (#62) src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "Javadoc standardize \"behaviour\" -> \"behavior\". src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "Normalize on 'charsetName' as a parameter name since this is the named\nused in the JRE for Charset.forName(String).\n\n- Use 'charset' instead of 'encoding' Charset parameter names.\n- Fix 1 checkstyle issue. src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "[IO-666] Normalize internal buffers to 8192 bytes. src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "Remove unused exceptions. Use try-with-resoruces.\nClean ups. Formatting. src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "identify class fields src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "Add ReversedLinesFileReader.readLines(int). src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "Remove trailing white spaces. Use final. src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "Sort methods in AB order. src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "Add ReversedLinesFileReader.toString(int). src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "Format tweak. src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "Prevent NullPointerException in ReversedLinesFileReader constructors\n#117. src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "Remove trailing whitespace. src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "Better private ivar name. src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "Remove unused exception from private method signature. src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "Add StandardLineSeparator. src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "Remove unused exceptions and trailing whitespace. src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "Javadoc: Sentences end in a period. src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "Add and use IOUtils.byteArray(*). src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "No need to nest in else. src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "Better Javadoc and inline comments. src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "Enable PMD check in the default Maven goal. src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java": {
            "message": [
                "Checkstyle - replace tab characters with spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1228548 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java",
                "Ensure stream is closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1441282 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java",
                "Better test reports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1635651 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java",
                "Language level code changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686260 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java",
                "IO-471 Support for additional encodings in ReversedLinesFileReader\n\nPatch by Leandro Reis, applied with patch adjustments to trunk\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686739 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java",
                "Static imports come first. src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java",
                "Remove unused exceptions. Use try-with-resoruces.\nClean ups. Formatting. src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java",
                "Unused src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java",
                "Revert changes -- wrong branch src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java",
                "Fix up broken test due to data change src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java",
                "Remove trailing white spaces. Use final. src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java",
                "Move test fixtures to package specific location. src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java",
                "Prevent NullPointerException in ReversedLinesFileReader constructors\n#117. src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java",
                "Add StandardLineSeparator. src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java",
                "Sort test members. src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java",
                "Checkstyle and fix test sources.\n\n- Move Checkstyle configuration from root folder to src/conf.\n- Remove unused imports.\n- Remove trailing whitespace.\n- Adjust line lengths.\n- No tabs.\n- Use final. src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java",
                "Reuse StandardCharsets src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamFile.java": {
            "message": [
                "Checkstyle - replace tab characters with spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1228548 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamFile.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamFile.java",
                "Better test reports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1635652 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamFile.java",
                "Language level code changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686260 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamFile.java",
                "IO-471 Support for additional encodings in ReversedLinesFileReader\n\nPatch by Leandro Reis, applied with patch adjustments to trunk\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686739 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamFile.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamFile.java",
                "IO-578: Support java.nio.Path and non-default filesystems for ReversedLinesFileReader (#62) src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamFile.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamFile.java",
                "Javadoc standardize \"behaviour\" -> \"behavior\". src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamFile.java",
                "Remove unused exceptions. Use try-with-resoruces.\nClean ups. Formatting. src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamFile.java",
                "Ensure Reversed reader has read all the lines src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamFile.java",
                "Remove trailing white spaces. Use final. src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamFile.java",
                "Better local var names. src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamFile.java",
                "Move test fixtures to package specific location. src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamFile.java",
                "Prevent NullPointerException in ReversedLinesFileReader constructors\n#117. src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamFile.java",
                "Use final. src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamFile.java",
                "Better Javadoc and inline comments. src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamFile.java",
                "Formatting nits. src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamFile.java",
                "Reuse StandardCharsets src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamFile.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestSimple.java": {
            "message": [
                "Checkstyle - replace tab characters with spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1228548 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestSimple.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestSimple.java",
                "Ensure stream is closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1441282 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestSimple.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestSimple.java",
                "[IO-666] Normalize internal buffers to 8192 bytes. src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestSimple.java",
                "Another fix needed src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestSimple.java",
                "Add ReversedLinesFileReader.readLines(int). src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestSimple.java",
                "Add ReversedLinesFileReader.toString(int). src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestSimple.java",
                "Move test fixtures to package specific location. src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestSimple.java",
                "Prevent NullPointerException in ReversedLinesFileReader constructors\n#117. src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestSimple.java",
                "Sort test members. src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestSimple.java",
                "Reuse StandardCharsets src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestSimple.java"
            ]
        },
        "src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java": {
            "message": [
                "IO-291 Add test case which shows FileUtils.directoryContains() returns true for a file which doesn't exist\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1228554 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java",
                "Refactor new directortContains method for https://issues.apache.org/jira/browse/IO-291. Change behavior: an unrealized child File is NOT contained in a directory in FileUtils. If you want to test with file names, use FilenameUtils#directoryContains(String, String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1234902 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java",
                "eol native\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302382 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java",
                "Organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1308109 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java",
                "Make JavaDoc tool happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1680650 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java",
                "IO-466 Added testcase which proves this has been fixed already\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686461 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java",
                "Static imports come first. src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java",
                "Replace static TemporaryFolders with instances ones, so that tests are truly independent. src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java",
                "Consistently use the final modifier with local variables. src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java",
                "Fix Typos in JavaDoc, Comments and Tests (#201)\n\n* Fixed incorrect/missing JavaDoc.\r\n\r\n* Fixed misc. typos in comments and tests.\r\n\r\n* Fixed typos in exception messages. src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java",
                "[IO-727] FilenameUtils directoryContains() should handle files with the\nsame prefix #217.\n\nApply a modified PR #217 from trungPa to resolve conflicts. src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java",
                "Sort test members. src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java"
            ]
        },
        "src/main/java/org/apache/commons/io/output/TeeOutputStream.java": {
            "message": [
                "[IO-303] TeeOutputStream fails executing branch.close() when main.close() raised an exception.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1245754 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/TeeOutputStream.java",
                "[IO-303] TeeOutputStream fails executing branch.close() when main.close() raised an exception. Use a different impl with < LOCs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1245797 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/TeeOutputStream.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/TeeOutputStream.java",
                "Comment\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686503 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/TeeOutputStream.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/output/TeeOutputStream.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/output/TeeOutputStream.java",
                "Javadoc. src/main/java/org/apache/commons/io/output/TeeOutputStream.java",
                "Javadoc. src/main/java/org/apache/commons/io/output/TeeOutputStream.java",
                "Minor improvement: (#177)\n\n* Unnecessary conversion to String\r\n* Add final\r\n* Use Standard Charset object\r\n* Redundant 'close()' src/main/java/org/apache/commons/io/output/TeeOutputStream.java",
                "Breaking binary compatibility should break the build instead of\ngenerating a report one might skip reading, especially for PRs.\n\nDon't break BC.\nJavadoc verbs.\nFormat Javadoc. src/main/java/org/apache/commons/io/output/TeeOutputStream.java",
                "Javadoc: Sentences end in a period. src/main/java/org/apache/commons/io/output/TeeOutputStream.java",
                "Sort members. src/main/java/org/apache/commons/io/output/TeeOutputStream.java"
            ]
        },
        "src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java": {
            "message": [
                "[IO-303] TeeOutputStream fails executing branch.close() when main.close() raised an exception.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1245754 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java",
                "Missing @Overrides\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1295634 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java",
                "Drop $Date$ SVN variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302050 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java",
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java",
                "Replace custom temporary folder management with JUnit's TemporaryFolder.\nThis will allow Maven to run tests concurrently. Clean up imports. src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java",
                "Strengthen TeeOutputStremTest.testTee with an expected result.\nTee should not just repeat what's being written to both outputs,\nthe output should also be the same as expected. For example, if\nthe body of any of the write methods in TeeOutputStream is removed,\nthen the values written are the same (nothing) and the assertions\ndon't fail in the test. This is solved by adding an expected value\nand checking both outputs against it. src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java",
                "Remove @version $Id$ tags from pre-git SVN days. src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java",
                "Remove trailing white spaces on all lines. src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java",
                "Use try-with-resources in tests and more.\n\n- Don't nest if you do not have to.\n- Document empty blocks.\n- Only run FileFilterTestCase#testCanExecute() on Windows to fix Jenkins\nbuild. src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java",
                "Modified patch from Rob Spoor. src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java",
                "Rename test package. src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java",
                "Rename test classes from \"Yell\" to \"Throw\" prefix. src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/SelectorAdapter.java": {
            "message": [
                "Adding missing license header.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1292450 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/SelectorAdapter.java",
                "eol native\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302382 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/SelectorAdapter.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/SelectorAdapter.java",
                "Trailing spaces\nThese are the worst offenders; a few still remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471765 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/SelectorAdapter.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/test/java/org/apache/commons/io/SelectorAdapter.java",
                "Sort test members. src/test/java/org/apache/commons/io/SelectorAdapter.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/BoundedInputStream.java": {
            "message": [
                "IO-273 BoundedInputStream.read() treats max differently from BoundedInputStream.read(byte[]...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1295645 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/BoundedInputStream.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/BoundedInputStream.java",
                "Replace \"<code>true</code>\" with \"{@code true}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307461 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/BoundedInputStream.java",
                "Replace \"<code>false</code>\" with \"{@code false}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307462 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/BoundedInputStream.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/BoundedInputStream.java",
                "Refactor magic number into constant.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1586308 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/BoundedInputStream.java",
                "Use import static org.apache.commons.io.IOUtils.EOF instead of local constants.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1586342 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/BoundedInputStream.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/input/BoundedInputStream.java",
                "Fix Javadoc typos (closes #30) src/main/java/org/apache/commons/io/input/BoundedInputStream.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/input/BoundedInputStream.java",
                "Minor Improvement: (#190)\n\n* Add final\r\n* Remove redundant initializer\r\n* simplify conditions src/main/java/org/apache/commons/io/input/BoundedInputStream.java",
                "Javadoc: Sentences end in a period. src/main/java/org/apache/commons/io/input/BoundedInputStream.java",
                "Javadoc. Close HTML tags. Use paragraph tags. src/main/java/org/apache/commons/io/input/BoundedInputStream.java",
                "Sort members. src/main/java/org/apache/commons/io/input/BoundedInputStream.java",
                "Javadoc: Replace @code with @link src/main/java/org/apache/commons/io/input/BoundedInputStream.java",
                "Fix whitespace\n\nJavadoc src/main/java/org/apache/commons/io/input/BoundedInputStream.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/main/java/org/apache/commons/io/input/BoundedInputStream.java"
            ]
        },
        "src/main/java/org/apache/commons/io/CopyUtils.java": {
            "message": [
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/CopyUtils.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/CopyUtils.java",
                "IO-314 Deprecate and then remove all methods that use the default encoding\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1468894 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/CopyUtils.java",
                "Add deprecation version\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1468991 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/CopyUtils.java",
                "[IO-424] Javadoc fixes, mostly to appease 1.8.0. Patch from Ville Skytt\u00e4\". 3 files in the patch did not applied cleanly, so they are not in the commit.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1563227 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/CopyUtils.java",
                "Make JavaDoc tool happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1680650 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/CopyUtils.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/CopyUtils.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/CopyUtils.java",
                "Javadoc standardize \"behaviour\" -> \"behavior\". src/main/java/org/apache/commons/io/CopyUtils.java",
                "[IO-688] CopyUtils deprecation message gives wrong version. src/main/java/org/apache/commons/io/CopyUtils.java",
                "Use less cryptic variable names. src/main/java/org/apache/commons/io/CopyUtils.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/CopyUtils.java",
                "Reuse EOF constant.\n\nJavadoc tweaks. Format to max line length. Simplify. src/main/java/org/apache/commons/io/CopyUtils.java",
                "Add and use IOUtils.byteArray(*). src/main/java/org/apache/commons/io/CopyUtils.java",
                "[IO-718] FileUtils.checksumCRC32 and FileUtils.checksum are not thread\nsafe. src/main/java/org/apache/commons/io/CopyUtils.java",
                "Minor changes: (#243)\n\n* Remove Unnecessary interface modifier\r\n* Make final var\r\n* Simplify conditions\r\n* Simplify assertions src/main/java/org/apache/commons/io/CopyUtils.java",
                "Sort members. src/main/java/org/apache/commons/io/CopyUtils.java",
                "Remove noisy inline comments. src/main/java/org/apache/commons/io/CopyUtils.java",
                "Javadoc: Replace @code with @link src/main/java/org/apache/commons/io/CopyUtils.java"
            ]
        },
        "src/main/java/org/apache/commons/io/EndianUtils.java": {
            "message": [
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/EndianUtils.java",
                "[IO-352] Spelling fixes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1401522 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/EndianUtils.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/EndianUtils.java",
                "<action issue=\"IO-437\" dev=\"ggregory\" type=\"add\">\n  Make IOUtils.EOF public and reuse it in various classes.\n</action>\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1586350 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/EndianUtils.java",
                "Extracted duplicated logic into methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686450 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/EndianUtils.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/EndianUtils.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/EndianUtils.java",
                "Remove redundant calls to super(). src/main/java/org/apache/commons/io/EndianUtils.java",
                "Checkstyle left curly. src/main/java/org/apache/commons/io/EndianUtils.java",
                "Remove unused exceptions and trailing whitespace. src/main/java/org/apache/commons/io/EndianUtils.java",
                "Sort members. src/main/java/org/apache/commons/io/EndianUtils.java",
                "PMD: Remove unnecessary parentheses src/main/java/org/apache/commons/io/EndianUtils.java",
                "Javadoc src/main/java/org/apache/commons/io/EndianUtils.java",
                "Whitespace and Javadoc src/main/java/org/apache/commons/io/EndianUtils.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/main/java/org/apache/commons/io/EndianUtils.java"
            ]
        },
        "src/main/java/org/apache/commons/io/FileCleaner.java": {
            "message": [
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileCleaner.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileCleaner.java",
                "[IO-424] Javadoc fixes, mostly to appease 1.8.0. Attempt to appease Javadoc 1.8.0 but getting \"[ERROR] Failed to execute goal org.apache.maven.plugins:maven-javadoc-plugin:2.9.1:javadoc (default-cli) on project commons-io: An error has occurred in JavaDocs report generation:\n[ERROR] Exit code: 1 - javadoc: warning - Error fetching URL: http://download.oracle.com/javase/6/docs/api\n[ERROR] javadoc: warning - Error fetching URL: http://download.oracle.com/javaee/6/api\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1563233 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileCleaner.java",
                "Make JavaDoc tool happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1680650 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileCleaner.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/FileCleaner.java",
                "Fix Javadoc typos (closes #30) src/main/java/org/apache/commons/io/FileCleaner.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/FileCleaner.java",
                "Remove \"line\" in-line comments. src/main/java/org/apache/commons/io/FileCleaner.java",
                "Sort members. src/main/java/org/apache/commons/io/FileCleaner.java",
                "Fix internal name src/main/java/org/apache/commons/io/FileCleaner.java",
                "Package private variable can be private src/main/java/org/apache/commons/io/FileCleaner.java"
            ]
        },
        "src/main/java/org/apache/commons/io/FileDeleteStrategy.java": {
            "message": [
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileDeleteStrategy.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileDeleteStrategy.java",
                "Replace \"<code>true</code>\" with \"{@code true}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307461 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileDeleteStrategy.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileDeleteStrategy.java",
                "[IO-424] Javadoc fixes, mostly to appease 1.8.0. Patch from Ville Skytt\u00e4\". 3 files in the patch did not applied cleanly, so they are not in the commit.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1563227 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileDeleteStrategy.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/FileDeleteStrategy.java",
                "Fix Javadoc typos (closes #30) src/main/java/org/apache/commons/io/FileDeleteStrategy.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/FileDeleteStrategy.java",
                "Sort methods; close Javadoc tags. src/main/java/org/apache/commons/io/FileDeleteStrategy.java",
                "Add FileUtils.delete(File), refactor, reuse.\n\nJavadoc. src/main/java/org/apache/commons/io/FileDeleteStrategy.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/FileDeleteStrategy.java",
                "- Use final.\n- Simpler boolean tests.\n- Fix test. src/main/java/org/apache/commons/io/FileDeleteStrategy.java",
                "Javadoc: Replace @code with @link src/main/java/org/apache/commons/io/FileDeleteStrategy.java"
            ]
        },
        "src/main/java/org/apache/commons/io/HexDump.java": {
            "message": [
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/HexDump.java",
                "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/HexDump.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/HexDump.java",
                "Make explicit where the default platform encoding is being used\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1468883 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/HexDump.java",
                "Trailing spaces\nThese are the worst offenders; others remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471767 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/HexDump.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/HexDump.java",
                "Remove redundant calls to super(). src/main/java/org/apache/commons/io/HexDump.java",
                "Sort members. src/main/java/org/apache/commons/io/HexDump.java",
                "Change to uppercase variable constant. (#323) src/main/java/org/apache/commons/io/HexDump.java",
                "Use Objects.requireNonNull()\n\nUpdate Javadoc for existing calls. src/main/java/org/apache/commons/io/HexDump.java",
                "Deprecate HexDump#EOL in favor of System#lineSeparator()\n\nJavadoc; format tweaks. src/main/java/org/apache/commons/io/HexDump.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/main/java/org/apache/commons/io/HexDump.java"
            ]
        },
        "src/main/java/org/apache/commons/io/IOCase.java": {
            "message": [
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOCase.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOCase.java",
                "Replace \"<code>null</code>\" with \"{@code null}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307459 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOCase.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOCase.java",
                "Trailing spaces\nThese are the worst offenders; others remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471767 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOCase.java",
                "IO-239 Convert IOCase to a Java 1.5+ Enumeration\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1483915 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOCase.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/IOCase.java",
                "Fix Javadoc typos (closes #30) src/main/java/org/apache/commons/io/IOCase.java",
                "Consistently use the final modifier with local variables. src/main/java/org/apache/commons/io/IOCase.java",
                "Modifier 'private' is redundant for enum constructors. (closes #53) src/main/java/org/apache/commons/io/IOCase.java",
                "Redundant superinterface Serializable for the type IOCase, already\ndefined by Enum<IOCase>. src/main/java/org/apache/commons/io/IOCase.java",
                "Redundant superinterface Serializable for the type IOCase, already\ndefined by Enum<IOCase>. src/main/java/org/apache/commons/io/IOCase.java",
                "Javadoc: Use \"file name\" instead of \"filename\".\n\nCamel case vars \"filename\" to \"fileName\". src/main/java/org/apache/commons/io/IOCase.java",
                "Use Objects.requireNonNull() instead of custom check. src/main/java/org/apache/commons/io/IOCase.java",
                "Close Javadoc HTML tags, remove dead comments, some formatting. src/main/java/org/apache/commons/io/IOCase.java",
                "Close Javadoc HTML tags. src/main/java/org/apache/commons/io/IOCase.java",
                "Fix possible NPEs in some file filters when paths have no parent or no\nelements. src/main/java/org/apache/commons/io/IOCase.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/IOCase.java",
                "Add and use Add IOCase.isCaseSensitive(IOCase). src/main/java/org/apache/commons/io/IOCase.java",
                "Use StringBuilder instead of StringBuffer.\n\nUse final. src/main/java/org/apache/commons/io/IOCase.java",
                "Add and use IOCase.value(IOCase, IOCase). src/main/java/org/apache/commons/io/IOCase.java",
                "Sort members. src/main/java/org/apache/commons/io/IOCase.java",
                "IOCase.isCaseSensitive(IOCase) result is backward (#325)\n\n* Handle static method isCaseSensitive of class IOCase.\r\n\r\n* Update RegexFileFilter.java\r\n\r\nChange the order of import statements, which the IDE automatically changes.\r\n\r\n* Add a test of static method isCaseSensitive in class IOCaseTest.\r\n\r\nCo-authored-by: huangxiaowei <huangxw@newland.com.cn> src/main/java/org/apache/commons/io/IOCase.java",
                "Use forEach() src/main/java/org/apache/commons/io/IOCase.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/main/java/org/apache/commons/io/IOCase.java"
            ]
        },
        "src/main/java/org/apache/commons/io/IOExceptionWithCause.java": {
            "message": [
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOExceptionWithCause.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOExceptionWithCause.java",
                "Replace \"<code>null</code>\" with \"{@code null}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307459 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOExceptionWithCause.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOExceptionWithCause.java",
                "IO-462 IOExceptionWithCause no longer needed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642763 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOExceptionWithCause.java",
                "IO-462 IOExceptionWithCause no longer needed\nSimplify code\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1643107 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/IOExceptionWithCause.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/IOExceptionWithCause.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/IOExceptionWithCause.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/IOExceptionWithCause.java"
            ]
        },
        "src/main/java/org/apache/commons/io/filefilter/AbstractFileFilter.java": {
            "message": [
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "Drop $Date$ SVN variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302050 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "Add missing '@Override' annotations. src/main/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "Fix Javadoc typos (closes #30) src/main/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "Remove Subversion's \"@version $Id$\". src/main/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "Javadoc: Use \"file name\" instead of \"filename\".\n\nCamel case vars \"filename\" to \"fileName\". src/main/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "Let org.apache.commons.io.filefilter classes work with\njava.nio.file.Files.walk* APIs.\n\nAlso: AccumulatorPathVisitor does not track directories properly. src/main/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "Simplify new PathFilter interface to a single method. src/main/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "Move new PathFilter interface to the file package, annotate it with\n@FunctionalInterface, and add a BasicFileAttributes parameter to accept\nattributes from java.nio.file.FileVisitor. src/main/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "[IO-597] FileUtils.iterateFiles runs out of memory when executed for a\ndirectory with large number of files.\n\nRe-implement FileUtils' iterateFiles(), iterateFilesAndDirs(),\nlistFiles(), listFilesAndDirs() to use NIO file tree walking instead of\nIO file listings to avoid memory consumption issues on large file trees. src/main/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "Slightly better Javadoc. src/main/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "Fix FileFilterTestCase use case for symbolic links on non-Windows OS.\n\n- Make SymbolicLinkFileFilter configurable:\n-- Add SymbolicLinkFileFilter.SymbolicLinkFileFilter(FileVisitResult,\nFileVisitResult)\n-- Add AbstractFileFilter(FileVisitResult, FileVisitResult)\n- CountingPathVisitor should not follow links by default to properly\ncount from FileUtils. src/main/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "Refactor null-checks. src/main/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "Use Objects.requireNonNull()\n\nUpdate Javadoc for existing calls. src/main/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "Refactor commons code src/main/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "Internal refactoring src/main/java/org/apache/commons/io/filefilter/AbstractFileFilter.java"
            ]
        },
        "src/main/java/org/apache/commons/io/filefilter/RegexFileFilter.java": {
            "message": [
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/RegexFileFilter.java",
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/RegexFileFilter.java",
                "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/RegexFileFilter.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/RegexFileFilter.java",
                "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304058 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/RegexFileFilter.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/RegexFileFilter.java",
                "[IO-424] Javadoc fixes, mostly to appease 1.8.0. Patch from Ville Skytt\u00e4\". 3 files in the patch did not applied cleanly, so they are not in the commit.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1563227 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/RegexFileFilter.java",
                "+= generated serialVersionUID\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642757 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/RegexFileFilter.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/filefilter/RegexFileFilter.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/filefilter/RegexFileFilter.java",
                "Javadoc nit. src/main/java/org/apache/commons/io/filefilter/RegexFileFilter.java",
                "Javadoc: Use \"file name\" instead of \"filename\".\n\nCamel case vars \"filename\" to \"fileName\". src/main/java/org/apache/commons/io/filefilter/RegexFileFilter.java",
                "Sort members. src/main/java/org/apache/commons/io/filefilter/RegexFileFilter.java",
                "Let org.apache.commons.io.filefilter classes work with\njava.nio.file.Files.walk* APIs.\n\nAlso: AccumulatorPathVisitor does not track directories properly. src/main/java/org/apache/commons/io/filefilter/RegexFileFilter.java",
                "Simplify new PathFilter interface to a single method. src/main/java/org/apache/commons/io/filefilter/RegexFileFilter.java",
                "Move new PathFilter interface to the file package, annotate it with\n@FunctionalInterface, and add a BasicFileAttributes parameter to accept\nattributes from java.nio.file.FileVisitor. src/main/java/org/apache/commons/io/filefilter/RegexFileFilter.java",
                "Fix Checkstyle issues. src/main/java/org/apache/commons/io/filefilter/RegexFileFilter.java",
                "[IO-597] FileUtils.iterateFiles runs out of memory when executed for a\ndirectory with large number of files.\n\nRe-implement FileUtils' iterateFiles(), iterateFilesAndDirs(),\nlistFiles(), listFilesAndDirs() to use NIO file tree walking instead of\nIO file listings to avoid memory consumption issues on large file trees. src/main/java/org/apache/commons/io/filefilter/RegexFileFilter.java",
                "Simplify construction implementation. src/main/java/org/apache/commons/io/filefilter/RegexFileFilter.java",
                "[IO-733] RegexFileFilter uses the path and file name instead of just the\nfile name.\n\nAdd RegexFileFilter.RegexFileFilter(Pattern, Function<Path, String>). src/main/java/org/apache/commons/io/filefilter/RegexFileFilter.java",
                "Simplify. src/main/java/org/apache/commons/io/filefilter/RegexFileFilter.java",
                "Add and use Add IOCase.isCaseSensitive(IOCase). src/main/java/org/apache/commons/io/filefilter/RegexFileFilter.java",
                "Use StringBuilder instead of StringBuffer.\n\nUse final. src/main/java/org/apache/commons/io/filefilter/RegexFileFilter.java",
                "Fix FileFilterTestCase use case for symbolic links on non-Windows OS.\n\n- Make SymbolicLinkFileFilter configurable:\n-- Add SymbolicLinkFileFilter.SymbolicLinkFileFilter(FileVisitResult,\nFileVisitResult)\n-- Add AbstractFileFilter(FileVisitResult, FileVisitResult)\n- CountingPathVisitor should not follow links by default to properly\ncount from FileUtils. src/main/java/org/apache/commons/io/filefilter/RegexFileFilter.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/filefilter/RegexFileFilter.java",
                "Add and use IOCase.value(IOCase, IOCase). src/main/java/org/apache/commons/io/filefilter/RegexFileFilter.java",
                "Refactor null-checks. src/main/java/org/apache/commons/io/filefilter/RegexFileFilter.java",
                "Refactor null-checks. src/main/java/org/apache/commons/io/filefilter/RegexFileFilter.java",
                "IOCase.isCaseSensitive(IOCase) result is backward (#325)\n\n* Handle static method isCaseSensitive of class IOCase.\r\n\r\n* Update RegexFileFilter.java\r\n\r\nChange the order of import statements, which the IDE automatically changes.\r\n\r\n* Add a test of static method isCaseSensitive in class IOCaseTest.\r\n\r\nCo-authored-by: huangxiaowei <huangxw@newland.com.cn> src/main/java/org/apache/commons/io/filefilter/RegexFileFilter.java",
                "[IO-773] RegexFileFilter is no longer Serializable. src/main/java/org/apache/commons/io/filefilter/RegexFileFilter.java",
                "Use Objects.requireNonNull()\n\nUpdate Javadoc for existing calls. src/main/java/org/apache/commons/io/filefilter/RegexFileFilter.java"
            ]
        },
        "src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java": {
            "message": [
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "Drop $Date$ SVN variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302050 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304058 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "Typo\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1465471 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "The array is cloned; delete incorrect Javadoc comment\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1465473 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "Spelling\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1465474 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "The array is cloned; delete incorrect Javadoc comment\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1465475 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "IO-374 WildcardFileFilter ctors should not use null to mean IOCase.SENSITIVE when delegating to other ctors\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1465476 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "[IO-424] Javadoc fixes, mostly to appease 1.8.0. Patch from Ville Skytt\u00e4\". 3 files in the patch did not applied cleanly, so they are not in the commit.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1563227 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "+= generated serialVersionUID\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642757 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "Javadoc fix. src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "Javadoc: Use \"file name\" instead of \"filename\".\n\nCamel case vars \"filename\" to \"fileName\". src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "Use varargs in a few more places. src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "Performance Enhancement: Call toArray with Zero Array Size (closes #65)\n\ntoArray should, at least since Java 7, be used with new T[0] instead of size, since it is \"faster, safer, and contractually cleaner\" (https://shipilev.net/blog/2016/arrays-wisdom-ancients/#_conclusion) src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "No need to allocate empty String arrays over and over. src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "Sort members. src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "Refactor common code into a private method. src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "Let org.apache.commons.io.filefilter classes work with\njava.nio.file.Files.walk* APIs.\n\nAlso: AccumulatorPathVisitor does not track directories properly. src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "Simplify new PathFilter interface to a single method. src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "Move new PathFilter interface to the file package, annotate it with\n@FunctionalInterface, and add a BasicFileAttributes parameter to accept\nattributes from java.nio.file.FileVisitor. src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "[IO-597] FileUtils.iterateFiles runs out of memory when executed for a\ndirectory with large number of files.\n\nRe-implement FileUtils' iterateFiles(), iterateFilesAndDirs(),\nlistFiles(), listFilesAndDirs() to use NIO file tree walking instead of\nIO file listings to avoid memory consumption issues on large file trees. src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "Fix possible NPEs in some file filters when paths have no parent or no\nelements. src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "Fix FileFilterTestCase use case for symbolic links on non-Windows OS.\n\n- Make SymbolicLinkFileFilter configurable:\n-- Add SymbolicLinkFileFilter.SymbolicLinkFileFilter(FileVisitResult,\nFileVisitResult)\n-- Add AbstractFileFilter(FileVisitResult, FileVisitResult)\n- CountingPathVisitor should not follow links by default to properly\ncount from FileUtils. src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "Fix odd Javadoc. src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "Add and use IOCase.value(IOCase, IOCase). src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "Simplify copying arrays. src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "Refactor null-checks. src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "Refactor null-checks. src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "Javadoc nits. src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "Typos. src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "Format tweak. src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "Use Objects.requireNonNull()\n\nUpdate Javadoc for existing calls. src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "Refactor commons code src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "Use forEach() src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java"
            ]
        },
        "src/main/java/org/apache/commons/io/filefilter/WildcardFilter.java": {
            "message": [
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "Drop $Date$ SVN variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302050 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "Use \"@since 1.1\" instead of \"@since Commons IO 1.1\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1303950 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "Trailing spaces\nThese are the worst offenders; others remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471767 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "[IO-424] Javadoc fixes, mostly to appease 1.8.0. Patch from Ville Skytt\u00e4\". 3 files in the patch did not applied cleanly, so they are not in the commit.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1563227 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "+= generated serialVersionUID\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642757 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "Fix Javadoc typos (closes #30) src/main/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "Javadoc: Use \"file name\" instead of \"filename\".\n\nCamel case vars \"filename\" to \"fileName\". src/main/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "Use varargs in a few more places. src/main/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "Performance Enhancement: Call toArray with Zero Array Size (closes #65)\n\ntoArray should, at least since Java 7, be used with new T[0] instead of size, since it is \"faster, safer, and contractually cleaner\" (https://shipilev.net/blog/2016/arrays-wisdom-ancients/#_conclusion) src/main/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "No need to allocate empty String arrays over and over. src/main/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "Sort members. src/main/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "Let org.apache.commons.io.filefilter classes work with\njava.nio.file.Files.walk* APIs.\n\nAlso: AccumulatorPathVisitor does not track directories properly. src/main/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "Simplify new PathFilter interface to a single method. src/main/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "Move new PathFilter interface to the file package, annotate it with\n@FunctionalInterface, and add a BasicFileAttributes parameter to accept\nattributes from java.nio.file.FileVisitor. src/main/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "[IO-597] FileUtils.iterateFiles runs out of memory when executed for a\ndirectory with large number of files.\n\nRe-implement FileUtils' iterateFiles(), iterateFilesAndDirs(),\nlistFiles(), listFilesAndDirs() to use NIO file tree walking instead of\nIO file listings to avoid memory consumption issues on large file trees. src/main/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "Fix possible NPEs in some file filters when paths have no parent or no\nelements. src/main/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "Format tweak. src/main/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "Simplify copying arrays. src/main/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "Refactor null-checks. src/main/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "Javadoc nits. src/main/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "Typos. src/main/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "Sort members. src/main/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "Use Objects.requireNonNull()\n\nUpdate Javadoc for existing calls. src/main/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "Use forEach() src/main/java/org/apache/commons/io/filefilter/WildcardFilter.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/CountingInputStream.java": {
            "message": [
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/CountingInputStream.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/CountingInputStream.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/CountingInputStream.java",
                "<action issue=\"IO-437\" dev=\"ggregory\" type=\"add\">\n  Make IOUtils.EOF public and reuse it in various classes.\n</action>\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1586350 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/CountingInputStream.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/input/CountingInputStream.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/input/CountingInputStream.java",
                "Javadoc: Close paragraph tags. src/main/java/org/apache/commons/io/input/CountingInputStream.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/input/CountingInputStream.java",
                "Javadoc: Sentences end in a period. src/main/java/org/apache/commons/io/input/CountingInputStream.java",
                "Remove \"line\" in-line comments. src/main/java/org/apache/commons/io/input/CountingInputStream.java",
                "Sort members. src/main/java/org/apache/commons/io/input/CountingInputStream.java",
                "Javadoc. src/main/java/org/apache/commons/io/input/CountingInputStream.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/DemuxInputStream.java": {
            "message": [
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/DemuxInputStream.java",
                "Drop $Date$ SVN variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302050 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/DemuxInputStream.java",
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/DemuxInputStream.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/DemuxInputStream.java",
                "<action issue=\"IO-437\" dev=\"ggregory\" type=\"add\">\n  Make IOUtils.EOF public and reuse it in various classes.\n</action>\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1586350 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/DemuxInputStream.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/DemuxInputStream.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/input/DemuxInputStream.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/input/DemuxInputStream.java",
                "Don't need to nest else clause. Refactor magic numbers into constants. src/main/java/org/apache/commons/io/input/DemuxInputStream.java",
                "Comment empty block. Formatting. src/main/java/org/apache/commons/io/input/DemuxInputStream.java",
                "[IO-635] Add org.apache.commons.io.IOUtils.close(Closeable).\n\nReuse own API. src/main/java/org/apache/commons/io/input/DemuxInputStream.java",
                "Normalize ivar name. src/main/java/org/apache/commons/io/input/DemuxInputStream.java",
                "Javadoc: Close paragraph tags. src/main/java/org/apache/commons/io/input/DemuxInputStream.java",
                "- Javadoc.\n- Add @SuppressWarnings(\"resource\") for parameter null checks.\n- Better private method name.\n- Format nits. src/main/java/org/apache/commons/io/input/DemuxInputStream.java",
                "Add @SuppressWarnings and rename private var. src/main/java/org/apache/commons/io/input/DemuxInputStream.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/ProxyInputStream.java": {
            "message": [
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ProxyInputStream.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ProxyInputStream.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ProxyInputStream.java",
                "<action issue=\"IO-437\" dev=\"ggregory\" type=\"add\">\n  Make IOUtils.EOF public and reuse it in various classes.\n</action>\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1586350 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ProxyInputStream.java",
                "Comment empty block.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1603493 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ProxyInputStream.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/input/ProxyInputStream.java",
                "Refactor null-safe length query code into new IOUtils methods. src/main/java/org/apache/commons/io/input/ProxyInputStream.java",
                "Javadoc standardize \"behaviour\" -> \"behavior\". src/main/java/org/apache/commons/io/input/ProxyInputStream.java",
                "[IO-636]\n\n- Add and reuse org.apache.commons.io.IOUtils.closeQuitely(Closeable,\nConsumer<IOException>).\n- [IO-636] Add and reuse org.apache.commons.io.IOUtils.close(Closeable,\nIOConsumer<IOException>). src/main/java/org/apache/commons/io/input/ProxyInputStream.java",
                "Simpler lambdas. src/main/java/org/apache/commons/io/input/ProxyInputStream.java",
                "Javadoc: Close paragraph tags. src/main/java/org/apache/commons/io/input/ProxyInputStream.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/input/ProxyInputStream.java",
                "Javadoc: Sentences end in a period. src/main/java/org/apache/commons/io/input/ProxyInputStream.java",
                "Add '@SuppressWarnings(\"unused\") // Possibly thrown from subclasses' to\neliminate compiler warnings. src/main/java/org/apache/commons/io/input/ProxyInputStream.java",
                "Sort members. src/main/java/org/apache/commons/io/input/ProxyInputStream.java",
                "Remove unnecessary @SuppressWarnings(\"unchecked\") src/main/java/org/apache/commons/io/input/ProxyInputStream.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/ProxyReader.java": {
            "message": [
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ProxyReader.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ProxyReader.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ProxyReader.java",
                "<action issue=\"IO-437\" dev=\"ggregory\" type=\"add\">\n  Make IOUtils.EOF public and reuse it in various classes.\n</action>\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1586350 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ProxyReader.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/input/ProxyReader.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/input/ProxyReader.java",
                "Comment empty block. Formatting. src/main/java/org/apache/commons/io/input/ProxyReader.java",
                "Refactor null-safe length query code into new IOUtils methods. src/main/java/org/apache/commons/io/input/ProxyReader.java",
                "Javadoc standardize \"behaviour\" -> \"behavior\". src/main/java/org/apache/commons/io/input/ProxyReader.java",
                "Javadoc: Close paragraph tags. src/main/java/org/apache/commons/io/input/ProxyReader.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/input/ProxyReader.java",
                "Javadoc: Sentences end in a period. src/main/java/org/apache/commons/io/input/ProxyReader.java",
                "Add '@SuppressWarnings(\"unused\") // Possibly thrown from subclasses' to\neliminate compiler warnings. src/main/java/org/apache/commons/io/input/ProxyReader.java",
                "Remove @SuppressWarnings no longer applicable. src/main/java/org/apache/commons/io/input/ProxyReader.java",
                "Add @SuppressWarnings. src/main/java/org/apache/commons/io/input/ProxyReader.java",
                "Sort members. src/main/java/org/apache/commons/io/input/ProxyReader.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java": {
            "message": [
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                "Drop $Date$ SVN variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302050 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                "<action issue=\"IO-437\" dev=\"ggregory\" type=\"add\">\n  Make IOUtils.EOF public and reuse it in various classes.\n</action>\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1586350 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                "Add missing '@Override' annotations. src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                "Javadoc: Close paragraph tags. src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                "Checkstyle left curly. src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                "Remove unused exceptions and trailing whitespace. src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                "Add and use a package-private factory for UnsupportedOperationException\nto provide exception messages with a consistent formatting. src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                "Javadoc: Sentences end in a period. src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/XmlStreamReaderException.java": {
            "message": [
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/XmlStreamReaderException.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/XmlStreamReaderException.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/XmlStreamReaderException.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/input/XmlStreamReaderException.java",
                "Javadoc: Close paragraph tags. src/main/java/org/apache/commons/io/input/XmlStreamReaderException.java",
                "Sort members. src/main/java/org/apache/commons/io/input/XmlStreamReaderException.java"
            ]
        },
        "src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java": {
            "message": [
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "Remove extra parens.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1297667 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "Format fix.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1297679 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "Fix Javadocs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1297680 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "Replace \"<code>null</code>\" with \"{@code null}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307459 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "Replace \"<code>true</code>\" with \"{@code true}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307461 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "Replace \"<code>false</code>\" with \"{@code false}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307462 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "Trailing spaces\nThese are the worst offenders; others remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471767 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "Fixed all checkstyle errors and a findbugs error\n\nFindbugs error was:\norg.apache.commons.io.output.DeferredFileOutputStream#thresholdReached\npossible file handle leak upon exception\n\nAlso contains fix for IO-446, submitted by Jeffrey Barrus\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686747 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "[IO-505] Deprecated of all IOUtils.closeQuietly() methods and use try-with-resources internally.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1742675 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "Update old school @exception with new school @throws.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1747114 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "[IO-512] ThresholdingOutputStream.thresholdReached() results in FileNotFoundException.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1756570 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "[IO-515] Allow Specifying Initial Buffer Size of\nDeferredFileOutputStream. Redo submitted patch. src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "Fix Javadoc typos (closes #30) src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "Consistently use the final modifier with local variables. src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "Add/remove blank lines in Javadoc to aid clarity src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "Access DEFAULT_SIZE directly. src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "Don't hard code values in Javadoc, use {@value reference}. src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "[IO-669] Fix code smells; fix typos (#115)\n\n* fix code smells\r\n\r\n* fix typos\r\n\r\n* l to L\r\n\r\n* use Arrays.fill\r\n\r\n* revert deleting boxing src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "Normalize spelling. src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "Javadoc exceptions, remove whitespace, remove dead comments, rename\nparam. src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "Fix curlies formatting and format to 120 wide lines. src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "Minor Improvement: (#190)\n\n* Add final\r\n* Remove redundant initializer\r\n* simplify conditions src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "Javadoc: Close HTML tags. src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "IO-651 Add DeferredFileOutputStream.getInputStream() (#206)\n\nAdd DeferredFileOutputStream.getInputStream() for efficient retrieval of OutputSteam data.\r\n\r\nCo-authored-by: kare1634 <KaRe1634@IncorporatedMail.com> src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "[IO-651] Add DeferredFileOutputStream.toInputStream() #206.\n\n- Update @since tag.\n- Sort members. src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "No need to nest in else. src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "Replace construction of FileInputStream and FileOutputStream objects with Files NIO APIs. (#221) src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "Reimplement internals with NIO. src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "Use Objects.requireNonNull()\n\nJavadoc. Reuse own API. src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "[IO-776] Fix parameters to requireNonNull call\n\nCurrently, the call checks that the literal string `\"prefix\"` is\nnon-null, which of course it is :) src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java"
            ]
        },
        "src/main/java/org/apache/commons/io/output/DemuxOutputStream.java": {
            "message": [
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/DemuxOutputStream.java",
                "Drop $Date$ SVN variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302050 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/DemuxOutputStream.java",
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/DemuxOutputStream.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/DemuxOutputStream.java",
                "Fix funky formating.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1737897 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/DemuxOutputStream.java",
                "Javadoc: Active voice.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1737898 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/DemuxOutputStream.java",
                "Javadoc: Active voice.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1737899 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/DemuxOutputStream.java",
                "Don't use a \"m_\" prefix for ivars.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1737900 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/DemuxOutputStream.java",
                "Add @SuppressWarnings.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1737901 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/DemuxOutputStream.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/DemuxOutputStream.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/output/DemuxOutputStream.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/output/DemuxOutputStream.java",
                "[IO-635] Add org.apache.commons.io.IOUtils.close(Closeable).\n\nReuse own API. src/main/java/org/apache/commons/io/output/DemuxOutputStream.java",
                "Add @SuppressWarnings with comments. src/main/java/org/apache/commons/io/output/DemuxOutputStream.java"
            ]
        },
        "src/main/java/org/apache/commons/io/output/LockableFileWriter.java": {
            "message": [
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/LockableFileWriter.java",
                "[IO-318] Add Charset sister APIs to method that take a String charset name. LockableFileWriterTest.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307431 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/LockableFileWriter.java",
                "Use Charsets instead of conditional.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1311756 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/LockableFileWriter.java",
                "Unused import\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1347574 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/LockableFileWriter.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/LockableFileWriter.java",
                "IO-314 Deprecate all methods that use the default encoding\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1468992 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/LockableFileWriter.java",
                "Trailing spaces\nThese are the worst offenders; others remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471767 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/LockableFileWriter.java",
                "Fixed all checkstyle errors and a findbugs error\n\nFindbugs error was:\norg.apache.commons.io.output.DeferredFileOutputStream#thresholdReached\npossible file handle leak upon exception\n\nAlso contains fix for IO-446, submitted by Jeffrey Barrus\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686747 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/LockableFileWriter.java",
                "[IO-505] Deprecated of all IOUtils.closeQuietly() methods and use try-with-resources internally.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1742675 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/LockableFileWriter.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/output/LockableFileWriter.java",
                "Normalize on 'charsetName' as a parameter name since this is the named\nused in the JRE for Charset.forName(String).\n\n- Use 'charset' instead of 'encoding' Charset parameter names.\n- Fix 1 checkstyle issue. src/main/java/org/apache/commons/io/output/LockableFileWriter.java",
                "Use US English spelling. src/main/java/org/apache/commons/io/output/LockableFileWriter.java",
                "Normalize spelling of 'Initialize'. src/main/java/org/apache/commons/io/output/LockableFileWriter.java",
                "Remove redundant calls to super(). src/main/java/org/apache/commons/io/output/LockableFileWriter.java",
                "Javadoc. Use the same param names as the JDK to avoid confusion. src/main/java/org/apache/commons/io/output/LockableFileWriter.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/output/LockableFileWriter.java",
                "LockableFileWriter.close() should fail when the lock file cannot be\ndeleted. src/main/java/org/apache/commons/io/output/LockableFileWriter.java",
                "Javadoc. src/main/java/org/apache/commons/io/output/LockableFileWriter.java",
                "Javadoc: Sentences end in a period. src/main/java/org/apache/commons/io/output/LockableFileWriter.java",
                "- Use final.\n- Simpler boolean tests.\n- Fix test. src/main/java/org/apache/commons/io/output/LockableFileWriter.java",
                "Formatting. src/main/java/org/apache/commons/io/output/LockableFileWriter.java",
                "Sort members. src/main/java/org/apache/commons/io/output/LockableFileWriter.java",
                "Javadoc: Replace @code with @link src/main/java/org/apache/commons/io/output/LockableFileWriter.java",
                "Use final src/main/java/org/apache/commons/io/output/LockableFileWriter.java",
                "Reuse own code src/main/java/org/apache/commons/io/output/LockableFileWriter.java"
            ]
        },
        "src/main/java/org/apache/commons/io/output/NullOutputStream.java": {
            "message": [
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/NullOutputStream.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/NullOutputStream.java",
                "Trailing spaces\nThese are the worst offenders; others remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471767 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/NullOutputStream.java",
                "Javadoc 8 fix.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1674708 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/NullOutputStream.java",
                "Clean up tests. Javadocs. src/main/java/org/apache/commons/io/output/NullOutputStream.java",
                "Remove Subversion's \"@version $Id$\". src/main/java/org/apache/commons/io/output/NullOutputStream.java",
                "Minor clean ups. src/main/java/org/apache/commons/io/output/NullOutputStream.java",
                "[IO-630] Deprecate\n`org.apache.commons.io.output.NullOutputStream.NullOutputStream()` in\nfavor of `org.apache.commons.io.output.NullOutputStream.NULL_OUTPUT_STREAM`. src/main/java/org/apache/commons/io/output/NullOutputStream.java",
                "Clean ups. src/main/java/org/apache/commons/io/output/NullOutputStream.java",
                "Javadoc. src/main/java/org/apache/commons/io/output/NullOutputStream.java",
                "Remove redundant calls to super(). src/main/java/org/apache/commons/io/output/NullOutputStream.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/output/NullOutputStream.java",
                "Javadoc. src/main/java/org/apache/commons/io/output/NullOutputStream.java",
                "Add NullOutputStream.INSTANCE and deprecate NULL_OUTPUT_STREAM. src/main/java/org/apache/commons/io/output/NullOutputStream.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/output/NullOutputStream.java",
                "Sort members. src/main/java/org/apache/commons/io/output/NullOutputStream.java"
            ]
        },
        "src/main/java/org/apache/commons/io/output/ProxyOutputStream.java": {
            "message": [
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/ProxyOutputStream.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/ProxyOutputStream.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/ProxyOutputStream.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/output/ProxyOutputStream.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/output/ProxyOutputStream.java",
                "Comment empty block. Formatting. src/main/java/org/apache/commons/io/output/ProxyOutputStream.java",
                "Refactor null-safe length query code into new IOUtils methods. src/main/java/org/apache/commons/io/output/ProxyOutputStream.java",
                "Javadoc standardize \"behaviour\" -> \"behavior\". src/main/java/org/apache/commons/io/output/ProxyOutputStream.java",
                "[IO-636]\n\n- Add and reuse org.apache.commons.io.IOUtils.closeQuitely(Closeable,\nConsumer<IOException>).\n- [IO-636] Add and reuse org.apache.commons.io.IOUtils.close(Closeable,\nIOConsumer<IOException>). src/main/java/org/apache/commons/io/output/ProxyOutputStream.java",
                "Simpler lambdas. src/main/java/org/apache/commons/io/output/ProxyOutputStream.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/output/ProxyOutputStream.java",
                "Javadoc: Sentences end in a period. src/main/java/org/apache/commons/io/output/ProxyOutputStream.java",
                "Add '@SuppressWarnings(\"unused\") // Possibly thrown from subclasses' to\neliminate compiler warnings. src/main/java/org/apache/commons/io/output/ProxyOutputStream.java",
                "Javadoc: Close HTML tags. src/main/java/org/apache/commons/io/output/ProxyOutputStream.java",
                "Sort members. src/main/java/org/apache/commons/io/output/ProxyOutputStream.java"
            ]
        },
        "src/main/java/org/apache/commons/io/output/ProxyWriter.java": {
            "message": [
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/ProxyWriter.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/ProxyWriter.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/ProxyWriter.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/output/ProxyWriter.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/output/ProxyWriter.java",
                "Javadoc. src/main/java/org/apache/commons/io/output/ProxyWriter.java",
                "Javadoc: Use the same names for arguments as the JDK, less confusing. src/main/java/org/apache/commons/io/output/ProxyWriter.java",
                "Use the same names for arguments as the JDK, less confusing. src/main/java/org/apache/commons/io/output/ProxyWriter.java",
                "Refactor null-safe length query code into new IOUtils methods. src/main/java/org/apache/commons/io/output/ProxyWriter.java",
                "Use final. src/main/java/org/apache/commons/io/output/ProxyWriter.java",
                "Javadoc. src/main/java/org/apache/commons/io/output/ProxyWriter.java",
                "Javadoc standardize \"behaviour\" -> \"behavior\". src/main/java/org/apache/commons/io/output/ProxyWriter.java",
                "[IO-636]\n\n- Add and reuse org.apache.commons.io.IOUtils.closeQuitely(Closeable,\nConsumer<IOException>).\n- [IO-636] Add and reuse org.apache.commons.io.IOUtils.close(Closeable,\nIOConsumer<IOException>). src/main/java/org/apache/commons/io/output/ProxyWriter.java",
                "Simpler lambdas. src/main/java/org/apache/commons/io/output/ProxyWriter.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/output/ProxyWriter.java",
                "Javadoc: Sentences end in a period. src/main/java/org/apache/commons/io/output/ProxyWriter.java",
                "Add '@SuppressWarnings(\"unused\") // Possibly thrown from subclasses' to\neliminate compiler warnings. src/main/java/org/apache/commons/io/output/ProxyWriter.java",
                "Sort members. src/main/java/org/apache/commons/io/output/ProxyWriter.java",
                "Javadoc src/main/java/org/apache/commons/io/output/ProxyWriter.java"
            ]
        },
        "src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java": {
            "message": [
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                "Replace \"<code>true</code>\" with \"{@code true}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307461 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                "Replace \"<code>false</code>\" with \"{@code false}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307462 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                "IO-425 Setter method for threshold.\n\nPatch by Craig Swank, testcase by me\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686480 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                "Added missing @since tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1687815 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                "Update old school @exception with new school @throws.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1747114 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                "Fix Javadoc typos (closes #30) src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                "Add/remove blank lines in Javadoc to aid clarity src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                "Refactor array declaration in ThresholdingOutputStream src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                "Checkstyle left curly. src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                "Add @SuppressWarnings with comments. src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                "Javadoc: Close HTML tags. src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                "Sort members. src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                "Add constructor ThresholdingOutputStream(int, IOConsumer, IOFunction)\nand make the class concrete. src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                "Minor changes: (#243)\n\n* Remove Unnecessary interface modifier\r\n* Make final var\r\n* Simplify conditions\r\n* Simplify assertions src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                "Add NullOutputStream.INSTANCE and deprecate NULL_OUTPUT_STREAM. src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                "Javadoc: Replace @code with @link src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java"
            ]
        },
        "src/test/java/org/apache/commons/io/FileCleanerTestCase.java": {
            "message": [
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileCleanerTestCase.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileCleanerTestCase.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileCleanerTestCase.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/test/java/org/apache/commons/io/FileCleanerTestCase.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/FileCleanerTestCase.java",
                "Fix Javadoc. src/test/java/org/apache/commons/io/FileCleanerTestCase.java"
            ]
        },
        "src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java": {
            "message": [
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                "IO-511: After a few unit tests, a few newly created directories not cleaned completely. Thanks to Ahmet Celik. This also closes #13 from GitHub.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1750250 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                "Static imports come first. src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                "Remove trailing white spaces on all lines. src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                "Replace static TemporaryFolders with instances ones, so that tests are truly independent. src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                "[IO-684] Add force version of PathUtils.delete() APIs and friends.\n\n- Add PathUtils.delete(Path, DeleteOption...).\n- Add PathUtils.deleteDirectory(Path, DeleteOption...).\n- Add PathUtils.deleteFile(Path, DeleteOption...).\n- Add PathUtils.setReadOnly(Path, boolean, LinkOption...).\n- Add CleaningPathVisitor.CleaningPathVisitor(PathCounters,\nDeleteOption[], String...).\n- Add DeletingPathVisitor.DeletingPathVisitor(PathCounters,\nDeleteOption[], String...).\n\nSince the NIO APIs in Files class are parameterized with interfaces\nimplemented by enums (e.g. StandardCopyOption implements CopyOption),\nthe new PathUtils APIs here similarly work with a new enum called\nStandardDeleteOption that implements a new DeleteOption interface. This\nallow the API signature to remain stable while additional features can\nbe provided by new enums or adding values to StandardDeleteOption. src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                "Assert that the test set up worked. src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                "Restore old test. src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                "Add comment. src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                "Reuse IOExceptionList. src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                "Remove trailing whitespace. src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                "Minor improvement: (#176)\n\n* Add Final\r\n* Unused import\r\n* Unnecessary semicolon src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                "Adjust Linux test. src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                "Adjust Linux test. src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                "Sort test members. src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java"
            ]
        },
        "src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java": {
            "message": [
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                "Use blocks.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1308108 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                "Trailing spaces\nThese are the worst offenders; a few still remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471765 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                "Make JavaDoc tool happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1680650 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                "IO-511: After a few unit tests, a few newly created directories not cleaned completely. Thanks to Ahmet Celik. This also closes #13 from GitHub.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1750250 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                "replace usage of deprecated IOUtils#closeQuietly with try-with-resources src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                "Fix Javadoc typos (closes #30) src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                "Static imports come first. src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                "Remove unnecessary casts. src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                "Replace static TemporaryFolders with instances ones, so that tests are truly independent. src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                "Rename test package. src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                "[IO-676] Add isFileNewer() and isFileOlder() methods that support the Java 8 Date/Time API. (#124)\n\n* Add isFileOlder methods that support the Java 8 Date/Time API.\r\n\r\n* Add isFileNewer methods that support the Java 8 Date/Time API.\r\n\r\n* Apply Javadoc comment changes suggested in PR comment.\r\n\r\n* Use Objects.requireNonNull() in the isFileNewer() and isFileOlder() methods.\r\n\r\n* Use ChronoLocalDate, ChronoLocalDateTime and ChronoZonedDateTime instead of LocalDate, LocalDateTime and ZonedDateTime to support other date/time formats such as JapaneseDate.\r\n\r\n* Add 'since' tags.\r\n\r\n* Set Instant to the current zone ID before doing the timestamp comparison. src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                "Don't use \"m_\" prefix for instance variables. src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                "Add and use FileUtils.lastModified[Unchecked](File) to workaround\nhttps://bugs.openjdk.java.net/browse/JDK-8177809. src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                "Remove trailing whitespace. src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                "Replace construction of FileInputStream and FileOutputStream objects with Files NIO APIs. (#221) src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                "Add and use PathUtils.isNewer(Path, ChronoZonedDateTime, LinkOption...)\nfor more precision.\n\n- Add and use PathUtils.isNewer(Path, Path) for more precision.\n- Add and use FileUtils.isNewer(File, FileTime) for more precision.\n- Tailer uses more precise file time checks. src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                "Sort test members. src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java"
            ]
        },
        "src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java": {
            "message": [
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Simplify and avoid boxing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302017 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java",
                "IO-299  getPrefixLength returns null if filename has leading slashes\n        Javadoc: add examples to show correct behaviour; add unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1470636 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Trailing spaces\nThese are the worst offenders; a few still remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471765 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java",
                "IO-484 Fix with testcase\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1694464 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java",
                "IO-484 Added filtering to getPath and getPrefix\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1694480 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java",
                "IO-484 Changed solution to always throw exception\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1702170 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java",
                "[IO-483] FilenameUtils.getPrefixLength now works correctly for unix files/folder that are in the root folder and start with colons src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java",
                "replace usage of deprecated IOUtils#closeQuietly with try-with-resources src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Replace custom temporary folder management with JUnit's TemporaryFolder.\nThis will allow Maven to run tests concurrently. src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Remove unnecessary casts. src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Remove setUp and tearDown methods that are no longer necessary after the switch to the TemporaryFolder rule. src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Consistently use the final modifier with local variables. src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java",
                "[IO-553] Add\norg.apache.commons.io.FilenameUtils.isIllegalWindowsFileName(char). src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java",
                "[IO-555] Recasting this issue away from a new method in FilenameUtils to\na solution to convert Strings to legal files names with the new enum\nFileSystem. src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java",
                "PR: IO-567\n\nThrow an IllegalArgumentException in FilenameUtils.getExtension(String)\nfor ADS names. src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java",
                "PR: IO-567\n\nThrow an IllegalArgumentException in FilenameUtils.getExtension(String)\nfor ADS names. src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Fix param names 'filename' -> 'fileName' in code and Javadocs. src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java",
                "IO-559 verify hostname part of suspected UNC paths in FileNameUtils src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java",
                "improve test coverage for IP address parsing code src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java",
                "[IO-580] Update org.apache.commons.io.FilenameUtils.isExtension(String,\nString[]) to use var args. src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Use final. src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Unused import src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Rename test package. src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Make `FilenameUtils.equals()` not throw an exception (#154)\n\n* Improve exception thrown by FilenameUtils.equals()\r\n\r\n* Remove unused import\r\n\r\n* Don't throw exception src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java",
                "[IO-600] Fix getPrefixLength method for Linux filename (#179)\n\n* IO-600: fix getPrefixLength method for Linux filename\r\n\r\n* IO-600: fix javadoc src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Remove unused exceptions. src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Use varargs. src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java",
                "IO-556: Protecting against regression. src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Simplify Assertions (#234) src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java",
                "IO-585: Sanitize double slash after prefix (#79)\n\nWhen a double slash immediately followed a prefix\r\nsuch as \"C:\\\\\" we would fail to merge the adjoining slashes.\r\nThis change ensures that slashes of these type are merged. src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Replace construction of FileInputStream and FileOutputStream objects with Files NIO APIs. (#221) src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Remove \"line\" in-line comments. src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java",
                "IO-746: dropping unnecessary casts and conversions (#267)\n\nSigned-off-by: Davide Angelocola <davide.angelocola@gmail.com> src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java",
                "[IO-727] FilenameUtils directoryContains() should handle files with the\nsame prefix #217.\n\nApply a modified PR #217 from trungPa to resolve conflicts. src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java",
                "Sort test members. src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java"
            ]
        },
        "src/test/java/org/apache/commons/io/HexDumpTest.java": {
            "message": [
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/HexDumpTest.java",
                "Drop $Date$ SVN variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302050 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/HexDumpTest.java",
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/HexDumpTest.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/HexDumpTest.java",
                "Make JavaDoc tool happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1680650 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/HexDumpTest.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/HexDumpTest.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/HexDumpTest.java",
                "Static imports come first. src/test/java/org/apache/commons/io/HexDumpTest.java",
                "Remove Subversion's \"@version $Id$\". src/test/java/org/apache/commons/io/HexDumpTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/HexDumpTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/HexDumpTest.java",
                "Simplify copying arrays. src/test/java/org/apache/commons/io/HexDumpTest.java",
                "Migrate from JUnit 4 to 5\n\nException cleanups in tests. src/test/java/org/apache/commons/io/HexDumpTest.java",
                "Use Objects.requireNonNull()\n\nUpdate Javadoc for existing calls. src/test/java/org/apache/commons/io/HexDumpTest.java",
                "Deprecate HexDump#EOL in favor of System#lineSeparator()\n\nJavadoc; format tweaks. src/test/java/org/apache/commons/io/HexDumpTest.java",
                "Organize test imports src/test/java/org/apache/commons/io/HexDumpTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/IOCaseTestCase.java": {
            "message": [
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOCaseTestCase.java",
                "Simplify and avoid boxing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302017 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOCaseTestCase.java",
                "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOCaseTestCase.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOCaseTestCase.java",
                "Trailing spaces\nThese are the worst offenders; a few still remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471765 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOCaseTestCase.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOCaseTestCase.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/test/java/org/apache/commons/io/IOCaseTestCase.java",
                "Static imports come first. src/test/java/org/apache/commons/io/IOCaseTestCase.java",
                "remove TemporaryFolder Rule from test classes that do not use it src/test/java/org/apache/commons/io/IOCaseTestCase.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/IOCaseTestCase.java",
                "Fix possible NPEs in some file filters when paths have no parent or no\nelements. src/test/java/org/apache/commons/io/IOCaseTestCase.java",
                "Remove unused exceptions. src/test/java/org/apache/commons/io/IOCaseTestCase.java",
                "Remove \"line\" in-line comments. src/test/java/org/apache/commons/io/IOCaseTestCase.java",
                "Sort test members. src/test/java/org/apache/commons/io/IOCaseTestCase.java"
            ]
        },
        "src/test/java/org/apache/commons/io/IOExceptionWithCauseTestCase.java": {
            "message": [
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOExceptionWithCauseTestCase.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOExceptionWithCauseTestCase.java",
                "IO-462 IOExceptionWithCause no longer needed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642799 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOExceptionWithCauseTestCase.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOExceptionWithCauseTestCase.java",
                "remove unused imports src/test/java/org/apache/commons/io/IOExceptionWithCauseTestCase.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/test/java/org/apache/commons/io/IOExceptionWithCauseTestCase.java",
                "Static imports come first. src/test/java/org/apache/commons/io/IOExceptionWithCauseTestCase.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/IOExceptionWithCauseTestCase.java"
            ]
        },
        "src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java": {
            "message": [
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "[IO-318] Add Charset sister APIs to method that take a String charset name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307397 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "[IO-353] Add API IOUtils.copy(InputStream, OutputStream, int).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1402280 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "Suppress warnings for streams deliberately left unclosed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1441231 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "Suppress deprecation warnings for code that tests the deprecated methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1470207 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "Trailing spaces\nThese are the worst offenders; a few still remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471765 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "Make JavaDoc tool happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1680650 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "Language level code changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686260 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "Static imports come first. src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "Remove unnecessary casts. src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "remove TemporaryFolder Rule from test classes that do not use it src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "IOUtilsCopyTestCase: remove unused import statement src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "[IO-594] IOUtils copy methods with java.lang.Appendable as the target. src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "Fix compilation error. Build on more JDKs. src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "Fix broken build (#73)\n\nSeveral things were broken with the build. This fixes build failures and\r\nmakes the build pass again on all Java versions tested on Travis CI.\r\n\r\n1. The test started to fail after the changes made in b5990be. This is\r\n   because after changing the type of writer from Appendable to NullWriter\r\n   the wrong overload of copy would be used:\r\n\r\n    copy(Reader, Writer) instead of copy(Reader, Appendable)\r\n\r\n  This change just forces the right overload at the call site.\r\n\r\n2. Replace tabs with spaces\r\n3. Add missing package-info file\r\n4. Fix NPE during javadoc generation\r\n\r\n  Commons parent 46 shipped with maven-javadoc-plugin 3.0.0 which was\r\n  affected by https://issues.apache.org/jira/browse/MJAVADOC-517.\r\n  This upgrades the build to commons parent 47, which includes\r\n  maven-javadoc-plugin 3.0.1.\r\n\r\n5. Fix invalid javadoc links\r\n6. Fix problem with Javadoc tool reporting import of unnamed modules src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "[IO-630] Deprecate\n`org.apache.commons.io.output.NullOutputStream.NullOutputStream()` in\nfavor of `org.apache.commons.io.output.NullOutputStream.NULL_OUTPUT_STREAM`. src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "Rename test package. src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "Rename test classes from \"Yell\" to \"Throw\" prefix. src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "Allow null input IOUtils.copyLarge(InputStream, OutputStream, byte[]) to\nact as a noop and return 0 bytes copied count. src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "Minor improvement: (#177)\n\n* Unnecessary conversion to String\r\n* Add final\r\n* Use Standard Charset object\r\n* Redundant 'close()' src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "[IO-690] IOUtils.toByteArray(null) no longer throws a\nNullPointerException. src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "Remove unused exceptions. src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "Remove dead comments. Javadoc. src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "Add IOUtils.copy(URL, File) and copy(URL, OutputStream). src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "Use final. Remove trailing whitepace. src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "Simplify Assertions (#234) src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "Add NullOutputStream.INSTANCE and deprecate NULL_OUTPUT_STREAM. src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "IO-746: dropping unnecessary casts and conversions (#267)\n\nSigned-off-by: Davide Angelocola <davide.angelocola@gmail.com> src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java"
            ]
        },
        "src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java": {
            "message": [
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java",
                "[IO-318] Add Charset sister APIs to method that take a String charset name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307397 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java",
                "Suppress warnings for streams deliberately left unclosed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1441247 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java",
                "Suppress deprecation warnings for code that tests the deprecated methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1470207 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java",
                "Trailing spaces\nThese are the worst offenders; a few still remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471765 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java",
                "Language level code changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686260 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java",
                "Static imports come first. src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java",
                "Remove unnecessary casts. src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java",
                "remove TemporaryFolder Rule from test classes that do not use it src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java",
                "Rename test package. src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java",
                "Rename test classes from \"Yell\" to \"Throw\" prefix. src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java",
                "Deprecate IOUtils.LINE_SEPARATOR in favor of Java 7's\nSystem.lineSeparator().\n\n- Remove unused imports.\n- Fix compiler warnings by using try-with-resources.\n- Document empty block.\n- Remove checked exceptions from test methods that do not throw them. src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java",
                "Minor improvement: (#177)\n\n* Unnecessary conversion to String\r\n* Add final\r\n* Use Standard Charset object\r\n* Redundant 'close()' src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java",
                "Remove dead comments. src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java",
                "Simplify Assertions (#234) src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java",
                "- Simplify array declarations.\n- Javadoc.\n- Use try-with-resources. src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java",
                "Remove \"line\" in-line comments. src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java",
                "Sort test members. src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java": {
            "message": [
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java",
                "Ensure stream is closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1441248 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java",
                "Trailing spaces\nThese are the worst offenders; a few still remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471765 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java",
                "Make JavaDoc tool happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1680650 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java",
                "Static imports come first. src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java",
                "Clean up tests. Javadocs. src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java",
                "[IO-630] Deprecate\n`org.apache.commons.io.output.NullOutputStream.NullOutputStream()` in\nfavor of `org.apache.commons.io.output.NullOutputStream.NULL_OUTPUT_STREAM`. src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java",
                "Add IOUtils.consume(InputStream). src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java",
                "Deprecate IOUtils.LINE_SEPARATOR in favor of Java 7's\nSystem.lineSeparator().\n\n- Remove unused imports.\n- Fix compiler warnings by using try-with-resources.\n- Document empty block.\n- Remove checked exceptions from test methods that do not throw them. src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java",
                "Make public and reuse IOUtils.EMPTY_BYTE_ARRAY. src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java",
                "Add StringInputStream. src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java",
                "Organize imports. src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java",
                "Migrate from JUnit 4 to 5\n\nException cleanups in tests. src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java": {
            "message": [
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                "Format fix.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1297669 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                "Trailing spaces\nThese are the worst offenders; a few still remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471765 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                "Ensure streams are closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1695021 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                "[IO-515] Allow Specifying Initial Buffer Size of\nDeferredFileOutputStream. Redo submitted patch. src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                "Fix Javadoc typos (closes #30) src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                "Use try-with-resources and format to 120 line length. src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                "Remove trailing whitespace. src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                "Remove trailing white spaces. Use final. src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                "Fix Typos in JavaDoc, Comments and Tests (#201)\n\n* Fixed incorrect/missing JavaDoc.\r\n\r\n* Fixed misc. typos in comments and tests.\r\n\r\n* Fixed typos in exception messages. src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                "IO-651 Add DeferredFileOutputStream.getInputStream() (#206)\n\nAdd DeferredFileOutputStream.getInputStream() for efficient retrieval of OutputSteam data.\r\n\r\nCo-authored-by: kare1634 <KaRe1634@IncorporatedMail.com> src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                "[IO-651] Add DeferredFileOutputStream.toInputStream() #206.\n\n- Update @since tag.\n- Sort members. src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                "Simplify Assertions (#234) src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                "Replace construction of FileInputStream and FileOutputStream objects with Files NIO APIs. (#221) src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                "Organize imports. src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                "Migrate from JUnit 4 to 5\n\nException cleanups in tests. src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                "Use Objects.requireNonNull()\n\nJavadoc. Reuse own API. src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/testtools/YellOnCloseInputStream.java": {
            "message": [
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/testtools/YellOnCloseInputStream.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/testtools/YellOnCloseInputStream.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/testtools/YellOnCloseInputStream.java",
                "Static imports come first. src/test/java/org/apache/commons/io/testtools/YellOnCloseInputStream.java",
                "[IO-612] Add class TeeReader. PR from Rob Spoor but modified. src/test/java/org/apache/commons/io/testtools/YellOnCloseInputStream.java",
                "Better exception messages. src/test/java/org/apache/commons/io/testtools/YellOnCloseInputStream.java"
            ]
        },
        "src/test/java/org/apache/commons/io/testtools/YellOnFlushAndCloseOutputStream.java": {
            "message": [
                "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1296937 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/testtools/YellOnFlushAndCloseOutputStream.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/testtools/YellOnFlushAndCloseOutputStream.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/testtools/YellOnFlushAndCloseOutputStream.java",
                "Static imports come first. src/test/java/org/apache/commons/io/testtools/YellOnFlushAndCloseOutputStream.java",
                "Slightly better internal names. src/test/java/org/apache/commons/io/testtools/YellOnFlushAndCloseOutputStream.java",
                "Better exception messages. src/test/java/org/apache/commons/io/testtools/YellOnFlushAndCloseOutputStream.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/testtools/YellOnFlushAndCloseOutputStream.java",
                "Javadoc standardize \"behaviour\" -> \"behavior\". src/test/java/org/apache/commons/io/testtools/YellOnFlushAndCloseOutputStream.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java": {
            "message": [
                "Javadoc, Checkstyle. More precise throw clause in private method.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1299815 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java",
                "Fix occasional test failure - should always return 0 for read length == 0\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1300238 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java",
                "Missing @since 2.2 markers; standardise format\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304044 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java",
                "IO-312 CharSequenceInputStream(CharSequence s, Charset charset, int bufferSize) ignores bufferSize\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304055 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java",
                "Replace magic number with private constant BUFFER_SIZE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415698 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java",
                "Replace magic number with private constant NO_MARK.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415700 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java",
                "Replace magic number with private constant EOS (End Of Stream).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415701 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java",
                "Slightly better parameter name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415703 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java",
                "No need to ignore warning here\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1470347 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java",
                "IO-356 Fix infinite loop; check that buffer size is large enough to hold any character in the charset\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1470351 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java",
                "IO-356 Fix failures in testIO_356_Loop_UTF16 and testIO_356_Loop_UTF8\nReset the byte buffer and the encoder together\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1470353 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java",
                "Should use long variable to return a long!\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1470625 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java",
                "IO-379   CharSequenceInputStream - add tests for available()\n         Fix code so it really does reflect a minimum available.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1470725 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java",
                "IO-356 CharSequenceInputStream#reset() behaves incorrectly in case when buffer size is not dividable by data size.\n       Fix code so skip relates to the encoded bytes; reset now re-encodes the data up to the point of the mark\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471209 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java",
                "Trailing spaces\nThese are the worst offenders; others remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471767 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java",
                "Unused import\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471787 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java",
                "<action issue=\"IO-437\" dev=\"ggregory\" type=\"add\">\n  Make IOUtils.EOF public and reuse it in various classes.\n</action>\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1586350 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java",
                "Fixed all checkstyle errors and a findbugs error\n\nFindbugs error was:\norg.apache.commons.io.output.DeferredFileOutputStream#thresholdReached\npossible file handle leak upon exception\n\nAlso contains fix for IO-446, submitted by Jeffrey Barrus\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686747 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java",
                "Statement unnecessarily nested within else clause.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1737902 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java",
                "Comment empty block. src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java",
                "Use Objects.requireNonNull() instead of custom check. src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java",
                "[IO-669] Fix code smells; fix typos (#115)\n\n* fix code smells\r\n\r\n* fix typos\r\n\r\n* l to L\r\n\r\n* use Arrays.fill\r\n\r\n* revert deleting boxing src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java",
                "Remove redundant calls to super(). src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java",
                "Javadoc. Close HTML tags. Use paragraph tags. src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java",
                "Sort members. src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java",
                "[IO-638] Infinite loop in CharSequenceInputStream.read for 4-byte\ncharacters with UTF-8 and 3-byte buffer.\n\n[IO-716] ReaderInputStream enter infinite loop for too small buffer\nsizes.\n\nUse CharsetEncoder#maxBytesPerChar() * 2 the min. src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java",
                "Javadoc.\n\nBetter internal names.\nFormat tweaks. src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java",
                "CharSequenceInputStream maps null Charset and Charset name to the\nplatform default instead of throwing a NullPointerException. src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java",
                "Add final and remove useless parentheses. src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java": {
            "message": [
                "A bit more debug to help pin down occasional Gump failures\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1300209 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "Fix occasional test failure - should always return 0 for read length == 0\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1300238 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "Add code coverage for markSupported().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1300283 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "IO-356 CharSequenceInputStream#reset() behaves incorrectly in case when buffer size is not dividable by data size\nAdd test case showing the issue\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1406222 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "IO-356 CharSequenceInputStream#reset() behaves incorrectly in case when buffer size is not dividable by data size\nExtend the test case\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1406237 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415656 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "Redo some test to use all required charsets. This revealed likely bugs in new @Ignore tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415694 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "Format // comment.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415711 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "Sanity checks.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415714 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "Better names and prepare to test multiple charsets.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415731 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "IO-356: add more tests, this is more broken than I thought... @Ignore on all failing tests for now...\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415735 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "Not all charsets support encoding; fix up ignored test so it no longer fails\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1470288 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "Looks like COMPOUND_TEXT_Encoder may be buggy?\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1470293 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "IO-356 Fix infinite loop; check that buffer size is large enough to hold any character in the charset\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1470351 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "Ensure incorrect skips are detected\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1470354 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "Document broken test\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1470355 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "Document another broken test method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1470356 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "No need for these helper methods to be public\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1470357 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "No longer fails\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1470358 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "Another working test\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1470360 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "Document broken tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1470361 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "IO-379   CharSequenceInputStream - add tests for available()\n         Fix code so it really does reflect a minimum available.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1470725 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "Another instance of a broken Charset?\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1470746 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "Check we skipped the correct number\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471185 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "IO-356 CharSequenceInputStream#reset() behaves incorrectly in case when buffer size is not dividable by data size.\n       Fix code so skip relates to the encoded bytes; reset now re-encodes the data up to the point of the mark\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471209 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "Trailing spaces\nThese are the worst offenders; a few still remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471765 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "exclude variation of the sun.nio.cs.ext.COMPOUND_TEXT_Encorder charset name when testing stream availability and skipping.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1535373 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "exclude variation of the sun.nio.cs.ext.COMPOUND_TEXT_Encorder charset name when testing stream availability and skipping.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1535374 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "Output name of charset being asserted on\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718946 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "Added exclude for legacy charcsets that do not support french characters (relevant on IBM JDK)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1720890 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "Added Shift_JIS to list of oddbal character sets\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1721566 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "Static imports come first. src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "Use final for parameters. src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "Consistently use the final modifier with local variables. src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "Clean up tests. Javadocs. src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "No need to initialize to default value. src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "Use final. src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "Simplify Assertions (#234) src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "- Simplify array declarations.\n- Javadoc.\n- Use try-with-resources. src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "Reuse own API. src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "[IO-638] Infinite loop in CharSequenceInputStream.read for 4-byte\ncharacters with UTF-8 and 3-byte buffer.\n\n[IO-716] ReaderInputStream enter infinite loop for too small buffer\nsizes.\n\nUse CharsetEncoder#maxBytesPerChar() * 2 the min. src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "Use try-with-resources. src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "CharSequenceInputStream maps null Charset and Charset name to the\nplatform default instead of throwing a NullPointerException. src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "Sort members. src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "Reuse StandardCharsets src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/CharSequenceReader.java": {
            "message": [
                "Add check for negative offset\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1300370 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/CharSequenceReader.java",
                "Drop $Date$ SVN variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302050 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/CharSequenceReader.java",
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/CharSequenceReader.java",
                "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/CharSequenceReader.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/CharSequenceReader.java",
                "Replace \"<code>null</code>\" with \"{@code null}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307459 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/CharSequenceReader.java",
                "Replace \"<code>true</code>\" with \"{@code true}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307461 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/CharSequenceReader.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/CharSequenceReader.java",
                "<action issue=\"IO-437\" dev=\"ggregory\" type=\"add\">\n  Make IOUtils.EOF public and reuse it in various classes.\n</action>\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1586350 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/CharSequenceReader.java",
                "+= generated serialVersionUID\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642757 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/CharSequenceReader.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/input/CharSequenceReader.java",
                "Fix Javadoc typos (closes #30) src/main/java/org/apache/commons/io/input/CharSequenceReader.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/input/CharSequenceReader.java",
                "Don't need to nest else clause. Refactor magic numbers into constants. src/main/java/org/apache/commons/io/input/CharSequenceReader.java",
                "Use getChars method for String, StringBuilder and StringBuffer in CharSequenceReader.read(char[], int, int) (#90) src/main/java/org/apache/commons/io/input/CharSequenceReader.java",
                "Use final. src/main/java/org/apache/commons/io/input/CharSequenceReader.java",
                "Use Objects.requireNonNull() instead of custom check. src/main/java/org/apache/commons/io/input/CharSequenceReader.java",
                "Support sub sequences in CharSequenceReader (#91)\n\n* Added support for sub sequences in CharSequenceReader\r\n\r\n* Added missing Javadoc. Added entry to changes.xml.\r\n\r\n* Added missing @since tags.\r\n\r\n* [IO-619] Fixed issues reported in merge request #91\r\n\r\n* [IO-619] Use assertThrows instead of try-fail-catch\r\n\r\n* [IO-619] Fixed issues reported in merge request #91 src/main/java/org/apache/commons/io/input/CharSequenceReader.java",
                "CharSequenceReader.skip should return 0 instead of EOF on stream end (#123) src/main/java/org/apache/commons/io/input/CharSequenceReader.java",
                "Implemented CharSequenceReader.ready (#122) src/main/java/org/apache/commons/io/input/CharSequenceReader.java",
                "Remove trailing white spaces. Use final. src/main/java/org/apache/commons/io/input/CharSequenceReader.java",
                "Sort members. src/main/java/org/apache/commons/io/input/CharSequenceReader.java",
                "Use longer lines src/main/java/org/apache/commons/io/input/CharSequenceReader.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java": {
            "message": [
                "Convert test to JUnit4\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1300371 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java",
                "Drop $Date$ SVN variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302050 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java",
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java",
                "Ensure stream is closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1441248 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java",
                "Make JavaDoc tool happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1680650 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java",
                "Clean up tests. Javadocs. src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java",
                "Use getChars method for String, StringBuilder and StringBuffer in CharSequenceReader.read(char[], int, int) (#90) src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java",
                "Support sub sequences in CharSequenceReader (#91)\n\n* Added support for sub sequences in CharSequenceReader\r\n\r\n* Added missing Javadoc. Added entry to changes.xml.\r\n\r\n* Added missing @since tags.\r\n\r\n* [IO-619] Fixed issues reported in merge request #91\r\n\r\n* [IO-619] Use assertThrows instead of try-fail-catch\r\n\r\n* [IO-619] Fixed issues reported in merge request #91 src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java",
                "CharSequenceReader.skip should return 0 instead of EOF on stream end (#123) src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java",
                "Implemented CharSequenceReader.ready (#122) src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java",
                "Fix sonarlint warnings src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java",
                "Remove trailing white spaces. Use final. src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java",
                "Move test fixtures to package specific location. src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java",
                "Prevent NullPointerException in ReversedLinesFileReader constructors\n#117. src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java": {
            "message": [
                "Simplify and avoid boxing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302017 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                "[IO-352] Spelling fixes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1401522 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                "JUnit 3 -> 4: replace import of junit.framework.Assert with org.junit.Assert.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1437523 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                "Trailing spaces\nThese are the worst offenders; a few still remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471765 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                "Make JavaDoc tool happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1680650 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                "Language level code changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686260 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                "Fix Javadoc typos from https://github.com/apache/commons-io/pull/10.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1739188 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                "Let JUnit handle the exceptions src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                "Static imports come first. src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                "Consistently use the final modifier with local variables. src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                "Remove redundant calls to super(). src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                "- Simplify array declarations.\n- Javadoc.\n- Use try-with-resources. src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                "Remove \"line\" in-line comments. src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                "Sort test members. src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                "Migrate from JUnit 4 to 5\n\nException cleanups in tests. src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java"
            ]
        },
        "src/test/java/org/apache/commons/io/FileDeleteStrategyTestCase.java": {
            "message": [
                "Simplify and avoid boxing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302017 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileDeleteStrategyTestCase.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileDeleteStrategyTestCase.java",
                "Trailing spaces\nThese are the worst offenders; a few still remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471765 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileDeleteStrategyTestCase.java",
                "Language level code changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686260 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileDeleteStrategyTestCase.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileDeleteStrategyTestCase.java",
                "IO-511: After a few unit tests, a few newly created directories not cleaned completely. Thanks to Ahmet Celik. This also closes #13 from GitHub.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1750250 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileDeleteStrategyTestCase.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/test/java/org/apache/commons/io/FileDeleteStrategyTestCase.java",
                "replace usage of deprecated IOUtils#closeQuietly with try-with-resources src/test/java/org/apache/commons/io/FileDeleteStrategyTestCase.java",
                "Replace custom temporary folder management with JUnit's TemporaryFolder.\nThis will allow Maven to run tests concurrently. src/test/java/org/apache/commons/io/FileDeleteStrategyTestCase.java",
                "Remove unnecessary casts. src/test/java/org/apache/commons/io/FileDeleteStrategyTestCase.java",
                "Remove setUp and tearDown methods that are no longer necessary after the switch to the TemporaryFolder rule. src/test/java/org/apache/commons/io/FileDeleteStrategyTestCase.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/FileDeleteStrategyTestCase.java",
                "Rename test package. src/test/java/org/apache/commons/io/FileDeleteStrategyTestCase.java",
                "Replace construction of FileInputStream and FileOutputStream objects with Files NIO APIs. (#221) src/test/java/org/apache/commons/io/FileDeleteStrategyTestCase.java",
                "Remove \"line\" in-line comments. src/test/java/org/apache/commons/io/FileDeleteStrategyTestCase.java",
                "Sort test members. src/test/java/org/apache/commons/io/FileDeleteStrategyTestCase.java"
            ]
        },
        "src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java": {
            "message": [
                "Simplify and avoid boxing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302017 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java",
                "Drop $Date$ SVN variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302050 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java",
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java",
                "[IO-318] Add Charset sister APIs to method that take a String charset name. LockableFileWriterTest.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307431 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java",
                "Fix deprecation warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1470205 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java",
                "Trailing spaces\nThese are the worst offenders; a few still remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471765 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java",
                "Fix unavoidable deprecations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642759 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java",
                "IO-511: After a few unit tests, a few newly created directories not cleaned completely. Thanks to Ahmet Celik. This also closes #13 from GitHub.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1750250 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java",
                "replace usage of deprecated Charsets constants with StandardCharsets constants src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java",
                "fix some warnings in tests src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java",
                "Replace custom temporary folder management with JUnit's TemporaryFolder.\nThis will allow Maven to run tests concurrently. Clean up imports. src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java",
                "Remove setUp and tearDown methods that are no longer necessary after the switch to the TemporaryFolder rule. src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java",
                "[IO-669] Fix code smells; fix typos (#115)\n\n* fix code smells\r\n\r\n* fix typos\r\n\r\n* l to L\r\n\r\n* use Arrays.fill\r\n\r\n* revert deleting boxing src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java",
                "Remove \"line\" in-line comments. src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java",
                "Use assertThrows() in tests instead of custom try/catch blocks. src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java",
                "Checkstyle and fix test sources.\n\n- Move Checkstyle configuration from root folder to src/conf.\n- Remove unused imports.\n- Remove trailing whitespace.\n- Adjust line lengths.\n- No tabs.\n- Use final. src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java",
                "Remove unused exceptions from test method signatures src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java",
                "Reuse StandardCharsets src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java",
                "Reuse own code src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/comparator/AbstractFileComparator.java": {
            "message": [
                "Drop $Date$ SVN variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302050 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/AbstractFileComparator.java",
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/AbstractFileComparator.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/AbstractFileComparator.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/AbstractFileComparator.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/comparator/AbstractFileComparator.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/comparator/AbstractFileComparator.java",
                "Javadoc cleanups. src/main/java/org/apache/commons/io/comparator/AbstractFileComparator.java",
                "Minor improvements: (#233)\n\n* Use Method reference\r\n* Use List.sort()\r\n* Change Explicit with <>\r\n* Simplify conditional expression src/main/java/org/apache/commons/io/comparator/AbstractFileComparator.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/comparator/AbstractFileComparator.java",
                "Javadoc. src/main/java/org/apache/commons/io/comparator/AbstractFileComparator.java"
            ]
        },
        "src/main/java/org/apache/commons/io/comparator/CompositeFileComparator.java": {
            "message": [
                "Drop $Date$ SVN variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302050 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/CompositeFileComparator.java",
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/CompositeFileComparator.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/CompositeFileComparator.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/CompositeFileComparator.java",
                "[IO-343] org.apache.commons.io.comparator Javadoc is inconsistent with real code.\nFix Javadoc to agree with code\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1469107 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/CompositeFileComparator.java",
                "+= generated serialVersionUID\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642757 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/CompositeFileComparator.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/CompositeFileComparator.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/comparator/CompositeFileComparator.java",
                "Add missing '@Override' annotations. src/main/java/org/apache/commons/io/comparator/CompositeFileComparator.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/comparator/CompositeFileComparator.java",
                "Performance Enhancement: Call toArray with Zero Array Size (closes #65)\n\ntoArray should, at least since Java 7, be used with new T[0] instead of size, since it is \"faster, safer, and contractually cleaner\" (https://shipilev.net/blog/2016/arrays-wisdom-ancients/#_conclusion) src/main/java/org/apache/commons/io/comparator/CompositeFileComparator.java",
                "No need to allocate empty Comparator arrays over and over. src/main/java/org/apache/commons/io/comparator/CompositeFileComparator.java",
                "- Simplify array declarations.\n- Javadoc.\n- Use try-with-resources. src/main/java/org/apache/commons/io/comparator/CompositeFileComparator.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/comparator/CompositeFileComparator.java",
                "Simplify copying arrays. src/main/java/org/apache/commons/io/comparator/CompositeFileComparator.java",
                "Use forEach() src/main/java/org/apache/commons/io/comparator/CompositeFileComparator.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/main/java/org/apache/commons/io/comparator/CompositeFileComparator.java",
                "Internal refactoring src/main/java/org/apache/commons/io/comparator/CompositeFileComparator.java"
            ]
        },
        "src/main/java/org/apache/commons/io/comparator/DefaultFileComparator.java": {
            "message": [
                "Drop $Date$ SVN variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302050 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/DefaultFileComparator.java",
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/DefaultFileComparator.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/DefaultFileComparator.java",
                "[IO-343] org.apache.commons.io.comparator Javadoc is inconsistent with real code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1378539 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/DefaultFileComparator.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/DefaultFileComparator.java",
                "[IO-343] org.apache.commons.io.comparator Javadoc is inconsistent with real code.\nRevert r1378539 as it broke binary compatibility\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1469102 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/DefaultFileComparator.java",
                "[IO-343] org.apache.commons.io.comparator Javadoc is inconsistent with real code.\nFix Javadoc to agree with code\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1469107 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/DefaultFileComparator.java",
                "+= generated serialVersionUID\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642757 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/DefaultFileComparator.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/comparator/DefaultFileComparator.java",
                "Add missing '@Override' annotations. src/main/java/org/apache/commons/io/comparator/DefaultFileComparator.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/comparator/DefaultFileComparator.java",
                "Rename internal class from ReverseComparator to ReverseFileComparator. src/main/java/org/apache/commons/io/comparator/DefaultFileComparator.java",
                "Fix Javadoc 17 errors. src/main/java/org/apache/commons/io/comparator/DefaultFileComparator.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/comparator/DefaultFileComparator.java"
            ]
        },
        "src/main/java/org/apache/commons/io/comparator/ExtensionFileComparator.java": {
            "message": [
                "Drop $Date$ SVN variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302050 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/ExtensionFileComparator.java",
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/ExtensionFileComparator.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/ExtensionFileComparator.java",
                "[IO-343] org.apache.commons.io.comparator Javadoc is inconsistent with real code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1378539 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/ExtensionFileComparator.java",
                "[IO-352] Spelling fixes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1401522 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/ExtensionFileComparator.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/ExtensionFileComparator.java",
                "[IO-343] org.apache.commons.io.comparator Javadoc is inconsistent with real code.\nRevert r1378539 as it broke binary compatibility\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1469102 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/ExtensionFileComparator.java",
                "[IO-343] org.apache.commons.io.comparator Javadoc is inconsistent with real code.\nFix Javadoc to agree with code\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1469107 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/ExtensionFileComparator.java",
                "+= generated serialVersionUID\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642757 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/ExtensionFileComparator.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/comparator/ExtensionFileComparator.java",
                "Add missing '@Override' annotations. src/main/java/org/apache/commons/io/comparator/ExtensionFileComparator.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/comparator/ExtensionFileComparator.java",
                "Rename internal class from ReverseComparator to ReverseFileComparator. src/main/java/org/apache/commons/io/comparator/ExtensionFileComparator.java",
                "Fix Javadoc 17 errors. src/main/java/org/apache/commons/io/comparator/ExtensionFileComparator.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/comparator/ExtensionFileComparator.java",
                "Add and use IOCase.value(IOCase, IOCase). src/main/java/org/apache/commons/io/comparator/ExtensionFileComparator.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/main/java/org/apache/commons/io/comparator/ExtensionFileComparator.java"
            ]
        },
        "src/main/java/org/apache/commons/io/comparator/LastModifiedFileComparator.java": {
            "message": [
                "Drop $Date$ SVN variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302050 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/LastModifiedFileComparator.java",
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/LastModifiedFileComparator.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/LastModifiedFileComparator.java",
                "[IO-343] org.apache.commons.io.comparator Javadoc is inconsistent with real code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1378539 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/LastModifiedFileComparator.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/LastModifiedFileComparator.java",
                "[IO-343] org.apache.commons.io.comparator Javadoc is inconsistent with real code.\nRevert r1378539 as it broke binary compatibility\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1469102 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/LastModifiedFileComparator.java",
                "[IO-343] org.apache.commons.io.comparator Javadoc is inconsistent with real code.\nFix Javadoc to agree with code\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1469107 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/LastModifiedFileComparator.java",
                "+= generated serialVersionUID\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642757 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/LastModifiedFileComparator.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/comparator/LastModifiedFileComparator.java",
                "Add missing '@Override' annotations. src/main/java/org/apache/commons/io/comparator/LastModifiedFileComparator.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/comparator/LastModifiedFileComparator.java",
                "Rename internal class from ReverseComparator to ReverseFileComparator. src/main/java/org/apache/commons/io/comparator/LastModifiedFileComparator.java",
                "Javadoc. src/main/java/org/apache/commons/io/comparator/LastModifiedFileComparator.java",
                "Javadoc. src/main/java/org/apache/commons/io/comparator/LastModifiedFileComparator.java",
                "Add and use FileUtils.lastModified[Unchecked](File) to workaround\nhttps://bugs.openjdk.java.net/browse/JDK-8177809. src/main/java/org/apache/commons/io/comparator/LastModifiedFileComparator.java",
                "No need to nest in else. src/main/java/org/apache/commons/io/comparator/LastModifiedFileComparator.java",
                "Fix Javadoc 17 errors. src/main/java/org/apache/commons/io/comparator/LastModifiedFileComparator.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/main/java/org/apache/commons/io/comparator/LastModifiedFileComparator.java"
            ]
        },
        "src/main/java/org/apache/commons/io/comparator/NameFileComparator.java": {
            "message": [
                "Drop $Date$ SVN variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302050 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/NameFileComparator.java",
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/NameFileComparator.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/NameFileComparator.java",
                "[IO-343] org.apache.commons.io.comparator Javadoc is inconsistent with real code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1378539 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/NameFileComparator.java",
                "[IO-352] Spelling fixes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1401522 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/NameFileComparator.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/NameFileComparator.java",
                "[IO-343] org.apache.commons.io.comparator Javadoc is inconsistent with real code.\nRevert r1378539 as it broke binary compatibility\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1469102 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/NameFileComparator.java",
                "[IO-343] org.apache.commons.io.comparator Javadoc is inconsistent with real code.\nFix Javadoc to agree with code\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1469107 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/NameFileComparator.java",
                "+= generated serialVersionUID\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642757 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/NameFileComparator.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/comparator/NameFileComparator.java",
                "Add missing '@Override' annotations. src/main/java/org/apache/commons/io/comparator/NameFileComparator.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/comparator/NameFileComparator.java",
                "Rename internal class from ReverseComparator to ReverseFileComparator. src/main/java/org/apache/commons/io/comparator/NameFileComparator.java",
                "Fix Javadoc 17 errors. src/main/java/org/apache/commons/io/comparator/NameFileComparator.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/comparator/NameFileComparator.java",
                "Add and use IOCase.value(IOCase, IOCase). src/main/java/org/apache/commons/io/comparator/NameFileComparator.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/main/java/org/apache/commons/io/comparator/NameFileComparator.java"
            ]
        },
        "src/main/java/org/apache/commons/io/comparator/PathFileComparator.java": {
            "message": [
                "Drop $Date$ SVN variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302050 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/PathFileComparator.java",
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/PathFileComparator.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/PathFileComparator.java",
                "[IO-343] org.apache.commons.io.comparator Javadoc is inconsistent with real code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1378539 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/PathFileComparator.java",
                "[IO-352] Spelling fixes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1401522 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/PathFileComparator.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/PathFileComparator.java",
                "[IO-343] org.apache.commons.io.comparator Javadoc is inconsistent with real code.\nRevert r1378539 as it broke binary compatibility\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1469102 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/PathFileComparator.java",
                "[IO-343] org.apache.commons.io.comparator Javadoc is inconsistent with real code.\nFix Javadoc to agree with code\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1469107 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/PathFileComparator.java",
                "+= generated serialVersionUID\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642757 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/PathFileComparator.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/comparator/PathFileComparator.java",
                "Add missing '@Override' annotations. src/main/java/org/apache/commons/io/comparator/PathFileComparator.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/comparator/PathFileComparator.java",
                "Rename internal class from ReverseComparator to ReverseFileComparator. src/main/java/org/apache/commons/io/comparator/PathFileComparator.java",
                "Fix Javadoc 17 errors. src/main/java/org/apache/commons/io/comparator/PathFileComparator.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/comparator/PathFileComparator.java",
                "Add and use IOCase.value(IOCase, IOCase). src/main/java/org/apache/commons/io/comparator/PathFileComparator.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/main/java/org/apache/commons/io/comparator/PathFileComparator.java"
            ]
        },
        "src/main/java/org/apache/commons/io/comparator/SizeFileComparator.java": {
            "message": [
                "Drop $Date$ SVN variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302050 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/SizeFileComparator.java",
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/SizeFileComparator.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/SizeFileComparator.java",
                "Replace \"<code>true</code>\" with \"{@code true}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307461 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/SizeFileComparator.java",
                "Replace \"<code>false</code>\" with \"{@code false}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307462 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/SizeFileComparator.java",
                "[IO-343] org.apache.commons.io.comparator Javadoc is inconsistent with real code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1378539 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/SizeFileComparator.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/SizeFileComparator.java",
                "[IO-343] org.apache.commons.io.comparator Javadoc is inconsistent with real code.\nRevert r1378539 as it broke binary compatibility\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1469102 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/SizeFileComparator.java",
                "[IO-343] org.apache.commons.io.comparator Javadoc is inconsistent with real code.\nFix Javadoc to agree with code\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1469107 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/SizeFileComparator.java",
                "+= generated serialVersionUID\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642757 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/comparator/SizeFileComparator.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/comparator/SizeFileComparator.java",
                "Add missing '@Override' annotations. src/main/java/org/apache/commons/io/comparator/SizeFileComparator.java",
                "Fix Javadoc typos (closes #30) src/main/java/org/apache/commons/io/comparator/SizeFileComparator.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/comparator/SizeFileComparator.java",
                "Make some simplifications (#121) src/main/java/org/apache/commons/io/comparator/SizeFileComparator.java",
                "Rename internal class from ReverseComparator to ReverseFileComparator. src/main/java/org/apache/commons/io/comparator/SizeFileComparator.java",
                "Minor improvement: (#176)\n\n* Add Final\r\n* Unused import\r\n* Unnecessary semicolon src/main/java/org/apache/commons/io/comparator/SizeFileComparator.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/comparator/SizeFileComparator.java",
                "No need to nest in else. src/main/java/org/apache/commons/io/comparator/SizeFileComparator.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/comparator/SizeFileComparator.java"
            ]
        },
        "src/main/java/org/apache/commons/io/output/StringBuilderWriter.java": {
            "message": [
                "Drop $Date$ SVN variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302050 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/StringBuilderWriter.java",
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/StringBuilderWriter.java",
                "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/StringBuilderWriter.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/StringBuilderWriter.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/StringBuilderWriter.java",
                "+= generated serialVersionUID\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642757 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/StringBuilderWriter.java",
                "Comment empty block.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1676053 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/StringBuilderWriter.java",
                "Clearify behavior of StringBuilderWriter constructor for null inputs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1681000 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/StringBuilderWriter.java",
                "Javadoc: Use the active voice.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1722253 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/StringBuilderWriter.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/output/StringBuilderWriter.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/output/StringBuilderWriter.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/output/StringBuilderWriter.java",
                "Javadoc: Close HTML tags. src/main/java/org/apache/commons/io/output/StringBuilderWriter.java",
                "Sort members. src/main/java/org/apache/commons/io/output/StringBuilderWriter.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java": {
            "message": [
                "Drop $Date$ SVN variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302050 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                "Ensure stream is closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1441253 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                "Static imports come first. src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                "Remove unused exceptions. Use try-with-resoruces.\nClean ups. Formatting. src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                "Ensure closed src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                "Minor improvement: (#176)\n\n* Add Final\r\n* Unused import\r\n* Unnecessary semicolon src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                "Simplify Assertions (#234) src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                "Add StringInputStream. src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java": {
            "message": [
                "Drop $Date$ SVN variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302050 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java",
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java",
                "Ensure stream is closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1441253 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java",
                "Make JavaDoc tool happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1680650 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java",
                "Replace custom temporary folder management with JUnit's TemporaryFolder.\nThis will allow Maven to run tests concurrently. Clean up imports. src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java",
                "Use try-with-resources in tests and more.\n\n- Don't nest if you do not have to.\n- Document empty blocks.\n- Only run FileFilterTestCase#testCanExecute() on Windows to fix Jenkins\nbuild. src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java",
                "Remove Subversion's \"@version $Id$\". src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java",
                "[IO-630] Deprecate\n`org.apache.commons.io.output.NullOutputStream.NullOutputStream()` in\nfavor of `org.apache.commons.io.output.NullOutputStream.NULL_OUTPUT_STREAM`. src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java",
                "Add IOUtils.consume(InputStream). src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java",
                "Deprecate IOUtils.LINE_SEPARATOR in favor of Java 7's\nSystem.lineSeparator().\n\n- Remove unused imports.\n- Fix compiler warnings by using try-with-resources.\n- Document empty block.\n- Remove checked exceptions from test methods that do not throw them. src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java",
                "Add NullOutputStream.INSTANCE and deprecate NULL_OUTPUT_STREAM. src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java",
                "Migrate from JUnit 4 to 5\n\nException cleanups in tests. src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/output/NullOutputStreamTest.java": {
            "message": [
                "Drop $Date$ SVN variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302050 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/NullOutputStreamTest.java",
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/NullOutputStreamTest.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/NullOutputStreamTest.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/NullOutputStreamTest.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/test/java/org/apache/commons/io/output/NullOutputStreamTest.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/output/NullOutputStreamTest.java",
                "Replace custom temporary folder management with JUnit's TemporaryFolder.\nThis will allow Maven to run tests concurrently. Clean up imports. src/test/java/org/apache/commons/io/output/NullOutputStreamTest.java",
                "Use try-with-resources in tests and more.\n\n- Don't nest if you do not have to.\n- Document empty blocks.\n- Only run FileFilterTestCase#testCanExecute() on Windows to fix Jenkins\nbuild. src/test/java/org/apache/commons/io/output/NullOutputStreamTest.java",
                "Minor clean ups. src/test/java/org/apache/commons/io/output/NullOutputStreamTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/output/NullOutputStreamTest.java",
                "[IO-630] Deprecate\n`org.apache.commons.io.output.NullOutputStream.NullOutputStream()` in\nfavor of `org.apache.commons.io.output.NullOutputStream.NULL_OUTPUT_STREAM`. src/test/java/org/apache/commons/io/output/NullOutputStreamTest.java",
                "Add NullOutputStream.INSTANCE and deprecate NULL_OUTPUT_STREAM. src/test/java/org/apache/commons/io/output/NullOutputStreamTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/output/NullOutputStreamTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/DirectoryWalker.java": {
            "message": [
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/DirectoryWalker.java",
                "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/DirectoryWalker.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/DirectoryWalker.java",
                "Replace \"<code>null</code>\" with \"{@code null}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307459 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/DirectoryWalker.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/DirectoryWalker.java",
                "Trailing spaces\nThese are the worst offenders; others remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471767 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/DirectoryWalker.java",
                "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1515386 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/DirectoryWalker.java",
                "Fixed all checkstyle errors and a findbugs error\n\nFindbugs error was:\norg.apache.commons.io.output.DeferredFileOutputStream#thresholdReached\npossible file handle leak upon exception\n\nAlso contains fix for IO-446, submitted by Jeffrey Barrus\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686747 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/DirectoryWalker.java",
                "IO-494 Mismatch return type in api docs of class DirectoryWalker\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1723627 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/DirectoryWalker.java",
                "Fix Javadoc typos (closes #30) src/main/java/org/apache/commons/io/DirectoryWalker.java",
                "Javadoc: Make Javadoc HTML 5 compliant on Java 11. src/main/java/org/apache/commons/io/DirectoryWalker.java",
                "Fix broken build (#73)\n\nSeveral things were broken with the build. This fixes build failures and\r\nmakes the build pass again on all Java versions tested on Travis CI.\r\n\r\n1. The test started to fail after the changes made in b5990be. This is\r\n   because after changing the type of writer from Appendable to NullWriter\r\n   the wrong overload of copy would be used:\r\n\r\n    copy(Reader, Writer) instead of copy(Reader, Appendable)\r\n\r\n  This change just forces the right overload at the call site.\r\n\r\n2. Replace tabs with spaces\r\n3. Add missing package-info file\r\n4. Fix NPE during javadoc generation\r\n\r\n  Commons parent 46 shipped with maven-javadoc-plugin 3.0.0 which was\r\n  affected by https://issues.apache.org/jira/browse/MJAVADOC-517.\r\n  This upgrades the build to commons parent 47, which includes\r\n  maven-javadoc-plugin 3.0.1.\r\n\r\n5. Fix invalid javadoc links\r\n6. Fix problem with Javadoc tool reporting import of unnamed modules src/main/java/org/apache/commons/io/DirectoryWalker.java",
                "Javadoc. Remove Subversion's \"@version $Id$\". src/main/java/org/apache/commons/io/DirectoryWalker.java",
                "Fix \"unexpected heading\" Javadoc errors on Java 13+. src/main/java/org/apache/commons/io/DirectoryWalker.java",
                "Add missing Javadoc tag. src/main/java/org/apache/commons/io/DirectoryWalker.java",
                "Use varargs in a few more places. src/main/java/org/apache/commons/io/DirectoryWalker.java",
                "Whitespace. src/main/java/org/apache/commons/io/DirectoryWalker.java",
                "Javadoc standardize \"behaviour\" -> \"behavior\". src/main/java/org/apache/commons/io/DirectoryWalker.java",
                "Use Objects.requireNonNull() instead of custom check. src/main/java/org/apache/commons/io/DirectoryWalker.java",
                "Javadoc Remove extra blank line. src/main/java/org/apache/commons/io/DirectoryWalker.java",
                "Simplify filter tree construction by reusing new APIs.\n\nMinor formatting.\nMinor refactoring of private method for fluency. src/main/java/org/apache/commons/io/DirectoryWalker.java",
                "Deprecate DirectoryWalker. src/main/java/org/apache/commons/io/DirectoryWalker.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/DirectoryWalker.java",
                "Remove unused exceptions and trailing whitespace. src/main/java/org/apache/commons/io/DirectoryWalker.java",
                "Add '@SuppressWarnings(\"unused\") // Possibly thrown from subclasses' to\neliminate compiler warnings. src/main/java/org/apache/commons/io/DirectoryWalker.java",
                "Remove \"line\" in-line comments. src/main/java/org/apache/commons/io/DirectoryWalker.java",
                "Javadoc nits. src/main/java/org/apache/commons/io/DirectoryWalker.java",
                "Sort members. src/main/java/org/apache/commons/io/DirectoryWalker.java",
                "Javadoc: Replace @code with @link src/main/java/org/apache/commons/io/DirectoryWalker.java"
            ]
        },
        "src/main/java/org/apache/commons/io/filefilter/CanReadFileFilter.java": {
            "message": [
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/CanReadFileFilter.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/CanReadFileFilter.java",
                "Replace \"<code>true</code>\" with \"{@code true}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307461 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/CanReadFileFilter.java",
                "Replace \"<code>false</code>\" with \"{@code false}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307462 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/CanReadFileFilter.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/CanReadFileFilter.java",
                "Trailing spaces\nThese are the worst offenders; others remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471767 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/CanReadFileFilter.java",
                "+= generated serialVersionUID\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642757 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/CanReadFileFilter.java",
                "Fix Javadoc typos (closes #30) src/main/java/org/apache/commons/io/filefilter/CanReadFileFilter.java",
                "Remove Subversion's \"@version $Id$\". src/main/java/org/apache/commons/io/filefilter/CanReadFileFilter.java",
                "Sort members. src/main/java/org/apache/commons/io/filefilter/CanReadFileFilter.java",
                "Let org.apache.commons.io.filefilter classes work with\njava.nio.file.Files.walk* APIs.\n\nAlso: AccumulatorPathVisitor does not track directories properly. src/main/java/org/apache/commons/io/filefilter/CanReadFileFilter.java",
                "Move new PathFilter interface to the file package, annotate it with\n@FunctionalInterface, and add a BasicFileAttributes parameter to accept\nattributes from java.nio.file.FileVisitor. src/main/java/org/apache/commons/io/filefilter/CanReadFileFilter.java",
                "Use negate() instead of not() to match predicate terminology. src/main/java/org/apache/commons/io/filefilter/CanReadFileFilter.java",
                "[IO-597] FileUtils.iterateFiles runs out of memory when executed for a\ndirectory with large number of files.\n\nRe-implement FileUtils' iterateFiles(), iterateFilesAndDirs(),\nlistFiles(), listFilesAndDirs() to use NIO file tree walking instead of\nIO file listings to avoid memory consumption issues on large file trees. src/main/java/org/apache/commons/io/filefilter/CanReadFileFilter.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/filefilter/CanReadFileFilter.java",
                "Fix FileFilterTestCase use case for symbolic links on non-Windows OS.\n\n- Make SymbolicLinkFileFilter configurable:\n-- Add SymbolicLinkFileFilter.SymbolicLinkFileFilter(FileVisitResult,\nFileVisitResult)\n-- Add AbstractFileFilter(FileVisitResult, FileVisitResult)\n- CountingPathVisitor should not follow links by default to properly\ncount from FileUtils. src/main/java/org/apache/commons/io/filefilter/CanReadFileFilter.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/filefilter/CanReadFileFilter.java",
                "Javadoc: Replace @code with @link src/main/java/org/apache/commons/io/filefilter/CanReadFileFilter.java"
            ]
        },
        "src/main/java/org/apache/commons/io/filefilter/CanWriteFileFilter.java": {
            "message": [
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/CanWriteFileFilter.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/CanWriteFileFilter.java",
                "Replace \"<code>true</code>\" with \"{@code true}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307461 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/CanWriteFileFilter.java",
                "Replace \"<code>false</code>\" with \"{@code false}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307462 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/CanWriteFileFilter.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/CanWriteFileFilter.java",
                "Trailing spaces\nThese are the worst offenders; others remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471767 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/CanWriteFileFilter.java",
                "+= generated serialVersionUID\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642757 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/CanWriteFileFilter.java",
                "Fix Javadoc typos (closes #30) src/main/java/org/apache/commons/io/filefilter/CanWriteFileFilter.java",
                "Remove Subversion's \"@version $Id$\". src/main/java/org/apache/commons/io/filefilter/CanWriteFileFilter.java",
                "Sort members. src/main/java/org/apache/commons/io/filefilter/CanWriteFileFilter.java",
                "Let org.apache.commons.io.filefilter classes work with\njava.nio.file.Files.walk* APIs.\n\nAlso: AccumulatorPathVisitor does not track directories properly. src/main/java/org/apache/commons/io/filefilter/CanWriteFileFilter.java",
                "Move new PathFilter interface to the file package, annotate it with\n@FunctionalInterface, and add a BasicFileAttributes parameter to accept\nattributes from java.nio.file.FileVisitor. src/main/java/org/apache/commons/io/filefilter/CanWriteFileFilter.java",
                "Use negate() instead of not() to match predicate terminology. src/main/java/org/apache/commons/io/filefilter/CanWriteFileFilter.java",
                "[IO-597] FileUtils.iterateFiles runs out of memory when executed for a\ndirectory with large number of files.\n\nRe-implement FileUtils' iterateFiles(), iterateFilesAndDirs(),\nlistFiles(), listFilesAndDirs() to use NIO file tree walking instead of\nIO file listings to avoid memory consumption issues on large file trees. src/main/java/org/apache/commons/io/filefilter/CanWriteFileFilter.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/filefilter/CanWriteFileFilter.java",
                "Fix FileFilterTestCase use case for symbolic links on non-Windows OS.\n\n- Make SymbolicLinkFileFilter configurable:\n-- Add SymbolicLinkFileFilter.SymbolicLinkFileFilter(FileVisitResult,\nFileVisitResult)\n-- Add AbstractFileFilter(FileVisitResult, FileVisitResult)\n- CountingPathVisitor should not follow links by default to properly\ncount from FileUtils. src/main/java/org/apache/commons/io/filefilter/CanWriteFileFilter.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/filefilter/CanWriteFileFilter.java",
                "Javadoc: Replace @code with @link src/main/java/org/apache/commons/io/filefilter/CanWriteFileFilter.java"
            ]
        },
        "src/main/java/org/apache/commons/io/filefilter/EmptyFileFilter.java": {
            "message": [
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/EmptyFileFilter.java",
                "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/EmptyFileFilter.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/EmptyFileFilter.java",
                "Replace \"<code>true</code>\" with \"{@code true}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307461 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/EmptyFileFilter.java",
                "Replace \"<code>false</code>\" with \"{@code false}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307462 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/EmptyFileFilter.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/EmptyFileFilter.java",
                "Trailing spaces\nThese are the worst offenders; others remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471767 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/EmptyFileFilter.java",
                "+= generated serialVersionUID\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642757 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/EmptyFileFilter.java",
                "Fix Javadoc typos (closes #30) src/main/java/org/apache/commons/io/filefilter/EmptyFileFilter.java",
                "Don't need to nest else clause. Refactor magic numbers into constants. src/main/java/org/apache/commons/io/filefilter/EmptyFileFilter.java",
                "Remove Subversion's \"@version $Id$\". src/main/java/org/apache/commons/io/filefilter/EmptyFileFilter.java",
                "Sort members. src/main/java/org/apache/commons/io/filefilter/EmptyFileFilter.java",
                "Let org.apache.commons.io.filefilter classes work with\njava.nio.file.Files.walk* APIs.\n\nAlso: AccumulatorPathVisitor does not track directories properly. src/main/java/org/apache/commons/io/filefilter/EmptyFileFilter.java",
                "Move new PathFilter interface to the file package, annotate it with\n@FunctionalInterface, and add a BasicFileAttributes parameter to accept\nattributes from java.nio.file.FileVisitor. src/main/java/org/apache/commons/io/filefilter/EmptyFileFilter.java",
                "Use negate() instead of not() to match predicate terminology. src/main/java/org/apache/commons/io/filefilter/EmptyFileFilter.java",
                "[IO-597] FileUtils.iterateFiles runs out of memory when executed for a\ndirectory with large number of files.\n\nRe-implement FileUtils' iterateFiles(), iterateFilesAndDirs(),\nlistFiles(), listFilesAndDirs() to use NIO file tree walking instead of\nIO file listings to avoid memory consumption issues on large file trees. src/main/java/org/apache/commons/io/filefilter/EmptyFileFilter.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/filefilter/EmptyFileFilter.java",
                "Reuse IOUtils.length(Object[]). src/main/java/org/apache/commons/io/filefilter/EmptyFileFilter.java",
                "Fix FileFilterTestCase use case for symbolic links on non-Windows OS.\n\n- Make SymbolicLinkFileFilter configurable:\n-- Add SymbolicLinkFileFilter.SymbolicLinkFileFilter(FileVisitResult,\nFileVisitResult)\n-- Add AbstractFileFilter(FileVisitResult, FileVisitResult)\n- CountingPathVisitor should not follow links by default to properly\ncount from FileUtils. src/main/java/org/apache/commons/io/filefilter/EmptyFileFilter.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/filefilter/EmptyFileFilter.java",
                "Javadoc: Replace @code with @link src/main/java/org/apache/commons/io/filefilter/EmptyFileFilter.java",
                "Internal refactoring src/main/java/org/apache/commons/io/filefilter/EmptyFileFilter.java"
            ]
        },
        "src/main/java/org/apache/commons/io/filefilter/HiddenFileFilter.java": {
            "message": [
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/HiddenFileFilter.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/HiddenFileFilter.java",
                "Replace \"<code>true</code>\" with \"{@code true}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307461 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/HiddenFileFilter.java",
                "Replace \"<code>false</code>\" with \"{@code false}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307462 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/HiddenFileFilter.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/HiddenFileFilter.java",
                "Trailing spaces\nThese are the worst offenders; others remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471767 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/HiddenFileFilter.java",
                "+= generated serialVersionUID\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642757 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/filefilter/HiddenFileFilter.java",
                "Fix Javadoc typos (closes #30) src/main/java/org/apache/commons/io/filefilter/HiddenFileFilter.java",
                "Remove Subversion's \"@version $Id$\". src/main/java/org/apache/commons/io/filefilter/HiddenFileFilter.java",
                "Sort members. src/main/java/org/apache/commons/io/filefilter/HiddenFileFilter.java",
                "Let org.apache.commons.io.filefilter classes work with\njava.nio.file.Files.walk* APIs.\n\nAlso: AccumulatorPathVisitor does not track directories properly. src/main/java/org/apache/commons/io/filefilter/HiddenFileFilter.java",
                "Move new PathFilter interface to the file package, annotate it with\n@FunctionalInterface, and add a BasicFileAttributes parameter to accept\nattributes from java.nio.file.FileVisitor. src/main/java/org/apache/commons/io/filefilter/HiddenFileFilter.java",
                "Use negate() instead of not() to match predicate terminology. src/main/java/org/apache/commons/io/filefilter/HiddenFileFilter.java",
                "[IO-597] FileUtils.iterateFiles runs out of memory when executed for a\ndirectory with large number of files.\n\nRe-implement FileUtils' iterateFiles(), iterateFilesAndDirs(),\nlistFiles(), listFilesAndDirs() to use NIO file tree walking instead of\nIO file listings to avoid memory consumption issues on large file trees. src/main/java/org/apache/commons/io/filefilter/HiddenFileFilter.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/filefilter/HiddenFileFilter.java",
                "Fix FileFilterTestCase use case for symbolic links on non-Windows OS.\n\n- Make SymbolicLinkFileFilter configurable:\n-- Add SymbolicLinkFileFilter.SymbolicLinkFileFilter(FileVisitResult,\nFileVisitResult)\n-- Add AbstractFileFilter(FileVisitResult, FileVisitResult)\n- CountingPathVisitor should not follow links by default to properly\ncount from FileUtils. src/main/java/org/apache/commons/io/filefilter/HiddenFileFilter.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/filefilter/HiddenFileFilter.java",
                "Javadoc: Replace @code with @link src/main/java/org/apache/commons/io/filefilter/HiddenFileFilter.java",
                "Internal refactoring src/main/java/org/apache/commons/io/filefilter/HiddenFileFilter.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/NullInputStream.java": {
            "message": [
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/NullInputStream.java",
                "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/NullInputStream.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/NullInputStream.java",
                "Replace \"<code>true</code>\" with \"{@code true}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307461 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/NullInputStream.java",
                "Replace \"<code>false</code>\" with \"{@code false}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307462 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/NullInputStream.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/NullInputStream.java",
                "[IO-424] Javadoc fixes, mostly to appease 1.8.0. Patch from Ville Skytt\u00e4\". 3 files in the patch did not applied cleanly, so they are not in the commit.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1563227 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/NullInputStream.java",
                "<action issue=\"IO-437\" dev=\"ggregory\" type=\"add\">\n  Make IOUtils.EOF public and reuse it in various classes.\n</action>\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1586350 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/NullInputStream.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/input/NullInputStream.java",
                "Remove Subversion's \"@version $Id$\". src/main/java/org/apache/commons/io/input/NullInputStream.java",
                "[IO-612] Add class TeeReader. PR from Rob Spoor but modified. src/main/java/org/apache/commons/io/input/NullInputStream.java",
                "Remove trailing white spaces on all lines src/main/java/org/apache/commons/io/input/NullInputStream.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/input/NullInputStream.java",
                "Add and use a package-private factory for UnsupportedOperationException\nto provide exception messages with a consistent formatting. src/main/java/org/apache/commons/io/input/NullInputStream.java",
                "Javadoc. Close HTML tags. Use paragraph tags. src/main/java/org/apache/commons/io/input/NullInputStream.java",
                "No need to nest in else. src/main/java/org/apache/commons/io/input/NullInputStream.java",
                "Add NullInputStream.INSTANCE.\n\nAdd @SuppressWarnings(\"resource\"). src/main/java/org/apache/commons/io/input/NullInputStream.java",
                "Sort members. src/main/java/org/apache/commons/io/input/NullInputStream.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/main/java/org/apache/commons/io/input/NullInputStream.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/NullReader.java": {
            "message": [
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/NullReader.java",
                "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/NullReader.java",
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/NullReader.java",
                "Replace \"<code>true</code>\" with \"{@code true}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307461 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/NullReader.java",
                "Replace \"<code>false</code>\" with \"{@code false}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307462 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/NullReader.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/NullReader.java",
                "[IO-424] Javadoc fixes, mostly to appease 1.8.0. Patch from Ville Skytt\u00e4\". 3 files in the patch did not applied cleanly, so they are not in the commit.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1563227 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/NullReader.java",
                "<action issue=\"IO-437\" dev=\"ggregory\" type=\"add\">\n  Make IOUtils.EOF public and reuse it in various classes.\n</action>\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1586350 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/NullReader.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/input/NullReader.java",
                "Remove Subversion's \"@version $Id$\". src/main/java/org/apache/commons/io/input/NullReader.java",
                "Javadoc. src/main/java/org/apache/commons/io/input/NullReader.java",
                "[IO-612] Add class TeeReader. PR from Rob Spoor but modified. src/main/java/org/apache/commons/io/input/NullReader.java",
                "Remove trailing white spaces on all lines src/main/java/org/apache/commons/io/input/NullReader.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/input/NullReader.java",
                "Add and use a package-private factory for UnsupportedOperationException\nto provide exception messages with a consistent formatting. src/main/java/org/apache/commons/io/input/NullReader.java",
                "Add NullReader.INSTANCE. src/main/java/org/apache/commons/io/input/NullReader.java",
                "Sort members. src/main/java/org/apache/commons/io/input/NullReader.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/main/java/org/apache/commons/io/input/NullReader.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/ProxyReaderTest.java": {
            "message": [
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ProxyReaderTest.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ProxyReaderTest.java",
                "Ensure stream is closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1441248 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ProxyReaderTest.java",
                "Make JavaDoc tool happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1680650 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ProxyReaderTest.java",
                "Language level code changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686260 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ProxyReaderTest.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ProxyReaderTest.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/test/java/org/apache/commons/io/input/ProxyReaderTest.java",
                "Let JUnit handle the exceptions src/test/java/org/apache/commons/io/input/ProxyReaderTest.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/input/ProxyReaderTest.java",
                "Static imports come first. src/test/java/org/apache/commons/io/input/ProxyReaderTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/input/ProxyReaderTest.java",
                "Use try-with-resources. Javadoc. src/test/java/org/apache/commons/io/input/ProxyReaderTest.java",
                "Javadoc.\n\nSort members. src/test/java/org/apache/commons/io/input/ProxyReaderTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/input/ProxyReaderTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/output/NullWriterTest.java": {
            "message": [
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/NullWriterTest.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/NullWriterTest.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/NullWriterTest.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/test/java/org/apache/commons/io/output/NullWriterTest.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/output/NullWriterTest.java",
                "Use try-with-resources in tests and more.\n\n- Don't nest if you do not have to.\n- Document empty blocks.\n- Only run FileFilterTestCase#testCanExecute() on Windows to fix Jenkins\nbuild. src/test/java/org/apache/commons/io/output/NullWriterTest.java",
                "Use constant instead of new instance. src/test/java/org/apache/commons/io/output/NullWriterTest.java",
                "Javadoc tweak. src/test/java/org/apache/commons/io/output/NullWriterTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/output/NullWriterTest.java",
                "- Simplify array declarations.\n- Javadoc.\n- Use try-with-resources. src/test/java/org/apache/commons/io/output/NullWriterTest.java",
                "Add NullWriter.INSTANCE and deprecate NULL_WRITER. src/test/java/org/apache/commons/io/output/NullWriterTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/output/NullWriterTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/output/ProxyWriterTest.java": {
            "message": [
                "Use $Id$ instead of the mix of $Date$ and others.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302056 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/ProxyWriterTest.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/ProxyWriterTest.java",
                "Ensure stream is closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1441248 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/ProxyWriterTest.java",
                "Trailing spaces\nThese are the worst offenders; a few still remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471765 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/ProxyWriterTest.java",
                "Make JavaDoc tool happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1680650 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/ProxyWriterTest.java",
                "Language level code changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686260 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/ProxyWriterTest.java",
                "Improved test coverage\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1687859 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/ProxyWriterTest.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/ProxyWriterTest.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/test/java/org/apache/commons/io/output/ProxyWriterTest.java",
                "Let JUnit handle the exceptions src/test/java/org/apache/commons/io/output/ProxyWriterTest.java",
                "Replace custom temporary folder management with JUnit's TemporaryFolder.\nThis will allow Maven to run tests concurrently. Clean up imports. src/test/java/org/apache/commons/io/output/ProxyWriterTest.java",
                "Remove unnecessary casts. src/test/java/org/apache/commons/io/output/ProxyWriterTest.java",
                "Use final for parameters. src/test/java/org/apache/commons/io/output/ProxyWriterTest.java",
                "Consistently use the final modifier with local variables. src/test/java/org/apache/commons/io/output/ProxyWriterTest.java",
                "Use try-with-resources in tests and more.\n\n- Don't nest if you do not have to.\n- Document empty blocks.\n- Only run FileFilterTestCase#testCanExecute() on Windows to fix Jenkins\nbuild. src/test/java/org/apache/commons/io/output/ProxyWriterTest.java",
                "Use constant instead of new instance. src/test/java/org/apache/commons/io/output/ProxyWriterTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/output/ProxyWriterTest.java",
                "Use try-with-resources and format to 120 line length. src/test/java/org/apache/commons/io/output/ProxyWriterTest.java",
                "[IO-669] Fix code smells; fix typos (#115)\n\n* fix code smells\r\n\r\n* fix typos\r\n\r\n* l to L\r\n\r\n* use Arrays.fill\r\n\r\n* revert deleting boxing src/test/java/org/apache/commons/io/output/ProxyWriterTest.java",
                "Minor improvement: (#177)\n\n* Unnecessary conversion to String\r\n* Add final\r\n* Use Standard Charset object\r\n* Redundant 'close()' src/test/java/org/apache/commons/io/output/ProxyWriterTest.java",
                "Add NullWriter.INSTANCE and deprecate NULL_WRITER. src/test/java/org/apache/commons/io/output/ProxyWriterTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/output/ProxyWriterTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/output/ProxyWriterTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/ByteOrderMarkTestCase.java": {
            "message": [
                "Tests that {@link ByteOrderMark#getCharsetName()} can be loaded as a {@link java.nio.charset.Charset} as advertised.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302747 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/ByteOrderMarkTestCase.java",
                "Add missing tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1310395 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/ByteOrderMarkTestCase.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/ByteOrderMarkTestCase.java",
                "Language level code changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686260 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/ByteOrderMarkTestCase.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/ByteOrderMarkTestCase.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/test/java/org/apache/commons/io/ByteOrderMarkTestCase.java",
                "Fix Javadoc typos (closes #30) src/test/java/org/apache/commons/io/ByteOrderMarkTestCase.java",
                "Static imports come first. src/test/java/org/apache/commons/io/ByteOrderMarkTestCase.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/ByteOrderMarkTestCase.java",
                "Tests that we do get a copy. src/test/java/org/apache/commons/io/ByteOrderMarkTestCase.java",
                "Simplify Assertions (#234) src/test/java/org/apache/commons/io/ByteOrderMarkTestCase.java",
                "Minor changes: (#243)\n\n* Remove Unnecessary interface modifier\r\n* Make final var\r\n* Simplify conditions\r\n* Simplify assertions src/test/java/org/apache/commons/io/ByteOrderMarkTestCase.java",
                "Sort test members. src/test/java/org/apache/commons/io/ByteOrderMarkTestCase.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/NullInputStreamTest.java": {
            "message": [
                "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/NullInputStreamTest.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/NullInputStreamTest.java",
                "Ensure stream is closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1441248 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/NullInputStreamTest.java",
                "Trailing spaces\nThese are the worst offenders; a few still remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471765 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/NullInputStreamTest.java",
                "Make JavaDoc tool happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1680650 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/NullInputStreamTest.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/NullInputStreamTest.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/test/java/org/apache/commons/io/input/NullInputStreamTest.java",
                "Static imports come first. src/test/java/org/apache/commons/io/input/NullInputStreamTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/input/NullInputStreamTest.java",
                "[IO-669] Fix code smells; fix typos (#115)\n\n* fix code smells\r\n\r\n* fix typos\r\n\r\n* l to L\r\n\r\n* use Arrays.fill\r\n\r\n* revert deleting boxing src/test/java/org/apache/commons/io/input/NullInputStreamTest.java",
                "Fix sonarlint warnings src/test/java/org/apache/commons/io/input/NullInputStreamTest.java",
                "Add and use a package-private factory for UnsupportedOperationException\nto provide exception messages with a consistent formatting. src/test/java/org/apache/commons/io/input/NullInputStreamTest.java",
                "Fix Typos in JavaDoc, Comments and Tests (#201)\n\n* Fixed incorrect/missing JavaDoc.\r\n\r\n* Fixed misc. typos in comments and tests.\r\n\r\n* Fixed typos in exception messages. src/test/java/org/apache/commons/io/input/NullInputStreamTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/input/NullInputStreamTest.java",
                "Migrate from JUnit 4 to 5\n\nException cleanups in tests. src/test/java/org/apache/commons/io/input/NullInputStreamTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/input/NullInputStreamTest.java",
                "Use try-with-resources src/test/java/org/apache/commons/io/input/NullInputStreamTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/NullReaderTest.java": {
            "message": [
                "Remove noisy and unnecessary parens. Especially painful in return statements: \"return (foo + bar);\" vs. \"return foo + bar;\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1302748 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/NullReaderTest.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/NullReaderTest.java",
                "Ensure stream is closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1441248 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/NullReaderTest.java",
                "Trailing spaces\nThese are the worst offenders; a few still remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471765 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/NullReaderTest.java",
                "Make JavaDoc tool happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1680650 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/NullReaderTest.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/NullReaderTest.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/test/java/org/apache/commons/io/input/NullReaderTest.java",
                "Static imports come first. src/test/java/org/apache/commons/io/input/NullReaderTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/input/NullReaderTest.java",
                "Fix sonarlint warnings src/test/java/org/apache/commons/io/input/NullReaderTest.java",
                "Add and use a package-private factory for UnsupportedOperationException\nto provide exception messages with a consistent formatting. src/test/java/org/apache/commons/io/input/NullReaderTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/input/NullReaderTest.java",
                "Migrate from JUnit 4 to 5\n\nException cleanups in tests. src/test/java/org/apache/commons/io/input/NullReaderTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/input/NullReaderTest.java",
                "Use try-with-resources src/test/java/org/apache/commons/io/input/NullReaderTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/FileExistsException.java": {
            "message": [
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileExistsException.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/FileExistsException.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/FileExistsException.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/FileExistsException.java",
                "Remove redundant calls to super(). src/main/java/org/apache/commons/io/FileExistsException.java",
                "Javadoc nits. src/main/java/org/apache/commons/io/FileExistsException.java",
                "Sort members. src/main/java/org/apache/commons/io/FileExistsException.java"
            ]
        },
        "src/main/java/org/apache/commons/io/TaggedIOException.java": {
            "message": [
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/TaggedIOException.java",
                "Replace \"<code>true</code>\" with \"{@code true}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307461 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/TaggedIOException.java",
                "Replace \"<code>false</code>\" with \"{@code false}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307462 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/TaggedIOException.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/TaggedIOException.java",
                "IO-462 IOExceptionWithCause no longer needed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642799 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/TaggedIOException.java",
                "Restore binary compatibility which has been broken in rev. 1642799.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1681086 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/TaggedIOException.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/TaggedIOException.java",
                "[IO-634] Make getCause synchronized and use a Deque instead of Stack (#64)\n\n* Fix \"Non-synchronized override of synchronized method\".\r\n\r\n* Replace synchronized Stack with unsynchronized Deque in FilenameUtils. src/main/java/org/apache/commons/io/TaggedIOException.java",
                "[IO-669] Fix code smells; fix typos (#115)\n\n* fix code smells\r\n\r\n* fix typos\r\n\r\n* l to L\r\n\r\n* use Arrays.fill\r\n\r\n* revert deleting boxing src/main/java/org/apache/commons/io/TaggedIOException.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/TaggedIOException.java",
                "Sort members. src/main/java/org/apache/commons/io/TaggedIOException.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/AutoCloseInputStream.java": {
            "message": [
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/AutoCloseInputStream.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/AutoCloseInputStream.java",
                "<action issue=\"IO-437\" dev=\"ggregory\" type=\"add\">\n  Make IOUtils.EOF public and reuse it in various classes.\n</action>\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1586350 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/AutoCloseInputStream.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/input/AutoCloseInputStream.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/input/AutoCloseInputStream.java",
                "Resue org.apache.commons.io.input.ClosedInputStream.CLOSED_INPUT_STREAM. src/main/java/org/apache/commons/io/input/AutoCloseInputStream.java",
                "Javadoc. Close HTML tags. Use paragraph tags. src/main/java/org/apache/commons/io/input/AutoCloseInputStream.java",
                "Add ClosedInputStream.INSTANCE and deprecate CLOSED_INPUT_STREAM. src/main/java/org/apache/commons/io/input/AutoCloseInputStream.java",
                "Sort members. src/main/java/org/apache/commons/io/input/AutoCloseInputStream.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/BrokenInputStream.java": {
            "message": [
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/BrokenInputStream.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/BrokenInputStream.java",
                "Overriding synch. method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1441254 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/BrokenInputStream.java",
                "IO-469 Self-supression with try-with-resources\n\nSolution proposed by Grigory Fadeev\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686456 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/BrokenInputStream.java",
                "Revert \"IO-469 Self-supression with try-with-resources\"\n\nThings are not as simple as they might seem\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686460 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/BrokenInputStream.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/input/BrokenInputStream.java",
                "Javadoc. Close HTML tags. Use paragraph tags. src/main/java/org/apache/commons/io/input/BrokenInputStream.java",
                "Add BrokenInputStream.INSTANCE. src/main/java/org/apache/commons/io/input/BrokenInputStream.java",
                "Use final and remove trailing whitespace. src/main/java/org/apache/commons/io/input/BrokenInputStream.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/input/BrokenInputStream.java",
                "Sort members. src/main/java/org/apache/commons/io/input/BrokenInputStream.java",
                "Prevent IllegalArgumentExceptions in BrokenInputStream/Reader/OutputStream/Writer (#278)\n\n* BrokenInputStream/Reader/OutputStream/Writer use a supplier to prevent IllegalArgumentExceptions in try-with-resources\r\n\r\n* Processed feedback from PR src/main/java/org/apache/commons/io/input/BrokenInputStream.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/CloseShieldInputStream.java": {
            "message": [
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/CloseShieldInputStream.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/CloseShieldInputStream.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/input/CloseShieldInputStream.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/input/CloseShieldInputStream.java",
                "[IO-613] Add classes ClosedReader and CloseShieldReader. Closes #84.\nApplied modified patch from Rob Spoor. src/main/java/org/apache/commons/io/input/CloseShieldInputStream.java",
                "Replace CloseShield* constructors with factory methods (#173)\n\n* Replace CloseShield* constructors with factory methods\r\n\r\n* Renamed CloseShield*.dontClose to wrap\r\n\r\n* Changed parameter names and tags as requested src/main/java/org/apache/commons/io/input/CloseShieldInputStream.java",
                "Add factory methods to CloseShieldInputStream, CloseShieldReader,\nCloseShieldOutputStream, CloseShieldWriter, #173.\n\nSort methods: static methods come first.\nFix some Javadocs.\nSome formatting. src/main/java/org/apache/commons/io/input/CloseShieldInputStream.java",
                "Better names. src/main/java/org/apache/commons/io/input/CloseShieldInputStream.java",
                "Add ClosedInputStream.INSTANCE and deprecate CLOSED_INPUT_STREAM. src/main/java/org/apache/commons/io/input/CloseShieldInputStream.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/ClosedInputStream.java": {
            "message": [
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ClosedInputStream.java",
                "Replace \"<code>null</code>\" with \"{@code null}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307459 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ClosedInputStream.java",
                "Trailing spaces\nThese are the worst offenders; others remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471767 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ClosedInputStream.java",
                "<action issue=\"IO-437\" dev=\"ggregory\" type=\"add\">\n  Make IOUtils.EOF public and reuse it in various classes.\n</action>\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1586350 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/ClosedInputStream.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/input/ClosedInputStream.java",
                "Javadoc: Close paragraph tags. src/main/java/org/apache/commons/io/input/ClosedInputStream.java",
                "Add ClosedInputStream.INSTANCE and deprecate CLOSED_INPUT_STREAM. src/main/java/org/apache/commons/io/input/ClosedInputStream.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/input/ClosedInputStream.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/TaggedInputStream.java": {
            "message": [
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/TaggedInputStream.java",
                "Replace \"<code>true</code>\" with \"{@code true}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307461 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/TaggedInputStream.java",
                "Replace \"<code>false</code>\" with \"{@code false}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307462 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/TaggedInputStream.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/TaggedInputStream.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/input/TaggedInputStream.java",
                "Javadoc: Sentences end in a period. src/main/java/org/apache/commons/io/input/TaggedInputStream.java",
                "Javadoc. Close HTML tags. Use paragraph tags. src/main/java/org/apache/commons/io/input/TaggedInputStream.java",
                "Sort members. src/main/java/org/apache/commons/io/input/TaggedInputStream.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/TailerListenerAdapter.java": {
            "message": [
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/TailerListenerAdapter.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/TailerListenerAdapter.java",
                "Fixed all checkstyle errors and a findbugs error\n\nFindbugs error was:\norg.apache.commons.io.output.DeferredFileOutputStream#thresholdReached\npossible file handle leak upon exception\n\nAlso contains fix for IO-446, submitted by Jeffrey Barrus\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686747 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/TailerListenerAdapter.java",
                "@since markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1704426 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/TailerListenerAdapter.java",
                "Removed added method from interface that broke binary compatibility.\n\nClients wishing to use this feature must subclass TailerListenerAdapter until we break compatibility or go java8 minumum.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1714076 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/TailerListenerAdapter.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/input/TailerListenerAdapter.java",
                "Add missing '@Override' annotations. src/main/java/org/apache/commons/io/input/TailerListenerAdapter.java",
                "Comment empty block. Formatting. src/main/java/org/apache/commons/io/input/TailerListenerAdapter.java",
                "Sort members. src/main/java/org/apache/commons/io/input/TailerListenerAdapter.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/TeeInputStream.java": {
            "message": [
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/TeeInputStream.java",
                "Replace \"<code>true</code>\" with \"{@code true}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307461 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/TeeInputStream.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/TeeInputStream.java",
                "<action issue=\"IO-437\" dev=\"ggregory\" type=\"add\">\n  Make IOUtils.EOF public and reuse it in various classes.\n</action>\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1586350 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/TeeInputStream.java",
                "Added the ObservableInputStream, and the MessageDigestCalculatingInputStream.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1750760 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/TeeInputStream.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/input/TeeInputStream.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/input/TeeInputStream.java",
                "Javadoc fixes. src/main/java/org/apache/commons/io/input/TeeInputStream.java",
                "Sort members. src/main/java/org/apache/commons/io/input/TeeInputStream.java"
            ]
        },
        "src/main/java/org/apache/commons/io/monitor/FileAlterationListener.java": {
            "message": [
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FileAlterationListener.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/monitor/FileAlterationListener.java",
                "Remove Subversion's \"@version $Id$\". src/main/java/org/apache/commons/io/monitor/FileAlterationListener.java",
                "Sort members. src/main/java/org/apache/commons/io/monitor/FileAlterationListener.java",
                "Javadoc src/main/java/org/apache/commons/io/monitor/FileAlterationListener.java"
            ]
        },
        "src/main/java/org/apache/commons/io/monitor/FileAlterationListenerAdaptor.java": {
            "message": [
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FileAlterationListenerAdaptor.java",
                "Javadoc\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304062 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/monitor/FileAlterationListenerAdaptor.java",
                "Add missing '@Override' annotations. src/main/java/org/apache/commons/io/monitor/FileAlterationListenerAdaptor.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/monitor/FileAlterationListenerAdaptor.java",
                "Comment empty block. Formatting. src/main/java/org/apache/commons/io/monitor/FileAlterationListenerAdaptor.java",
                "Remove Subversion's \"@version $Id$\". src/main/java/org/apache/commons/io/monitor/FileAlterationListenerAdaptor.java",
                "Sort members. src/main/java/org/apache/commons/io/monitor/FileAlterationListenerAdaptor.java"
            ]
        },
        "src/main/java/org/apache/commons/io/output/BrokenOutputStream.java": {
            "message": [
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/BrokenOutputStream.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/BrokenOutputStream.java",
                "IO-469 Self-supression with try-with-resources\n\nSolution proposed by Grigory Fadeev\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686456 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/BrokenOutputStream.java",
                "Revert \"IO-469 Self-supression with try-with-resources\"\n\nThings are not as simple as they might seem\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686460 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/BrokenOutputStream.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/output/BrokenOutputStream.java",
                "Javadoc: Close HTML tags. src/main/java/org/apache/commons/io/output/BrokenOutputStream.java",
                "Sort members. src/main/java/org/apache/commons/io/output/BrokenOutputStream.java",
                "Prevent IllegalArgumentExceptions in BrokenInputStream/Reader/OutputStream/Writer (#278)\n\n* BrokenInputStream/Reader/OutputStream/Writer use a supplier to prevent IllegalArgumentExceptions in try-with-resources\r\n\r\n* Processed feedback from PR src/main/java/org/apache/commons/io/output/BrokenOutputStream.java"
            ]
        },
        "src/main/java/org/apache/commons/io/output/CloseShieldOutputStream.java": {
            "message": [
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/CloseShieldOutputStream.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/CloseShieldOutputStream.java",
                "Javadoc 8 fix.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1674710 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/CloseShieldOutputStream.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/output/CloseShieldOutputStream.java",
                "Remove Subversion's \"@version $Id$\". src/main/java/org/apache/commons/io/output/CloseShieldOutputStream.java",
                "[IO-617] Add class CloseShieldWriter. #83.\n\n- Applied partial patch from GitHub PR #83 from Rob Spoor which\ncontained duplication from another PR.\n- Reformatted some files.\n- Closes #83. src/main/java/org/apache/commons/io/output/CloseShieldOutputStream.java",
                "Replace CloseShield* constructors with factory methods (#173)\n\n* Replace CloseShield* constructors with factory methods\r\n\r\n* Renamed CloseShield*.dontClose to wrap\r\n\r\n* Changed parameter names and tags as requested src/main/java/org/apache/commons/io/output/CloseShieldOutputStream.java",
                "Add factory methods to CloseShieldInputStream, CloseShieldReader,\nCloseShieldOutputStream, CloseShieldWriter, #173.\n\nSort methods: static methods come first.\nFix some Javadocs.\nSome formatting. src/main/java/org/apache/commons/io/output/CloseShieldOutputStream.java",
                "Better names. src/main/java/org/apache/commons/io/output/CloseShieldOutputStream.java",
                "Add ClosedOutputStream.INSTANCE and deprecate CLOSED_OUTPUT_STREAM. src/main/java/org/apache/commons/io/output/CloseShieldOutputStream.java"
            ]
        },
        "src/main/java/org/apache/commons/io/output/ClosedOutputStream.java": {
            "message": [
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/ClosedOutputStream.java",
                "Replace \"<code>null</code>\" with \"{@code null}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307459 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/ClosedOutputStream.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/ClosedOutputStream.java",
                "Trailing spaces\nThese are the worst offenders; others remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471767 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/ClosedOutputStream.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/output/ClosedOutputStream.java",
                "IO-546: ClosedOutputStream#flush should throw (closes #42) src/main/java/org/apache/commons/io/output/ClosedOutputStream.java",
                "Javadoc. src/main/java/org/apache/commons/io/output/ClosedOutputStream.java",
                "Add ClosedOutputStream.INSTANCE and deprecate CLOSED_OUTPUT_STREAM. src/main/java/org/apache/commons/io/output/ClosedOutputStream.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/output/ClosedOutputStream.java",
                "Sort members. src/main/java/org/apache/commons/io/output/ClosedOutputStream.java"
            ]
        },
        "src/main/java/org/apache/commons/io/output/CountingOutputStream.java": {
            "message": [
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/CountingOutputStream.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/CountingOutputStream.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/output/CountingOutputStream.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/output/CountingOutputStream.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/output/CountingOutputStream.java",
                "Minor Improvement: (#190)\n\n* Add final\r\n* Remove redundant initializer\r\n* simplify conditions src/main/java/org/apache/commons/io/output/CountingOutputStream.java",
                "Javadoc: Close HTML tags. src/main/java/org/apache/commons/io/output/CountingOutputStream.java",
                "Remove \"line\" in-line comments. src/main/java/org/apache/commons/io/output/CountingOutputStream.java",
                "Sort members. src/main/java/org/apache/commons/io/output/CountingOutputStream.java",
                "Fix format nit. src/main/java/org/apache/commons/io/output/CountingOutputStream.java",
                "Fix format nit. src/main/java/org/apache/commons/io/output/CountingOutputStream.java"
            ]
        },
        "src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java": {
            "message": [
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                "Fixed all checkstyle errors and a findbugs error\n\nFindbugs error was:\norg.apache.commons.io.output.DeferredFileOutputStream#thresholdReached\npossible file handle leak upon exception\n\nAlso contains fix for IO-446, submitted by Jeffrey Barrus\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686747 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                "[IO-505] Deprecated of all IOUtils.closeQuietly() methods and use try-with-resources internally.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1742675 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                "Remove Subversion's \"@version $Id$\". src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                "Javadoc: Use \"file name\" instead of \"filename\".\n\nCamel case vars \"filename\" to \"fileName\". src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                "[IO-635] Add org.apache.commons.io.IOUtils.close(Closeable).\n\nReuse own API. src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                "Normalize on 'charsetName' as a parameter name since this is the named\nused in the JRE for Charset.forName(String).\n\n- Use 'charset' instead of 'encoding' Charset parameter names.\n- Fix 1 checkstyle issue. src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                "Use Objects.requireNonNull() instead of custom check. src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                "Use US English spelling. src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                "Normalize spelling of 'Initialize'. src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                "Remove redundant calls to super(). src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                "Javadoc: Sentences end in a period. src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                "Javadoc: Close HTML tags. src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                "No need to nest in else. src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                "- Use final.\n- Simpler boolean tests.\n- Fix test. src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                "Replace construction of FileInputStream and FileOutputStream objects with Files NIO APIs. (#221) src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                "Remove \"line\" in-line comments. src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                "[IO-744] FileWriterWithEncoding for an existing file no longer truncates\nthe file. #251.\n\nThis commit is a much simpler fix than PR 251. The test from the PR is\nthe same, just reformatted. src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                "[IO-744] FileWriterWithEncoding for an existing file no longer truncates\nthe file. #251.\n\nThis commit is a much simpler fix than PR 251. The test from the PR is\nthe same, just reformatted. src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                "A null Charset in FileWriterWithEncoding uses the default Charset. src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                "Javadoc. src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                "Sort members. src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                "[IO-744] FileWriterWithEncoding for an existing file no longer truncates\nthe file. #251.\n\nBring in test from PR #252 and add a fix. src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                "Refactor internals into new methods:\n\n- Add FileUtils.newOutputStream(File, boolean).\n- Add PathUtils.newOutputStream(Path, boolean). src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                "Add Javadoc see tags. src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                "Revert inadvertent change. src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                "Use final and remove trailing whitespace. src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                "IO-756 Update FileWriterWithEncoding to extend ProxyWriter (#296) src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                "Add @SuppressWarnings. src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                "Better local variable name. src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                "Javadoc: Replace @code with @link src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java"
            ]
        },
        "src/main/java/org/apache/commons/io/output/NullWriter.java": {
            "message": [
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/NullWriter.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/NullWriter.java",
                "Trailing spaces\nThese are the worst offenders; others remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471767 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/NullWriter.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/output/NullWriter.java",
                "Javadoc. src/main/java/org/apache/commons/io/output/NullWriter.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/output/NullWriter.java",
                "Add NullWriter.INSTANCE and deprecate NULL_WRITER. src/main/java/org/apache/commons/io/output/NullWriter.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/output/NullWriter.java",
                "Sort members. src/main/java/org/apache/commons/io/output/NullWriter.java",
                "Javadoc: Replace @code with @link src/main/java/org/apache/commons/io/output/NullWriter.java"
            ]
        },
        "src/main/java/org/apache/commons/io/output/TaggedOutputStream.java": {
            "message": [
                "Use \"@since x.y\" instead of \"@since Commons IO x.y\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304052 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/TaggedOutputStream.java",
                "Replace \"<code>true</code>\" with \"{@code true}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307461 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/TaggedOutputStream.java",
                "Replace \"<code>false</code>\" with \"{@code false}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307462 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/TaggedOutputStream.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/TaggedOutputStream.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/output/TaggedOutputStream.java",
                "Javadoc: Sentences end in a period. src/main/java/org/apache/commons/io/output/TaggedOutputStream.java",
                "Javadoc: Close HTML tags. src/main/java/org/apache/commons/io/output/TaggedOutputStream.java",
                "Sort members. src/main/java/org/apache/commons/io/output/TaggedOutputStream.java"
            ]
        },
        "src/main/java/org/apache/commons/io/ThreadMonitor.java": {
            "message": [
                "Replace \"<code>null</code>\" with \"{@code null}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307459 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/ThreadMonitor.java",
                "[IO-352] Spelling fixes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1401522 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/ThreadMonitor.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/ThreadMonitor.java",
                "[IO-424] Javadoc fixes, mostly to appease 1.8.0. Patch from Ville Skytt\u00e4\". 3 files in the patch did not applied cleanly, so they are not in the commit.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1563227 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/ThreadMonitor.java",
                "Added private and test-scoped sleep method that actually sleeps for a guaranteed minimal time\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718945 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/ThreadMonitor.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/main/java/org/apache/commons/io/ThreadMonitor.java",
                "Add missing '@Override' annotations. src/main/java/org/apache/commons/io/ThreadMonitor.java",
                "Fix Javadoc typos (closes #30) src/main/java/org/apache/commons/io/ThreadMonitor.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/ThreadMonitor.java",
                "Use final for parameters. src/main/java/org/apache/commons/io/ThreadMonitor.java",
                "Consistently use the final modifier with local variables. src/main/java/org/apache/commons/io/ThreadMonitor.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/ThreadMonitor.java",
                "Use the scale in the var name. src/main/java/org/apache/commons/io/ThreadMonitor.java",
                "Re-implement package-private class ThreadMonitor timeouts with\njava.time.Duration. src/main/java/org/apache/commons/io/ThreadMonitor.java",
                "Update Javadoc. src/main/java/org/apache/commons/io/ThreadMonitor.java",
                "Javadoc nits. src/main/java/org/apache/commons/io/ThreadMonitor.java",
                "ThreadMonitor.sleep(Duration) ignores nanoseconds. src/main/java/org/apache/commons/io/ThreadMonitor.java",
                "Fix javadoc sleep method. (#273) src/main/java/org/apache/commons/io/ThreadMonitor.java",
                "Format for max line length. src/main/java/org/apache/commons/io/ThreadMonitor.java",
                "Javadoc: End sentences in a period. src/main/java/org/apache/commons/io/ThreadMonitor.java",
                "Inline a single use variable. src/main/java/org/apache/commons/io/ThreadMonitor.java",
                "Javadoc nits. src/main/java/org/apache/commons/io/ThreadMonitor.java",
                "Avoid Code Duplication: Reuse Sleep from ThreadMonitor.\n\n- Redo changes from PR #66 from DaGeRe.\n- Use sleepQuietly. src/main/java/org/apache/commons/io/ThreadMonitor.java",
                "Sort members. src/main/java/org/apache/commons/io/ThreadMonitor.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/main/java/org/apache/commons/io/ThreadMonitor.java"
            ]
        },
        "src/main/java/org/apache/commons/io/Charsets.java": {
            "message": [
                "[IO-318] Add Charset sister APIs to method that take a String charset name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1307568 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/Charsets.java",
                "Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1309644 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/Charsets.java",
                "Fix Checkstyle line length > 120 and organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1311751 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/Charsets.java",
                "<action issue=\"IO-360\" dev=\"ggregory\" type=\"add\">Add API Charsets.requiredCharsets().</action>            \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415693 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/Charsets.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/Charsets.java",
                "[IO-422] Deprecate Charsets Charset constants in favor of Java 7's java.nio.charset.StandardCharsets.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1562881 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/Charsets.java",
                "[IO-424] Javadoc fixes, mostly to appease 1.8.0. Patch from Ville Skytt\u00e4\". 3 files in the patch did not applied cleanly, so they are not in the commit.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1563227 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/Charsets.java",
                "Fixed all checkstyle errors and a findbugs error\n\nFindbugs error was:\norg.apache.commons.io.output.DeferredFileOutputStream#thresholdReached\npossible file handle leak upon exception\n\nAlso contains fix for IO-446, submitted by Jeffrey Barrus\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686747 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/Charsets.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/Charsets.java",
                "Reimplement a la Java 7 with StandardCharsets (fixes compiler warnings.)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1750726 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/Charsets.java",
                "Reimplement \u00e0 la Java 7 with StandardCharsets (fixes compiler warnings.)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1750727 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/Charsets.java",
                "Fixed files in repo with incorrect line endings src/main/java/org/apache/commons/io/Charsets.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/Charsets.java",
                "Remove Subversion's \"@version $Id$\". src/main/java/org/apache/commons/io/Charsets.java",
                "Normalize on 'charsetName' as a parameter name since this is the named\nused in the JRE for Charset.forName(String).\n\n- Use 'charset' instead of 'encoding' Charset parameter names.\n- Fix 1 checkstyle issue. src/main/java/org/apache/commons/io/Charsets.java",
                "Add caching for required charsets (#120)\n\n* Add caching for required charsets src/main/java/org/apache/commons/io/Charsets.java",
                "Better name to reflect that we are populating the map based on the JRE's\nStandardCharsets. src/main/java/org/apache/commons/io/Charsets.java",
                "Remove trailing white spaces. Use final. src/main/java/org/apache/commons/io/Charsets.java",
                "Add unchecked exception to a method signature and Javadoc, preserves BC\nsince it is unchecked. src/main/java/org/apache/commons/io/Charsets.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/Charsets.java",
                "Sort members. src/main/java/org/apache/commons/io/Charsets.java",
                "Add Charsets.toCharset(Charset, Charset).\n\nAdd Charsets.toCharset(String, Charset). src/main/java/org/apache/commons/io/Charsets.java"
            ]
        },
        "src/test/java/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java": {
            "message": [
                "[IO-343] org.apache.commons.io.comparator Javadoc is inconsistent with real code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1378539 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                "[IO-343] org.apache.commons.io.comparator Javadoc is inconsistent with real code.\nRevert r1378539 as it broke binary compatibility\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1469102 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                "fix some warnings in tests src/test/java/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                "Replace custom temporary folder management with JUnit's TemporaryFolder.\nThis will allow Maven to run tests concurrently. src/test/java/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                "Remove setUp and tearDown methods that are no longer necessary after the switch to the TemporaryFolder rule. src/test/java/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                "Rename internal class from ReverseComparator to ReverseFileComparator. src/test/java/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                "Sort test members. src/test/java/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java"
            ]
        },
        "src/test/java/org/apache/commons/io/comparator/DefaultFileComparatorTest.java": {
            "message": [
                "[IO-343] org.apache.commons.io.comparator Javadoc is inconsistent with real code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1378539 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/comparator/DefaultFileComparatorTest.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/comparator/DefaultFileComparatorTest.java",
                "[IO-343] org.apache.commons.io.comparator Javadoc is inconsistent with real code.\nRevert r1378539 as it broke binary compatibility\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1469102 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/comparator/DefaultFileComparatorTest.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/comparator/DefaultFileComparatorTest.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/comparator/DefaultFileComparatorTest.java",
                "Replace custom temporary folder management with JUnit's TemporaryFolder.\nThis will allow Maven to run tests concurrently. src/test/java/org/apache/commons/io/comparator/DefaultFileComparatorTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/comparator/DefaultFileComparatorTest.java",
                "Remove unused exceptions and trailing whitespace. src/test/java/org/apache/commons/io/comparator/DefaultFileComparatorTest.java",
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/comparator/DefaultFileComparatorTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/comparator/DirectoryFileComparatorTest.java": {
            "message": [
                "[IO-343] org.apache.commons.io.comparator Javadoc is inconsistent with real code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1378539 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/comparator/DirectoryFileComparatorTest.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/comparator/DirectoryFileComparatorTest.java",
                "[IO-343] org.apache.commons.io.comparator Javadoc is inconsistent with real code.\nRevert r1378539 as it broke binary compatibility\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1469102 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/comparator/DirectoryFileComparatorTest.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/comparator/DirectoryFileComparatorTest.java",
                "Add missing '@Override' annotations. src/test/java/org/apache/commons/io/comparator/DirectoryFileComparatorTest.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/comparator/DirectoryFileComparatorTest.java",
                "Replace custom temporary folder management with JUnit's TemporaryFolder.\nThis will allow Maven to run tests concurrently. src/test/java/org/apache/commons/io/comparator/DirectoryFileComparatorTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/comparator/DirectoryFileComparatorTest.java",
                "Remove unused exceptions and trailing whitespace. src/test/java/org/apache/commons/io/comparator/DirectoryFileComparatorTest.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/test/java/org/apache/commons/io/comparator/DirectoryFileComparatorTest.java",
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/comparator/DirectoryFileComparatorTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/comparator/ExtensionFileComparatorTest.java": {
            "message": [
                "[IO-343] org.apache.commons.io.comparator Javadoc is inconsistent with real code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1378539 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/comparator/ExtensionFileComparatorTest.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/comparator/ExtensionFileComparatorTest.java",
                "[IO-343] org.apache.commons.io.comparator Javadoc is inconsistent with real code.\nRevert r1378539 as it broke binary compatibility\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1469102 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/comparator/ExtensionFileComparatorTest.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/comparator/ExtensionFileComparatorTest.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/comparator/ExtensionFileComparatorTest.java",
                "Replace custom temporary folder management with JUnit's TemporaryFolder.\nThis will allow Maven to run tests concurrently. src/test/java/org/apache/commons/io/comparator/ExtensionFileComparatorTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/comparator/ExtensionFileComparatorTest.java",
                "Remove unused exceptions and trailing whitespace. src/test/java/org/apache/commons/io/comparator/ExtensionFileComparatorTest.java",
                "Simplify Assertions (#234) src/test/java/org/apache/commons/io/comparator/ExtensionFileComparatorTest.java",
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/comparator/ExtensionFileComparatorTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/comparator/LastModifiedFileComparatorTest.java": {
            "message": [
                "[IO-343] org.apache.commons.io.comparator Javadoc is inconsistent with real code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1378539 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/comparator/LastModifiedFileComparatorTest.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/comparator/LastModifiedFileComparatorTest.java",
                "[IO-343] org.apache.commons.io.comparator Javadoc is inconsistent with real code.\nRevert r1378539 as it broke binary compatibility\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1469102 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/comparator/LastModifiedFileComparatorTest.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/comparator/LastModifiedFileComparatorTest.java",
                "Added private and test-scoped sleep method that actually sleeps for a guaranteed minimal time\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718945 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/comparator/LastModifiedFileComparatorTest.java",
                "replace usage of deprecated IOUtils#closeQuietly with try-with-resources src/test/java/org/apache/commons/io/comparator/LastModifiedFileComparatorTest.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/comparator/LastModifiedFileComparatorTest.java",
                "Replace custom temporary folder management with JUnit's TemporaryFolder.\nThis will allow Maven to run tests concurrently. src/test/java/org/apache/commons/io/comparator/LastModifiedFileComparatorTest.java",
                "Remove unnecessary casts. src/test/java/org/apache/commons/io/comparator/LastModifiedFileComparatorTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/comparator/LastModifiedFileComparatorTest.java",
                "Rename test package. src/test/java/org/apache/commons/io/comparator/LastModifiedFileComparatorTest.java",
                "Add and use FileUtils.lastModified[Unchecked](File) to workaround\nhttps://bugs.openjdk.java.net/browse/JDK-8177809. src/test/java/org/apache/commons/io/comparator/LastModifiedFileComparatorTest.java",
                "Replace construction of FileInputStream and FileOutputStream objects with Files NIO APIs. (#221) src/test/java/org/apache/commons/io/comparator/LastModifiedFileComparatorTest.java",
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/comparator/LastModifiedFileComparatorTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/comparator/LastModifiedFileComparatorTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/comparator/NameFileComparatorTest.java": {
            "message": [
                "[IO-343] org.apache.commons.io.comparator Javadoc is inconsistent with real code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1378539 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/comparator/NameFileComparatorTest.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/comparator/NameFileComparatorTest.java",
                "[IO-343] org.apache.commons.io.comparator Javadoc is inconsistent with real code.\nRevert r1378539 as it broke binary compatibility\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1469102 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/comparator/NameFileComparatorTest.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/comparator/NameFileComparatorTest.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/comparator/NameFileComparatorTest.java",
                "Replace custom temporary folder management with JUnit's TemporaryFolder.\nThis will allow Maven to run tests concurrently. src/test/java/org/apache/commons/io/comparator/NameFileComparatorTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/comparator/NameFileComparatorTest.java",
                "Remove unused exceptions and trailing whitespace. src/test/java/org/apache/commons/io/comparator/NameFileComparatorTest.java",
                "Simplify Assertions (#234) src/test/java/org/apache/commons/io/comparator/NameFileComparatorTest.java",
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/comparator/NameFileComparatorTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/comparator/PathFileComparatorTest.java": {
            "message": [
                "[IO-343] org.apache.commons.io.comparator Javadoc is inconsistent with real code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1378539 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/comparator/PathFileComparatorTest.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/comparator/PathFileComparatorTest.java",
                "[IO-343] org.apache.commons.io.comparator Javadoc is inconsistent with real code.\nRevert r1378539 as it broke binary compatibility\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1469102 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/comparator/PathFileComparatorTest.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/comparator/PathFileComparatorTest.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/comparator/PathFileComparatorTest.java",
                "Replace custom temporary folder management with JUnit's TemporaryFolder.\nThis will allow Maven to run tests concurrently. src/test/java/org/apache/commons/io/comparator/PathFileComparatorTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/comparator/PathFileComparatorTest.java",
                "Remove unused exceptions and trailing whitespace. src/test/java/org/apache/commons/io/comparator/PathFileComparatorTest.java",
                "Simplify Assertions (#234) src/test/java/org/apache/commons/io/comparator/PathFileComparatorTest.java",
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/comparator/PathFileComparatorTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/comparator/SizeFileComparatorTest.java": {
            "message": [
                "[IO-343] org.apache.commons.io.comparator Javadoc is inconsistent with real code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1378539 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/comparator/SizeFileComparatorTest.java",
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/comparator/SizeFileComparatorTest.java",
                "[IO-343] org.apache.commons.io.comparator Javadoc is inconsistent with real code.\nRevert r1378539 as it broke binary compatibility\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1469102 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/comparator/SizeFileComparatorTest.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/comparator/SizeFileComparatorTest.java",
                "replace usage of deprecated IOUtils#closeQuietly with try-with-resources src/test/java/org/apache/commons/io/comparator/SizeFileComparatorTest.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/comparator/SizeFileComparatorTest.java",
                "Replace custom temporary folder management with JUnit's TemporaryFolder.\nThis will allow Maven to run tests concurrently. src/test/java/org/apache/commons/io/comparator/SizeFileComparatorTest.java",
                "Remove unnecessary casts. src/test/java/org/apache/commons/io/comparator/SizeFileComparatorTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/comparator/SizeFileComparatorTest.java",
                "Rename test package. src/test/java/org/apache/commons/io/comparator/SizeFileComparatorTest.java",
                "Replace construction of FileInputStream and FileOutputStream objects with Files NIO APIs. (#221) src/test/java/org/apache/commons/io/comparator/SizeFileComparatorTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/comparator/SizeFileComparatorTest.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/test/java/org/apache/commons/io/comparator/SizeFileComparatorTest.java",
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/comparator/SizeFileComparatorTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/comparator/SizeFileComparatorTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/CharsetsTestCase.java": {
            "message": [
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415689 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/CharsetsTestCase.java",
                "<action issue=\"IO-360\" dev=\"ggregory\" type=\"add\">Add API Charsets.requiredCharsets().</action>            \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415693 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/CharsetsTestCase.java",
                "JUnit 3 -> 4: replace import of junit.framework.Assert with org.junit.Assert.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1437523 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/CharsetsTestCase.java",
                "Fix unavoidable deprecations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642759 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/CharsetsTestCase.java",
                "Fixed files in repo with incorrect line endings src/test/java/org/apache/commons/io/CharsetsTestCase.java",
                "replace usage of deprecated Charsets constants with StandardCharsets constants src/test/java/org/apache/commons/io/CharsetsTestCase.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/test/java/org/apache/commons/io/CharsetsTestCase.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/CharsetsTestCase.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/CharsetsTestCase.java",
                "Add caching for required charsets (#120)\n\n* Add caching for required charsets src/test/java/org/apache/commons/io/CharsetsTestCase.java",
                "Minor improvement: (#177)\n\n* Unnecessary conversion to String\r\n* Add final\r\n* Use Standard Charset object\r\n* Redundant 'close()' src/test/java/org/apache/commons/io/CharsetsTestCase.java",
                "Make public and reuse IOUtils.EMPTY_BYTE_ARRAY. src/test/java/org/apache/commons/io/CharsetsTestCase.java",
                "Sort test members. src/test/java/org/apache/commons/io/CharsetsTestCase.java"
            ]
        },
        "src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java": {
            "message": [
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java",
                "Make JavaDoc tool happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1680650 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java",
                "IO-452 broken symlink support\n\nPatch by David Standish.\n\nAlso added reflection-based java7 symlink support from maven code (original author is me)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686472 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java",
                "Static imports come first. src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java",
                "Replace static TemporaryFolders with instances ones, so that tests are truly independent. src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java",
                "Assert that the test set up worked. src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java",
                "Better in-line comments. src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java",
                "Minor improvement: (#176)\n\n* Add Final\r\n* Unused import\r\n* Unnecessary semicolon src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java",
                "Sort test members. src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java"
            ]
        },
        "src/test/java/org/apache/commons/io/FileUtilsWaitForTestCase.java": {
            "message": [
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsWaitForTestCase.java",
                "IO-488 FileUtils.waitFor(...) swallows thread interrupted status\n\nPatch by Bj\u00f6rn Buchner, testcase by me\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686477 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsWaitForTestCase.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/FileUtilsWaitForTestCase.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/test/java/org/apache/commons/io/FileUtilsWaitForTestCase.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/FileUtilsWaitForTestCase.java",
                "Static imports come first. src/test/java/org/apache/commons/io/FileUtilsWaitForTestCase.java",
                "Consistently use the final modifier with local variables. src/test/java/org/apache/commons/io/FileUtilsWaitForTestCase.java",
                "Remove trailing white spaces on all lines.\nMore lambdas, less boilerplate. src/test/java/org/apache/commons/io/FileUtilsWaitForTestCase.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/FileUtilsWaitForTestCase.java",
                "Remove \"line\" in-line comments. src/test/java/org/apache/commons/io/FileUtilsWaitForTestCase.java",
                "Add FileUtils.current(). src/test/java/org/apache/commons/io/FileUtilsWaitForTestCase.java",
                "Split out negative duration test. src/test/java/org/apache/commons/io/FileUtilsWaitForTestCase.java",
                "Test that the file exists one last time on exit. src/test/java/org/apache/commons/io/FileUtilsWaitForTestCase.java",
                "Sort test members. src/test/java/org/apache/commons/io/FileUtilsWaitForTestCase.java",
                "No need to specify value equal to the default.\n\nTrying to fix random failures on GitHub builds. src/test/java/org/apache/commons/io/FileUtilsWaitForTestCase.java"
            ]
        },
        "src/test/java/org/apache/commons/io/TaggedIOExceptionTest.java": {
            "message": [
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/TaggedIOExceptionTest.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/TaggedIOExceptionTest.java",
                "remove unused imports src/test/java/org/apache/commons/io/TaggedIOExceptionTest.java",
                "Static imports come first. src/test/java/org/apache/commons/io/TaggedIOExceptionTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/TaggedIOExceptionTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/ThreadMonitorTestCase.java": {
            "message": [
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/ThreadMonitorTestCase.java",
                "Fix typos: timout -> timeout\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1586506 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/ThreadMonitorTestCase.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/ThreadMonitorTestCase.java",
                "Added private and test-scoped sleep method that actually sleeps for a guaranteed minimal time\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718945 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/ThreadMonitorTestCase.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/ThreadMonitorTestCase.java",
                "Static imports come first. src/test/java/org/apache/commons/io/ThreadMonitorTestCase.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/ThreadMonitorTestCase.java",
                "Rename test package. src/test/java/org/apache/commons/io/ThreadMonitorTestCase.java",
                "Re-implement package-private class ThreadMonitor timeouts with\njava.time.Duration. src/test/java/org/apache/commons/io/ThreadMonitorTestCase.java",
                "Sort test members. src/test/java/org/apache/commons/io/ThreadMonitorTestCase.java",
                "Try to fix random build failures on GitHub. src/test/java/org/apache/commons/io/ThreadMonitorTestCase.java",
                "Break test method into two. src/test/java/org/apache/commons/io/ThreadMonitorTestCase.java",
                "Better JUnit failures. src/test/java/org/apache/commons/io/ThreadMonitorTestCase.java",
                "Use assertThrows() in test. src/test/java/org/apache/commons/io/ThreadMonitorTestCase.java",
                "Try to fix random GitHub failures. src/test/java/org/apache/commons/io/ThreadMonitorTestCase.java"
            ]
        },
        "src/test/java/org/apache/commons/io/comparator/CompositeFileComparatorTest.java": {
            "message": [
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/comparator/CompositeFileComparatorTest.java",
                "Fix warning:\nType safety: A generic array of Comparator<File> is created for a varargs parameter\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1441284 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/comparator/CompositeFileComparatorTest.java",
                "[IO-343] org.apache.commons.io.comparator Javadoc is inconsistent with real code.\nRevert r1378539 as it broke binary compatibility\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1469102 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/comparator/CompositeFileComparatorTest.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/comparator/CompositeFileComparatorTest.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/comparator/CompositeFileComparatorTest.java",
                "replace usage of deprecated IOUtils#closeQuietly with try-with-resources src/test/java/org/apache/commons/io/comparator/CompositeFileComparatorTest.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/comparator/CompositeFileComparatorTest.java",
                "Replace custom temporary folder management with JUnit's TemporaryFolder.\nThis will allow Maven to run tests concurrently. src/test/java/org/apache/commons/io/comparator/CompositeFileComparatorTest.java",
                "Remove unnecessary casts. src/test/java/org/apache/commons/io/comparator/CompositeFileComparatorTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/comparator/CompositeFileComparatorTest.java",
                "Rename internal class from ReverseComparator to ReverseFileComparator. src/test/java/org/apache/commons/io/comparator/CompositeFileComparatorTest.java",
                "Rename test package. src/test/java/org/apache/commons/io/comparator/CompositeFileComparatorTest.java",
                "Use varargs. src/test/java/org/apache/commons/io/comparator/CompositeFileComparatorTest.java",
                "Replace construction of FileInputStream and FileOutputStream objects with Files NIO APIs. (#221) src/test/java/org/apache/commons/io/comparator/CompositeFileComparatorTest.java",
                "Remove type casts. src/test/java/org/apache/commons/io/comparator/CompositeFileComparatorTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/comparator/CompositeFileComparatorTest.java",
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/comparator/CompositeFileComparatorTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/comparator/CompositeFileComparatorTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/filefilter/AndFileFilterTestCase.java": {
            "message": [
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                "Trailing spaces\nThese are the worst offenders; a few still remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471765 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                "Language level code changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686260 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                "Static imports come first. src/test/java/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                "Consistently use the final modifier with local variables. src/test/java/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                "- Simplify array declarations.\n- Javadoc.\n- Use try-with-resources. src/test/java/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                "Add test to make sure the setter of AndFileFilter works correctly (#244)\n\n* add test to make sure the setter of AndFileFilter works correctly\r\n\r\n* remove unused import statement src/test/java/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                "Organize imports. src/test/java/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                "Sort test members. src/test/java/org/apache/commons/io/filefilter/AndFileFilterTestCase.java"
            ]
        },
        "src/test/java/org/apache/commons/io/filefilter/OrFileFilterTestCase.java": {
            "message": [
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                "Trailing spaces\nThese are the worst offenders; a few still remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471765 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                "Language level code changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686260 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                "Static imports come first. src/test/java/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                "Consistently use the final modifier with local variables. src/test/java/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                "- Simplify array declarations.\n- Javadoc.\n- Use try-with-resources. src/test/java/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                "Sort test members. src/test/java/org/apache/commons/io/filefilter/OrFileFilterTestCase.java"
            ]
        },
        "src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java": {
            "message": [
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java",
                "Trailing spaces\nThese are the worst offenders; a few still remain with single spaces here and there\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1471765 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java",
                "Language level code changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686260 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java",
                "Static imports come first. src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java",
                "Replace static TemporaryFolders with instances ones, so that tests are truly independent. src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java",
                "Let org.apache.commons.io.filefilter classes work with\njava.nio.file.Files.walk* APIs.\n\nAlso: AccumulatorPathVisitor does not track directories properly. src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java",
                "Simplify new PathFilter interface to a single method. src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java",
                "Move new PathFilter interface to the file package, annotate it with\n@FunctionalInterface, and add a BasicFileAttributes parameter to accept\nattributes from java.nio.file.FileVisitor. src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java",
                "[IO-597] FileUtils.iterateFiles runs out of memory when executed for a\ndirectory with large number of files.\n\nRe-implement FileUtils' iterateFiles(), iterateFilesAndDirs(),\nlistFiles(), listFilesAndDirs() to use NIO file tree walking instead of\nIO file listings to avoid memory consumption issues on large file trees. src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java",
                "Remove unused exceptions and trailing whitespace. src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java",
                "- Simplify array declarations.\n- Javadoc.\n- Use try-with-resources. src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java",
                "Small refactoring. src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java",
                "[IO-733] RegexFileFilter uses the path and file name instead of just the\nfile name.\n\nAdd RegexFileFilter.RegexFileFilter(Pattern, Function<Path, String>). src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java",
                "Fix FileFilterTestCase use case for symbolic links on non-Windows OS.\n\n- Make SymbolicLinkFileFilter configurable:\n-- Add SymbolicLinkFileFilter.SymbolicLinkFileFilter(FileVisitResult,\nFileVisitResult)\n-- Add AbstractFileFilter(FileVisitResult, FileVisitResult)\n- CountingPathVisitor should not follow links by default to properly\ncount from FileUtils. src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/BoundedInputStreamTest.java": {
            "message": [
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/BoundedInputStreamTest.java",
                "Make JavaDoc tool happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1680650 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/BoundedInputStreamTest.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/BoundedInputStreamTest.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/test/java/org/apache/commons/io/input/BoundedInputStreamTest.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/input/BoundedInputStreamTest.java",
                "Static imports come first. src/test/java/org/apache/commons/io/input/BoundedInputStreamTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/input/BoundedInputStreamTest.java",
                "Make public and reuse IOUtils.EMPTY_BYTE_ARRAY. src/test/java/org/apache/commons/io/input/BoundedInputStreamTest.java",
                "Add StringInputStream. src/test/java/org/apache/commons/io/input/BoundedInputStreamTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/input/BoundedInputStreamTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/BrokenInputStreamTest.java": {
            "message": [
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/BrokenInputStreamTest.java",
                "IO-469 Self-supression with try-with-resources\n\nSolution proposed by Grigory Fadeev\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686456 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/BrokenInputStreamTest.java",
                "Revert \"IO-469 Self-supression with try-with-resources\"\n\nThings are not as simple as they might seem\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686460 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/BrokenInputStreamTest.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/BrokenInputStreamTest.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/input/BrokenInputStreamTest.java",
                "Static imports come first. src/test/java/org/apache/commons/io/input/BrokenInputStreamTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/input/BrokenInputStreamTest.java",
                "Rewrite test using JUnit 5 APIs. src/test/java/org/apache/commons/io/input/BrokenInputStreamTest.java",
                "Prevent IllegalArgumentExceptions in BrokenInputStream/Reader/OutputStream/Writer (#278)\n\n* BrokenInputStream/Reader/OutputStream/Writer use a supplier to prevent IllegalArgumentExceptions in try-with-resources\r\n\r\n* Processed feedback from PR src/test/java/org/apache/commons/io/input/BrokenInputStreamTest.java",
                "Checkstyle and fix test sources.\n\n- Move Checkstyle configuration from root folder to src/conf.\n- Remove unused imports.\n- Remove trailing whitespace.\n- Adjust line lengths.\n- No tabs.\n- Use final. src/test/java/org/apache/commons/io/input/BrokenInputStreamTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/TeeInputStreamTest.java": {
            "message": [
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/TeeInputStreamTest.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/TeeInputStreamTest.java",
                "remove unused imports src/test/java/org/apache/commons/io/input/TeeInputStreamTest.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/input/TeeInputStreamTest.java",
                "Static imports come first. src/test/java/org/apache/commons/io/input/TeeInputStreamTest.java",
                "[IO-612] Add class TeeReader. PR from Rob Spoor but modified. src/test/java/org/apache/commons/io/input/TeeInputStreamTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/input/TeeInputStreamTest.java",
                "Rename test package. src/test/java/org/apache/commons/io/input/TeeInputStreamTest.java",
                "Rename test classes from \"Yell\" to \"Throw\" prefix. src/test/java/org/apache/commons/io/input/TeeInputStreamTest.java",
                "IO-746: dropping unnecessary casts and conversions (#267)\n\nSigned-off-by: Davide Angelocola <davide.angelocola@gmail.com> src/test/java/org/apache/commons/io/input/TeeInputStreamTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/input/TeeInputStreamTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/output/BrokenOutputStreamTest.java": {
            "message": [
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/BrokenOutputStreamTest.java",
                "IO-469 Self-supression with try-with-resources\n\nSolution proposed by Grigory Fadeev\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686456 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/BrokenOutputStreamTest.java",
                "Revert \"IO-469 Self-supression with try-with-resources\"\n\nThings are not as simple as they might seem\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686460 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/BrokenOutputStreamTest.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/BrokenOutputStreamTest.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/output/BrokenOutputStreamTest.java",
                "Replace custom temporary folder management with JUnit's TemporaryFolder.\nThis will allow Maven to run tests concurrently. Clean up imports. src/test/java/org/apache/commons/io/output/BrokenOutputStreamTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/output/BrokenOutputStreamTest.java",
                "Rewrite test using JUnit 5 APIs. src/test/java/org/apache/commons/io/output/BrokenOutputStreamTest.java",
                "Prevent IllegalArgumentExceptions in BrokenInputStream/Reader/OutputStream/Writer (#278)\n\n* BrokenInputStream/Reader/OutputStream/Writer use a supplier to prevent IllegalArgumentExceptions in try-with-resources\r\n\r\n* Processed feedback from PR src/test/java/org/apache/commons/io/output/BrokenOutputStreamTest.java",
                "Checkstyle and fix test sources.\n\n- Move Checkstyle configuration from root folder to src/conf.\n- Remove unused imports.\n- Remove trailing whitespace.\n- Adjust line lengths.\n- No tabs.\n- Use final. src/test/java/org/apache/commons/io/output/BrokenOutputStreamTest.java",
                "Sort members. src/test/java/org/apache/commons/io/output/BrokenOutputStreamTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/output/CloseShieldOutputStreamTest.java": {
            "message": [
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/CloseShieldOutputStreamTest.java",
                "Make JavaDoc tool happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1680650 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/CloseShieldOutputStreamTest.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/CloseShieldOutputStreamTest.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/output/CloseShieldOutputStreamTest.java",
                "Replace custom temporary folder management with JUnit's TemporaryFolder.\nThis will allow Maven to run tests concurrently. Clean up imports. src/test/java/org/apache/commons/io/output/CloseShieldOutputStreamTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/output/CloseShieldOutputStreamTest.java",
                "Replace CloseShield* constructors with factory methods (#173)\n\n* Replace CloseShield* constructors with factory methods\r\n\r\n* Renamed CloseShield*.dontClose to wrap\r\n\r\n* Changed parameter names and tags as requested src/test/java/org/apache/commons/io/output/CloseShieldOutputStreamTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/output/ClosedOutputStreamTest.java": {
            "message": [
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/ClosedOutputStreamTest.java",
                "Ensure streams are closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1695021 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/ClosedOutputStreamTest.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/ClosedOutputStreamTest.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/ClosedOutputStreamTest.java",
                "remove unused imports src/test/java/org/apache/commons/io/output/ClosedOutputStreamTest.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/output/ClosedOutputStreamTest.java",
                "Replace custom temporary folder management with JUnit's TemporaryFolder.\nThis will allow Maven to run tests concurrently. Clean up imports. src/test/java/org/apache/commons/io/output/ClosedOutputStreamTest.java",
                "IO-546: ClosedOutputStream#flush should throw (closes #42) src/test/java/org/apache/commons/io/output/ClosedOutputStreamTest.java",
                "[IO-617] Add class CloseShieldWriter. #83.\n\n- Applied partial patch from GitHub PR #83 from Rob Spoor which\ncontained duplication from another PR.\n- Reformatted some files.\n- Closes #83. src/test/java/org/apache/commons/io/output/ClosedOutputStreamTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/output/ClosedOutputStreamTest.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/test/java/org/apache/commons/io/output/ClosedOutputStreamTest.java",
                "Remove unused exceptions and trailing whitespace. src/test/java/org/apache/commons/io/output/ClosedOutputStreamTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/output/ClosedOutputStreamTest.java",
                "Migrate from JUnit 4 to 5\n\nException cleanups in tests. src/test/java/org/apache/commons/io/output/ClosedOutputStreamTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/output/ProxyOutputStreamTest.java": {
            "message": [
                "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1415850 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/ProxyOutputStreamTest.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/ProxyOutputStreamTest.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/output/ProxyOutputStreamTest.java",
                "Replace custom temporary folder management with JUnit's TemporaryFolder.\nThis will allow Maven to run tests concurrently. Clean up imports. src/test/java/org/apache/commons/io/output/ProxyOutputStreamTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/output/ProxyOutputStreamTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/ClosedInputStreamTest.java": {
            "message": [
                "Ensure stream is closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1441282 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ClosedInputStreamTest.java",
                "Make JavaDoc tool happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1680650 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ClosedInputStreamTest.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/ClosedInputStreamTest.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/input/ClosedInputStreamTest.java",
                "Static imports come first. src/test/java/org/apache/commons/io/input/ClosedInputStreamTest.java",
                "Clean up tests. Javadocs. src/test/java/org/apache/commons/io/input/ClosedInputStreamTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/input/ClosedInputStreamTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/input/ClosedInputStreamTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/output/ChunkedOutputStream.java": {
            "message": [
                "Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1598278 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/ChunkedOutputStream.java",
                "Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1598279 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/ChunkedOutputStream.java",
                "Fixed all checkstyle errors and a findbugs error\n\nFindbugs error was:\norg.apache.commons.io.output.DeferredFileOutputStream#thresholdReached\npossible file handle leak upon exception\n\nAlso contains fix for IO-446, submitted by Jeffrey Barrus\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686747 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/ChunkedOutputStream.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/output/ChunkedOutputStream.java",
                "Use final for parameters. src/main/java/org/apache/commons/io/output/ChunkedOutputStream.java",
                "Consistently use the final modifier with local variables. src/main/java/org/apache/commons/io/output/ChunkedOutputStream.java",
                "Sort members. src/main/java/org/apache/commons/io/output/ChunkedOutputStream.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/BoundedReader.java": {
            "message": [
                "use spaces not tabs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1634744 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/BoundedReader.java",
                "Make JavaDoc tool happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1680650 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/BoundedReader.java",
                "No need for variables to be package protected\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686512 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/BoundedReader.java",
                "Update BoundedReader.java\nhttps://docs.oracle.com/javase/8/docs/api/java/io/Reader.html\nAdd read bytes EOF test\n\nPatch by zhanhb <zhanhb88@gmail.com>, applied unmodified\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746612 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/BoundedReader.java",
                "Fix Javadoc typos (closes #30) src/main/java/org/apache/commons/io/input/BoundedReader.java",
                "Use final for parameters. src/main/java/org/apache/commons/io/input/BoundedReader.java",
                "enable doclint on java 8+\n\nfix errors reported by java 8 doclint src/main/java/org/apache/commons/io/input/BoundedReader.java",
                "Javadoc nits. src/main/java/org/apache/commons/io/input/BoundedReader.java",
                "Formatting. src/main/java/org/apache/commons/io/input/BoundedReader.java",
                "Javadoc. src/main/java/org/apache/commons/io/input/BoundedReader.java",
                "Minor Improvement: (#190)\n\n* Add final\r\n* Remove redundant initializer\r\n* simplify conditions src/main/java/org/apache/commons/io/input/BoundedReader.java",
                "Javadoc. src/main/java/org/apache/commons/io/input/BoundedReader.java",
                "Reuse EOF constant.\n\nJavadoc tweaks. Format to max line length. Simplify. src/main/java/org/apache/commons/io/input/BoundedReader.java",
                "Remove IOException from the method signatures that no longer\nthrow IOException.\n        This maintains binary compatibility but not source\ncompatibility.\n        - FilenameUtils\n            directoryContains(String, String)\n        - BoundedReader\n            BoundedReader(java.io.Reader, int)\n        - IOUtils\n            lineIterator(java.io.InputStream, Charset)\n            lineIterator(java.io.InputStream, String)\n            toByteArray(String)\n            toInputStream(CharSequence, String)\n            toInputStream(String, String)\n            toString(byte[])\n            toString(byte[], String) src/main/java/org/apache/commons/io/input/BoundedReader.java",
                "Sort members. src/main/java/org/apache/commons/io/input/BoundedReader.java",
                "PMD: Remove unnecessary parentheses src/main/java/org/apache/commons/io/input/BoundedReader.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/UnixLineEndingInputStream.java": {
            "message": [
                "use spaces not tabs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1634744 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/UnixLineEndingInputStream.java",
                "add missing license headers and move those before package to avoid checkstyle complains\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1634745 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/UnixLineEndingInputStream.java",
                "MASSEMBLY-753 CR only handling. Unreleased code so no separate issue for commons\n\nAccording to http://en.wikipedia.org/wiki/Newline#Representations we're\nprobably be talking about files originating on old v9 MacOS'es or a Commodore 64\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1673459 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/UnixLineEndingInputStream.java",
                "Make JavaDoc tool happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1680650 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/UnixLineEndingInputStream.java",
                "Fixed all checkstyle errors and a findbugs error\n\nFindbugs error was:\norg.apache.commons.io.output.DeferredFileOutputStream#thresholdReached\npossible file handle leak upon exception\n\nAlso contains fix for IO-446, submitted by Jeffrey Barrus\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686747 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/UnixLineEndingInputStream.java",
                "Use final for parameters. src/main/java/org/apache/commons/io/input/UnixLineEndingInputStream.java",
                "Consistently use the final modifier with local variables. src/main/java/org/apache/commons/io/input/UnixLineEndingInputStream.java",
                "Don't need to nest else clause. Refactor magic numbers into constants. src/main/java/org/apache/commons/io/input/UnixLineEndingInputStream.java",
                "Formatting. src/main/java/org/apache/commons/io/input/UnixLineEndingInputStream.java",
                "Fix typo. src/main/java/org/apache/commons/io/input/UnixLineEndingInputStream.java",
                "Javadoc. src/main/java/org/apache/commons/io/input/UnixLineEndingInputStream.java",
                "Javadoc. src/main/java/org/apache/commons/io/input/UnixLineEndingInputStream.java",
                "Replace magic number with constant. src/main/java/org/apache/commons/io/input/UnixLineEndingInputStream.java",
                "Replace magic numbers with constants with the new IOUtils.CR and LF. src/main/java/org/apache/commons/io/input/UnixLineEndingInputStream.java",
                "Minor Improvement: (#190)\n\n* Add final\r\n* Remove redundant initializer\r\n* simplify conditions src/main/java/org/apache/commons/io/input/UnixLineEndingInputStream.java",
                "Add and use a package-private factory for UnsupportedOperationException\nto provide exception messages with a consistent formatting. src/main/java/org/apache/commons/io/input/UnixLineEndingInputStream.java",
                "Sort members. src/main/java/org/apache/commons/io/input/UnixLineEndingInputStream.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/WindowsLineEndingInputStream.java": {
            "message": [
                "use spaces not tabs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1634744 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/WindowsLineEndingInputStream.java",
                "add missing license headers and move those before package to avoid checkstyle complains\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1634745 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/WindowsLineEndingInputStream.java",
                "Make JavaDoc tool happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1680650 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/WindowsLineEndingInputStream.java",
                "Fixed all checkstyle errors and a findbugs error\n\nFindbugs error was:\norg.apache.commons.io.output.DeferredFileOutputStream#thresholdReached\npossible file handle leak upon exception\n\nAlso contains fix for IO-446, submitted by Jeffrey Barrus\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686747 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/input/WindowsLineEndingInputStream.java",
                "Use final for parameters. src/main/java/org/apache/commons/io/input/WindowsLineEndingInputStream.java",
                "Consistently use the final modifier with local variables. src/main/java/org/apache/commons/io/input/WindowsLineEndingInputStream.java",
                "Don't need to nest else clause. Refactor magic numbers into constants. src/main/java/org/apache/commons/io/input/WindowsLineEndingInputStream.java",
                "Formatting. src/main/java/org/apache/commons/io/input/WindowsLineEndingInputStream.java",
                "Formatting. src/main/java/org/apache/commons/io/input/WindowsLineEndingInputStream.java",
                "Javadoc. src/main/java/org/apache/commons/io/input/WindowsLineEndingInputStream.java",
                "Javadoc. src/main/java/org/apache/commons/io/input/WindowsLineEndingInputStream.java",
                "Replace magic number with constant. src/main/java/org/apache/commons/io/input/WindowsLineEndingInputStream.java",
                "Format tweak. src/main/java/org/apache/commons/io/input/WindowsLineEndingInputStream.java",
                "Replace magic numbers with constants with the new IOUtils.CR and LF. src/main/java/org/apache/commons/io/input/WindowsLineEndingInputStream.java",
                "Fix imports for Checkstyele. src/main/java/org/apache/commons/io/input/WindowsLineEndingInputStream.java",
                "Minor Improvement: (#190)\n\n* Add final\r\n* Remove redundant initializer\r\n* simplify conditions src/main/java/org/apache/commons/io/input/WindowsLineEndingInputStream.java",
                "Add and use a package-private factory for UnsupportedOperationException\nto provide exception messages with a consistent formatting. src/main/java/org/apache/commons/io/input/WindowsLineEndingInputStream.java",
                "Raise embedded if into parent. src/main/java/org/apache/commons/io/input/WindowsLineEndingInputStream.java",
                "No need to nest in else. src/main/java/org/apache/commons/io/input/WindowsLineEndingInputStream.java",
                "Sort members. src/main/java/org/apache/commons/io/input/WindowsLineEndingInputStream.java",
                "Add final and remove useless parentheses. src/main/java/org/apache/commons/io/input/WindowsLineEndingInputStream.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/BoundedReaderTest.java": {
            "message": [
                "use spaces not tabs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1634744 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/BoundedReaderTest.java",
                "Close resources\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642752 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/BoundedReaderTest.java",
                "Update BoundedReader.java\nhttps://docs.oracle.com/javase/8/docs/api/java/io/Reader.html\nAdd read bytes EOF test\n\nPatch by zhanhb <zhanhb88@gmail.com>, applied unmodified\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746612 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/BoundedReaderTest.java",
                "fix some warnings in tests src/test/java/org/apache/commons/io/input/BoundedReaderTest.java",
                "Static imports come first. src/test/java/org/apache/commons/io/input/BoundedReaderTest.java",
                "Consistently use the final modifier with local variables. src/test/java/org/apache/commons/io/input/BoundedReaderTest.java",
                "Clean up tests. Javadocs. src/test/java/org/apache/commons/io/input/BoundedReaderTest.java",
                "Add tests. src/test/java/org/apache/commons/io/input/BoundedReaderTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/input/BoundedReaderTest.java",
                "[IO-669] Fix code smells; fix typos (#115)\n\n* fix code smells\r\n\r\n* fix typos\r\n\r\n* l to L\r\n\r\n* use Arrays.fill\r\n\r\n* revert deleting boxing src/test/java/org/apache/commons/io/input/BoundedReaderTest.java",
                "Remove unused exceptions. Use try-with-resoruces.\nClean ups. Formatting. src/test/java/org/apache/commons/io/input/BoundedReaderTest.java",
                "Replace construction of FileInputStream and FileOutputStream objects with Files NIO APIs. (#221) src/test/java/org/apache/commons/io/input/BoundedReaderTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/input/BoundedReaderTest.java",
                "Rework some tests such that temporary files and directories are as\nshort-lived as possible, also use try-with-resources to make sure temps\nare deleted at the end of a test.\n\nPut all of this under test source tree for now, even the reusable\nclasses. src/test/java/org/apache/commons/io/input/BoundedReaderTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/input/BoundedReaderTest.java",
                "Increase timeout for when build are super slow (on my PC at least)\n\nRefactor timeout definition into a constant src/test/java/org/apache/commons/io/input/BoundedReaderTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/UnixLineEndingInputStreamTest.java": {
            "message": [
                "use spaces not tabs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1634744 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/UnixLineEndingInputStreamTest.java",
                "add missing license headers and move those before package to avoid checkstyle complains\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1634745 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/UnixLineEndingInputStreamTest.java",
                "Close resources\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642752 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/UnixLineEndingInputStreamTest.java",
                "MASSEMBLY-753 CR only handling. Unreleased code so no separate issue for commons\n\nAccording to http://en.wikipedia.org/wiki/Newline#Representations we're\nprobably be talking about files originating on old v9 MacOS'es or a Commodore 64\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1673459 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/UnixLineEndingInputStreamTest.java",
                "Static imports come first. src/test/java/org/apache/commons/io/input/UnixLineEndingInputStreamTest.java",
                "Use final for parameters. src/test/java/org/apache/commons/io/input/UnixLineEndingInputStreamTest.java",
                "Consistently use the final modifier with local variables. src/test/java/org/apache/commons/io/input/UnixLineEndingInputStreamTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/input/UnixLineEndingInputStreamTest.java",
                "Minor improvement: (#177)\n\n* Unnecessary conversion to String\r\n* Add final\r\n* Use Standard Charset object\r\n* Redundant 'close()' src/test/java/org/apache/commons/io/input/UnixLineEndingInputStreamTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/input/UnixLineEndingInputStreamTest.java",
                "Checkstyle and fix test sources.\n\n- Move Checkstyle configuration from root folder to src/conf.\n- Remove unused imports.\n- Remove trailing whitespace.\n- Adjust line lengths.\n- No tabs.\n- Use final. src/test/java/org/apache/commons/io/input/UnixLineEndingInputStreamTest.java",
                "Use try-with-resources src/test/java/org/apache/commons/io/input/UnixLineEndingInputStreamTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/WindowsLineEndingInputStreamTest.java": {
            "message": [
                "use spaces not tabs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1634744 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/WindowsLineEndingInputStreamTest.java",
                "add missing license headers and move those before package to avoid checkstyle complains\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1634745 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/WindowsLineEndingInputStreamTest.java",
                "Close resources\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1642752 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/WindowsLineEndingInputStreamTest.java",
                "Static imports come first. src/test/java/org/apache/commons/io/input/WindowsLineEndingInputStreamTest.java",
                "Use final for parameters. src/test/java/org/apache/commons/io/input/WindowsLineEndingInputStreamTest.java",
                "Consistently use the final modifier with local variables. src/test/java/org/apache/commons/io/input/WindowsLineEndingInputStreamTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/input/WindowsLineEndingInputStreamTest.java",
                "Minor improvement: (#177)\n\n* Unnecessary conversion to String\r\n* Add final\r\n* Use Standard Charset object\r\n* Redundant 'close()' src/test/java/org/apache/commons/io/input/WindowsLineEndingInputStreamTest.java",
                "Add StringInputStream. src/test/java/org/apache/commons/io/input/WindowsLineEndingInputStreamTest.java",
                "Organize imports. src/test/java/org/apache/commons/io/input/WindowsLineEndingInputStreamTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/input/WindowsLineEndingInputStreamTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/input/WindowsLineEndingInputStreamTest.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/test/java/org/apache/commons/io/input/WindowsLineEndingInputStreamTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/CloseShieldInputStreamTest.java": {
            "message": [
                "Make JavaDoc tool happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1680650 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CloseShieldInputStreamTest.java",
                "Converted all tests to JUnit4\n\nTest count is 1157 as oppsoed to 1156 because JUnit4 counts @Ignored tests as run.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718944 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/input/CloseShieldInputStreamTest.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/input/CloseShieldInputStreamTest.java",
                "Static imports come first. src/test/java/org/apache/commons/io/input/CloseShieldInputStreamTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/input/CloseShieldInputStreamTest.java",
                "Replace CloseShield* constructors with factory methods (#173)\n\n* Replace CloseShield* constructors with factory methods\r\n\r\n* Renamed CloseShield*.dontClose to wrap\r\n\r\n* Changed parameter names and tags as requested src/test/java/org/apache/commons/io/input/CloseShieldInputStreamTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/Java7Support.java": {
            "message": [
                "Fixed style comment from mailing list. Added small testcase for Java7Support\n\nConverted to commons-style indentation\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686524 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/Java7Support.java",
                "Added old-style booleanValue\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686719 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/Java7Support.java",
                "Fixed all checkstyle errors and a findbugs error\n\nFindbugs error was:\norg.apache.commons.io.output.DeferredFileOutputStream#thresholdReached\npossible file handle leak upon exception\n\nAlso contains fix for IO-446, submitted by Jeffrey Barrus\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686747 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/Java7Support.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/Java7Support.java"
            ]
        },
        "src/test/java/org/apache/commons/io/output/ThresholdingOutputStreamTest.java": {
            "message": [
                "CLose streams\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686727 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/ThresholdingOutputStreamTest.java",
                "Replace custom temporary folder management with JUnit's TemporaryFolder.\nThis will allow Maven to run tests concurrently. Clean up imports. src/test/java/org/apache/commons/io/output/ThresholdingOutputStreamTest.java",
                "Consistently use the final modifier with local variables. src/test/java/org/apache/commons/io/output/ThresholdingOutputStreamTest.java",
                "Use try-with-resources in tests and more.\n\n- Don't nest if you do not have to.\n- Document empty blocks.\n- Only run FileFilterTestCase#testCanExecute() on Windows to fix Jenkins\nbuild. src/test/java/org/apache/commons/io/output/ThresholdingOutputStreamTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/output/ThresholdingOutputStreamTest.java",
                "Move license header to the top of the file. src/test/java/org/apache/commons/io/output/ThresholdingOutputStreamTest.java",
                "Add constructor ThresholdingOutputStream(int, IOConsumer, IOFunction)\nand make the class concrete. src/test/java/org/apache/commons/io/output/ThresholdingOutputStreamTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/output/ThresholdingOutputStreamTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/output/AppendableOutputStream.java": {
            "message": [
                "Fixed all checkstyle errors and a findbugs error\n\nFindbugs error was:\norg.apache.commons.io.output.DeferredFileOutputStream#thresholdReached\npossible file handle leak upon exception\n\nAlso contains fix for IO-446, submitted by Jeffrey Barrus\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686747 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/AppendableOutputStream.java",
                "Added missing @since tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1687815 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/AppendableOutputStream.java",
                "Use final for parameters. src/main/java/org/apache/commons/io/output/AppendableOutputStream.java",
                "Add missing Javadoc tag. src/main/java/org/apache/commons/io/output/AppendableOutputStream.java",
                "Remove Subversion's \"@version $Id$\". src/main/java/org/apache/commons/io/output/AppendableOutputStream.java",
                "Javadoc: Close HTML tags. src/main/java/org/apache/commons/io/output/AppendableOutputStream.java",
                "Javadoc nits. src/main/java/org/apache/commons/io/output/AppendableOutputStream.java",
                "Sort members. src/main/java/org/apache/commons/io/output/AppendableOutputStream.java"
            ]
        },
        "src/main/java/org/apache/commons/io/output/ChunkedWriter.java": {
            "message": [
                "Fixed all checkstyle errors and a findbugs error\n\nFindbugs error was:\norg.apache.commons.io.output.DeferredFileOutputStream#thresholdReached\npossible file handle leak upon exception\n\nAlso contains fix for IO-446, submitted by Jeffrey Barrus\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686747 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/ChunkedWriter.java",
                "Added a couple of tests to increase coverage somewhat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1687613 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/output/ChunkedWriter.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/output/ChunkedWriter.java",
                "Use final for parameters. src/main/java/org/apache/commons/io/output/ChunkedWriter.java",
                "Consistently use the final modifier with local variables. src/main/java/org/apache/commons/io/output/ChunkedWriter.java",
                "Sort members. src/main/java/org/apache/commons/io/output/ChunkedWriter.java"
            ]
        },
        "src/test/java/org/apache/commons/io/output/ChunkedOutputStreamTest.java": {
            "message": [
                "Further improved test coverage\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1687787 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/ChunkedOutputStreamTest.java",
                "Ensure streams are closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1695021 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/ChunkedOutputStreamTest.java",
                "Use final for parameters. src/test/java/org/apache/commons/io/output/ChunkedOutputStreamTest.java",
                "Consistently use the final modifier with local variables. src/test/java/org/apache/commons/io/output/ChunkedOutputStreamTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/output/ChunkedOutputStreamTest.java",
                "Use try-with-resources and format to 120 line length. src/test/java/org/apache/commons/io/output/ChunkedOutputStreamTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/output/ChunkedOutputStreamTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/output/ChunkedOutputStreamTest.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/test/java/org/apache/commons/io/output/ChunkedOutputStreamTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/output/ChunkedWriterTest.java": {
            "message": [
                "Further improved test coverage\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1687787 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/ChunkedWriterTest.java",
                "Ensure streams are closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1695021 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/ChunkedWriterTest.java",
                "Use final for parameters. src/test/java/org/apache/commons/io/output/ChunkedWriterTest.java",
                "Consistently use the final modifier with local variables. src/test/java/org/apache/commons/io/output/ChunkedWriterTest.java",
                "Use try-with-resources in tests and more.\n\n- Don't nest if you do not have to.\n- Document empty blocks.\n- Only run FileFilterTestCase#testCanExecute() on Windows to fix Jenkins\nbuild. src/test/java/org/apache/commons/io/output/ChunkedWriterTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/output/ChunkedWriterTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/output/ChunkedWriterTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/output/ChunkedWriterTest.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/test/java/org/apache/commons/io/output/ChunkedWriterTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/serialization/ValidatingObjectInputStream.java": {
            "message": [
                "IO-487 - include class name in InvalidClassException\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1715221 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/serialization/ValidatingObjectInputStream.java",
                "JavaDocs and code formatting. No functional change.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1715249 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/serialization/ValidatingObjectInputStream.java",
                "Updated javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1719118 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/serialization/ValidatingObjectInputStream.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/serialization/ValidatingObjectInputStream.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/serialization/ValidatingObjectInputStream.java",
                "Use final for parameters. src/main/java/org/apache/commons/io/serialization/ValidatingObjectInputStream.java",
                "Consistently use the final modifier with local variables. src/main/java/org/apache/commons/io/serialization/ValidatingObjectInputStream.java",
                "Javadoc: Use \"file name\" instead of \"filename\".\n\nCamel case vars \"filename\" to \"fileName\". src/main/java/org/apache/commons/io/serialization/ValidatingObjectInputStream.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/serialization/ValidatingObjectInputStream.java",
                "Sort members. src/main/java/org/apache/commons/io/serialization/ValidatingObjectInputStream.java",
                "Javadoc: Replace @code with @link src/main/java/org/apache/commons/io/serialization/ValidatingObjectInputStream.java",
                "Add and reuse IOConsumer.forEach(*) and forEachIndexed(*).\n\nUse forEach and streams. src/main/java/org/apache/commons/io/serialization/ValidatingObjectInputStream.java"
            ]
        },
        "src/test/java/org/apache/commons/io/serialization/ValidatingObjectInputStreamTest.java": {
            "message": [
                "IO-487 - include class name in InvalidClassException\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1715221 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/serialization/ValidatingObjectInputStreamTest.java",
                "IO-487 - MoreComplexObjectTest added, shows the (somewhat painful) settings needed to deserialize more realistic classes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1715257 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/serialization/ValidatingObjectInputStreamTest.java",
                "Fixed broken unit tests. JUnit was trying to execute OurTestClass.java as a test.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1715261 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/serialization/ValidatingObjectInputStreamTest.java",
                "Add missing '@Override' annotations. src/test/java/org/apache/commons/io/serialization/ValidatingObjectInputStreamTest.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/serialization/ValidatingObjectInputStreamTest.java",
                "Use final for parameters. src/test/java/org/apache/commons/io/serialization/ValidatingObjectInputStreamTest.java",
                "Consistently use the final modifier with local variables. src/test/java/org/apache/commons/io/serialization/ValidatingObjectInputStreamTest.java",
                "Remove redundant semicolons src/test/java/org/apache/commons/io/serialization/ValidatingObjectInputStreamTest.java",
                "Remove trailing white spaces on all lines.\nMore lambdas, less boilerplate. src/test/java/org/apache/commons/io/serialization/ValidatingObjectInputStreamTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/serialization/ValidatingObjectInputStreamTest.java",
                "[IO-669] Fix code smells; fix typos (#115)\n\n* fix code smells\r\n\r\n* fix typos\r\n\r\n* l to L\r\n\r\n* use Arrays.fill\r\n\r\n* revert deleting boxing src/test/java/org/apache/commons/io/serialization/ValidatingObjectInputStreamTest.java",
                "Remove unused exceptions and trailing whitespace. src/test/java/org/apache/commons/io/serialization/ValidatingObjectInputStreamTest.java",
                "Don't shadow setup method name in JUnit because the super's version is\nnot called. src/test/java/org/apache/commons/io/serialization/ValidatingObjectInputStreamTest.java",
                "Rename test class. src/test/java/org/apache/commons/io/serialization/ValidatingObjectInputStreamTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/serialization/ValidatingObjectInputStreamTest.java",
                "Add final and remove useless parentheses. src/test/java/org/apache/commons/io/serialization/ValidatingObjectInputStreamTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/serialization/ClassNameMatcher.java": {
            "message": [
                "JavaDocs and code formatting. No functional change.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1715249 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/serialization/ClassNameMatcher.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/serialization/ClassNameMatcher.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/serialization/ClassNameMatcher.java"
            ]
        },
        "src/main/java/org/apache/commons/io/serialization/FullClassNameMatcher.java": {
            "message": [
                "JavaDocs and code formatting. No functional change.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1715249 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/serialization/FullClassNameMatcher.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/serialization/FullClassNameMatcher.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/serialization/FullClassNameMatcher.java",
                "Use final for parameters. src/main/java/org/apache/commons/io/serialization/FullClassNameMatcher.java"
            ]
        },
        "src/main/java/org/apache/commons/io/serialization/RegexpClassNameMatcher.java": {
            "message": [
                "JavaDocs and code formatting. No functional change.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1715249 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/serialization/RegexpClassNameMatcher.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/serialization/RegexpClassNameMatcher.java",
                "Use final for parameters. src/main/java/org/apache/commons/io/serialization/RegexpClassNameMatcher.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/serialization/RegexpClassNameMatcher.java",
                "Sort members. src/main/java/org/apache/commons/io/serialization/RegexpClassNameMatcher.java",
                "Use Objects.requireNonNull()\n\nUpdate Javadoc for existing calls. src/main/java/org/apache/commons/io/serialization/RegexpClassNameMatcher.java"
            ]
        },
        "src/main/java/org/apache/commons/io/serialization/WildcardClassNameMatcher.java": {
            "message": [
                "JavaDocs and code formatting. No functional change.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1715249 13f79535-47bb-0310-9956-ffa450edef68 src/main/java/org/apache/commons/io/serialization/WildcardClassNameMatcher.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/serialization/WildcardClassNameMatcher.java",
                "Use final for parameters. src/main/java/org/apache/commons/io/serialization/WildcardClassNameMatcher.java"
            ]
        },
        "src/test/java/org/apache/commons/io/serialization/MoreComplexObjectTest.java": {
            "message": [
                "IO-487 - demonstrate blacklist-only in MoreComplexObjectTest\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1715263 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/serialization/MoreComplexObjectTest.java",
                "IO-487 - demonstrate 3 variants in MoreComplexObjectTest\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1715266 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/serialization/MoreComplexObjectTest.java",
                "Add missing '@Override' annotations. src/test/java/org/apache/commons/io/serialization/MoreComplexObjectTest.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/serialization/MoreComplexObjectTest.java",
                "Use final for parameters. src/test/java/org/apache/commons/io/serialization/MoreComplexObjectTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/serialization/MoreComplexObjectTest.java",
                "Don't shadow setup method name in JUnit because the super's version is\nnot called. src/test/java/org/apache/commons/io/serialization/MoreComplexObjectTest.java",
                "Rename test class. src/test/java/org/apache/commons/io/serialization/MoreComplexObjectTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/serialization/MoreComplexObjectTest.java",
                "Add final and remove useless parentheses. src/test/java/org/apache/commons/io/serialization/MoreComplexObjectTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/testtools/TestUtils.java": {
            "message": [
                "Added private and test-scoped sleep method that actually sleeps for a guaranteed minimal time\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1718945 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/testtools/TestUtils.java",
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/testtools/TestUtils.java",
                "replace usage of deprecated IOUtils#closeQuietly with try-with-resources src/test/java/org/apache/commons/io/testtools/TestUtils.java",
                "TestUtils: use try-with-resources instead of deprecated IOUtils#closeQuietly\n\n(side-effect: close #28) src/test/java/org/apache/commons/io/testtools/TestUtils.java",
                "Fix Javadoc typos (closes #30) src/test/java/org/apache/commons/io/testtools/TestUtils.java",
                "Static imports come first. src/test/java/org/apache/commons/io/testtools/TestUtils.java",
                "Use final for parameters. src/test/java/org/apache/commons/io/testtools/TestUtils.java",
                "Consistently use the final modifier with local variables. src/test/java/org/apache/commons/io/testtools/TestUtils.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/testtools/TestUtils.java"
            ]
        },
        "src/test/java/org/apache/commons/io/Java7SupportTest.java": {
            "message": [
                "No can do on windows\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1721328 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/Java7SupportTest.java",
                "Fixed case\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1721347 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/Java7SupportTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/output/AppendableOutputStreamTest.java": {
            "message": [
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/output/AppendableOutputStreamTest.java",
                "remove references to the svn id keyword from javadoc comments (commons-io is now using git) src/test/java/org/apache/commons/io/output/AppendableOutputStreamTest.java",
                "Remove unnecessary casts. src/test/java/org/apache/commons/io/output/AppendableOutputStreamTest.java",
                "Consistently use the final modifier with local variables. src/test/java/org/apache/commons/io/output/AppendableOutputStreamTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/output/AppendableOutputStreamTest.java",
                "Remove unused exceptions and trailing whitespace. src/test/java/org/apache/commons/io/output/AppendableOutputStreamTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/output/AppendableOutputStreamTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/serialization/ClosingBase.java": {
            "message": [
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/serialization/ClosingBase.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/serialization/ClosingBase.java",
                "Use final for parameters. src/test/java/org/apache/commons/io/serialization/ClosingBase.java",
                "Consistently use the final modifier with local variables. src/test/java/org/apache/commons/io/serialization/ClosingBase.java",
                "Use try-with-resources in tests and more.\n\n- Don't nest if you do not have to.\n- Document empty blocks.\n- Only run FileFilterTestCase#testCanExecute() on Windows to fix Jenkins\nbuild. src/test/java/org/apache/commons/io/serialization/ClosingBase.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/serialization/ClosingBase.java",
                "Remove unused exception. src/test/java/org/apache/commons/io/serialization/ClosingBase.java"
            ]
        },
        "src/test/java/org/apache/commons/io/serialization/MoreComplexObject.java": {
            "message": [
                "Updated for Java7 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1746593 13f79535-47bb-0310-9956-ffa450edef68 src/test/java/org/apache/commons/io/serialization/MoreComplexObject.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/serialization/MoreComplexObject.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/ObservableInputStream.java": {
            "message": [
                "Remove redundant type arguments. src/main/java/org/apache/commons/io/input/ObservableInputStream.java",
                "Fix Javadoc typos (closes #30) src/main/java/org/apache/commons/io/input/ObservableInputStream.java",
                "fix checkstyle violations by adding javadoc src/main/java/org/apache/commons/io/input/ObservableInputStream.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/input/ObservableInputStream.java",
                "Use final for parameters. src/main/java/org/apache/commons/io/input/ObservableInputStream.java",
                "enable doclint on java 8+\n\nfix errors reported by java 8 doclint src/main/java/org/apache/commons/io/input/ObservableInputStream.java",
                "Consistently use the final modifier with local variables. src/main/java/org/apache/commons/io/input/ObservableInputStream.java",
                "PR: IO-582\n\nMake methods in ObservableInputStream.Obsever public. src/main/java/org/apache/commons/io/input/ObservableInputStream.java",
                "Javadoc warnings src/main/java/org/apache/commons/io/input/ObservableInputStream.java",
                "Comment empty block. Formatting. src/main/java/org/apache/commons/io/input/ObservableInputStream.java",
                "Remove trailing white spaces on all lines src/main/java/org/apache/commons/io/input/ObservableInputStream.java",
                "[IO-666] Normalize internal buffers to 8192 bytes. src/main/java/org/apache/commons/io/input/ObservableInputStream.java",
                "Javadoc and normalize param names. Line-lengths to 120. src/main/java/org/apache/commons/io/input/ObservableInputStream.java",
                "Javadoc nits. src/main/java/org/apache/commons/io/input/ObservableInputStream.java",
                "Remove trailing whitespace. src/main/java/org/apache/commons/io/input/ObservableInputStream.java",
                "Checkstyle left curly. src/main/java/org/apache/commons/io/input/ObservableInputStream.java",
                "Javadoc. src/main/java/org/apache/commons/io/input/ObservableInputStream.java",
                "Add '@SuppressWarnings(\"unused\") // Possibly thrown from subclasses' to\neliminate compiler warnings. src/main/java/org/apache/commons/io/input/ObservableInputStream.java",
                "Reuse EOF constant.\n\nJavadoc tweaks. Format to max line length. Simplify. src/main/java/org/apache/commons/io/input/ObservableInputStream.java",
                "Internal refactroring. Javadoc. Sort members. src/main/java/org/apache/commons/io/input/ObservableInputStream.java",
                "Remove trailing whitespace. src/main/java/org/apache/commons/io/input/ObservableInputStream.java",
                "Add and use ObservableInputStream.ObservableInputStream(InputStream,\nObserver...). src/main/java/org/apache/commons/io/input/ObservableInputStream.java",
                "Make ObservableInputStream.getObservers() public. src/main/java/org/apache/commons/io/input/ObservableInputStream.java",
                "Add and use IOUtils.byteArray(*). src/main/java/org/apache/commons/io/input/ObservableInputStream.java",
                "Fix infinite loops in ObservableInputStream read(*) when an exception is\ncaught but not re-thrown. src/main/java/org/apache/commons/io/input/ObservableInputStream.java",
                "Use final. Remove trailing whitepace. src/main/java/org/apache/commons/io/input/ObservableInputStream.java",
                "No need to nest in else. src/main/java/org/apache/commons/io/input/ObservableInputStream.java",
                "Javadoc. src/main/java/org/apache/commons/io/input/ObservableInputStream.java",
                "Javadoc. src/main/java/org/apache/commons/io/input/ObservableInputStream.java",
                "Reuse IOUtils.consume() which also avoids a PMD empty loop body error. src/main/java/org/apache/commons/io/input/ObservableInputStream.java",
                "Javadoc: Replace @code with @link src/main/java/org/apache/commons/io/input/ObservableInputStream.java",
                "Use forEach() src/main/java/org/apache/commons/io/input/ObservableInputStream.java",
                "Add and reuse IOConsumer.forEach(*) and forEachIndexed(*).\n\nUse forEach and streams. src/main/java/org/apache/commons/io/input/ObservableInputStream.java",
                "Add and reuse IOConsumer forAll(*), forEach(*) src/main/java/org/apache/commons/io/input/ObservableInputStream.java",
                "Change parameter order of new methods, use var-args, improve tests src/main/java/org/apache/commons/io/input/ObservableInputStream.java"
            ]
        },
        "src/main/java/org/apache/commons/io/ByteOrderFactory.java": {
            "message": [
                "Fixed files in repo with incorrect line endings src/main/java/org/apache/commons/io/ByteOrderFactory.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/ByteOrderFactory.java",
                "Make ByteOrderFactory a static util class src/main/java/org/apache/commons/io/ByteOrderFactory.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/MessageDigestCalculatingInputStream.java": {
            "message": [
                "Fixed files in repo with incorrect line endings src/main/java/org/apache/commons/io/input/MessageDigestCalculatingInputStream.java",
                "MessageDigestCalculatingInputStream: fix javadoc warnings src/main/java/org/apache/commons/io/input/MessageDigestCalculatingInputStream.java",
                "fix checkstyle violations by adding javadoc src/main/java/org/apache/commons/io/input/MessageDigestCalculatingInputStream.java",
                "Remove trailing spaces. src/main/java/org/apache/commons/io/input/MessageDigestCalculatingInputStream.java",
                "Use final for parameters. src/main/java/org/apache/commons/io/input/MessageDigestCalculatingInputStream.java",
                "PR: IO-582\n\nMake methods in ObservableInputStream.Obsever public. src/main/java/org/apache/commons/io/input/MessageDigestCalculatingInputStream.java",
                "Fix broken build (#73)\n\nSeveral things were broken with the build. This fixes build failures and\r\nmakes the build pass again on all Java versions tested on Travis CI.\r\n\r\n1. The test started to fail after the changes made in b5990be. This is\r\n   because after changing the type of writer from Appendable to NullWriter\r\n   the wrong overload of copy would be used:\r\n\r\n    copy(Reader, Writer) instead of copy(Reader, Appendable)\r\n\r\n  This change just forces the right overload at the call site.\r\n\r\n2. Replace tabs with spaces\r\n3. Add missing package-info file\r\n4. Fix NPE during javadoc generation\r\n\r\n  Commons parent 46 shipped with maven-javadoc-plugin 3.0.0 which was\r\n  affected by https://issues.apache.org/jira/browse/MJAVADOC-517.\r\n  This upgrades the build to commons parent 47, which includes\r\n  maven-javadoc-plugin 3.0.1.\r\n\r\n5. Fix invalid javadoc links\r\n6. Fix problem with Javadoc tool reporting import of unnamed modules src/main/java/org/apache/commons/io/input/MessageDigestCalculatingInputStream.java",
                "Javadoc and normalize param names. Line-lengths to 120. src/main/java/org/apache/commons/io/input/MessageDigestCalculatingInputStream.java",
                "Remove trailing whitespace. src/main/java/org/apache/commons/io/input/MessageDigestCalculatingInputStream.java",
                "Add and use ObservableInputStream.ObservableInputStream(InputStream,\nObserver...). src/main/java/org/apache/commons/io/input/MessageDigestCalculatingInputStream.java",
                "Sort members. src/main/java/org/apache/commons/io/input/MessageDigestCalculatingInputStream.java",
                "Refactor for reuse. src/main/java/org/apache/commons/io/input/MessageDigestCalculatingInputStream.java",
                "Javadoc src/main/java/org/apache/commons/io/input/MessageDigestCalculatingInputStream.java",
                "Sort main members src/main/java/org/apache/commons/io/input/MessageDigestCalculatingInputStream.java"
            ]
        },
        "src/test/java/org/apache/commons/io/ByteOrderFactoryTest.java": {
            "message": [
                "Fixed files in repo with incorrect line endings src/test/java/org/apache/commons/io/ByteOrderFactoryTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/MessageDigestCalculatingInputStreamTest.java": {
            "message": [
                "Fixed files in repo with incorrect line endings src/test/java/org/apache/commons/io/input/MessageDigestCalculatingInputStreamTest.java",
                "fix some warnings in tests src/test/java/org/apache/commons/io/input/MessageDigestCalculatingInputStreamTest.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/input/MessageDigestCalculatingInputStreamTest.java",
                "Static imports come first. src/test/java/org/apache/commons/io/input/MessageDigestCalculatingInputStreamTest.java",
                "Use final for parameters. src/test/java/org/apache/commons/io/input/MessageDigestCalculatingInputStreamTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/input/MessageDigestCalculatingInputStreamTest.java",
                "Add StringInputStream. src/test/java/org/apache/commons/io/input/MessageDigestCalculatingInputStreamTest.java",
                "Refactor for reuse. src/test/java/org/apache/commons/io/input/MessageDigestCalculatingInputStreamTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/input/MessageDigestCalculatingInputStreamTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/ObservableInputStreamTest.java": {
            "message": [
                "Fixed files in repo with incorrect line endings src/test/java/org/apache/commons/io/input/ObservableInputStreamTest.java",
                "Remove trailing spaces. src/test/java/org/apache/commons/io/input/ObservableInputStreamTest.java",
                "Static imports come first. src/test/java/org/apache/commons/io/input/ObservableInputStreamTest.java",
                "Use final for parameters. src/test/java/org/apache/commons/io/input/ObservableInputStreamTest.java",
                "Consistently use the final modifier with local variables. src/test/java/org/apache/commons/io/input/ObservableInputStreamTest.java",
                "PR: IO-582\n\nMake methods in ObservableInputStream.Obsever public. src/test/java/org/apache/commons/io/input/ObservableInputStreamTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/input/ObservableInputStreamTest.java",
                "[IO-666] Normalize internal buffers to 8192 bytes. src/test/java/org/apache/commons/io/input/ObservableInputStreamTest.java",
                "Remove unused exceptions. Use try-with-resoruces.\nClean ups. Formatting. src/test/java/org/apache/commons/io/input/ObservableInputStreamTest.java",
                "Use try-with-resources. Fix some formatting. src/test/java/org/apache/commons/io/input/ObservableInputStreamTest.java",
                "Minor Improvement: (#190)\n\n* Add final\r\n* Remove redundant initializer\r\n* simplify conditions src/test/java/org/apache/commons/io/input/ObservableInputStreamTest.java",
                "Sort methods. src/test/java/org/apache/commons/io/input/ObservableInputStreamTest.java",
                "Add and use ObservableInputStream.ObservableInputStream(InputStream,\nObserver...). src/test/java/org/apache/commons/io/input/ObservableInputStreamTest.java",
                "Make ObservableInputStream.getObservers() public. src/test/java/org/apache/commons/io/input/ObservableInputStreamTest.java",
                "No need to call super; remove 'p' prefix. src/test/java/org/apache/commons/io/input/ObservableInputStreamTest.java",
                "More precise testing. src/test/java/org/apache/commons/io/input/ObservableInputStreamTest.java",
                "Add and use IOUtils.byteArray(*). src/test/java/org/apache/commons/io/input/ObservableInputStreamTest.java",
                "Fix infinite loops in ObservableInputStream read(*) when an exception is\ncaught but not re-thrown. src/test/java/org/apache/commons/io/input/ObservableInputStreamTest.java",
                "Use final. Remove trailing whitepace. src/test/java/org/apache/commons/io/input/ObservableInputStreamTest.java",
                "Simplify Assertions (#234) src/test/java/org/apache/commons/io/input/ObservableInputStreamTest.java",
                "Add BrokenInputStream.INSTANCE. src/test/java/org/apache/commons/io/input/ObservableInputStreamTest.java",
                "Add NullOutputStream.INSTANCE and deprecate NULL_OUTPUT_STREAM. src/test/java/org/apache/commons/io/input/ObservableInputStreamTest.java",
                "Add NullInputStream.INSTANCE.\n\nAdd @SuppressWarnings(\"resource\"). src/test/java/org/apache/commons/io/input/ObservableInputStreamTest.java",
                "Organize imports. src/test/java/org/apache/commons/io/input/ObservableInputStreamTest.java",
                "Minor changes: (#287)\n\n* Simplify assertions.\r\n* Replace lambda for reference.\r\n* Remove Unnecessary interface modifier. src/test/java/org/apache/commons/io/input/ObservableInputStreamTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/input/ObservableInputStreamTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/InfiniteCircularInputStream.java": {
            "message": [
                "Remove trailing spaces. src/main/java/org/apache/commons/io/input/InfiniteCircularInputStream.java",
                "Use final for parameters. src/main/java/org/apache/commons/io/input/InfiniteCircularInputStream.java",
                "Remove useless comment.\n\nE-mail thread subject \"[IO] Provenance of copied code in\nInfiniteCircularInputStream\":\nhttps://mail-archives.apache.org/mod_mbox/commons-dev/201811.mbox/%3CCACZkXPw-sd6FLHZseeZDsJ+297bqS6tGUGByiX3wYpmuAgtrfQ@mail.gmail.com%3E src/main/java/org/apache/commons/io/input/InfiniteCircularInputStream.java",
                "Javadoc. src/main/java/org/apache/commons/io/input/InfiniteCircularInputStream.java",
                "Add missing tag. src/main/java/org/apache/commons/io/input/InfiniteCircularInputStream.java",
                "Add org.apache.commons.io.input.CircularInputStream.\n\n[IO-674] InfiniteCircularInputStream is not infinite if its input buffer\ncontains -1.\n\n[IO-675] InfiniteCircularInputStream throws a divide-by-zero exception\nwhen reading if its input buffer is size 0.\n\nUpdate version from 2.7.1-SNAPSHOT to 2.8-SNAPSHOT since we are adding a\nnew public class. src/main/java/org/apache/commons/io/input/InfiniteCircularInputStream.java"
            ]
        },
        "src/test/java/org/apache/commons/io/serialization/MockSerializedClass.java": {
            "message": [
                "Remove trailing spaces. src/test/java/org/apache/commons/io/serialization/MockSerializedClass.java",
                "Use final for parameters. src/test/java/org/apache/commons/io/serialization/MockSerializedClass.java",
                "Sort test members. src/test/java/org/apache/commons/io/serialization/MockSerializedClass.java"
            ]
        },
        "src/test/java/org/apache/commons/io/serialization/RegexpClassNameMatcherTest.java": {
            "message": [
                "Remove trailing spaces. src/test/java/org/apache/commons/io/serialization/RegexpClassNameMatcherTest.java",
                "Consistently use the final modifier with local variables. src/test/java/org/apache/commons/io/serialization/RegexpClassNameMatcherTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/serialization/RegexpClassNameMatcherTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/serialization/RegexpClassNameMatcherTest.java",
                "Use Objects.requireNonNull()\n\nUpdate Javadoc for existing calls. src/test/java/org/apache/commons/io/serialization/RegexpClassNameMatcherTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/InfiniteCircularInputStreamTest.java": {
            "message": [
                "Use final for parameters. src/test/java/org/apache/commons/io/input/InfiniteCircularInputStreamTest.java",
                "Consistently use the final modifier with local variables. src/test/java/org/apache/commons/io/input/InfiniteCircularInputStreamTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/input/InfiniteCircularInputStreamTest.java",
                "Fix method names in test. src/test/java/org/apache/commons/io/input/InfiniteCircularInputStreamTest.java",
                "Add org.apache.commons.io.input.CircularInputStream.\n\n[IO-674] InfiniteCircularInputStream is not infinite if its input buffer\ncontains -1.\n\n[IO-675] InfiniteCircularInputStream throws a divide-by-zero exception\nwhen reading if its input buffer is size 0.\n\nUpdate version from 2.7.1-SNAPSHOT to 2.8-SNAPSHOT since we are adding a\nnew public class. src/test/java/org/apache/commons/io/input/InfiniteCircularInputStreamTest.java",
                "- Simplify array declarations.\n- Javadoc.\n- Use try-with-resources. src/test/java/org/apache/commons/io/input/InfiniteCircularInputStreamTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/serialization/WildcardClassNameMatcherTest.java": {
            "message": [
                "Consistently use the final modifier with local variables. src/test/java/org/apache/commons/io/serialization/WildcardClassNameMatcherTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/serialization/WildcardClassNameMatcherTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/ByteOrderUtils.java": {
            "message": [
                "add javadoc comment to ByteOrderUtils constructor (fixes checkstyle violation) src/main/java/org/apache/commons/io/ByteOrderUtils.java"
            ]
        },
        "src/main/java/org/apache/commons/io/ByteOrderParser.java": {
            "message": [
                "Make checkstyle happy src/main/java/org/apache/commons/io/ByteOrderParser.java",
                "Fix documentation - ByteOrderParser is case sensitive src/main/java/org/apache/commons/io/ByteOrderParser.java",
                "[IO-669] Fix code smells; fix typos (#115)\n\n* fix code smells\r\n\r\n* fix typos\r\n\r\n* l to L\r\n\r\n* use Arrays.fill\r\n\r\n* revert deleting boxing src/main/java/org/apache/commons/io/ByteOrderParser.java",
                "Sort members. src/main/java/org/apache/commons/io/ByteOrderParser.java",
                "Javadoc: Replace @code with @link src/main/java/org/apache/commons/io/ByteOrderParser.java"
            ]
        },
        "src/main/java/org/apache/commons/io/FileSystem.java": {
            "message": [
                "Typo src/main/java/org/apache/commons/io/FileSystem.java",
                "+= isLegalFile(CharSequence) src/main/java/org/apache/commons/io/FileSystem.java",
                "Add test of illegal replacement char src/main/java/org/apache/commons/io/FileSystem.java",
                "Javadoc. src/main/java/org/apache/commons/io/FileSystem.java",
                "[IO-555] Add reserved file names. Impl for Windows only for now. src/main/java/org/apache/commons/io/FileSystem.java",
                "Add missing Javadocs. src/main/java/org/apache/commons/io/FileSystem.java",
                "Sort members. src/main/java/org/apache/commons/io/FileSystem.java",
                "[IO-555] Add reserved file names. Impl for Windows only for now. src/main/java/org/apache/commons/io/FileSystem.java",
                "Javadoc. src/main/java/org/apache/commons/io/FileSystem.java",
                "remove unnecessary semicolon. src/main/java/org/apache/commons/io/FileSystem.java",
                "Modifier 'private' is redundant for enum constructors. (closes #53) src/main/java/org/apache/commons/io/FileSystem.java",
                "Bullet-proofing. src/main/java/org/apache/commons/io/FileSystem.java",
                "Add slots for case sensitivity and case preservation. src/main/java/org/apache/commons/io/FileSystem.java",
                "Remove trailing white spaces on all lines. src/main/java/org/apache/commons/io/FileSystem.java",
                "[IO-677] FileSystem.getCurrent() does not return the correct enum. src/main/java/org/apache/commons/io/FileSystem.java",
                "Add FileSystem#supportsDriveLetter(). src/main/java/org/apache/commons/io/FileSystem.java",
                "Javadoc. src/main/java/org/apache/commons/io/FileSystem.java",
                "Remove trailing whitespace. src/main/java/org/apache/commons/io/FileSystem.java",
                "Minor cleanup. src/main/java/org/apache/commons/io/FileSystem.java",
                "Initialize current FS once. src/main/java/org/apache/commons/io/FileSystem.java",
                "Add FileSystem.getNameSeparator(). src/main/java/org/apache/commons/io/FileSystem.java",
                "Use final; remote trailing whitespace. src/main/java/org/apache/commons/io/FileSystem.java",
                "In-line some single use variables.\n\n- Let requireNonNullChars() be used like Objects.requireNonNull().\n- Format tweaks.\n- Refactor commons code.\n- No need to search some strings twice in separatorsTo*\n- Javadoc close HTML tags. src/main/java/org/apache/commons/io/FileSystem.java",
                "Add FileSystem.normalizeSeparators().\n\nClose Javadoc tags. src/main/java/org/apache/commons/io/FileSystem.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/FileSystem.java",
                "IO-768: Add reserved Windows file names CONIN$ and CONOUT$ to FileSystem (#355) src/main/java/org/apache/commons/io/FileSystem.java",
                "Format tweak. src/main/java/org/apache/commons/io/FileSystem.java",
                "[IO-762] FileSystem.WINDOWS.isReservedFileName doesn't check for file\nextension src/main/java/org/apache/commons/io/FileSystem.java",
                "[IO-762] FileSystem.WINDOWS.isReservedFileName doesn't check for file\nextension src/main/java/org/apache/commons/io/FileSystem.java",
                "Refactor internals for better Unicode processing\n\nAdd FileSystem.getIllegalFileNameCodePoints() src/main/java/org/apache/commons/io/FileSystem.java",
                "Javadoc: Replace @code with @link src/main/java/org/apache/commons/io/FileSystem.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/main/java/org/apache/commons/io/FileSystem.java"
            ]
        },
        "src/test/java/org/apache/commons/io/FileSystemTestCase.java": {
            "message": [
                "Test if arrays are sorted src/test/java/org/apache/commons/io/FileSystemTestCase.java",
                "+= isLegalFile(CharSequence) src/test/java/org/apache/commons/io/FileSystemTestCase.java",
                "Add test of illegal replacement char src/test/java/org/apache/commons/io/FileSystemTestCase.java",
                "[IO-555] Add reserved file names. Impl for Windows only for now. src/test/java/org/apache/commons/io/FileSystemTestCase.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/FileSystemTestCase.java",
                "[IO-677] FileSystem.getCurrent() does not return the correct enum. src/test/java/org/apache/commons/io/FileSystemTestCase.java",
                "Remove trailing white spaces. Use final. src/test/java/org/apache/commons/io/FileSystemTestCase.java",
                "Add FileSystem#supportsDriveLetter(). src/test/java/org/apache/commons/io/FileSystemTestCase.java",
                "- Simplify array declarations.\n- Javadoc.\n- Use try-with-resources. src/test/java/org/apache/commons/io/FileSystemTestCase.java"
            ]
        },
        "src/test/java/org/apache/commons/io/FileUtilsCopyToFileTestCase.java": {
            "message": [
                "Use final. src/test/java/org/apache/commons/io/FileUtilsCopyToFileTestCase.java",
                "Remove trailing white spaces on all lines. src/test/java/org/apache/commons/io/FileUtilsCopyToFileTestCase.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/FileUtilsCopyToFileTestCase.java",
                "Rename test package. src/test/java/org/apache/commons/io/FileUtilsCopyToFileTestCase.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/test/java/org/apache/commons/io/FileUtilsCopyToFileTestCase.java",
                "Sort test members. src/test/java/org/apache/commons/io/FileUtilsCopyToFileTestCase.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/AbstractCharacterFilterReader.java": {
            "message": [
                "Remove trailing white spaces on all lines. src/main/java/org/apache/commons/io/input/AbstractCharacterFilterReader.java",
                "[IO-679] input.AbstractCharacterFilterReader passes count of chars read (#132)\n\nA bug in the read(final char[] cbuf, final int off, final int len)\r\nmethod causes the filter function to receive the count of chars read\r\ninstead of iteratively getting each char code point\r\n\r\nThis affects subclasses CharacterFilterReader and\r\nCharacterSetFilterReader also.\r\n\r\nAdded to tests to cover the bug\r\n\r\nCo-authored-by: Guptan <I23223@poweradvocate.com> src/main/java/org/apache/commons/io/input/AbstractCharacterFilterReader.java",
                "Reuse EOF constant.\n\nJavadoc tweaks. Format to max line length. Simplify. src/main/java/org/apache/commons/io/input/AbstractCharacterFilterReader.java",
                "Prevent infinite loop with AbstractCharacterFilterReader if EOF is\nfiltered out #226.\n\n- Based on PR #226 by Rob Spoor, with an additional (missing) test, and\nclean ups.\n- Add CharacterSetFilterReader.CharacterSetFilterReader(Reader,\nInteger...). src/main/java/org/apache/commons/io/input/AbstractCharacterFilterReader.java",
                "Variation of PR #227 from Rob Spoor (robtimus) but does not add a new\nclass.\n\n- Add AbstractCharacterFilterReader(Reader, IntPredicate).\n- Add CharacterFilterReader(Reader, IntPredicate).\n- Add AbstractCharacterFilterReader(Reader, IntPredicate).\n- Add CharacterFilterReaderIntPredicateTest. src/main/java/org/apache/commons/io/input/AbstractCharacterFilterReader.java",
                "Only create wrapper set once. src/main/java/org/apache/commons/io/input/AbstractCharacterFilterReader.java",
                "Add missing Javadoc. src/main/java/org/apache/commons/io/input/AbstractCharacterFilterReader.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/buffer/CircularBufferInputStream.java": {
            "message": [
                "Javadoc warnings src/main/java/org/apache/commons/io/input/buffer/CircularBufferInputStream.java",
                "Fix broken build (#73)\n\nSeveral things were broken with the build. This fixes build failures and\r\nmakes the build pass again on all Java versions tested on Travis CI.\r\n\r\n1. The test started to fail after the changes made in b5990be. This is\r\n   because after changing the type of writer from Appendable to NullWriter\r\n   the wrong overload of copy would be used:\r\n\r\n    copy(Reader, Writer) instead of copy(Reader, Appendable)\r\n\r\n  This change just forces the right overload at the call site.\r\n\r\n2. Replace tabs with spaces\r\n3. Add missing package-info file\r\n4. Fix NPE during javadoc generation\r\n\r\n  Commons parent 46 shipped with maven-javadoc-plugin 3.0.0 which was\r\n  affected by https://issues.apache.org/jira/browse/MJAVADOC-517.\r\n  This upgrades the build to commons parent 47, which includes\r\n  maven-javadoc-plugin 3.0.1.\r\n\r\n5. Fix invalid javadoc links\r\n6. Fix problem with Javadoc tool reporting import of unnamed modules src/main/java/org/apache/commons/io/input/buffer/CircularBufferInputStream.java",
                "Use final. src/main/java/org/apache/commons/io/input/buffer/CircularBufferInputStream.java",
                "No weird C-like names. src/main/java/org/apache/commons/io/input/buffer/CircularBufferInputStream.java",
                "No weird C-like names. src/main/java/org/apache/commons/io/input/buffer/CircularBufferInputStream.java",
                "[IO-666] Normalize internal buffers to 8192 bytes. src/main/java/org/apache/commons/io/input/buffer/CircularBufferInputStream.java",
                "IO-683 failure to convert byte to unsigned\n\nCircularBufferInputStream.read() fails to convert byte to unsigned int src/main/java/org/apache/commons/io/input/buffer/CircularBufferInputStream.java",
                "Refactor common code, Javadoc, reuse constants, use 120 max line length.\nJavadoc: Sentences end in a period. src/main/java/org/apache/commons/io/input/buffer/CircularBufferInputStream.java",
                "Remove unused exceptions and trailing whitespace. src/main/java/org/apache/commons/io/input/buffer/CircularBufferInputStream.java",
                "Add and use IOUtils.byteArray(*). src/main/java/org/apache/commons/io/input/buffer/CircularBufferInputStream.java",
                "No need to nest in else. src/main/java/org/apache/commons/io/input/buffer/CircularBufferInputStream.java",
                "Sort members. src/main/java/org/apache/commons/io/input/buffer/CircularBufferInputStream.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/main/java/org/apache/commons/io/input/buffer/CircularBufferInputStream.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/buffer/CircularByteBuffer.java": {
            "message": [
                "Javadoc warnings src/main/java/org/apache/commons/io/input/buffer/CircularByteBuffer.java",
                "Fix broken build (#73)\n\nSeveral things were broken with the build. This fixes build failures and\r\nmakes the build pass again on all Java versions tested on Travis CI.\r\n\r\n1. The test started to fail after the changes made in b5990be. This is\r\n   because after changing the type of writer from Appendable to NullWriter\r\n   the wrong overload of copy would be used:\r\n\r\n    copy(Reader, Writer) instead of copy(Reader, Appendable)\r\n\r\n  This change just forces the right overload at the call site.\r\n\r\n2. Replace tabs with spaces\r\n3. Add missing package-info file\r\n4. Fix NPE during javadoc generation\r\n\r\n  Commons parent 46 shipped with maven-javadoc-plugin 3.0.0 which was\r\n  affected by https://issues.apache.org/jira/browse/MJAVADOC-517.\r\n  This upgrades the build to commons parent 47, which includes\r\n  maven-javadoc-plugin 3.0.1.\r\n\r\n5. Fix invalid javadoc links\r\n6. Fix problem with Javadoc tool reporting import of unnamed modules src/main/java/org/apache/commons/io/input/buffer/CircularByteBuffer.java",
                "Use final. src/main/java/org/apache/commons/io/input/buffer/CircularByteBuffer.java",
                "No weird C-like names. src/main/java/org/apache/commons/io/input/buffer/CircularByteBuffer.java",
                "[IO-666] Normalize internal buffers to 8192 bytes. src/main/java/org/apache/commons/io/input/buffer/CircularByteBuffer.java",
                "One declaration per line src/main/java/org/apache/commons/io/input/buffer/CircularByteBuffer.java",
                "Provide an exception message. src/main/java/org/apache/commons/io/input/buffer/CircularByteBuffer.java",
                "Javadoc: Match name. src/main/java/org/apache/commons/io/input/buffer/CircularByteBuffer.java",
                "Remove \"p\" prefix. src/main/java/org/apache/commons/io/input/buffer/CircularByteBuffer.java",
                "Add and use IOUtils.byteArray(*). src/main/java/org/apache/commons/io/input/buffer/CircularByteBuffer.java",
                "Sort members. src/main/java/org/apache/commons/io/input/buffer/CircularByteBuffer.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/buffer/PeekableInputStream.java": {
            "message": [
                "Javadoc warnings src/main/java/org/apache/commons/io/input/buffer/PeekableInputStream.java",
                "Fix broken build (#73)\n\nSeveral things were broken with the build. This fixes build failures and\r\nmakes the build pass again on all Java versions tested on Travis CI.\r\n\r\n1. The test started to fail after the changes made in b5990be. This is\r\n   because after changing the type of writer from Appendable to NullWriter\r\n   the wrong overload of copy would be used:\r\n\r\n    copy(Reader, Writer) instead of copy(Reader, Appendable)\r\n\r\n  This change just forces the right overload at the call site.\r\n\r\n2. Replace tabs with spaces\r\n3. Add missing package-info file\r\n4. Fix NPE during javadoc generation\r\n\r\n  Commons parent 46 shipped with maven-javadoc-plugin 3.0.0 which was\r\n  affected by https://issues.apache.org/jira/browse/MJAVADOC-517.\r\n  This upgrades the build to commons parent 47, which includes\r\n  maven-javadoc-plugin 3.0.1.\r\n\r\n5. Fix invalid javadoc links\r\n6. Fix problem with Javadoc tool reporting import of unnamed modules src/main/java/org/apache/commons/io/input/buffer/PeekableInputStream.java",
                "Use final. src/main/java/org/apache/commons/io/input/buffer/PeekableInputStream.java",
                "No weird C-like names. src/main/java/org/apache/commons/io/input/buffer/PeekableInputStream.java",
                "Refactor common code, Javadoc, reuse constants, use 120 max line length.\nJavadoc: Sentences end in a period. src/main/java/org/apache/commons/io/input/buffer/PeekableInputStream.java",
                "Sort members. src/main/java/org/apache/commons/io/input/buffer/PeekableInputStream.java"
            ]
        },
        "src/main/java/org/apache/commons/io/filefilter/CanExecuteFileFilter.java": {
            "message": [
                "Remove Subversion's \"@version $Id$\". src/main/java/org/apache/commons/io/filefilter/CanExecuteFileFilter.java",
                "Sort members. src/main/java/org/apache/commons/io/filefilter/CanExecuteFileFilter.java",
                "Let org.apache.commons.io.filefilter classes work with\njava.nio.file.Files.walk* APIs.\n\nAlso: AccumulatorPathVisitor does not track directories properly. src/main/java/org/apache/commons/io/filefilter/CanExecuteFileFilter.java",
                "Move new PathFilter interface to the file package, annotate it with\n@FunctionalInterface, and add a BasicFileAttributes parameter to accept\nattributes from java.nio.file.FileVisitor. src/main/java/org/apache/commons/io/filefilter/CanExecuteFileFilter.java",
                "Use negate() instead of not() to match predicate terminology. src/main/java/org/apache/commons/io/filefilter/CanExecuteFileFilter.java",
                "[IO-597] FileUtils.iterateFiles runs out of memory when executed for a\ndirectory with large number of files.\n\nRe-implement FileUtils' iterateFiles(), iterateFilesAndDirs(),\nlistFiles(), listFilesAndDirs() to use NIO file tree walking instead of\nIO file listings to avoid memory consumption issues on large file trees. src/main/java/org/apache/commons/io/filefilter/CanExecuteFileFilter.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/filefilter/CanExecuteFileFilter.java",
                "Fix FileFilterTestCase use case for symbolic links on non-Windows OS.\n\n- Make SymbolicLinkFileFilter configurable:\n-- Add SymbolicLinkFileFilter.SymbolicLinkFileFilter(FileVisitResult,\nFileVisitResult)\n-- Add AbstractFileFilter(FileVisitResult, FileVisitResult)\n- CountingPathVisitor should not follow links by default to properly\ncount from FileUtils. src/main/java/org/apache/commons/io/filefilter/CanExecuteFileFilter.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/filefilter/CanExecuteFileFilter.java",
                "Javadoc: Replace @code with @link src/main/java/org/apache/commons/io/filefilter/CanExecuteFileFilter.java"
            ]
        },
        "src/main/java/org/apache/commons/io/output/NullPrintStream.java": {
            "message": [
                "Javadoc. src/main/java/org/apache/commons/io/output/NullPrintStream.java",
                "[IO-630] Deprecate\n`org.apache.commons.io.output.NullOutputStream.NullOutputStream()` in\nfavor of `org.apache.commons.io.output.NullOutputStream.NULL_OUTPUT_STREAM`. src/main/java/org/apache/commons/io/output/NullPrintStream.java",
                "Add comment and use try-with-resources. src/main/java/org/apache/commons/io/output/NullPrintStream.java",
                "Javadoc. src/main/java/org/apache/commons/io/output/NullPrintStream.java",
                "Better inline comment. src/main/java/org/apache/commons/io/output/NullPrintStream.java",
                "Add NullOutputStream.INSTANCE and deprecate NULL_OUTPUT_STREAM. src/main/java/org/apache/commons/io/output/NullPrintStream.java",
                "Add NullPrintStream.INSTANCE and deprecate NULL_PRINT_STREAM. src/main/java/org/apache/commons/io/output/NullPrintStream.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/output/NullPrintStream.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/buffer/CircularBufferInputStreamTest.java": {
            "message": [
                "Remove trailing white spaces on all lines src/test/java/org/apache/commons/io/input/buffer/CircularBufferInputStreamTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/input/buffer/CircularBufferInputStreamTest.java",
                "[IO-669] Fix code smells; fix typos (#115)\n\n* fix code smells\r\n\r\n* fix typos\r\n\r\n* l to L\r\n\r\n* use Arrays.fill\r\n\r\n* revert deleting boxing src/test/java/org/apache/commons/io/input/buffer/CircularBufferInputStreamTest.java",
                "IO-683 failure to convert byte to unsigned\n\nCircularBufferInputStream.read() fails to convert byte to unsigned int src/test/java/org/apache/commons/io/input/buffer/CircularBufferInputStreamTest.java",
                "IO683 - Fix broken test src/test/java/org/apache/commons/io/input/buffer/CircularBufferInputStreamTest.java",
                "Minor improvement: (#176)\n\n* Add Final\r\n* Unused import\r\n* Unnecessary semicolon src/test/java/org/apache/commons/io/input/buffer/CircularBufferInputStreamTest.java",
                "Fix Typos in JavaDoc, Comments and Tests (#201)\n\n* Fixed incorrect/missing JavaDoc.\r\n\r\n* Fixed misc. typos in comments and tests.\r\n\r\n* Fixed typos in exception messages. src/test/java/org/apache/commons/io/input/buffer/CircularBufferInputStreamTest.java",
                "No need to nest in else. src/test/java/org/apache/commons/io/input/buffer/CircularBufferInputStreamTest.java",
                "- Simplify array declarations.\n- Javadoc.\n- Use try-with-resources. src/test/java/org/apache/commons/io/input/buffer/CircularBufferInputStreamTest.java",
                "Add StringInputStream. src/test/java/org/apache/commons/io/input/buffer/CircularBufferInputStreamTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/input/buffer/CircularBufferInputStreamTest.java",
                "Checkstyle and fix test sources.\n\n- Move Checkstyle configuration from root folder to src/conf.\n- Remove unused imports.\n- Remove trailing whitespace.\n- Adjust line lengths.\n- No tabs.\n- Use final. src/test/java/org/apache/commons/io/input/buffer/CircularBufferInputStreamTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/input/buffer/CircularBufferInputStreamTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/testtools/YellOnCloseOutputStream.java": {
            "message": [
                "Better exception messages. src/test/java/org/apache/commons/io/testtools/YellOnCloseOutputStream.java"
            ]
        },
        "src/test/java/org/apache/commons/io/testtools/YellOnCloseReader.java": {
            "message": [
                "Better exception messages. src/test/java/org/apache/commons/io/testtools/YellOnCloseReader.java"
            ]
        },
        "src/test/java/org/apache/commons/io/testtools/YellOnCloseWriter.java": {
            "message": [
                "Better exception messages. src/test/java/org/apache/commons/io/testtools/YellOnCloseWriter.java",
                "Javadoc standardize \"behaviour\" -> \"behavior\". src/test/java/org/apache/commons/io/testtools/YellOnCloseWriter.java"
            ]
        },
        "src/main/java/org/apache/commons/io/output/AppendableWriter.java": {
            "message": [
                "Javadoc. src/main/java/org/apache/commons/io/output/AppendableWriter.java",
                "Add final and remove useless parentheses. src/main/java/org/apache/commons/io/output/AppendableWriter.java"
            ]
        },
        "src/main/java/org/apache/commons/io/output/ClosedWriter.java": {
            "message": [
                "Comment. src/main/java/org/apache/commons/io/output/ClosedWriter.java",
                "Javadoc. src/main/java/org/apache/commons/io/output/ClosedWriter.java",
                "Add ClosedWriter.INSTANCE and deprected CLOSED_WRITER. src/main/java/org/apache/commons/io/output/ClosedWriter.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/output/ClosedWriter.java"
            ]
        },
        "src/main/java/org/apache/commons/io/IOExceptionList.java": {
            "message": [
                "Javadoc. src/main/java/org/apache/commons/io/IOExceptionList.java",
                "Remove trailing white spaces on all lines src/main/java/org/apache/commons/io/IOExceptionList.java",
                "Use final. src/main/java/org/apache/commons/io/IOExceptionList.java",
                "- Javadoc.\n- Add @SuppressWarnings(\"resource\") for parameter null checks.\n- Better private method name.\n- Format nits. src/main/java/org/apache/commons/io/IOExceptionList.java",
                "Add and use IOExceptionList(String, List). src/main/java/org/apache/commons/io/IOExceptionList.java",
                "Fix compiler warning. src/main/java/org/apache/commons/io/IOExceptionList.java",
                "Fix IndexOutOfBoundsException in IOExceptionList contructors. src/main/java/org/apache/commons/io/IOExceptionList.java",
                "Initialize the message of an IOExceptionList to a default if null. src/main/java/org/apache/commons/io/IOExceptionList.java",
                "Add IOExceptionList.checkEmpty(List, Object). src/main/java/org/apache/commons/io/IOExceptionList.java",
                "Adjust exception message. Javadoc typo. Resue own method. src/main/java/org/apache/commons/io/IOExceptionList.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/BrokenReader.java": {
            "message": [
                "[IO-617] Add classes Added TaggedReader, ClosedReader and BrokenReader.\n#85.\n\n- Javadoc: Close HTML tags.\n- Format: Line width 120. src/main/java/org/apache/commons/io/input/BrokenReader.java",
                "Sort members. src/main/java/org/apache/commons/io/input/BrokenReader.java",
                "Add BrokenReader.INSTANCE. src/main/java/org/apache/commons/io/input/BrokenReader.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/input/BrokenReader.java",
                "Prevent IllegalArgumentExceptions in BrokenInputStream/Reader/OutputStream/Writer (#278)\n\n* BrokenInputStream/Reader/OutputStream/Writer use a supplier to prevent IllegalArgumentExceptions in try-with-resources\r\n\r\n* Processed feedback from PR src/main/java/org/apache/commons/io/input/BrokenReader.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/ClosedReader.java": {
            "message": [
                "[IO-617] Add classes Added TaggedReader, ClosedReader and BrokenReader.\n#85.\n\n- Javadoc: Close HTML tags.\n- Format: Line width 120. src/main/java/org/apache/commons/io/input/ClosedReader.java",
                "Add ClosedReader.INSTANCE and deprecate CLOSED_READER. src/main/java/org/apache/commons/io/input/ClosedReader.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/input/ClosedReader.java",
                "Sort members. src/main/java/org/apache/commons/io/input/ClosedReader.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/TaggedReader.java": {
            "message": [
                "[IO-617] Add classes Added TaggedReader, ClosedReader and BrokenReader.\n#85.\n\n- Javadoc: Close HTML tags.\n- Format: Line width 120. src/main/java/org/apache/commons/io/input/TaggedReader.java",
                "Remove trailing white spaces on all lines src/main/java/org/apache/commons/io/input/TaggedReader.java",
                "Javadoc: Sentences end in a period. src/main/java/org/apache/commons/io/input/TaggedReader.java",
                "Sort members. src/main/java/org/apache/commons/io/input/TaggedReader.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/TaggedReaderTest.java": {
            "message": [
                "[IO-617] Add classes Added TaggedReader, ClosedReader and BrokenReader.\n#85.\n\n- Javadoc: Close HTML tags.\n- Format: Line width 120. src/test/java/org/apache/commons/io/input/TaggedReaderTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/input/TaggedReaderTest.java",
                "Use try-with-resources. src/test/java/org/apache/commons/io/input/TaggedReaderTest.java",
                "Add ClosedReader.INSTANCE and deprecate CLOSED_READER. src/test/java/org/apache/commons/io/input/TaggedReaderTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/input/TaggedReaderTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/input/TaggedReaderTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/output/FilterCollectionWriter.java": {
            "message": [
                "Remove trailing white spaces on all lines src/main/java/org/apache/commons/io/output/FilterCollectionWriter.java",
                "[IO-669] Fix code smells; fix typos (#115)\n\n* fix code smells\r\n\r\n* fix typos\r\n\r\n* l to L\r\n\r\n* use Arrays.fill\r\n\r\n* revert deleting boxing src/main/java/org/apache/commons/io/output/FilterCollectionWriter.java",
                "Add and use IOExceptionList(String, List). src/main/java/org/apache/commons/io/output/FilterCollectionWriter.java",
                "Refactor to avoid creating a new ArrayList on all API calls. src/main/java/org/apache/commons/io/output/FilterCollectionWriter.java",
                "Remove trailing whitespace. src/main/java/org/apache/commons/io/output/FilterCollectionWriter.java",
                "Use final. Remove trailing whitepace. src/main/java/org/apache/commons/io/output/FilterCollectionWriter.java",
                "\"@exception\" -> \"@throws\" src/main/java/org/apache/commons/io/output/FilterCollectionWriter.java",
                "Add IOExceptionList.checkEmpty(List, Object). src/main/java/org/apache/commons/io/output/FilterCollectionWriter.java",
                "Add and reuse IOConsumer.forEach(T[], IOConsumer<T>) and\nforEachIndexed(Stream<T>, IOConsumer<T>) src/main/java/org/apache/commons/io/output/FilterCollectionWriter.java",
                "Use java8 reference (#321) src/main/java/org/apache/commons/io/output/FilterCollectionWriter.java",
                "Refactor duplicate code src/main/java/org/apache/commons/io/output/FilterCollectionWriter.java",
                "Add and reuse IOConsumer forAll(*), forEach(*) src/main/java/org/apache/commons/io/output/FilterCollectionWriter.java",
                "Internal refactoring src/main/java/org/apache/commons/io/output/FilterCollectionWriter.java",
                "Change parameter order of new methods, use var-args, improve tests src/main/java/org/apache/commons/io/output/FilterCollectionWriter.java"
            ]
        },
        "src/main/java/org/apache/commons/io/output/TeeWriter.java": {
            "message": [
                "Remove trailing white spaces on all lines src/main/java/org/apache/commons/io/output/TeeWriter.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/CloseShieldReaderTest.java": {
            "message": [
                "Use final. src/test/java/org/apache/commons/io/input/CloseShieldReaderTest.java",
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/input/CloseShieldReaderTest.java",
                "Replace CloseShield* constructors with factory methods (#173)\n\n* Replace CloseShield* constructors with factory methods\r\n\r\n* Renamed CloseShield*.dontClose to wrap\r\n\r\n* Changed parameter names and tags as requested src/test/java/org/apache/commons/io/input/CloseShieldReaderTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/IOIndexedException.java": {
            "message": [
                "Javadoc. src/main/java/org/apache/commons/io/IOIndexedException.java",
                "Remove trailing white spaces on all lines.\nMore lambdas, less boilerplate. src/main/java/org/apache/commons/io/IOIndexedException.java",
                "[IO-669] Fix code smells; fix typos (#115)\n\n* fix code smells\r\n\r\n* fix typos\r\n\r\n* l to L\r\n\r\n* use Arrays.fill\r\n\r\n* revert deleting boxing src/main/java/org/apache/commons/io/IOIndexedException.java",
                "Sort members. src/main/java/org/apache/commons/io/IOIndexedException.java"
            ]
        },
        "src/test/java/org/apache/commons/io/ByteOrderParserTest.java": {
            "message": [
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/ByteOrderParserTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/FileUtilsCopyDirectoryToDirectoryTestCase.java": {
            "message": [
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/FileUtilsCopyDirectoryToDirectoryTestCase.java",
                "Use Objects.requireNonNull() instead of custom check. src/test/java/org/apache/commons/io/FileUtilsCopyDirectoryToDirectoryTestCase.java",
                "Clean ups. src/test/java/org/apache/commons/io/FileUtilsCopyDirectoryToDirectoryTestCase.java",
                "Refactor FileUtils to create new APIs surfacing CopyOption.\n\n- copyDirectory(File, File, FileFilter, boolean, CopyOption...)\n- copyFile(File, File, boolean, CopyOption...)\n- Sort test methods. src/test/java/org/apache/commons/io/FileUtilsCopyDirectoryToDirectoryTestCase.java",
                "NPE-proof a test that provides AclFileAttributeView on Windows but a\nnull on Linux. src/test/java/org/apache/commons/io/FileUtilsCopyDirectoryToDirectoryTestCase.java",
                "NPE-proof a test that provides AclFileAttributeView on Windows but a\nnull on Linux. src/test/java/org/apache/commons/io/FileUtilsCopyDirectoryToDirectoryTestCase.java",
                "Javadoc. src/test/java/org/apache/commons/io/FileUtilsCopyDirectoryToDirectoryTestCase.java",
                "Move test method as new PathUtils.getAclEntryList(Path). src/test/java/org/apache/commons/io/FileUtilsCopyDirectoryToDirectoryTestCase.java",
                "Better method name. src/test/java/org/apache/commons/io/FileUtilsCopyDirectoryToDirectoryTestCase.java",
                "FileUtils throws IllegalArgumentException for (most) illegal input to\nmethods.\n\n- There are cases where FileNotFoundException is more appropriate and\ncases where we cannot throw FileNotFoundException in order to maintain\nBC.\n- Refactor to reuse private require*() methods.\n- Check for illegal inputs early in methods with\nObjects.requireNonNull() and custom private require() methods.\n- Convert a few unit tests to assertThrows().\n- Fix [IO-699] Wrong logging in FileUtils.setLastModified. src/test/java/org/apache/commons/io/FileUtilsCopyDirectoryToDirectoryTestCase.java"
            ]
        },
        "src/test/java/org/apache/commons/io/IOExceptionListTestCase.java": {
            "message": [
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/IOExceptionListTestCase.java",
                "Quieten test and check it works src/test/java/org/apache/commons/io/IOExceptionListTestCase.java",
                "Remove trailing white spaces. Use final. src/test/java/org/apache/commons/io/IOExceptionListTestCase.java",
                "Add and use IOExceptionList(String, List). src/test/java/org/apache/commons/io/IOExceptionListTestCase.java",
                "Fix IndexOutOfBoundsException in IOExceptionList contructors. src/test/java/org/apache/commons/io/IOExceptionListTestCase.java"
            ]
        },
        "src/test/java/org/apache/commons/io/IOIndexedExceptionTestCase.java": {
            "message": [
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/IOIndexedExceptionTestCase.java",
                "Simplify Assertions (#234) src/test/java/org/apache/commons/io/IOIndexedExceptionTestCase.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/BrokenReaderTest.java": {
            "message": [
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/input/BrokenReaderTest.java",
                "Sort members. src/test/java/org/apache/commons/io/input/BrokenReaderTest.java",
                "Add BrokenReader.INSTANCE. src/test/java/org/apache/commons/io/input/BrokenReaderTest.java",
                "Better ivar name. src/test/java/org/apache/commons/io/input/BrokenReaderTest.java",
                "Rewrite test using JUnit 5 APIs. src/test/java/org/apache/commons/io/input/BrokenReaderTest.java",
                "Add testTryWithResourcesThrows(). src/test/java/org/apache/commons/io/input/BrokenReaderTest.java",
                "Add testTryWithResourcesThrows(). src/test/java/org/apache/commons/io/input/BrokenReaderTest.java",
                "Back out test, I had this test passing locally in Eclipse and failing\nfrom the command line. Weird. src/test/java/org/apache/commons/io/input/BrokenReaderTest.java",
                "Prevent IllegalArgumentExceptions in BrokenInputStream/Reader/OutputStream/Writer (#278)\n\n* BrokenInputStream/Reader/OutputStream/Writer use a supplier to prevent IllegalArgumentExceptions in try-with-resources\r\n\r\n* Processed feedback from PR src/test/java/org/apache/commons/io/input/BrokenReaderTest.java",
                "Checkstyle and fix test sources.\n\n- Move Checkstyle configuration from root folder to src/conf.\n- Remove unused imports.\n- Remove trailing whitespace.\n- Adjust line lengths.\n- No tabs.\n- Use final. src/test/java/org/apache/commons/io/input/BrokenReaderTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/CharacterFilterReaderTest.java": {
            "message": [
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/input/CharacterFilterReaderTest.java",
                "[IO-679] input.AbstractCharacterFilterReader passes count of chars read (#132)\n\nA bug in the read(final char[] cbuf, final int off, final int len)\r\nmethod causes the filter function to receive the count of chars read\r\ninstead of iteratively getting each char code point\r\n\r\nThis affects subclasses CharacterFilterReader and\r\nCharacterSetFilterReader also.\r\n\r\nAdded to tests to cover the bug\r\n\r\nCo-authored-by: Guptan <I23223@poweradvocate.com> src/test/java/org/apache/commons/io/input/CharacterFilterReaderTest.java",
                "Remove trailing white spaces. Use final. src/test/java/org/apache/commons/io/input/CharacterFilterReaderTest.java",
                "Prevent infinite loop with AbstractCharacterFilterReader if EOF is\nfiltered out #226.\n\n- Based on PR #226 by Rob Spoor, with an additional (missing) test, and\nclean ups.\n- Add CharacterSetFilterReader.CharacterSetFilterReader(Reader,\nInteger...). src/test/java/org/apache/commons/io/input/CharacterFilterReaderTest.java",
                "Remove unused exception. src/test/java/org/apache/commons/io/input/CharacterFilterReaderTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/CharacterSetFilterReaderTest.java": {
            "message": [
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/input/CharacterSetFilterReaderTest.java",
                "Suppress some SonarLint warnings src/test/java/org/apache/commons/io/input/CharacterSetFilterReaderTest.java",
                "Revert changes -- wrong branch src/test/java/org/apache/commons/io/input/CharacterSetFilterReaderTest.java",
                "Prevent infinite loop with AbstractCharacterFilterReader if EOF is\nfiltered out #226.\n\n- Based on PR #226 by Rob Spoor, with an additional (missing) test, and\nclean ups.\n- Add CharacterSetFilterReader.CharacterSetFilterReader(Reader,\nInteger...). src/test/java/org/apache/commons/io/input/CharacterSetFilterReaderTest.java",
                "Remove unused exception. src/test/java/org/apache/commons/io/input/CharacterSetFilterReaderTest.java",
                "Use try-with-resources. src/test/java/org/apache/commons/io/input/CharacterSetFilterReaderTest.java",
                "IO-746: dropping unnecessary casts and conversions (#267)\n\nSigned-off-by: Davide Angelocola <davide.angelocola@gmail.com> src/test/java/org/apache/commons/io/input/CharacterSetFilterReaderTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/input/CharacterSetFilterReaderTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/ClosedReaderTest.java": {
            "message": [
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/input/ClosedReaderTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/input/ClosedReaderTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/TeeReaderTest.java": {
            "message": [
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/input/TeeReaderTest.java",
                "Rename test package. src/test/java/org/apache/commons/io/input/TeeReaderTest.java",
                "Rename test classes from \"Yell\" to \"Throw\" prefix. src/test/java/org/apache/commons/io/input/TeeReaderTest.java",
                "Remove unused exceptions and trailing whitespace. src/test/java/org/apache/commons/io/input/TeeReaderTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/output/AppendableWriterTest.java": {
            "message": [
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/output/AppendableWriterTest.java",
                "Remove unused exceptions and trailing whitespace. src/test/java/org/apache/commons/io/output/AppendableWriterTest.java",
                "Add @SuppressWarnings(\"resource\"). src/test/java/org/apache/commons/io/output/AppendableWriterTest.java",
                "Sort members. src/test/java/org/apache/commons/io/output/AppendableWriterTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/output/BrokenWriterTest.java": {
            "message": [
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/output/BrokenWriterTest.java",
                "Rewrite test using JUnit 5 APIs. src/test/java/org/apache/commons/io/output/BrokenWriterTest.java",
                "Add tests to BrokenWriterTest. src/test/java/org/apache/commons/io/output/BrokenWriterTest.java",
                "Add tests to BrokenWriterTest. src/test/java/org/apache/commons/io/output/BrokenWriterTest.java",
                "Prevent IllegalArgumentExceptions in BrokenInputStream/Reader/OutputStream/Writer (#278)\n\n* BrokenInputStream/Reader/OutputStream/Writer use a supplier to prevent IllegalArgumentExceptions in try-with-resources\r\n\r\n* Processed feedback from PR src/test/java/org/apache/commons/io/output/BrokenWriterTest.java",
                "Checkstyle and fix test sources.\n\n- Move Checkstyle configuration from root folder to src/conf.\n- Remove unused imports.\n- Remove trailing whitespace.\n- Adjust line lengths.\n- No tabs.\n- Use final. src/test/java/org/apache/commons/io/output/BrokenWriterTest.java",
                "Sort members. src/test/java/org/apache/commons/io/output/BrokenWriterTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/output/CloseShieldWriterTest.java": {
            "message": [
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/output/CloseShieldWriterTest.java",
                "Replace CloseShield* constructors with factory methods (#173)\n\n* Replace CloseShield* constructors with factory methods\r\n\r\n* Renamed CloseShield*.dontClose to wrap\r\n\r\n* Changed parameter names and tags as requested src/test/java/org/apache/commons/io/output/CloseShieldWriterTest.java",
                "Add NullInputStream.INSTANCE.\n\nAdd @SuppressWarnings(\"resource\"). src/test/java/org/apache/commons/io/output/CloseShieldWriterTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/output/ClosedWriterTest.java": {
            "message": [
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/output/ClosedWriterTest.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/test/java/org/apache/commons/io/output/ClosedWriterTest.java",
                "Remove unused exceptions and trailing whitespace. src/test/java/org/apache/commons/io/output/ClosedWriterTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/output/ClosedWriterTest.java",
                "Migrate from JUnit 4 to 5\n\nException cleanups in tests. src/test/java/org/apache/commons/io/output/ClosedWriterTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/output/NullPrintStreamTest.java": {
            "message": [
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/output/NullPrintStreamTest.java",
                "Add NullPrintStream.INSTANCE and deprecate NULL_PRINT_STREAM. src/test/java/org/apache/commons/io/output/NullPrintStreamTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/output/NullPrintStreamTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/output/ProxyCollectionWriterTest.java": {
            "message": [
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/output/ProxyCollectionWriterTest.java",
                "Plug fresource leaks src/test/java/org/apache/commons/io/output/ProxyCollectionWriterTest.java",
                "Unfortunately close throws src/test/java/org/apache/commons/io/output/ProxyCollectionWriterTest.java",
                "Fix sonarlint warnings src/test/java/org/apache/commons/io/output/ProxyCollectionWriterTest.java",
                "- Simplify array declarations.\n- Javadoc.\n- Use try-with-resources. src/test/java/org/apache/commons/io/output/ProxyCollectionWriterTest.java",
                "Add BrokenWriter.INSTANCE. src/test/java/org/apache/commons/io/output/ProxyCollectionWriterTest.java",
                "Migrate from JUnit 4 to 5\n\nException cleanups in tests. src/test/java/org/apache/commons/io/output/ProxyCollectionWriterTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/output/ProxyCollectionWriterTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/output/TaggedWriterTest.java": {
            "message": [
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/output/TaggedWriterTest.java",
                "Resue ClosedWriter.CLOSED_WRITER. src/test/java/org/apache/commons/io/output/TaggedWriterTest.java",
                "Add ClosedWriter.INSTANCE and deprected CLOSED_WRITER. src/test/java/org/apache/commons/io/output/TaggedWriterTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/output/TaggedWriterTest.java",
                "Migrate from JUnit 4 to 5\n\nException cleanups in tests. src/test/java/org/apache/commons/io/output/TaggedWriterTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/output/TaggedWriterTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/output/TeeWriterTest.java": {
            "message": [
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/output/TeeWriterTest.java",
                "Fix sonarlint warnings src/test/java/org/apache/commons/io/output/TeeWriterTest.java",
                "- Simplify array declarations.\n- Javadoc.\n- Use try-with-resources. src/test/java/org/apache/commons/io/output/TeeWriterTest.java",
                "Add BrokenWriter.INSTANCE. src/test/java/org/apache/commons/io/output/TeeWriterTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/output/TeeWriterTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/serialization/FullClassNameMatcherTest.java": {
            "message": [
                "IO-628: Migration to JUnit Jupiter (#97)\n\n* Use fail instead of throwing an AssertionFailedError\r\n\r\nUse JUnit's Assert#fail in order to fail tests with the proper JUnit\r\nAPI, instead of explicitly throwing the underlying exception.\r\n\r\nThis change makes the tests easier to read and maintain, and will help\r\nfacilitate the migration to JUnit Jupiter.\r\n\r\n* Remove outdate javadoc references to TestCase#setUp()\r\n\r\nIn JUnit 3, in order to run some code before each test, you would\r\nextend junit.framework.TestCase and override its setUp() method.\r\n\r\nIn JUnit 4 this is no longer the case, and you simply need to annotate\r\nthe method with org.junit.Before, as is done in the classes in\r\nquestion.\r\n\r\nThis patch removes old javadoc comments that reference the TestCase\r\nmethod which are no longer relevant, and are probably outdated remains\r\nfrom the days the project used JUnit 3.\r\n\r\n* Standardize org.junit.Assert imports\r\n\r\nThe de-facto standard for using org.junit.Assert methods in the\r\nproject is to statically import its method.\r\nHowever, some places use the class directly and call methods on it.\r\nThis patch standardizes the approach, and makes sure all the usages of\r\norg.junit.Assert statically import methods in order to have a\r\nconsistent coding standard throughout the project's tests.\r\n\r\n* Statically import org.junit.Assume methods\r\n\r\nStatically import methods from org.junit.Assume in order to make its\r\nusages consistent with org.junit.Assert's usage pattern.\r\n\r\n* Migrate test suite to JUnit Jupiter\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this patch does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting test with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.junit-pioneer:junit-pioneer was introduced (see details\r\n    below in section 2.g.).\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.b. and 3.c. for handling\r\n    of @Test annotations with \"expected\" and \"timeout\" arguments\r\n    respectively.\r\n b. org.junit.jupiter.params.ParameterizedTest in conjunction with\r\n    org.junit.jupiter.params.provider.MethodSource was used to\r\n    replace org.juit.Test in test classes run with\r\n    org.junit.runners.Parameterized.\r\n c. org.junit.runners.Parameterized.Parameters annotations were\r\n    removed, and the methods annotated with them were written to\r\n    match the signature expected of a @MethodSource\r\n d. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n e. org.junit.jupiter.api.AfterEach was used as a drop in replacement\r\n    for org.junit.After.\r\n f. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n g. org.junitpioneer.jupiter.DefaultLocale was used as a drop in\r\n    replacement for org.apache.commons.io.testtools.SystemDefaults.\r\n    This annotation comes from the JUnit Pioneer project, and while\r\n    it isn't part of the actual JUnit project, it's widely accepted\r\n    as an extension library for JUnit, and is used in other Apache\r\n    Commons projects, such as Apache Commons Lang.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message.\r\n    In the case of an assertion with a message,\r\n    org.junit.jupiter.api.Assertions' methods were used, but the\r\n    argument order was changed - Assert's methods take the message as\r\n    the first argument, while Assertions' methods take the message as\r\n    the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an \"expected\" argument. This technique has a side\r\n    bonus of making the tests slightly stricter, as now they can\r\n    assert the exception was thrown from a specific line and prevent\r\n    false positives where the test's \"set-up\" code accidentally threw\r\n    that exception.\r\n    The throws clauses of these methods were cleaned up from\r\n    exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.junit.jupiter.api.Assertions#assertTimeout was used to assert\r\n    a specific block of code completes before a timeout is reach\r\n    instead of an org.junit.Test annotation with a \"timeout\"\r\n    argument.\r\n\r\n4. Assumptions\r\n a. org.junit.jupiter.api.Assumptions' methods were used as drop in\r\n    replacements for org.junit.Assume's methods with the same name,\r\n    but the argument order was changed - Assume's methods take the\r\n    message as the first argument, while Assumptions' methods take\r\n    the message as the last argument.\r\n\r\n5. Rules\r\n a. org.junit.jupiter.api.io.TempDir was used instead of the\r\n    org.junit.rules.TemporaryFolder Rule, and the code that used them\r\n    was adapted accordingly.\r\n b. org.apache.commons.io.testtools.SystemDefaultsSwitch was removed\r\n    from the project, and its functionality replaced by\r\n    org.junitpioneer.jupiter.DefaultLocale.\r\n\r\n6. Specific changes:\r\n a. Parameters in JUnit Jupiter (such as those produced by\r\n    MethodSource) can only be applied to @Test methods, not to other\r\n    lifecycle methods, such as @BeforeEach. Thus, the design of\r\n    ReversedLinesFileReaderTestParamFile had to be changed - instead\r\n    of receiving constructor arguments and storing a state in data\r\n    members, it was rewritten to be stateless, and manage all its\r\n    resources in the single test method it has,\r\n    testDataIntegrityWithBufferedReader. As a side bonus, this change\r\n    allows to narrow the scope of open resources, and close them\r\n    immediately after they are no longer needed, instead of\r\n    preserving them in data members until the @After method is\r\n    called.\r\n b. JUnit Jupiter's @TempDir is stricter than JUnit 4's\r\n    @TemporaryFolder, and if it cannot delete any file at the end of\r\n    the test, it will fail the test. FileUtilsCleanDirectoryTestCase's\r\n    methods testThrowsOnNullList and testThrowsOnCannotDeleteFile\r\n    chmod the temporary directory and thus prevent files in it from\r\n    being deleted at the end of the test. A finally block was added to\r\n    these tests in order to chmod the temporary directory back to 755\r\n    and allow it to be deleted. In addition, the restriction of not\r\n    running the test on Windows was changed to use JUnit Jupiter's\r\n    @DisabledOnOs annotation, in order to make the test a tad easier\r\n    to follow.\r\n c. TailerTest has a similar issue to 6.b., where threads opened\r\n    during the test are only closed in the @AfterEach method (by\r\n    calling Tailer#stop), which is too late, since the @TempDir's\r\n    tear down is called (and fails) before hand. Using a shared temp\r\n    dir (by declaring the member static) causes the directory to be\r\n    deleted only when the entire class is finished.\r\n\r\n* Attempt to disable JaCoCo for JDK EA\r\n\r\nThis is done by passing an environment variable in the .travis.yml\r\nfile, and then using it to set the jacoco.skip property in the\r\npom.xml. src/test/java/org/apache/commons/io/serialization/FullClassNameMatcherTest.java",
                "Remove unused exceptions and trailing whitespace. src/test/java/org/apache/commons/io/serialization/FullClassNameMatcherTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/file/CountingFileVisitor.java": {
            "message": [
                "[IO-631] Add a CountingFileVisitor (as the basis for a forthcoming\nDeletingFileVisitor). src/main/java/org/apache/commons/io/file/CountingFileVisitor.java"
            ]
        },
        "src/test/java/org/apache/commons/io/file/CountingFileVisitorTest.java": {
            "message": [
                "[IO-633] Add DeletingFileVisitor.\n\nAlso add a test to CountingFileVisitor. src/test/java/org/apache/commons/io/file/CountingFileVisitorTest.java",
                "[IO-632] Add PathUtils for operations on NIO Path.\n\nRefactor, add PathUtils.deleteDirectory(), add countDirectory(). src/test/java/org/apache/commons/io/file/CountingFileVisitorTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/file/DeletingFileVisitor.java": {
            "message": [
                "Fix checkstyle issues. src/main/java/org/apache/commons/io/file/DeletingFileVisitor.java",
                "[IO-632] Add PathUtils for operations on NIO Path.\n\nMove to file package since Path is in java.nio.file. src/main/java/org/apache/commons/io/file/DeletingFileVisitor.java"
            ]
        },
        "src/test/java/org/apache/commons/io/file/DeletingFileVisitorTest.java": {
            "message": [
                "[IO-632] Add PathUtils for operations on NIO Path.\n\nMove to file package since Path is in java.nio.file. src/test/java/org/apache/commons/io/file/DeletingFileVisitorTest.java",
                "[IO-632] Add PathUtils for operations on NIO Path.\n\nRefactor, add PathUtils.deleteDirectory(), add countDirectory(). src/test/java/org/apache/commons/io/file/DeletingFileVisitorTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/file/PathUtils.java": {
            "message": [
                "[IO-632] Add PathUtils for operations on NIO Path.\n\nRefactor, add PathUtils.deleteDirectory(), add countDirectory(). src/main/java/org/apache/commons/io/file/PathUtils.java",
                "[IO-632] Add PathUtils for operations on NIO Path.\n\nFix test class name and all delete(Path). 100% JaCoCo coverage for the\nwhole package. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "[IO-632] Add PathUtils for operations on NIO Path.\n\nRefactor for counting longs and big integers. Add cleaning visitor. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "[IO-632] Add PathUtils for operations on NIO Path.\n\nAdd PathUtils.cleanDirectory(Path). src/main/java/org/apache/commons/io/file/PathUtils.java",
                "[IO-632] Add PathUtils for operations on NIO Path.\n\nRefactor to add PathUtils.copyDirectory(Path, Path, CopyOption...) src/main/java/org/apache/commons/io/file/PathUtils.java",
                "[IO-632] Add PathUtils for operations on NIO Path.\n\nRefactor to add PathUtils.copyFileToDirectory(Path, Path, CopyOption...) src/main/java/org/apache/commons/io/file/PathUtils.java",
                "[IO-636]\n\n- Add and reuse org.apache.commons.io.IOUtils.closeQuitely(Closeable,\nConsumer<IOException>).\n- [IO-636] Add and reuse org.apache.commons.io.IOUtils.close(Closeable,\nIOConsumer<IOException>). src/main/java/org/apache/commons/io/file/PathUtils.java",
                "[IO-645] Add\norg.apache.commons.io.file.PathUtils.fileContentEquals(Path, Path,\nOpenOption...) src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Implement directory content equality. (#100) src/main/java/org/apache/commons/io/file/PathUtils.java",
                "[IO-648] Implement directory content equality.\n\nIntegrate feedback from Michael Osipov. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "[IO-669] Fix code smells; fix typos (#115)\n\n* fix code smells\r\n\r\n* fix typos\r\n\r\n* l to L\r\n\r\n* use Arrays.fill\r\n\r\n* revert deleting boxing src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Remove trailing whitespace. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Make some simplifications (#121) src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Behavior seems to have changed from 2.6, use\nFileVisitOption.FOLLOW_LINKS to remedy. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "@since. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Label the next version 2.8.0. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Sort members. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Move test method as new PathUtils.getAclEntryList(Path). src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Unused src/main/java/org/apache/commons/io/file/PathUtils.java",
                "[IO-684] Add force version of PathUtils.delete() APIs and friends.\n\n- Add PathUtils.delete(Path, DeleteOption...).\n- Add PathUtils.deleteDirectory(Path, DeleteOption...).\n- Add PathUtils.deleteFile(Path, DeleteOption...).\n- Add PathUtils.setReadOnly(Path, boolean, LinkOption...).\n- Add CleaningPathVisitor.CleaningPathVisitor(PathCounters,\nDeleteOption[], String...).\n- Add DeletingPathVisitor.DeletingPathVisitor(PathCounters,\nDeleteOption[], String...).\n\nSince the NIO APIs in Files class are parameterized with interfaces\nimplemented by enums (e.g. StandardCopyOption implements CopyOption),\nthe new PathUtils APIs here similarly work with a new enum called\nStandardDeleteOption that implements a new DeleteOption interface. This\nallow the API signature to remain stable while additional features can\nbe provided by new enums or adding values to StandardDeleteOption. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Better test assert message. Javadoc fix.\nFollow links when disabling readonly flag for a delete path call. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Repairing build on Linux... reverting old behavior. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Sort members. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Let org.apache.commons.io.filefilter classes work with\njava.nio.file.Files.walk* APIs.\n\nAlso: AccumulatorPathVisitor does not track directories properly. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Simplify new PathFilter interface to a single method. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Move new PathFilter interface to the file package, annotate it with\n@FunctionalInterface, and add a BasicFileAttributes parameter to accept\nattributes from java.nio.file.FileVisitor. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Sort members. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Format and whitespace. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Add a factory method and move test class to proper package. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "New PathFilter no longer throws to play nice with predicates and other\nfunctional interfaces. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Whitespace, use final. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "[IO-597] FileUtils.iterateFiles runs out of memory when executed for a\ndirectory with large number of files.\n\nRe-implement FileUtils' iterateFiles(), iterateFilesAndDirs(),\nlistFiles(), listFilesAndDirs() to use NIO file tree walking instead of\nIO file listings to avoid memory consumption issues on large file trees. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Use final. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Remove trailing whitespace. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Add PathUtils.createParentDirectories(Path, FileAttribute...).\n\nFix XML attribute syntax error in changes.xml. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Use final. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Reimplement some FileUtils internals in terms of refactored PathUtils\nmethods to provide better behavioral compatibility with older versions\nlike 2.6 in the area of deleting read-only file system elements.\n\nAlso clean up some Javadocs. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "IO-692: Fix PathUtils.deleteFile() on symbolic links pointing to non-existing files src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Simplify. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Javadoc. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Fix NPE compiler warning by short circuit. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Better exception message. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Javadoc tweaks. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "[IO-701] Make PathUtils.setReadOnly deal with LinuxDosFileAttributeView. (#186)\n\nAdd FileUtilsDeleteDirectory*TestCases. Use java.nio.file.Files.delete for FileUtils.delete. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "[IO-701] Make PathUtils.setReadOnly deal with LinuxDosFileAttributeView\n#186.\n\nClean ups post PR merge. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Javadoc. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Use Files.notExists() instead of !Files.exists(). src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Fix Javadoc typo. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Javadoc. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Remove unused exceptions and trailing whitespace. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Minor Improvement: (#190)\n\n* Add final\r\n* Remove redundant initializer\r\n* simplify conditions src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Javadoc: Sentences end in a period. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "No need to check if the directory already exists.\n\nFiles.createDirectories() Javadoc states that an exception is not thrown\nif the directory could not be created because it already exists. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Javadoc. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Javadoc. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "[IO-709] Add null-safe variants of Files.isDirectory and Files.isRegularFile (#194)\n\nFixes https://issues.apache.org/jira/browse/IO-709 src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Add and use IOExceptionList(String, List). src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Update some exceptions to UncheckedIOException.\n\nInspired by Boris Unckel's #195 GH PR. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Minor and tweaked refactoring from\nhttps://github.com/apache/commons-io/pull/203 by Andrew Shcheglov\n(ashcheglov on GitHub). src/main/java/org/apache/commons/io/file/PathUtils.java",
                "No need to nest in else. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Minor improvements: (#233)\n\n* Use Method reference\r\n* Use List.sort()\r\n* Change Explicit with <>\r\n* Simplify conditional expression src/main/java/org/apache/commons/io/file/PathUtils.java",
                "- Simplify array declarations.\n- Javadoc.\n- Use try-with-resources. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Minor changes: (#243)\n\n* Remove Unnecessary interface modifier\r\n* Make final var\r\n* Simplify conditions\r\n* Simplify assertions src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Use lambdas. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Use Stream.of(). src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Add PathUtils.readString(Path, Charset). src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Add PathUtils.readString(Path, Charset). src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Javadoc tweaks. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Refactor internals into new methods:\n\n- Add FileUtils.newOutputStream(File, boolean).\n- Add PathUtils.newOutputStream(Path, boolean). src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Add Javadoc see tags. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Add tests for PathUtils.newOutputStream() and fix\nPathUtils.newOutputStream(). src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Add and reuse UncheckedIOExceptions. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Add PathUtils.getTempDirectory(). src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Use final and remove trailing whitespace. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Add AgeFileFilter.AgeFileFilter(Instant, boolean)\n\n- Add PathUtils.isNewer(Path, Instant, LinkOption...)\n- Add PathUtils.isNewer(Path, FileTime, LinkOption...). src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Add PathUtils.waitFor(Path, Duration, LinkOption...). src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Better internal name and Javadoc.\n\nSimple impl for PathUtils#waitFor(). src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Test that the file exists one last time on exit. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Add and use PathUtils.setLastModifiedTime(Path) for better precision.\n\nAdd and use PathUtils.setLastModifiedTime(Path, Path) for better\nprecision. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Add and use PathUtils.isNewer(Path, ChronoZonedDateTime, LinkOption...)\nfor more precision.\n\n- Add and use PathUtils.isNewer(Path, Path) for more precision.\n- Add and use FileUtils.isNewer(File, FileTime) for more precision.\n- Tailer uses more precise file time checks. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Add and use PathUtils.isOlder(Path, FileTime, LinkOption...)\n\n- Add and use PathUtils.isOlder(Path, Instant, LinkOption...)\n- Add and use PathUtils.isOlder(Path, long, LinkOption...)\n- Add and use PathUtils.isOlder(Path, Path)\n- Add FileUtils.byteCountToDisplaySize(Number) src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Add and use PathUtils.sizeOf(Path)\n\n- Add and use PathUtils.sizeOfAsBigInteger(Path)\n- Add and use PathUtils.sizeOfDirectory(Path)\n- Add and use PathUtils.sizeOfDirectoryAsBigInteger(Path)\n- Use assertThrows in tests. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Fix FileFilterTestCase use case for symbolic links on non-Windows OS.\n\n- Make SymbolicLinkFileFilter configurable:\n-- Add SymbolicLinkFileFilter.SymbolicLinkFileFilter(FileVisitResult,\nFileVisitResult)\n-- Add AbstractFileFilter(FileVisitResult, FileVisitResult)\n- CountingPathVisitor should not follow links by default to properly\ncount from FileUtils. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Use NIO internally to avoid using finalizable FileInputStream. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Javadoc. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Javadoc. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Sort members. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "PathUtils.setReadOnly(Path, boolean, LinkOption...) should add READ_*\nfile attributes when using POSIX. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Add PathUtils.writeString(Path, CharSequence, Charset, OpenOption...). src/main/java/org/apache/commons/io/file/PathUtils.java",
                "PathUtils.setReadOnly(Path, boolean, LinkOption...) readOnly argument is\nalways assumed true on POSIX. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Format tweak and use final. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Add PathUtiFiles.getFileAttributeView() shorthands.\n\n- PathUtils.getAclFileAttributeView(Path, LinkOption...)\n- PathUtils.getDosFileAttributeView(Path, LinkOption...)\n- PathUtils.getPosixFileAttributeView(Path, LinkOption...) src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Add PathUtils.isPosix(Path, LinkOption...). (#290)\n\nAdd PathUtils.readAttributes(Path, Class<A>, LinkOption...).\r\n\r\nCo-authored-by: Gary Gregory <ggregory@rocketsoftware.com> src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Clean up new APIs. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "[IO-751] When deleting symlinks, File/PathUtils.deleteDirectory()\nchanges file permissions of the target.\n\n\nFix file permission logic when deleting in override read-only mode. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "[IO-751] When deleting symlinks, File/PathUtils.deleteDirectory()\nchanges file permissions of the target.\n\n\nPOSIX: Deleting a file requires write and execute on the parent. Listing a file also requires reading. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "[IO-751] When deleting symlinks, File/PathUtils.deleteDirectory()\nchanges file permissions of the target.\n\n\nPOSIX: Deleting a file requires write and execute on the parent. Listing a file also requires reading. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "[IO-751] When deleting symlinks, File/PathUtils.deleteDirectory()\nchanges file permissions of the target.\n\n\nPOSIX: Deleting a file requires write and execute on the parent. Listing a file also requires reading. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "[IO-751] When deleting symlinks, File/PathUtils.deleteDirectory()\nchanges file permissions of the target.\n\nPOSIX: Deleting a file requires write and execute on the parent. Listing\na file also requires reading.\n\nLooking for a fix to the Ubuntu failure in the GitHub builds. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Fix Windows builds. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Fix macOS build. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Add PathUtils.createParentDirectories(Path, LinkOption,\nFileAttribute<?>...) src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Restore some behavior based on findings described in\nhttps://github.com/apache/commons-io/pull/324 src/main/java/org/apache/commons/io/file/PathUtils.java",
                "[IO-758] Deprecate PathUtils.NOFOLLOW_LINK_OPTION_ARRAY in favor of\nnoFollowLinkOptionArray(). src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Null-safety when calling PathUtils.createParentDirectories() with a\nLinkOption not equal to NOFOLLOW_LINKS and the path is a root path which\nmeans it has a null parent. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Add missing javadoc for exceptions thrown for invalid arguments (#339) src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Reduce boilerplate through new UncheckedIO class and friends in\norg.apache.commons.io.function. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Sort members src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Add PathUtils.touch(Path)\n\nRefactor src/main/java/org/apache/commons/io/file/PathUtils.java",
                "PMD: ignore empty catch block src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Remove obsolete comments and code src/main/java/org/apache/commons/io/file/PathUtils.java",
                "PMD: Remove unnecessary final src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Enable PMD check in the default Maven goal. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Javadoc: Replace @code with @link src/main/java/org/apache/commons/io/file/PathUtils.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Add PathUtils.getLastModifiedFileTime(*). src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Add and reuse IOConsumer.forEach(*) and forEachIndexed(*).\n\nUse forEach and streams. src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Rename new class src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Fix PathUtils.copyFileToDirectory(URL,Path,CopyOption[]). src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Sort main members src/main/java/org/apache/commons/io/file/PathUtils.java",
                "Move new class and test it explicitly\n\nAs opposed to testing it by running other code. src/main/java/org/apache/commons/io/file/PathUtils.java"
            ]
        },
        "src/main/java/org/apache/commons/io/file/CountingPathFileVisitor.java": {
            "message": [
                "[IO-632] Add PathUtils for operations on NIO Path.\n\nFix test class name and all delete(Path). 100% JaCoCo coverage for the\nwhole package. src/main/java/org/apache/commons/io/file/CountingPathFileVisitor.java"
            ]
        },
        "src/test/java/org/apache/commons/io/file/PathUtilsCountingTest.java": {
            "message": [
                "[IO-632] Add PathUtils for operations on NIO Path.\n\nFix test class name and all delete(Path). 100% JaCoCo coverage for the\nwhole package. src/test/java/org/apache/commons/io/file/PathUtilsCountingTest.java",
                "[IO-632] Add PathUtils for operations on NIO Path.\n\nRefactor for counting longs and big integers. Add cleaning visitor. src/test/java/org/apache/commons/io/file/PathUtilsCountingTest.java",
                "[IO-669] Fix code smells; fix typos (#115)\n\n* fix code smells\r\n\r\n* fix typos\r\n\r\n* l to L\r\n\r\n* use Arrays.fill\r\n\r\n* revert deleting boxing src/test/java/org/apache/commons/io/file/PathUtilsCountingTest.java",
                "Add and use PathUtils.sizeOf(Path)\n\n- Add and use PathUtils.sizeOfAsBigInteger(Path)\n- Add and use PathUtils.sizeOfDirectory(Path)\n- Add and use PathUtils.sizeOfDirectoryAsBigInteger(Path)\n- Use assertThrows in tests. src/test/java/org/apache/commons/io/file/PathUtilsCountingTest.java",
                "Use JUnit TempDir instead of custom code. src/test/java/org/apache/commons/io/file/PathUtilsCountingTest.java",
                "Revert \"Use JUnit TempDir instead of custom code.\"\n\nThis reverts commit ebf06ea477399a778564d2bc60422f652b89989f. src/test/java/org/apache/commons/io/file/PathUtilsCountingTest.java",
                "Rework some tests such that temporary files and directories are as\nshort-lived as possible, also use try-with-resources to make sure temps\nare deleted at the end of a test.\n\nPut all of this under test source tree for now, even the reusable\nclasses. src/test/java/org/apache/commons/io/file/PathUtilsCountingTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/file/PathUtilsCountingTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/file/PathUtilsDeleteDirectoryTest.java": {
            "message": [
                "[IO-632] Add PathUtils for operations on NIO Path.\n\nRefactor for counting longs and big integers. Add cleaning visitor. src/test/java/org/apache/commons/io/file/PathUtilsDeleteDirectoryTest.java",
                "[IO-632] Add PathUtils for operations on NIO Path.\n\nRefactor to add PathUtils.copyDirectory(Path, Path, CopyOption...) src/test/java/org/apache/commons/io/file/PathUtilsDeleteDirectoryTest.java",
                "[IO-632] Add PathUtils for operations on NIO Path.\n\nRefactor to add PathUtils.copyFileToDirectory(Path, Path, CopyOption...) src/test/java/org/apache/commons/io/file/PathUtilsDeleteDirectoryTest.java",
                "[IO-669] Fix code smells; fix typos (#115)\n\n* fix code smells\r\n\r\n* fix typos\r\n\r\n* l to L\r\n\r\n* use Arrays.fill\r\n\r\n* revert deleting boxing src/test/java/org/apache/commons/io/file/PathUtilsDeleteDirectoryTest.java",
                "[IO-684] Add force version of PathUtils.delete() APIs and friends.\n\n- Add PathUtils.delete(Path, DeleteOption...).\n- Add PathUtils.deleteDirectory(Path, DeleteOption...).\n- Add PathUtils.deleteFile(Path, DeleteOption...).\n- Add PathUtils.setReadOnly(Path, boolean, LinkOption...).\n- Add CleaningPathVisitor.CleaningPathVisitor(PathCounters,\nDeleteOption[], String...).\n- Add DeletingPathVisitor.DeletingPathVisitor(PathCounters,\nDeleteOption[], String...).\n\nSince the NIO APIs in Files class are parameterized with interfaces\nimplemented by enums (e.g. StandardCopyOption implements CopyOption),\nthe new PathUtils APIs here similarly work with a new enum called\nStandardDeleteOption that implements a new DeleteOption interface. This\nallow the API signature to remain stable while additional features can\nbe provided by new enums or adding values to StandardDeleteOption. src/test/java/org/apache/commons/io/file/PathUtilsDeleteDirectoryTest.java",
                "Deprecate IOUtils.LINE_SEPARATOR in favor of Java 7's\nSystem.lineSeparator().\n\n- Remove unused imports.\n- Fix compiler warnings by using try-with-resources.\n- Document empty block.\n- Remove checked exceptions from test methods that do not throw them. src/test/java/org/apache/commons/io/file/PathUtilsDeleteDirectoryTest.java",
                "[IO-751] When deleting symlinks, File/PathUtils.deleteDirectory()\nchanges file permissions of the target.\n\n\nFix file permission logic when deleting in override read-only mode. src/test/java/org/apache/commons/io/file/PathUtilsDeleteDirectoryTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/file/PathUtilsDeleteFileTest.java": {
            "message": [
                "[IO-632] Add PathUtils for operations on NIO Path.\n\nRefactor for counting longs and big integers. Add cleaning visitor. src/test/java/org/apache/commons/io/file/PathUtilsDeleteFileTest.java",
                "[IO-632] Add PathUtils for operations on NIO Path.\n\nRefactor to add PathUtils.copyFileToDirectory(Path, Path, CopyOption...) src/test/java/org/apache/commons/io/file/PathUtilsDeleteFileTest.java",
                "[IO-684] Add force version of PathUtils.delete() APIs and friends.\n\n- Add PathUtils.delete(Path, DeleteOption...).\n- Add PathUtils.deleteDirectory(Path, DeleteOption...).\n- Add PathUtils.deleteFile(Path, DeleteOption...).\n- Add PathUtils.setReadOnly(Path, boolean, LinkOption...).\n- Add CleaningPathVisitor.CleaningPathVisitor(PathCounters,\nDeleteOption[], String...).\n- Add DeletingPathVisitor.DeletingPathVisitor(PathCounters,\nDeleteOption[], String...).\n\nSince the NIO APIs in Files class are parameterized with interfaces\nimplemented by enums (e.g. StandardCopyOption implements CopyOption),\nthe new PathUtils APIs here similarly work with a new enum called\nStandardDeleteOption that implements a new DeleteOption interface. This\nallow the API signature to remain stable while additional features can\nbe provided by new enums or adding values to StandardDeleteOption. src/test/java/org/apache/commons/io/file/PathUtilsDeleteFileTest.java",
                "IO-692: Fix PathUtils.deleteFile() on symbolic links pointing to non-existing files src/test/java/org/apache/commons/io/file/PathUtilsDeleteFileTest.java",
                "Use final. src/test/java/org/apache/commons/io/file/PathUtilsDeleteFileTest.java",
                "Make public and reuse IOUtils.EMPTY_BYTE_ARRAY. src/test/java/org/apache/commons/io/file/PathUtilsDeleteFileTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/file/PathUtilsDeleteFileTest.java",
                "PathUtils.setReadOnly(Path, boolean, LinkOption...) readOnly argument is\nalways assumed true on POSIX. src/test/java/org/apache/commons/io/file/PathUtilsDeleteFileTest.java",
                "Oops, used assertTrue() instead of assumeTrue(). src/test/java/org/apache/commons/io/file/PathUtilsDeleteFileTest.java",
                "Move test method to better location. src/test/java/org/apache/commons/io/file/PathUtilsDeleteFileTest.java",
                "Checkstyle and fix test sources.\n\n- Move Checkstyle configuration from root folder to src/conf.\n- Remove unused imports.\n- Remove trailing whitespace.\n- Adjust line lengths.\n- No tabs.\n- Use final. src/test/java/org/apache/commons/io/file/PathUtilsDeleteFileTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/file/PathUtilsDeleteTest.java": {
            "message": [
                "[IO-632] Add PathUtils for operations on NIO Path.\n\nRefactor for counting longs and big integers. Add cleaning visitor. src/test/java/org/apache/commons/io/file/PathUtilsDeleteTest.java",
                "[IO-684] Add force version of PathUtils.delete() APIs and friends.\n\n- Add PathUtils.delete(Path, DeleteOption...).\n- Add PathUtils.deleteDirectory(Path, DeleteOption...).\n- Add PathUtils.deleteFile(Path, DeleteOption...).\n- Add PathUtils.setReadOnly(Path, boolean, LinkOption...).\n- Add CleaningPathVisitor.CleaningPathVisitor(PathCounters,\nDeleteOption[], String...).\n- Add DeletingPathVisitor.DeletingPathVisitor(PathCounters,\nDeleteOption[], String...).\n\nSince the NIO APIs in Files class are parameterized with interfaces\nimplemented by enums (e.g. StandardCopyOption implements CopyOption),\nthe new PathUtils APIs here similarly work with a new enum called\nStandardDeleteOption that implements a new DeleteOption interface. This\nallow the API signature to remain stable while additional features can\nbe provided by new enums or adding values to StandardDeleteOption. src/test/java/org/apache/commons/io/file/PathUtilsDeleteTest.java",
                "Deprecate IOUtils.LINE_SEPARATOR in favor of Java 7's\nSystem.lineSeparator().\n\n- Remove unused imports.\n- Fix compiler warnings by using try-with-resources.\n- Document empty block.\n- Remove checked exceptions from test methods that do not throw them. src/test/java/org/apache/commons/io/file/PathUtilsDeleteTest.java",
                "[IO-751] When deleting symlinks, File/PathUtils.deleteDirectory()\nchanges file permissions of the target.\n\n\nFix file permission logic when deleting in override read-only mode. src/test/java/org/apache/commons/io/file/PathUtilsDeleteTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/file/PathUtilsIsEmptyTest.java": {
            "message": [
                "[IO-632] Add PathUtils for operations on NIO Path.\n\nRefactor for counting longs and big integers. Add cleaning visitor. src/test/java/org/apache/commons/io/file/PathUtilsIsEmptyTest.java",
                "FIx test method name. src/test/java/org/apache/commons/io/file/PathUtilsIsEmptyTest.java",
                "Add FileUtils.isEmptyDirectory(File). src/test/java/org/apache/commons/io/file/PathUtilsIsEmptyTest.java",
                "Use JUnit TempDir instead of custom code. src/test/java/org/apache/commons/io/file/PathUtilsIsEmptyTest.java",
                "Revert \"Use JUnit TempDir instead of custom code.\"\n\nThis reverts commit ebf06ea477399a778564d2bc60422f652b89989f. src/test/java/org/apache/commons/io/file/PathUtilsIsEmptyTest.java",
                "Rework some tests such that temporary files and directories are as\nshort-lived as possible, also use try-with-resources to make sure temps\nare deleted at the end of a test.\n\nPut all of this under test source tree for now, even the reusable\nclasses. src/test/java/org/apache/commons/io/file/PathUtilsIsEmptyTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/file/PathUtilsIsEmptyTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/file/Counters.java": {
            "message": [
                "[IO-632] Add PathUtils for operations on NIO Path.\n\nAdd PathUtils.cleanDirectory(Path). src/main/java/org/apache/commons/io/file/Counters.java",
                "Implement hashCode() and equals() on counters. src/main/java/org/apache/commons/io/file/Counters.java",
                "Implement hashCode() and equals() on counters. src/main/java/org/apache/commons/io/file/Counters.java",
                "Remove trailing white spaces. Use final. src/main/java/org/apache/commons/io/file/Counters.java",
                "Make private classes final. src/main/java/org/apache/commons/io/file/Counters.java",
                "Let org.apache.commons.io.filefilter classes work with\njava.nio.file.Files.walk* APIs.\n\nAlso: AccumulatorPathVisitor does not track directories properly. src/main/java/org/apache/commons/io/file/Counters.java",
                "Remove redundant calls to super(). src/main/java/org/apache/commons/io/file/Counters.java",
                "Nicer Javadoc. src/main/java/org/apache/commons/io/file/Counters.java",
                "Add toString(). src/main/java/org/apache/commons/io/file/Counters.java",
                "Sort members. src/main/java/org/apache/commons/io/file/Counters.java",
                "Format to longer lines. src/main/java/org/apache/commons/io/file/Counters.java",
                "Javadoc src/main/java/org/apache/commons/io/file/Counters.java"
            ]
        },
        "src/main/java/org/apache/commons/io/file/CountingPathVisitor.java": {
            "message": [
                "[IO-632] Add PathUtils for operations on NIO Path.\n\nAdd PathUtils.cleanDirectory(Path). src/main/java/org/apache/commons/io/file/CountingPathVisitor.java",
                "[IO-632] Add PathUtils for operations on NIO Path.\n\nRefactor to add PathUtils.copyDirectory(Path, Path, CopyOption...) src/main/java/org/apache/commons/io/file/CountingPathVisitor.java",
                "Implement hashCode() and equals() on path counters. src/main/java/org/apache/commons/io/file/CountingPathVisitor.java",
                "Remove trailing white spaces. Use final. src/main/java/org/apache/commons/io/file/CountingPathVisitor.java",
                "Let org.apache.commons.io.filefilter classes work with\njava.nio.file.Files.walk* APIs.\n\nAlso: AccumulatorPathVisitor does not track directories properly. src/main/java/org/apache/commons/io/file/CountingPathVisitor.java",
                "Only accumulate files and dirs accepted by the filter. src/main/java/org/apache/commons/io/file/CountingPathVisitor.java",
                "Simplify new PathFilter interface to a single method. src/main/java/org/apache/commons/io/file/CountingPathVisitor.java",
                "Move new PathFilter interface to the file package, annotate it with\n@FunctionalInterface, and add a BasicFileAttributes parameter to accept\nattributes from java.nio.file.FileVisitor. src/main/java/org/apache/commons/io/file/CountingPathVisitor.java",
                "[IO-597] FileUtils.iterateFiles runs out of memory when executed for a\ndirectory with large number of files.\n\nRe-implement FileUtils' iterateFiles(), iterateFilesAndDirs(),\nlistFiles(), listFilesAndDirs() to use NIO file tree walking instead of\nIO file listings to avoid memory consumption issues on large file trees. src/main/java/org/apache/commons/io/file/CountingPathVisitor.java",
                "Use final. src/main/java/org/apache/commons/io/file/CountingPathVisitor.java",
                "Remove redundant calls to super(). src/main/java/org/apache/commons/io/file/CountingPathVisitor.java",
                "Remove unused exceptions and trailing whitespace. src/main/java/org/apache/commons/io/file/CountingPathVisitor.java",
                "- Simplify array declarations.\n- Javadoc.\n- Use try-with-resources. src/main/java/org/apache/commons/io/file/CountingPathVisitor.java",
                "Nicer Javadoc. src/main/java/org/apache/commons/io/file/CountingPathVisitor.java",
                "Fix FileFilterTestCase use case for symbolic links on non-Windows OS.\n\n- Make SymbolicLinkFileFilter configurable:\n-- Add SymbolicLinkFileFilter.SymbolicLinkFileFilter(FileVisitResult,\nFileVisitResult)\n-- Add AbstractFileFilter(FileVisitResult, FileVisitResult)\n- CountingPathVisitor should not follow links by default to properly\ncount from FileUtils. src/main/java/org/apache/commons/io/file/CountingPathVisitor.java",
                "Add option for AccumulatorPathVisitor to ignore file visitation failures src/main/java/org/apache/commons/io/file/CountingPathVisitor.java"
            ]
        },
        "src/test/java/org/apache/commons/io/file/CleaningPathVisitorTest.java": {
            "message": [
                "[IO-632] Add PathUtils for operations on NIO Path.\n\nAdd PathUtils.cleanDirectory(Path). src/test/java/org/apache/commons/io/file/CleaningPathVisitorTest.java",
                "[IO-632] Add PathUtils for operations on NIO Path.\n\nRefactor to add PathUtils.copyDirectory(Path, Path, CopyOption...) src/test/java/org/apache/commons/io/file/CleaningPathVisitorTest.java",
                "[IO-632] Add PathUtils for operations on NIO Path.\n\nRefactor to add PathUtils.copyFileToDirectory(Path, Path, CopyOption...) src/test/java/org/apache/commons/io/file/CleaningPathVisitorTest.java",
                "[IO-669] Fix code smells; fix typos (#115)\n\n* fix code smells\r\n\r\n* fix typos\r\n\r\n* l to L\r\n\r\n* use Arrays.fill\r\n\r\n* revert deleting boxing src/test/java/org/apache/commons/io/file/CleaningPathVisitorTest.java",
                "Use JUnit TempDir instead of custom code. src/test/java/org/apache/commons/io/file/CleaningPathVisitorTest.java",
                "Revert \"Use JUnit TempDir instead of custom code.\"\n\nThis reverts commit ebf06ea477399a778564d2bc60422f652b89989f. src/test/java/org/apache/commons/io/file/CleaningPathVisitorTest.java",
                "Use JUnit TempDir instead of custom code. src/test/java/org/apache/commons/io/file/CleaningPathVisitorTest.java",
                "Revert \"Use JUnit TempDir instead of custom code.\"\n\nThis reverts commit a86e5461fc7f17ee1405e9a595515b4213849d57. src/test/java/org/apache/commons/io/file/CleaningPathVisitorTest.java",
                "Revert \"Revert \"Use JUnit TempDir instead of custom code.\"\"\n\nThis reverts commit a149541f412eaa87d9d8d6fcf1a8227d6f2aa04f. src/test/java/org/apache/commons/io/file/CleaningPathVisitorTest.java",
                "Revert \"Revert \"Revert \"Use JUnit TempDir instead of custom code.\"\"\"\n\nThis reverts commit d76cf38ad7296bf8eb26ce792c13d65f81c0e29a. src/test/java/org/apache/commons/io/file/CleaningPathVisitorTest.java",
                "Rework some tests such that temporary files and directories are as\nshort-lived as possible, also use try-with-resources to make sure temps\nare deleted at the end of a test.\n\nPut all of this under test source tree for now, even the reusable\nclasses. src/test/java/org/apache/commons/io/file/CleaningPathVisitorTest.java",
                "Add missing CleaningPathVisitor tests src/test/java/org/apache/commons/io/file/CleaningPathVisitorTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/file/DeletingPathVisitorTest.java": {
            "message": [
                "[IO-632] Add PathUtils for operations on NIO Path.\n\nAdd PathUtils.cleanDirectory(Path). src/test/java/org/apache/commons/io/file/DeletingPathVisitorTest.java",
                "[IO-632] Add PathUtils for operations on NIO Path.\n\nRefactor to add PathUtils.copyDirectory(Path, Path, CopyOption...) src/test/java/org/apache/commons/io/file/DeletingPathVisitorTest.java",
                "[IO-632] Add PathUtils for operations on NIO Path.\n\nRefactor to add PathUtils.copyFileToDirectory(Path, Path, CopyOption...) src/test/java/org/apache/commons/io/file/DeletingPathVisitorTest.java",
                "[IO-669] Fix code smells; fix typos (#115)\n\n* fix code smells\r\n\r\n* fix typos\r\n\r\n* l to L\r\n\r\n* use Arrays.fill\r\n\r\n* revert deleting boxing src/test/java/org/apache/commons/io/file/DeletingPathVisitorTest.java",
                "Use JUnit TempDir instead of custom code. src/test/java/org/apache/commons/io/file/DeletingPathVisitorTest.java",
                "Revert \"Use JUnit TempDir instead of custom code.\"\n\nThis reverts commit ebf06ea477399a778564d2bc60422f652b89989f. src/test/java/org/apache/commons/io/file/DeletingPathVisitorTest.java",
                "Use JUnit TempDir instead of custom code. src/test/java/org/apache/commons/io/file/DeletingPathVisitorTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/file/TestArguments.java": {
            "message": [
                "[IO-632] Add PathUtils for operations on NIO Path.\n\nAdd PathUtils.cleanDirectory(Path). src/test/java/org/apache/commons/io/file/TestArguments.java"
            ]
        },
        "src/main/java/org/apache/commons/io/file/CleaningPathVisitor.java": {
            "message": [
                "[IO-632] Add PathUtils for operations on NIO Path.\n\nRefactor to add PathUtils.copyDirectory(Path, Path, CopyOption...) src/main/java/org/apache/commons/io/file/CleaningPathVisitor.java",
                "Avoid possible NPEs. src/main/java/org/apache/commons/io/file/CleaningPathVisitor.java",
                "[IO-684] Add force version of PathUtils.delete() APIs and friends.\n\n- Add PathUtils.delete(Path, DeleteOption...).\n- Add PathUtils.deleteDirectory(Path, DeleteOption...).\n- Add PathUtils.deleteFile(Path, DeleteOption...).\n- Add PathUtils.setReadOnly(Path, boolean, LinkOption...).\n- Add CleaningPathVisitor.CleaningPathVisitor(PathCounters,\nDeleteOption[], String...).\n- Add DeletingPathVisitor.DeletingPathVisitor(PathCounters,\nDeleteOption[], String...).\n\nSince the NIO APIs in Files class are parameterized with interfaces\nimplemented by enums (e.g. StandardCopyOption implements CopyOption),\nthe new PathUtils APIs here similarly work with a new enum called\nStandardDeleteOption that implements a new DeleteOption interface. This\nallow the API signature to remain stable while additional features can\nbe provided by new enums or adding values to StandardDeleteOption. src/main/java/org/apache/commons/io/file/CleaningPathVisitor.java",
                "Fix SpotBugs issues.\n\n- [ERROR] Medium: org.apache.commons.io.file.CleaningPathVisitor doesn't\noverride CountingPathVisitor.equals(Object)\n[org.apache.commons.io.file.CleaningPathVisitor] At\nCleaningPathVisitor.java:[line 1] EQ_DOESNT_OVERRIDE_EQUALS\n- [ERROR] Medium: org.apache.commons.io.file.CopyDirectoryVisitor\ndoesn't override CountingPathVisitor.equals(Object)\n[org.apache.commons.io.file.CopyDirectoryVisitor] At\nCopyDirectoryVisitor.java:[line 1] EQ_DOESNT_OVERRIDE_EQUALS\n- [ERROR] Medium: org.apache.commons.io.file.DeletingPathVisitor doesn't\noverride CountingPathVisitor.equals(Object)\n[org.apache.commons.io.file.DeletingPathVisitor] At\nDeletingPathVisitor.java:[line 1] EQ_DOESNT_OVERRIDE_EQUALS src/main/java/org/apache/commons/io/file/CleaningPathVisitor.java",
                "Reimplement some FileUtils internals in terms of refactored PathUtils\nmethods to provide better behavioral compatibility with older versions\nlike 2.6 in the area of deleting read-only file system elements.\n\nAlso clean up some Javadocs. src/main/java/org/apache/commons/io/file/CleaningPathVisitor.java",
                "Format to longer lines. src/main/java/org/apache/commons/io/file/CleaningPathVisitor.java"
            ]
        },
        "src/main/java/org/apache/commons/io/file/DeletingPathVisitor.java": {
            "message": [
                "[IO-632] Add PathUtils for operations on NIO Path.\n\nRefactor to add PathUtils.copyDirectory(Path, Path, CopyOption...) src/main/java/org/apache/commons/io/file/DeletingPathVisitor.java",
                "Avoid possible NPEs. src/main/java/org/apache/commons/io/file/DeletingPathVisitor.java",
                "[IO-684] Add force version of PathUtils.delete() APIs and friends.\n\n- Add PathUtils.delete(Path, DeleteOption...).\n- Add PathUtils.deleteDirectory(Path, DeleteOption...).\n- Add PathUtils.deleteFile(Path, DeleteOption...).\n- Add PathUtils.setReadOnly(Path, boolean, LinkOption...).\n- Add CleaningPathVisitor.CleaningPathVisitor(PathCounters,\nDeleteOption[], String...).\n- Add DeletingPathVisitor.DeletingPathVisitor(PathCounters,\nDeleteOption[], String...).\n\nSince the NIO APIs in Files class are parameterized with interfaces\nimplemented by enums (e.g. StandardCopyOption implements CopyOption),\nthe new PathUtils APIs here similarly work with a new enum called\nStandardDeleteOption that implements a new DeleteOption interface. This\nallow the API signature to remain stable while additional features can\nbe provided by new enums or adding values to StandardDeleteOption. src/main/java/org/apache/commons/io/file/DeletingPathVisitor.java",
                "Fix SpotBugs issues.\n\n- [ERROR] Medium: org.apache.commons.io.file.CleaningPathVisitor doesn't\noverride CountingPathVisitor.equals(Object)\n[org.apache.commons.io.file.CleaningPathVisitor] At\nCleaningPathVisitor.java:[line 1] EQ_DOESNT_OVERRIDE_EQUALS\n- [ERROR] Medium: org.apache.commons.io.file.CopyDirectoryVisitor\ndoesn't override CountingPathVisitor.equals(Object)\n[org.apache.commons.io.file.CopyDirectoryVisitor] At\nCopyDirectoryVisitor.java:[line 1] EQ_DOESNT_OVERRIDE_EQUALS\n- [ERROR] Medium: org.apache.commons.io.file.DeletingPathVisitor doesn't\noverride CountingPathVisitor.equals(Object)\n[org.apache.commons.io.file.DeletingPathVisitor] At\nDeletingPathVisitor.java:[line 1] EQ_DOESNT_OVERRIDE_EQUALS src/main/java/org/apache/commons/io/file/DeletingPathVisitor.java",
                "Remove extra blank line. src/main/java/org/apache/commons/io/file/DeletingPathVisitor.java",
                "Refactor internals link options, no functional change. src/main/java/org/apache/commons/io/file/DeletingPathVisitor.java",
                "Reimplement some FileUtils internals in terms of refactored PathUtils\nmethods to provide better behavioral compatibility with older versions\nlike 2.6 in the area of deleting read-only file system elements.\n\nAlso clean up some Javadocs. src/main/java/org/apache/commons/io/file/DeletingPathVisitor.java",
                "IO-702 FileUtils.forceDelete does not delete invalid links. Testcase and fix (#187) src/main/java/org/apache/commons/io/file/DeletingPathVisitor.java",
                "[IO-702] FileUtils.forceDelete does not delete invalid links. Testcase \u2026\n#187. src/main/java/org/apache/commons/io/file/DeletingPathVisitor.java",
                "Minor Improvement: (#190)\n\n* Add final\r\n* Remove redundant initializer\r\n* simplify conditions src/main/java/org/apache/commons/io/file/DeletingPathVisitor.java",
                "Format to longer lines. src/main/java/org/apache/commons/io/file/DeletingPathVisitor.java",
                "[IO-758] Deprecate PathUtils.NOFOLLOW_LINK_OPTION_ARRAY in favor of\nnoFollowLinkOptionArray(). src/main/java/org/apache/commons/io/file/DeletingPathVisitor.java",
                "PMD: ignore empty catch block src/main/java/org/apache/commons/io/file/DeletingPathVisitor.java"
            ]
        },
        "src/test/java/org/apache/commons/io/file/CounterAssertions.java": {
            "message": [
                "[IO-632] Add PathUtils for operations on NIO Path.\n\nRefactor to add PathUtils.copyDirectory(Path, Path, CopyOption...) src/test/java/org/apache/commons/io/file/CounterAssertions.java",
                "Remove trailing white spaces. Use final. src/test/java/org/apache/commons/io/file/CounterAssertions.java",
                "Let org.apache.commons.io.filefilter classes work with\njava.nio.file.Files.walk* APIs.\n\nAlso: AccumulatorPathVisitor does not track directories properly. src/test/java/org/apache/commons/io/file/CounterAssertions.java"
            ]
        },
        "src/test/java/org/apache/commons/io/file/CountersTest.java": {
            "message": [
                "[IO-632] Add PathUtils for operations on NIO Path.\n\nRefactor to add PathUtils.copyDirectory(Path, Path, CopyOption...) src/test/java/org/apache/commons/io/file/CountersTest.java",
                "Let org.apache.commons.io.filefilter classes work with\njava.nio.file.Files.walk* APIs.\n\nAlso: AccumulatorPathVisitor does not track directories properly. src/test/java/org/apache/commons/io/file/CountersTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/file/PathUtilsCleanDirectoryTest.java": {
            "message": [
                "[IO-632] Add PathUtils for operations on NIO Path.\n\nRefactor to add PathUtils.copyDirectory(Path, Path, CopyOption...) src/test/java/org/apache/commons/io/file/PathUtilsCleanDirectoryTest.java",
                "[IO-632] Add PathUtils for operations on NIO Path.\n\nRefactor to add PathUtils.copyFileToDirectory(Path, Path, CopyOption...) src/test/java/org/apache/commons/io/file/PathUtilsCleanDirectoryTest.java",
                "[IO-669] Fix code smells; fix typos (#115)\n\n* fix code smells\r\n\r\n* fix typos\r\n\r\n* l to L\r\n\r\n* use Arrays.fill\r\n\r\n* revert deleting boxing src/test/java/org/apache/commons/io/file/PathUtilsCleanDirectoryTest.java",
                "USe JUnit TempDir instead of custom code. src/test/java/org/apache/commons/io/file/PathUtilsCleanDirectoryTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/file/CopyDirectoryVisitorTest.java": {
            "message": [
                "[IO-632] Add PathUtils for operations on NIO Path.\n\nRefactor to add PathUtils.copyFileToDirectory(Path, Path, CopyOption...) src/test/java/org/apache/commons/io/file/CopyDirectoryVisitorTest.java",
                "[IO-669] Fix code smells; fix typos (#115)\n\n* fix code smells\r\n\r\n* fix typos\r\n\r\n* l to L\r\n\r\n* use Arrays.fill\r\n\r\n* revert deleting boxing src/test/java/org/apache/commons/io/file/CopyDirectoryVisitorTest.java",
                "Use JUnit TempDir instead of custom code. src/test/java/org/apache/commons/io/file/CopyDirectoryVisitorTest.java",
                "Revert \"Use JUnit TempDir instead of custom code.\"\n\nThis reverts commit ebf06ea477399a778564d2bc60422f652b89989f. src/test/java/org/apache/commons/io/file/CopyDirectoryVisitorTest.java",
                "Rework some tests such that temporary files and directories are as\nshort-lived as possible, also use try-with-resources to make sure temps\nare deleted at the end of a test.\n\nPut all of this under test source tree for now, even the reusable\nclasses. src/test/java/org/apache/commons/io/file/CopyDirectoryVisitorTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/file/CopyDirectoryVisitorTest.java",
                "Add missing CopyDirectoryVisitor tests src/test/java/org/apache/commons/io/file/CopyDirectoryVisitorTest.java",
                "Organize test imports src/test/java/org/apache/commons/io/file/CopyDirectoryVisitorTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/output/ProxyCollectionWriter.java": {
            "message": [
                "Javadoc standardize \"behaviour\" -> \"behavior\". src/main/java/org/apache/commons/io/output/ProxyCollectionWriter.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/output/ProxyCollectionWriter.java",
                "Javadoc: Sentences end in a period. src/main/java/org/apache/commons/io/output/ProxyCollectionWriter.java",
                "Add '@SuppressWarnings(\"unused\") // Possibly thrown from subclasses' to\neliminate compiler warnings. src/main/java/org/apache/commons/io/output/ProxyCollectionWriter.java",
                "Add @SuppressWarnings(\"resource\") for Fluent APIs. src/main/java/org/apache/commons/io/output/ProxyCollectionWriter.java"
            ]
        },
        "src/test/java/org/apache/commons/io/file/CountersEqualsAndHashCodeTest.java": {
            "message": [
                "Implement hashCode() and equals() on counters. src/test/java/org/apache/commons/io/file/CountersEqualsAndHashCodeTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/file/CountersEqualsAndHashCodeTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/file/CountingPathVisitorTest.java": {
            "message": [
                "Implement hashCode() and equals() on path counters. src/test/java/org/apache/commons/io/file/CountingPathVisitorTest.java",
                "[IO-669] Fix code smells; fix typos (#115)\n\n* fix code smells\r\n\r\n* fix typos\r\n\r\n* l to L\r\n\r\n* use Arrays.fill\r\n\r\n* revert deleting boxing src/test/java/org/apache/commons/io/file/CountingPathVisitorTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/file/CountingPathVisitorTest.java",
                "Use JUnit TempDir instead of custom code. src/test/java/org/apache/commons/io/file/CountingPathVisitorTest.java",
                "Revert \"Use JUnit TempDir instead of custom code.\"\n\nThis reverts commit ebf06ea477399a778564d2bc60422f652b89989f. src/test/java/org/apache/commons/io/file/CountingPathVisitorTest.java",
                "Use JUnit TempDir instead of custom code. src/test/java/org/apache/commons/io/file/CountingPathVisitorTest.java",
                "Revert \"Use JUnit TempDir instead of custom code.\"\n\nThis reverts commit a86e5461fc7f17ee1405e9a595515b4213849d57. src/test/java/org/apache/commons/io/file/CountingPathVisitorTest.java",
                "Revert \"Revert \"Use JUnit TempDir instead of custom code.\"\"\n\nThis reverts commit a149541f412eaa87d9d8d6fcf1a8227d6f2aa04f. src/test/java/org/apache/commons/io/file/CountingPathVisitorTest.java",
                "Revert \"Revert \"Revert \"Use JUnit TempDir instead of custom code.\"\"\"\n\nThis reverts commit d76cf38ad7296bf8eb26ce792c13d65f81c0e29a. src/test/java/org/apache/commons/io/file/CountingPathVisitorTest.java",
                "Rework some tests such that temporary files and directories are as\nshort-lived as possible, also use try-with-resources to make sure temps\nare deleted at the end of a test.\n\nPut all of this under test source tree for now, even the reusable\nclasses. src/test/java/org/apache/commons/io/file/CountingPathVisitorTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/file/CountingPathVisitorTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/SequenceReader.java": {
            "message": [
                "[IO-458] Add a SequenceReader similar to java.io.SequenceInputStream.\n\nRefactor commmon code in a private method. src/main/java/org/apache/commons/io/input/SequenceReader.java",
                "[IO-458] Add a SequenceReader similar to java.io.SequenceInputStream.\n\nCheckstyle: Add missing Javadoc. src/main/java/org/apache/commons/io/input/SequenceReader.java",
                "No need to nest in else. src/main/java/org/apache/commons/io/input/SequenceReader.java",
                "Javadoc nits. src/main/java/org/apache/commons/io/input/SequenceReader.java"
            ]
        },
        "src/test/java/org/apache/commons/io/file/PathUtilsContentEqualsTest.java": {
            "message": [
                "Implement directory content equality. (#100) src/test/java/org/apache/commons/io/file/PathUtilsContentEqualsTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/file/PathUtilsContentEqualsTest.java",
                "FileUtils.copyURLToFile should create target parent directories and\noverwrite target file #319.\n\n- Based on PR #39 but different.\n- New assert method leaks input stream; this bug was copied from\nexisting code into a new method.\n- Use NIO.\n- Tests don't need to schedule files for deletion on exit when JUnit\nalready manages the directory. src/test/java/org/apache/commons/io/file/PathUtilsContentEqualsTest.java",
                "Migrate from JUnit 4 to 5\n\nException cleanups in tests. src/test/java/org/apache/commons/io/file/PathUtilsContentEqualsTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/output/AbstractByteArrayOutputStream.java": {
            "message": [
                "Unsynchronized ByteArrayInputStream implementation (#109)\n\n* Add a non-synchronized ByteArrayInputStream implementation - FastByteArrayInputStream\r\n\r\n* Address review comments by @garydgregory src/main/java/org/apache/commons/io/output/AbstractByteArrayOutputStream.java",
                "[IO-662] Refactor ByteArrayOutputStream into synchronized and\nunsynchronized versions #108.\n\nSimplify method name. src/main/java/org/apache/commons/io/output/AbstractByteArrayOutputStream.java",
                "Resue org.apache.commons.io.input.ClosedInputStream.CLOSED_INPUT_STREAM. src/main/java/org/apache/commons/io/output/AbstractByteArrayOutputStream.java",
                "Don't hard code values in Javadoc, use {@value reference}. src/main/java/org/apache/commons/io/output/AbstractByteArrayOutputStream.java",
                "[IO-669] Fix code smells; fix typos (#115)\n\n* fix code smells\r\n\r\n* fix typos\r\n\r\n* l to L\r\n\r\n* use Arrays.fill\r\n\r\n* revert deleting boxing src/main/java/org/apache/commons/io/output/AbstractByteArrayOutputStream.java",
                "Minor improvement: (#176)\n\n* Add Final\r\n* Unused import\r\n* Unnecessary semicolon src/main/java/org/apache/commons/io/output/AbstractByteArrayOutputStream.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/output/AbstractByteArrayOutputStream.java",
                "Add @SuppressWarnings with comments. src/main/java/org/apache/commons/io/output/AbstractByteArrayOutputStream.java",
                "Add and use IOUtils.byteArray(*). src/main/java/org/apache/commons/io/output/AbstractByteArrayOutputStream.java",
                "Make public and reuse IOUtils.EMPTY_BYTE_ARRAY. src/main/java/org/apache/commons/io/output/AbstractByteArrayOutputStream.java",
                "Fix Typos in JavaDoc, Comments and Tests (#201)\n\n* Fixed incorrect/missing JavaDoc.\r\n\r\n* Fixed misc. typos in comments and tests.\r\n\r\n* Fixed typos in exception messages. src/main/java/org/apache/commons/io/output/AbstractByteArrayOutputStream.java",
                "Add ClosedInputStream.INSTANCE and deprecate CLOSED_INPUT_STREAM. src/main/java/org/apache/commons/io/output/AbstractByteArrayOutputStream.java",
                "Organize imports. src/main/java/org/apache/commons/io/output/AbstractByteArrayOutputStream.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/output/AbstractByteArrayOutputStream.java",
                "Javadoc nits. src/main/java/org/apache/commons/io/output/AbstractByteArrayOutputStream.java",
                "Sort members. src/main/java/org/apache/commons/io/output/AbstractByteArrayOutputStream.java",
                "(doc) fix typos in AbstractByteArrayOutputStream.java src/main/java/org/apache/commons/io/output/AbstractByteArrayOutputStream.java",
                "Javadoc: Replace @code with @link src/main/java/org/apache/commons/io/output/AbstractByteArrayOutputStream.java",
                "[IO-564] Pick up Javadoc from super for override write() methods in\nAbstractByteArrayOutputStream and ByteArrayOutputStream src/main/java/org/apache/commons/io/output/AbstractByteArrayOutputStream.java",
                "Format tweaks src/main/java/org/apache/commons/io/output/AbstractByteArrayOutputStream.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/main/java/org/apache/commons/io/output/AbstractByteArrayOutputStream.java"
            ]
        },
        "src/main/java/org/apache/commons/io/output/UnsynchronizedByteArrayOutputStream.java": {
            "message": [
                "Unsynchronized ByteArrayInputStream implementation (#109)\n\n* Add a non-synchronized ByteArrayInputStream implementation - FastByteArrayInputStream\r\n\r\n* Address review comments by @garydgregory src/main/java/org/apache/commons/io/output/UnsynchronizedByteArrayOutputStream.java",
                "[IO-662] Refactor ByteArrayOutputStream into synchronized and\nunsynchronized versions #108.\n\nSimplify method name. src/main/java/org/apache/commons/io/output/UnsynchronizedByteArrayOutputStream.java",
                "Reuse constant, normalize spelling. src/main/java/org/apache/commons/io/output/UnsynchronizedByteArrayOutputStream.java",
                "Don't hard code values in Javadoc, use {@value reference}. src/main/java/org/apache/commons/io/output/UnsynchronizedByteArrayOutputStream.java",
                "Add comment and use try-with-resources. src/main/java/org/apache/commons/io/output/UnsynchronizedByteArrayOutputStream.java",
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/output/UnsynchronizedByteArrayOutputStream.java",
                "Javadoc: Sentences end in a period. src/main/java/org/apache/commons/io/output/UnsynchronizedByteArrayOutputStream.java",
                "No need to nest in else. src/main/java/org/apache/commons/io/output/UnsynchronizedByteArrayOutputStream.java",
                "Organize imports. src/main/java/org/apache/commons/io/output/UnsynchronizedByteArrayOutputStream.java",
                "Sort members. src/main/java/org/apache/commons/io/output/UnsynchronizedByteArrayOutputStream.java",
                "PMD: Remove unnecessary parentheses src/main/java/org/apache/commons/io/output/UnsynchronizedByteArrayOutputStream.java",
                "PMD: Remove unnecessary final src/main/java/org/apache/commons/io/output/UnsynchronizedByteArrayOutputStream.java",
                "Javadoc: Replace @code with @link src/main/java/org/apache/commons/io/output/UnsynchronizedByteArrayOutputStream.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.java": {
            "message": [
                "Add @SuppressWarnings. src/main/java/org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.java",
                "Javadoc. src/main/java/org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.java",
                "Better names and in-line arg checking. src/main/java/org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.java",
                "Provide an exception message. src/main/java/org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.java",
                "Organize imports. src/main/java/org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.java",
                "Sort members. src/main/java/org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.java",
                "Fix CodeQL issue. src/main/java/org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.java"
            ]
        },
        "src/test/java/org/apache/commons/io/function/IOFunctionTest.java": {
            "message": [
                "Use try-with-resources and format to 120 line length. src/test/java/org/apache/commons/io/function/IOFunctionTest.java",
                "Simplify lambads. src/test/java/org/apache/commons/io/function/IOFunctionTest.java",
                "Make public and reuse IOUtils.EMPTY_BYTE_ARRAY. src/test/java/org/apache/commons/io/function/IOFunctionTest.java",
                "Sort members. src/test/java/org/apache/commons/io/function/IOFunctionTest.java",
                "Minor changes: (#287)\n\n* Simplify assertions.\r\n* Replace lambda for reference.\r\n* Remove Unnecessary interface modifier. src/test/java/org/apache/commons/io/function/IOFunctionTest.java",
                "Javadoc. src/test/java/org/apache/commons/io/function/IOFunctionTest.java",
                "Better local name & format tweaks. src/test/java/org/apache/commons/io/function/IOFunctionTest.java",
                "Better local name & format tweaks. src/test/java/org/apache/commons/io/function/IOFunctionTest.java",
                "No need for a block. src/test/java/org/apache/commons/io/function/IOFunctionTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/function/IOFunctionTest.java",
                "Add IOFunction.asFunction() src/test/java/org/apache/commons/io/function/IOFunctionTest.java",
                "Change parameter order of new methods, use var-args, improve tests src/test/java/org/apache/commons/io/function/IOFunctionTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/TeeReader.java": {
            "message": [
                "[IO-669] Fix code smells; fix typos (#115)\n\n* fix code smells\r\n\r\n* fix typos\r\n\r\n* l to L\r\n\r\n* use Arrays.fill\r\n\r\n* revert deleting boxing src/main/java/org/apache/commons/io/input/TeeReader.java"
            ]
        },
        "src/main/java/org/apache/commons/io/file/AccumulatorPathVisitor.java": {
            "message": [
                "Remove trailing whitespace. src/main/java/org/apache/commons/io/file/AccumulatorPathVisitor.java",
                "Remove trailing white spaces. Use final. src/main/java/org/apache/commons/io/file/AccumulatorPathVisitor.java",
                "AccumulatorPathVisitor does not track directories properly. src/main/java/org/apache/commons/io/file/AccumulatorPathVisitor.java",
                "Revert \"AccumulatorPathVisitor does not track directories properly.\"\n\nThis reverts commit b97055390b0f4735d82d6cdc8b47fd039ac50cfa. src/main/java/org/apache/commons/io/file/AccumulatorPathVisitor.java",
                "Let org.apache.commons.io.filefilter classes work with\njava.nio.file.Files.walk* APIs.\n\nAlso: AccumulatorPathVisitor does not track directories properly. src/main/java/org/apache/commons/io/file/AccumulatorPathVisitor.java",
                "Only accumulate files and dirs accepted by the filter. src/main/java/org/apache/commons/io/file/AccumulatorPathVisitor.java",
                "Simplify new PathFilter interface to a single method. src/main/java/org/apache/commons/io/file/AccumulatorPathVisitor.java",
                "[IO-597] FileUtils.iterateFiles runs out of memory when executed for a\ndirectory with large number of files.\n\nRe-implement FileUtils' iterateFiles(), iterateFilesAndDirs(),\nlistFiles(), listFilesAndDirs() to use NIO file tree walking instead of\nIO file listings to avoid memory consumption issues on large file trees. src/main/java/org/apache/commons/io/file/AccumulatorPathVisitor.java",
                "Better param name. src/main/java/org/apache/commons/io/file/AccumulatorPathVisitor.java",
                "Cleaner Javadoc examples. src/main/java/org/apache/commons/io/file/AccumulatorPathVisitor.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/file/AccumulatorPathVisitor.java",
                "Format to longer lines. src/main/java/org/apache/commons/io/file/AccumulatorPathVisitor.java",
                "Add option for AccumulatorPathVisitor to ignore file visitation failures src/main/java/org/apache/commons/io/file/AccumulatorPathVisitor.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/SequenceReaderTest.java": {
            "message": [
                "Remove trailing whitespace. src/test/java/org/apache/commons/io/input/SequenceReaderTest.java",
                "Remove unused exceptions. Use try-with-resoruces.\nClean ups. Formatting. src/test/java/org/apache/commons/io/input/SequenceReaderTest.java",
                "Unused src/test/java/org/apache/commons/io/input/SequenceReaderTest.java",
                "Revert changes -- wrong branch src/test/java/org/apache/commons/io/input/SequenceReaderTest.java",
                "Remove trailing white spaces. Use final. src/test/java/org/apache/commons/io/input/SequenceReaderTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/input/SequenceReaderTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/input/SequenceReaderTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/CircularInputStream.java": {
            "message": [
                "Tweak org.apache.commons.io.input.CircularInputStream.\n\n[IO-674] InfiniteCircularInputStream is not infinite if its input buffer\ncontains -1.\n\n[IO-675] InfiniteCircularInputStream throws a divide-by-zero exception\nwhen reading if its input buffer is size 0.\n\nUpdate version from 2.7.1-SNAPSHOT to 2.8-SNAPSHOT since we are adding a\nnew public class.\n\nmaven-checkstyle-plugin 3.1.0 -> 3.1.1. src/main/java/org/apache/commons/io/input/CircularInputStream.java",
                "Label the next version 2.8.0. src/main/java/org/apache/commons/io/input/CircularInputStream.java",
                "Remove Javadoc extra whitespace. src/main/java/org/apache/commons/io/input/CircularInputStream.java"
            ]
        },
        "src/main/java/org/apache/commons/io/output/NullAppendable.java": {
            "message": [
                "Label the next version 2.8.0. src/main/java/org/apache/commons/io/output/NullAppendable.java"
            ]
        },
        "src/main/java/org/apache/commons/io/comparator/ReverseFileComparator.java": {
            "message": [
                "Javadoc cleanups. src/main/java/org/apache/commons/io/comparator/ReverseFileComparator.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/comparator/ReverseFileComparator.java",
                "Use Objects.requireNonNull()\n\nUpdate Javadoc for existing calls. src/main/java/org/apache/commons/io/comparator/ReverseFileComparator.java"
            ]
        },
        "src/test/java/org/apache/commons/io/output/NullAppendableTest.java": {
            "message": [
                "Unused src/test/java/org/apache/commons/io/output/NullAppendableTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/file/CopyDirectoryVisitor.java": {
            "message": [
                "Refactor for simpler subclassing. src/main/java/org/apache/commons/io/file/CopyDirectoryVisitor.java",
                "Add getters for simpler subclassing. src/main/java/org/apache/commons/io/file/CopyDirectoryVisitor.java",
                "Spotbugs - allows malicious mutation src/main/java/org/apache/commons/io/file/CopyDirectoryVisitor.java",
                "Remove trailing white spaces. Use final. src/main/java/org/apache/commons/io/file/CopyDirectoryVisitor.java",
                "Fix SpotBugs issues.\n\n- [ERROR] Medium: org.apache.commons.io.file.CleaningPathVisitor doesn't\noverride CountingPathVisitor.equals(Object)\n[org.apache.commons.io.file.CleaningPathVisitor] At\nCleaningPathVisitor.java:[line 1] EQ_DOESNT_OVERRIDE_EQUALS\n- [ERROR] Medium: org.apache.commons.io.file.CopyDirectoryVisitor\ndoesn't override CountingPathVisitor.equals(Object)\n[org.apache.commons.io.file.CopyDirectoryVisitor] At\nCopyDirectoryVisitor.java:[line 1] EQ_DOESNT_OVERRIDE_EQUALS\n- [ERROR] Medium: org.apache.commons.io.file.DeletingPathVisitor doesn't\noverride CountingPathVisitor.equals(Object)\n[org.apache.commons.io.file.DeletingPathVisitor] At\nDeletingPathVisitor.java:[line 1] EQ_DOESNT_OVERRIDE_EQUALS src/main/java/org/apache/commons/io/file/CopyDirectoryVisitor.java",
                "Let org.apache.commons.io.filefilter classes work with\njava.nio.file.Files.walk* APIs.\n\nAlso: AccumulatorPathVisitor does not track directories properly. src/main/java/org/apache/commons/io/file/CopyDirectoryVisitor.java",
                "Simplify new PathFilter interface to a single method. src/main/java/org/apache/commons/io/file/CopyDirectoryVisitor.java",
                "[IO-597] FileUtils.iterateFiles runs out of memory when executed for a\ndirectory with large number of files.\n\nRe-implement FileUtils' iterateFiles(), iterateFilesAndDirs(),\nlistFiles(), listFilesAndDirs() to use NIO file tree walking instead of\nIO file listings to avoid memory consumption issues on large file trees. src/main/java/org/apache/commons/io/file/CopyDirectoryVisitor.java",
                "Apply, refactor, clean up\nhttps://github.com/apache/commons-io/pull/203 by Andrew Shcheglov\n(ashcheglov on GitHub). src/main/java/org/apache/commons/io/file/CopyDirectoryVisitor.java",
                "Remove trailing whitepsace. src/main/java/org/apache/commons/io/file/CopyDirectoryVisitor.java",
                "Format to longer lines. src/main/java/org/apache/commons/io/file/CopyDirectoryVisitor.java",
                "Add missing CopyDirectoryVisitor tests src/main/java/org/apache/commons/io/file/CopyDirectoryVisitor.java"
            ]
        },
        "src/test/java/org/apache/commons/io/test/ThrowOnFlushAndCloseOutputStream.java": {
            "message": [
                "Rename test classes from \"Yell\" to \"Throw\" prefix. src/test/java/org/apache/commons/io/test/ThrowOnFlushAndCloseOutputStream.java",
                "Sort test members. src/test/java/org/apache/commons/io/test/ThrowOnFlushAndCloseOutputStream.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/UnsynchronizedByteArrayInputStreamTest.java": {
            "message": [
                "Fix sonarlint warnings src/test/java/org/apache/commons/io/input/UnsynchronizedByteArrayInputStreamTest.java",
                "Make public and reuse IOUtils.EMPTY_BYTE_ARRAY. src/test/java/org/apache/commons/io/input/UnsynchronizedByteArrayInputStreamTest.java",
                "Use try-with-resources src/test/java/org/apache/commons/io/input/UnsynchronizedByteArrayInputStreamTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/function/IOConsumer.java": {
            "message": [
                "Remove trailing white spaces. Use final. src/main/java/org/apache/commons/io/function/IOConsumer.java",
                "Provide an exception message. src/main/java/org/apache/commons/io/function/IOConsumer.java",
                "Add IOConsumer.noop().\n\nFix local var name typos. src/main/java/org/apache/commons/io/function/IOConsumer.java",
                "Remove trailing whitespace. src/main/java/org/apache/commons/io/function/IOConsumer.java",
                "Minor changes: (#243)\n\n* Remove Unnecessary interface modifier\r\n* Make final var\r\n* Simplify conditions\r\n* Simplify assertions src/main/java/org/apache/commons/io/function/IOConsumer.java",
                "Fix typo. src/main/java/org/apache/commons/io/function/IOConsumer.java",
                "Add and reuse IOConsumer.forEach(T[], IOConsumer<T>) and\nforEachIndexed(Stream<T>, IOConsumer<T>) src/main/java/org/apache/commons/io/function/IOConsumer.java",
                "Javadoc: Replace @code with @link src/main/java/org/apache/commons/io/function/IOConsumer.java",
                "Add and reuse IOConsumer.forEach(*) and forEachIndexed(*).\n\nUse forEach and streams. src/main/java/org/apache/commons/io/function/IOConsumer.java",
                "Add and reuse IOConsumer forAll(*), forEach(*) src/main/java/org/apache/commons/io/function/IOConsumer.java",
                "Javadoc src/main/java/org/apache/commons/io/function/IOConsumer.java",
                "Add IOConsumer.asConsumer(). src/main/java/org/apache/commons/io/function/IOConsumer.java",
                "Javadoc src/main/java/org/apache/commons/io/function/IOConsumer.java",
                "Javadoc src/main/java/org/apache/commons/io/function/IOConsumer.java",
                "Change parameter order of new methods, use var-args, improve tests src/main/java/org/apache/commons/io/function/IOConsumer.java"
            ]
        },
        "src/main/java/org/apache/commons/io/function/IOFunction.java": {
            "message": [
                "Remove trailing white spaces. Use final. src/main/java/org/apache/commons/io/function/IOFunction.java",
                "Provide an exception message. src/main/java/org/apache/commons/io/function/IOFunction.java",
                "Sort members. src/main/java/org/apache/commons/io/function/IOFunction.java",
                "Normalize Javadoc. src/main/java/org/apache/commons/io/function/IOFunction.java",
                "Format nit. src/main/java/org/apache/commons/io/function/IOFunction.java",
                "Reduce new public API footprint\n\nMove new constants to a package private class src/main/java/org/apache/commons/io/function/IOFunction.java",
                "Add IOFunction.asFunction() src/main/java/org/apache/commons/io/function/IOFunction.java",
                "Javadoc src/main/java/org/apache/commons/io/function/IOFunction.java",
                "Javadoc src/main/java/org/apache/commons/io/function/IOFunction.java"
            ]
        },
        "src/test/java/org/apache/commons/io/test/TestUtils.java": {
            "message": [
                "Deprecate IOUtils.LINE_SEPARATOR in favor of Java 7's\nSystem.lineSeparator().\n\n- Remove unused imports.\n- Fix compiler warnings by using try-with-resources.\n- Document empty block.\n- Remove checked exceptions from test methods that do not throw them. src/test/java/org/apache/commons/io/test/TestUtils.java",
                "Sort methods. src/test/java/org/apache/commons/io/test/TestUtils.java",
                "[IO-597] FileUtils.iterateFiles runs out of memory when executed for a\ndirectory with large number of files.\n\nRe-implement FileUtils' iterateFiles(), iterateFilesAndDirs(),\nlistFiles(), listFilesAndDirs() to use NIO file tree walking instead of\nIO file listings to avoid memory consumption issues on large file trees. src/test/java/org/apache/commons/io/test/TestUtils.java",
                "Minor improvement: (#177)\n\n* Unnecessary conversion to String\r\n* Add final\r\n* Use Standard Charset object\r\n* Redundant 'close()' src/test/java/org/apache/commons/io/test/TestUtils.java",
                "Use the scale in the var name. src/test/java/org/apache/commons/io/test/TestUtils.java",
                "Simplify Assertions (#234) src/test/java/org/apache/commons/io/test/TestUtils.java",
                "Replace construction of FileInputStream and FileOutputStream objects with Files NIO APIs. (#221) src/test/java/org/apache/commons/io/test/TestUtils.java",
                "Organize imports. src/test/java/org/apache/commons/io/test/TestUtils.java",
                "Avoid Code Duplication: Reuse Sleep from ThreadMonitor.\n\n- Redo changes from PR #66 from DaGeRe.\n- Use sleepQuietly. src/test/java/org/apache/commons/io/test/TestUtils.java",
                "Add PathUtils.writeString(Path, CharSequence, Charset, OpenOption...). src/test/java/org/apache/commons/io/test/TestUtils.java",
                "Add final and remove useless parentheses. src/test/java/org/apache/commons/io/test/TestUtils.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/test/TestUtils.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/RandomAccessFileInputStream.java": {
            "message": [
                "Use final. src/main/java/org/apache/commons/io/input/RandomAccessFileInputStream.java",
                "Remove trailing whitespace. src/main/java/org/apache/commons/io/input/RandomAccessFileInputStream.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/RandomAccessFileInputStreamTest.java": {
            "message": [
                "Move test fixtures to package specific location. src/test/java/org/apache/commons/io/input/RandomAccessFileInputStreamTest.java",
                "Remove unused exceptions and trailing whitespace. src/test/java/org/apache/commons/io/input/RandomAccessFileInputStreamTest.java",
                "Simplify Assertions (#234) src/test/java/org/apache/commons/io/input/RandomAccessFileInputStreamTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/input/RandomAccessFileInputStreamTest.java",
                "Add and use RandomAccessFileMode. src/test/java/org/apache/commons/io/input/RandomAccessFileInputStreamTest.java",
                "Minor changes: (#287)\n\n* Simplify assertions.\r\n* Replace lambda for reference.\r\n* Remove Unnecessary interface modifier. src/test/java/org/apache/commons/io/input/RandomAccessFileInputStreamTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/input/RandomAccessFileInputStreamTest.java",
                "Add missing RandomAccessFileInputStream test src/test/java/org/apache/commons/io/input/RandomAccessFileInputStreamTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/CloseShieldReader.java": {
            "message": [
                "Javadoc: Close paragraph tags. src/main/java/org/apache/commons/io/input/CloseShieldReader.java",
                "Replace CloseShield* constructors with factory methods (#173)\n\n* Replace CloseShield* constructors with factory methods\r\n\r\n* Renamed CloseShield*.dontClose to wrap\r\n\r\n* Changed parameter names and tags as requested src/main/java/org/apache/commons/io/input/CloseShieldReader.java",
                "Add factory methods to CloseShieldInputStream, CloseShieldReader,\nCloseShieldOutputStream, CloseShieldWriter, #173.\n\nSort methods: static methods come first.\nFix some Javadocs.\nSome formatting. src/main/java/org/apache/commons/io/input/CloseShieldReader.java",
                "Better names. src/main/java/org/apache/commons/io/input/CloseShieldReader.java",
                "Add ClosedReader.INSTANCE and deprecate CLOSED_READER. src/main/java/org/apache/commons/io/input/CloseShieldReader.java"
            ]
        },
        "src/main/java/org/apache/commons/io/file/spi/FileSystemProviders.java": {
            "message": [
                "Use final. src/main/java/org/apache/commons/io/file/spi/FileSystemProviders.java",
                "Remove trailing whitespace. src/main/java/org/apache/commons/io/file/spi/FileSystemProviders.java",
                "Remove redundant calls to super(). src/main/java/org/apache/commons/io/file/spi/FileSystemProviders.java",
                "Minor improvement: (#176)\n\n* Add Final\r\n* Unused import\r\n* Unnecessary semicolon src/main/java/org/apache/commons/io/file/spi/FileSystemProviders.java",
                "Use forEach() src/main/java/org/apache/commons/io/file/spi/FileSystemProviders.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/main/java/org/apache/commons/io/file/spi/FileSystemProviders.java"
            ]
        },
        "src/test/java/org/apache/commons/io/file/spi/FileSystemProvidersTest.java": {
            "message": [
                "Use final. src/test/java/org/apache/commons/io/file/spi/FileSystemProvidersTest.java",
                "Use forEach() src/test/java/org/apache/commons/io/file/spi/FileSystemProvidersTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/file/SimplePathVisitor.java": {
            "message": [
                "Let org.apache.commons.io.filefilter classes work with\njava.nio.file.Files.walk* APIs.\n\nAlso: AccumulatorPathVisitor does not track directories properly. src/main/java/org/apache/commons/io/file/SimplePathVisitor.java",
                "Remove redundant calls to super(). src/main/java/org/apache/commons/io/file/SimplePathVisitor.java",
                "Add option for AccumulatorPathVisitor to ignore file visitation failures src/main/java/org/apache/commons/io/file/SimplePathVisitor.java"
            ]
        },
        "src/main/java/org/apache/commons/io/filefilter/DirectoryStreamFilter.java": {
            "message": [
                "Simplify new PathFilter interface to a single method. src/main/java/org/apache/commons/io/filefilter/DirectoryStreamFilter.java",
                "Move new PathFilter interface to the file package, annotate it with\n@FunctionalInterface, and add a BasicFileAttributes parameter to accept\nattributes from java.nio.file.FileVisitor. src/main/java/org/apache/commons/io/filefilter/DirectoryStreamFilter.java"
            ]
        },
        "src/main/java/org/apache/commons/io/filefilter/PathVisitorFileFilter.java": {
            "message": [
                "Simplify new PathFilter interface to a single method. src/main/java/org/apache/commons/io/filefilter/PathVisitorFileFilter.java",
                "Move new PathFilter interface to the file package, annotate it with\n@FunctionalInterface, and add a BasicFileAttributes parameter to accept\nattributes from java.nio.file.FileVisitor. src/main/java/org/apache/commons/io/filefilter/PathVisitorFileFilter.java",
                "New PathFilter no longer throws to play nice with predicates and other\nfunctional interfaces. src/main/java/org/apache/commons/io/filefilter/PathVisitorFileFilter.java",
                "Remove redundant calls to super(). src/main/java/org/apache/commons/io/filefilter/PathVisitorFileFilter.java",
                "Use final. src/main/java/org/apache/commons/io/filefilter/PathVisitorFileFilter.java",
                "inline some-single use variables.\n\nFormatting nits. src/main/java/org/apache/commons/io/filefilter/PathVisitorFileFilter.java",
                "Internal refactoring src/main/java/org/apache/commons/io/filefilter/PathVisitorFileFilter.java"
            ]
        },
        "src/test/java/org/apache/commons/io/filefilter/DirectoryStreamFilterTest.java": {
            "message": [
                "Simplify new PathFilter interface to a single method. src/test/java/org/apache/commons/io/filefilter/DirectoryStreamFilterTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/file/PathFilter.java": {
            "message": [
                "Move new PathFilter interface to the file package, annotate it with\n@FunctionalInterface, and add a BasicFileAttributes parameter to accept\nattributes from java.nio.file.FileVisitor. src/main/java/org/apache/commons/io/file/PathFilter.java",
                "New PathFilter no longer throws to play nice with predicates and other\nfunctional interfaces. src/main/java/org/apache/commons/io/file/PathFilter.java",
                "[IO-597] FileUtils.iterateFiles runs out of memory when executed for a\ndirectory with large number of files.\n\nRe-implement FileUtils' iterateFiles(), iterateFilesAndDirs(),\nlistFiles(), listFilesAndDirs() to use NIO file tree walking instead of\nIO file listings to avoid memory consumption issues on large file trees. src/main/java/org/apache/commons/io/file/PathFilter.java"
            ]
        },
        "src/test/java/org/apache/commons/io/filefilter/DirectoryFileFilterTest.java": {
            "message": [
                "Move new PathFilter interface to the file package, annotate it with\n@FunctionalInterface, and add a BasicFileAttributes parameter to accept\nattributes from java.nio.file.FileVisitor. src/test/java/org/apache/commons/io/filefilter/DirectoryFileFilterTest.java",
                "[IO-597] FileUtils.iterateFiles runs out of memory when executed for a\ndirectory with large number of files.\n\nRe-implement FileUtils' iterateFiles(), iterateFilesAndDirs(),\nlistFiles(), listFilesAndDirs() to use NIO file tree walking instead of\nIO file listings to avoid memory consumption issues on large file trees. src/test/java/org/apache/commons/io/filefilter/DirectoryFileFilterTest.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/test/java/org/apache/commons/io/filefilter/DirectoryFileFilterTest.java",
                "Use forEach() src/test/java/org/apache/commons/io/filefilter/DirectoryFileFilterTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/filefilter/NameFileFilterTest.java": {
            "message": [
                "Move new PathFilter interface to the file package, annotate it with\n@FunctionalInterface, and add a BasicFileAttributes parameter to accept\nattributes from java.nio.file.FileVisitor. src/test/java/org/apache/commons/io/filefilter/NameFileFilterTest.java",
                "[IO-597] FileUtils.iterateFiles runs out of memory when executed for a\ndirectory with large number of files.\n\nRe-implement FileUtils' iterateFiles(), iterateFilesAndDirs(),\nlistFiles(), listFilesAndDirs() to use NIO file tree walking instead of\nIO file listings to avoid memory consumption issues on large file trees. src/test/java/org/apache/commons/io/filefilter/NameFileFilterTest.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/test/java/org/apache/commons/io/filefilter/NameFileFilterTest.java",
                "Use forEach() src/test/java/org/apache/commons/io/filefilter/NameFileFilterTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/filefilter/AgeFileFilterTest.java": {
            "message": [
                "Fix GitHub build, works locally in an already checkout repo (not brnad\nnew checkout). src/test/java/org/apache/commons/io/filefilter/AgeFileFilterTest.java",
                "[IO-597] FileUtils.iterateFiles runs out of memory when executed for a\ndirectory with large number of files.\n\nRe-implement FileUtils' iterateFiles(), iterateFilesAndDirs(),\nlistFiles(), listFilesAndDirs() to use NIO file tree walking instead of\nIO file listings to avoid memory consumption issues on large file trees. src/test/java/org/apache/commons/io/filefilter/AgeFileFilterTest.java",
                "Use the scale in the var name. src/test/java/org/apache/commons/io/filefilter/AgeFileFilterTest.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/test/java/org/apache/commons/io/filefilter/AgeFileFilterTest.java",
                "Use forEach() src/test/java/org/apache/commons/io/filefilter/AgeFileFilterTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/file/AccumulatorPathVisitorTest.java": {
            "message": [
                "Better lambdas. src/test/java/org/apache/commons/io/file/AccumulatorPathVisitorTest.java",
                "Simpler lambdas. src/test/java/org/apache/commons/io/file/AccumulatorPathVisitorTest.java",
                "Convert the TempDir from a File to a Path src/test/java/org/apache/commons/io/file/AccumulatorPathVisitorTest.java",
                "Convert the TempDir from a File to a Path src/test/java/org/apache/commons/io/file/AccumulatorPathVisitorTest.java",
                "Add option for AccumulatorPathVisitor to ignore file visitation failures src/test/java/org/apache/commons/io/file/AccumulatorPathVisitorTest.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/test/java/org/apache/commons/io/file/AccumulatorPathVisitorTest.java",
                "Add missing AccumulatorPathVisitor test src/test/java/org/apache/commons/io/file/AccumulatorPathVisitorTest.java",
                "Add missing AccumulatorPathVisitor tests src/test/java/org/apache/commons/io/file/AccumulatorPathVisitorTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/file/PathUtilsTest.java": {
            "message": [
                "Add a factory method and move test class to proper package. src/test/java/org/apache/commons/io/file/PathUtilsTest.java",
                "[IO-597] FileUtils.iterateFiles runs out of memory when executed for a\ndirectory with large number of files.\n\nRe-implement FileUtils' iterateFiles(), iterateFilesAndDirs(),\nlistFiles(), listFilesAndDirs() to use NIO file tree walking instead of\nIO file listings to avoid memory consumption issues on large file trees. src/test/java/org/apache/commons/io/file/PathUtilsTest.java",
                "Add PathUtils.createParentDirectories(Path, FileAttribute...).\n\nFix XML attribute syntax error in changes.xml. src/test/java/org/apache/commons/io/file/PathUtilsTest.java",
                "[IO-709] Add null-safe variants of Files.isDirectory and Files.isRegularFile (#194)\n\nFixes https://issues.apache.org/jira/browse/IO-709 src/test/java/org/apache/commons/io/file/PathUtilsTest.java",
                "Use final. src/test/java/org/apache/commons/io/file/PathUtilsTest.java",
                "Apply, refactor, clean up\nhttps://github.com/apache/commons-io/pull/203 by Andrew Shcheglov\n(ashcheglov on GitHub). src/test/java/org/apache/commons/io/file/PathUtilsTest.java",
                "Add PathUtils.readString(Path, Charset). src/test/java/org/apache/commons/io/file/PathUtilsTest.java",
                "Minor simplification in test. src/test/java/org/apache/commons/io/file/PathUtilsTest.java",
                "PathUtilsTest does not need two temp dirs. src/test/java/org/apache/commons/io/file/PathUtilsTest.java",
                "Add tests for PathUtils.newOutputStream() and fix\nPathUtils.newOutputStream(). src/test/java/org/apache/commons/io/file/PathUtilsTest.java",
                "Add PathUtils.getTempDirectory(). src/test/java/org/apache/commons/io/file/PathUtilsTest.java",
                "Add PathUtils.writeString(Path, CharSequence, Charset, OpenOption...). src/test/java/org/apache/commons/io/file/PathUtilsTest.java",
                "Move test method to better location. src/test/java/org/apache/commons/io/file/PathUtilsTest.java",
                "This test passes on Windows 10, macOS 11.6, but not Ubuntu within\nWindows. src/test/java/org/apache/commons/io/file/PathUtilsTest.java",
                "Add PathUtiFiles.getFileAttributeView() shorthands.\n\n- PathUtils.getAclFileAttributeView(Path, LinkOption...)\n- PathUtils.getDosFileAttributeView(Path, LinkOption...)\n- PathUtils.getPosixFileAttributeView(Path, LinkOption...) src/test/java/org/apache/commons/io/file/PathUtilsTest.java",
                "Checkstyle and fix test sources.\n\n- Move Checkstyle configuration from root folder to src/conf.\n- Remove unused imports.\n- Remove trailing whitespace.\n- Adjust line lengths.\n- No tabs.\n- Use final. src/test/java/org/apache/commons/io/file/PathUtilsTest.java",
                "Minor changes: (#287)\n\n* Simplify assertions.\r\n* Replace lambda for reference.\r\n* Remove Unnecessary interface modifier. src/test/java/org/apache/commons/io/file/PathUtilsTest.java",
                "Add PathUtils.isPosix(Path, LinkOption...). (#290)\n\nAdd PathUtils.readAttributes(Path, Class<A>, LinkOption...).\r\n\r\nCo-authored-by: Gary Gregory <ggregory@rocketsoftware.com> src/test/java/org/apache/commons/io/file/PathUtilsTest.java",
                "Clean up new APIs. src/test/java/org/apache/commons/io/file/PathUtilsTest.java",
                "[IO-751] When deleting symlinks, File/PathUtils.deleteDirectory()\nchanges file permissions of the target.\n\n\nFix file permission logic when deleting in override read-only mode. src/test/java/org/apache/commons/io/file/PathUtilsTest.java",
                "Add green unit test, slightly modified, from\nhttps://github.com/apache/commons-io/pull/324 by chadlwilson. src/test/java/org/apache/commons/io/file/PathUtilsTest.java",
                "Document test fixtures. src/test/java/org/apache/commons/io/file/PathUtilsTest.java",
                "Drop extra whitespace. src/test/java/org/apache/commons/io/file/PathUtilsTest.java",
                "Add PathUtils.createParentDirectories(Path, LinkOption,\nFileAttribute<?>...) src/test/java/org/apache/commons/io/file/PathUtilsTest.java",
                "Restore some behavior based on findings described in\nhttps://github.com/apache/commons-io/pull/324 src/test/java/org/apache/commons/io/file/PathUtilsTest.java",
                "Null-safety when calling PathUtils.createParentDirectories() with a\nLinkOption not equal to NOFOLLOW_LINKS and the path is a root path which\nmeans it has a null parent. src/test/java/org/apache/commons/io/file/PathUtilsTest.java",
                "Use NIO to test NIO. src/test/java/org/apache/commons/io/file/PathUtilsTest.java",
                "Add a few assertions. src/test/java/org/apache/commons/io/file/PathUtilsTest.java",
                "Use JUnit TempDir instead of custom code. src/test/java/org/apache/commons/io/file/PathUtilsTest.java",
                "Revert \"Use JUnit TempDir instead of custom code.\"\n\nThis reverts commit ebf06ea477399a778564d2bc60422f652b89989f. src/test/java/org/apache/commons/io/file/PathUtilsTest.java",
                "Rework some tests such that temporary files and directories are as\nshort-lived as possible, also use try-with-resources to make sure temps\nare deleted at the end of a test.\n\nPut all of this under test source tree for now, even the reusable\nclasses. src/test/java/org/apache/commons/io/file/PathUtilsTest.java",
                "Add PathUtils.touch(Path)\n\nRefactor src/test/java/org/apache/commons/io/file/PathUtilsTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/file/PathUtilsTest.java",
                "Add PathUtils.getLastModifiedFileTime(*). src/test/java/org/apache/commons/io/file/PathUtilsTest.java",
                "Fix PathUtils.copyFileToDirectory(URL,Path,CopyOption[]). src/test/java/org/apache/commons/io/file/PathUtilsTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/file/DirectoryStreamFilterTest.java": {
            "message": [
                "Use negate() instead of not() to match predicate terminology. src/test/java/org/apache/commons/io/file/DirectoryStreamFilterTest.java",
                "[IO-597] FileUtils.iterateFiles runs out of memory when executed for a\ndirectory with large number of files.\n\nRe-implement FileUtils' iterateFiles(), iterateFilesAndDirs(),\nlistFiles(), listFilesAndDirs() to use NIO file tree walking instead of\nIO file listings to avoid memory consumption issues on large file trees. src/test/java/org/apache/commons/io/file/DirectoryStreamFilterTest.java",
                "Minor improvement: (#176)\n\n* Add Final\r\n* Unused import\r\n* Unnecessary semicolon src/test/java/org/apache/commons/io/file/DirectoryStreamFilterTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/file/DirectoryStreamFilterTest.java",
                "Use forEach() src/test/java/org/apache/commons/io/file/DirectoryStreamFilterTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/file/DirectoryStreamFilter.java": {
            "message": [
                "New PathFilter no longer throws to play nice with predicates and other\nfunctional interfaces. src/main/java/org/apache/commons/io/file/DirectoryStreamFilter.java",
                "Remove redundant calls to super(). src/main/java/org/apache/commons/io/file/DirectoryStreamFilter.java",
                "Remove unused exceptions and trailing whitespace. src/main/java/org/apache/commons/io/file/DirectoryStreamFilter.java",
                "Don't use deprecated method src/main/java/org/apache/commons/io/file/DirectoryStreamFilter.java"
            ]
        },
        "src/main/java/org/apache/commons/io/filefilter/PathEqualsFileFilter.java": {
            "message": [
                "Use final. src/main/java/org/apache/commons/io/filefilter/PathEqualsFileFilter.java",
                "Remove redundant calls to super(). src/main/java/org/apache/commons/io/filefilter/PathEqualsFileFilter.java",
                "Remove unused exceptions and trailing whitespace. src/main/java/org/apache/commons/io/filefilter/PathEqualsFileFilter.java",
                "Fix FileFilterTestCase use case for symbolic links on non-Windows OS.\n\n- Make SymbolicLinkFileFilter configurable:\n-- Add SymbolicLinkFileFilter.SymbolicLinkFileFilter(FileVisitResult,\nFileVisitResult)\n-- Add AbstractFileFilter(FileVisitResult, FileVisitResult)\n- CountingPathVisitor should not follow links by default to properly\ncount from FileUtils. src/main/java/org/apache/commons/io/filefilter/PathEqualsFileFilter.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/BufferedFileChannelInputStream.java": {
            "message": [
                "[IO-510] Add and adapt ReadAheadInputStream and\nBufferedFileChannelInputStream from Apache Spark.\n\nCompiles on Java 8 and 11. src/main/java/org/apache/commons/io/input/BufferedFileChannelInputStream.java",
                "[IO-510] Add and adapt ReadAheadInputStream and\nBufferedFileChannelInputStream from Apache Spark.\n\nCompiles on Java 8 and 11. src/main/java/org/apache/commons/io/input/BufferedFileChannelInputStream.java",
                "[IO-510] Add and adapt ReadAheadInputStream and\nBufferedFileChannelInputStream from Apache Spark.\n\nJavadoc and better method names. src/main/java/org/apache/commons/io/input/BufferedFileChannelInputStream.java",
                "Use final. src/main/java/org/apache/commons/io/input/BufferedFileChannelInputStream.java",
                "Remove unused exceptions and trailing whitespace. src/main/java/org/apache/commons/io/input/BufferedFileChannelInputStream.java",
                "Minor Improvement: (#190)\n\n* Add final\r\n* Remove redundant initializer\r\n* simplify conditions src/main/java/org/apache/commons/io/input/BufferedFileChannelInputStream.java",
                "Reuse EOF constant.\n\nJavadoc tweaks. Format to max line length. Simplify. src/main/java/org/apache/commons/io/input/BufferedFileChannelInputStream.java",
                "[IO-720] fix error about usage of DirectBuffer in jdk 16/17 (#205) src/main/java/org/apache/commons/io/input/BufferedFileChannelInputStream.java",
                "Use final. Remove trailing whitepace. src/main/java/org/apache/commons/io/input/BufferedFileChannelInputStream.java",
                "Fix compiler warnings regarding generics. src/main/java/org/apache/commons/io/input/BufferedFileChannelInputStream.java",
                "Minor changes: (#243)\n\n* Remove Unnecessary interface modifier\r\n* Make final var\r\n* Simplify conditions\r\n* Simplify assertions src/main/java/org/apache/commons/io/input/BufferedFileChannelInputStream.java",
                "[IO-726] Add MemoryMappedInputStream, #215.\n\nModified PR 215 from shollander with:\n- Do not write the console.\n- Simplify cleaner check support.\n- Simplify exception handling.\n- Don't initialize instance variables to their default values.\n- Un-nest else clause.\n- Declaring interfaces as static is redundant.\n- Use EOF constant instead of magic number.\n- Don't throw RuntimeException, use IllegalStateException.\n- Pacakge private class does not need public method.\n- Use final.\n- Improve Javadocs.\n- Javadoc sentences should end in a period.\n- Javadoc do not need first sentence to be in an HTML p element.\n- No need to use `this.` when you do not need to.\n- In-line some single use variables.\n- Sort members. src/main/java/org/apache/commons/io/input/BufferedFileChannelInputStream.java",
                "Javadoc. src/main/java/org/apache/commons/io/input/BufferedFileChannelInputStream.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/ReadAheadInputStream.java": {
            "message": [
                "[IO-510] Add and adapt ReadAheadInputStream and\nBufferedFileChannelInputStream from Apache Spark.\n\nOnly shutdown the executor service if we own it. src/main/java/org/apache/commons/io/input/ReadAheadInputStream.java",
                "[IO-510] Add and adapt ReadAheadInputStream and\nBufferedFileChannelInputStream from Apache Spark.\n\nLowest level ctor does not need to be public for now. src/main/java/org/apache/commons/io/input/ReadAheadInputStream.java",
                "[IO-510] Add and adapt ReadAheadInputStream and\nBufferedFileChannelInputStream from Apache Spark.\n\nJavadoc and better method names. src/main/java/org/apache/commons/io/input/ReadAheadInputStream.java",
                "Remove unused exceptions and trailing whitespace. src/main/java/org/apache/commons/io/input/ReadAheadInputStream.java",
                "Reuse EOF constant.\n\nJavadoc tweaks. Format to max line length. Simplify. src/main/java/org/apache/commons/io/input/ReadAheadInputStream.java",
                "Reuse constant. src/main/java/org/apache/commons/io/input/ReadAheadInputStream.java",
                "Checkstyle and fix test sources.\n\n- Move Checkstyle configuration from root folder to src/conf.\n- Remove unused imports.\n- Remove trailing whitespace.\n- Adjust line lengths.\n- No tabs.\n- Use final. src/main/java/org/apache/commons/io/input/ReadAheadInputStream.java",
                "Javadoc. src/main/java/org/apache/commons/io/input/ReadAheadInputStream.java",
                "Remove trailing whitespace. src/main/java/org/apache/commons/io/input/ReadAheadInputStream.java",
                "Upper-case constant. src/main/java/org/apache/commons/io/input/ReadAheadInputStream.java",
                "Address SpotBugs Medium:\norg.apache.commons.io.input.ReadAheadInputStream.waitForAsyncReadComplete()\ndoes not release lock on all exception paths\n[org.apache.commons.io.input.ReadAheadInputStream] At\nReadAheadInputStream.java:[line 448] UL_UNRELEASED_LOCK_EXCEPTION_PATH src/main/java/org/apache/commons/io/input/ReadAheadInputStream.java",
                "PMD: ignore empty catch block src/main/java/org/apache/commons/io/input/ReadAheadInputStream.java",
                "Use longer lines src/main/java/org/apache/commons/io/input/ReadAheadInputStream.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/main/java/org/apache/commons/io/input/ReadAheadInputStream.java"
            ]
        },
        "src/main/java/org/apache/commons/io/StreamIterator.java": {
            "message": [
                "Remove redundant calls to super(). src/main/java/org/apache/commons/io/StreamIterator.java",
                "Remove unused exceptions and trailing whitespace. src/main/java/org/apache/commons/io/StreamIterator.java",
                "Sort members. src/main/java/org/apache/commons/io/StreamIterator.java",
                "Format tweaks src/main/java/org/apache/commons/io/StreamIterator.java"
            ]
        },
        "src/main/java/org/apache/commons/io/filefilter/FileEqualsFileFilter.java": {
            "message": [
                "Remove redundant calls to super(). src/main/java/org/apache/commons/io/filefilter/FileEqualsFileFilter.java",
                "Better NPE message. src/main/java/org/apache/commons/io/filefilter/FileEqualsFileFilter.java",
                "Fix FileFilterTestCase use case for symbolic links on non-Windows OS.\n\n- Make SymbolicLinkFileFilter configurable:\n-- Add SymbolicLinkFileFilter.SymbolicLinkFileFilter(FileVisitResult,\nFileVisitResult)\n-- Add AbstractFileFilter(FileVisitResult, FileVisitResult)\n- CountingPathVisitor should not follow links by default to properly\ncount from FileUtils. src/main/java/org/apache/commons/io/filefilter/FileEqualsFileFilter.java"
            ]
        },
        "src/main/java/org/apache/commons/io/output/CloseShieldWriter.java": {
            "message": [
                "Replace CloseShield* constructors with factory methods (#173)\n\n* Replace CloseShield* constructors with factory methods\r\n\r\n* Renamed CloseShield*.dontClose to wrap\r\n\r\n* Changed parameter names and tags as requested src/main/java/org/apache/commons/io/output/CloseShieldWriter.java",
                "Add factory methods to CloseShieldInputStream, CloseShieldReader,\nCloseShieldOutputStream, CloseShieldWriter, #173.\n\nSort methods: static methods come first.\nFix some Javadocs.\nSome formatting. src/main/java/org/apache/commons/io/output/CloseShieldWriter.java",
                "Better names. src/main/java/org/apache/commons/io/output/CloseShieldWriter.java",
                "Add ClosedWriter.INSTANCE and deprected CLOSED_WRITER. src/main/java/org/apache/commons/io/output/CloseShieldWriter.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/QueueInputStream.java": {
            "message": [
                "Add QueueInputStream and QueueOutputStream as simpler alternatives to\nPipedInputStream and PipedOutputStream #171.\n\nSort new methods.\nClean up Javadocs. src/main/java/org/apache/commons/io/input/QueueInputStream.java",
                "Better names and messages. src/main/java/org/apache/commons/io/input/QueueInputStream.java",
                "Remove unused exceptions and trailing whitespace. src/main/java/org/apache/commons/io/input/QueueInputStream.java",
                "Reuse EOF constant.\n\nJavadoc tweaks. Format to max line length. Simplify. src/main/java/org/apache/commons/io/input/QueueInputStream.java",
                "Javadoc. Close HTML tags. Use paragraph tags. src/main/java/org/apache/commons/io/input/QueueInputStream.java",
                "Organize imports. src/main/java/org/apache/commons/io/input/QueueInputStream.java",
                "Add final and remove useless parentheses. src/main/java/org/apache/commons/io/input/QueueInputStream.java",
                "Javadoc: Replace @code with @link src/main/java/org/apache/commons/io/input/QueueInputStream.java"
            ]
        },
        "src/main/java/org/apache/commons/io/output/QueueOutputStream.java": {
            "message": [
                "Add QueueInputStream and QueueOutputStream as simpler alternatives to\nPipedInputStream and PipedOutputStream #171.\n\nSort new methods.\nClean up Javadocs. src/main/java/org/apache/commons/io/output/QueueOutputStream.java",
                "Better names and messages. src/main/java/org/apache/commons/io/output/QueueOutputStream.java",
                "Remove unused exceptions and trailing whitespace. src/main/java/org/apache/commons/io/output/QueueOutputStream.java",
                "Minor Improvement: (#190)\n\n* Add final\r\n* Remove redundant initializer\r\n* simplify conditions src/main/java/org/apache/commons/io/output/QueueOutputStream.java",
                "Organize imports. src/main/java/org/apache/commons/io/output/QueueOutputStream.java",
                "Javadoc: Replace @code with @link src/main/java/org/apache/commons/io/output/QueueOutputStream.java"
            ]
        },
        "src/test/java/org/apache/commons/io/output/QueueOutputStreamTest.java": {
            "message": [
                "Add QueueInputStream and QueueOutputStream as simpler alternatives to\nPipedInputStream and PipedOutputStream #171.\n\nSort new methods.\nClean up Javadocs. src/test/java/org/apache/commons/io/output/QueueOutputStreamTest.java",
                "Remove unused exceptions and trailing whitespace. src/test/java/org/apache/commons/io/output/QueueOutputStreamTest.java",
                "Use final. src/test/java/org/apache/commons/io/output/QueueOutputStreamTest.java",
                "Make public and reuse IOUtils.EMPTY_BYTE_ARRAY. src/test/java/org/apache/commons/io/output/QueueOutputStreamTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/output/QueueOutputStreamTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/file/NoopPathVisitor.java": {
            "message": [
                "Minor improvement: (#177)\n\n* Unnecessary conversion to String\r\n* Add final\r\n* Use Standard Charset object\r\n* Redundant 'close()' src/main/java/org/apache/commons/io/file/NoopPathVisitor.java",
                "Add option for AccumulatorPathVisitor to ignore file visitation failures src/main/java/org/apache/commons/io/file/NoopPathVisitor.java",
                "Javadoc src/main/java/org/apache/commons/io/file/NoopPathVisitor.java"
            ]
        },
        "src/main/java/org/apache/commons/io/StandardLineSeparator.java": {
            "message": [
                "Provide an exception message. src/main/java/org/apache/commons/io/StandardLineSeparator.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/main/java/org/apache/commons/io/StandardLineSeparator.java"
            ]
        },
        "src/test/java/org/apache/commons/io/FileUtilsDeleteDirectoryBaseTestCase.java": {
            "message": [
                "[IO-701] Make PathUtils.setReadOnly deal with LinuxDosFileAttributeView\n#186.\n\nClean ups post PR merge. src/test/java/org/apache/commons/io/FileUtilsDeleteDirectoryBaseTestCase.java",
                "IO-702 FileUtils.forceDelete does not delete invalid links. Testcase and fix (#187) src/test/java/org/apache/commons/io/FileUtilsDeleteDirectoryBaseTestCase.java",
                "[IO-702] FileUtils.forceDelete does not delete invalid links. Testcase \u2026\n#187. src/test/java/org/apache/commons/io/FileUtilsDeleteDirectoryBaseTestCase.java",
                "Make public and reuse IOUtils.EMPTY_BYTE_ARRAY. src/test/java/org/apache/commons/io/FileUtilsDeleteDirectoryBaseTestCase.java"
            ]
        },
        "src/test/java/org/apache/commons/io/FileUtilsDeleteDirectoryLinuxTestCase.java": {
            "message": [
                "[IO-701] Make PathUtils.setReadOnly deal with LinuxDosFileAttributeView\n#186.\n\nClean ups post PR merge. src/test/java/org/apache/commons/io/FileUtilsDeleteDirectoryLinuxTestCase.java",
                "Disable test FileUtilsDeleteDirectoryLinuxTestCase on macOS. src/test/java/org/apache/commons/io/FileUtilsDeleteDirectoryLinuxTestCase.java"
            ]
        },
        "src/test/java/org/apache/commons/io/FileUtilsDeleteDirectoryWinTestCase.java": {
            "message": [
                "[IO-701] Make PathUtils.setReadOnly deal with LinuxDosFileAttributeView\n#186.\n\nClean ups post PR merge. src/test/java/org/apache/commons/io/FileUtilsDeleteDirectoryWinTestCase.java"
            ]
        },
        "src/test/java/org/apache/commons/io/FileUtilsDeleteDirectoryWindowsTestCase.java": {
            "message": [
                "[IO-701] Make PathUtils.setReadOnly deal with LinuxDosFileAttributeView\n#186.\n\nClean ups post PR merge. src/test/java/org/apache/commons/io/FileUtilsDeleteDirectoryWindowsTestCase.java",
                "[IO-701] Make PathUtils.setReadOnly deal with LinuxDosFileAttributeView\n#186.\n\nComments. src/test/java/org/apache/commons/io/FileUtilsDeleteDirectoryWindowsTestCase.java",
                "Use less cryptic variable names. src/test/java/org/apache/commons/io/FileUtilsDeleteDirectoryWindowsTestCase.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/CharacterFilterReader.java": {
            "message": [
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/input/CharacterFilterReader.java",
                "Variation of PR #227 from Rob Spoor (robtimus) but does not add a new\nclass.\n\n- Add AbstractCharacterFilterReader(Reader, IntPredicate).\n- Add CharacterFilterReader(Reader, IntPredicate).\n- Add AbstractCharacterFilterReader(Reader, IntPredicate).\n- Add CharacterFilterReaderIntPredicateTest. src/main/java/org/apache/commons/io/input/CharacterFilterReader.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/CharacterSetFilterReader.java": {
            "message": [
                "Replace HTML tags like <code>x</code> with Javadoc's {@code x}. src/main/java/org/apache/commons/io/input/CharacterSetFilterReader.java",
                "Prevent infinite loop with AbstractCharacterFilterReader if EOF is\nfiltered out #226.\n\n- Based on PR #226 by Rob Spoor, with an additional (missing) test, and\nclean ups.\n- Add CharacterSetFilterReader.CharacterSetFilterReader(Reader,\nInteger...). src/main/java/org/apache/commons/io/input/CharacterSetFilterReader.java",
                "Variation of PR #227 from Rob Spoor (robtimus) but does not add a new\nclass.\n\n- Add AbstractCharacterFilterReader(Reader, IntPredicate).\n- Add CharacterFilterReader(Reader, IntPredicate).\n- Add AbstractCharacterFilterReader(Reader, IntPredicate).\n- Add CharacterFilterReaderIntPredicateTest. src/main/java/org/apache/commons/io/input/CharacterSetFilterReader.java",
                "Only create wrapper set once. src/main/java/org/apache/commons/io/input/CharacterSetFilterReader.java",
                "Javadoc: Replace @code with @link src/main/java/org/apache/commons/io/input/CharacterSetFilterReader.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/AbstractInputStreamTest.java": {
            "message": [
                "Remove unused exceptions and trailing whitespace. src/test/java/org/apache/commons/io/input/AbstractInputStreamTest.java",
                "Comment empty block. src/test/java/org/apache/commons/io/input/AbstractInputStreamTest.java",
                "Use IOUtils src/test/java/org/apache/commons/io/input/AbstractInputStreamTest.java",
                "More precise exceptions src/test/java/org/apache/commons/io/input/AbstractInputStreamTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/QueueInputStreamTest.java": {
            "message": [
                "Remove unused exceptions and trailing whitespace. src/test/java/org/apache/commons/io/input/QueueInputStreamTest.java",
                "Use final. src/test/java/org/apache/commons/io/input/QueueInputStreamTest.java",
                "Make public and reuse IOUtils.EMPTY_BYTE_ARRAY. src/test/java/org/apache/commons/io/input/QueueInputStreamTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/input/QueueInputStreamTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/input/QueueInputStreamTest.java",
                "Reuse StandardCharsets src/test/java/org/apache/commons/io/input/QueueInputStreamTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/MarkShieldInputStream.java": {
            "message": [
                "[IO-705] MarkShieldInputStream#reset should throw\nUnsupportedOperationException. src/main/java/org/apache/commons/io/input/MarkShieldInputStream.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/UnsupportedOperationExceptions.java": {
            "message": [
                "[IO-705] MarkShieldInputStream#reset should throw\nUnsupportedOperationException. src/main/java/org/apache/commons/io/input/UnsupportedOperationExceptions.java",
                "Javadoc. Close HTML tags. Use paragraph tags. src/main/java/org/apache/commons/io/input/UnsupportedOperationExceptions.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/MarkShieldInputStreamTest.java": {
            "message": [
                "[IO-705] MarkShieldInputStream#reset should throw\nUnsupportedOperationException. src/test/java/org/apache/commons/io/input/MarkShieldInputStreamTest.java",
                "Make public and reuse IOUtils.EMPTY_BYTE_ARRAY. src/test/java/org/apache/commons/io/input/MarkShieldInputStreamTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/input/MarkShieldInputStreamTest.java",
                "Minor changes: (#287)\n\n* Simplify assertions.\r\n* Replace lambda for reference.\r\n* Remove Unnecessary interface modifier. src/test/java/org/apache/commons/io/input/MarkShieldInputStreamTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/input/MarkShieldInputStreamTest.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/test/java/org/apache/commons/io/input/MarkShieldInputStreamTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/output/TaggedWriter.java": {
            "message": [
                "Javadoc: Sentences end in a period. src/main/java/org/apache/commons/io/output/TaggedWriter.java",
                "Javadoc: Close HTML tags. src/main/java/org/apache/commons/io/output/TaggedWriter.java",
                "Sort members. src/main/java/org/apache/commons/io/output/TaggedWriter.java"
            ]
        },
        "src/test/java/org/apache/commons/io/jmh/IOUtilsContentEqualsInputStreamsBenchmark.java": {
            "message": [
                "Fix local var names in test. src/test/java/org/apache/commons/io/jmh/IOUtilsContentEqualsInputStreamsBenchmark.java",
                "Add benchmarks for IOUtils.contentEquals(Reader, Reader).\n\nThis is a follow up regarding the work in PR 118 by XenoAmess. src/test/java/org/apache/commons/io/jmh/IOUtilsContentEqualsInputStreamsBenchmark.java"
            ]
        },
        "src/test/java/org/apache/commons/io/jmh/IOUtilsContentEqualsReadersBenchmark.java": {
            "message": [
                "Fix benchmark. src/test/java/org/apache/commons/io/jmh/IOUtilsContentEqualsReadersBenchmark.java",
                "Improve performance of IOUtils.contentEquals(Reader, Reader).\n\nThis is based on the PR https://github.com/apache/commons-io/pull/118 by\nXenoAmess but only for this one method. src/test/java/org/apache/commons/io/jmh/IOUtilsContentEqualsReadersBenchmark.java"
            ]
        },
        "src/main/java/org/apache/commons/io/file/StandardDeleteOption.java": {
            "message": [
                "Reuse IOUtils.length(Object[]). src/main/java/org/apache/commons/io/file/StandardDeleteOption.java",
                "[IO-751] When deleting symlinks, File/PathUtils.deleteDirectory()\nchanges file permissions of the target.\n\n\nFix file permission logic when deleting in override read-only mode. src/main/java/org/apache/commons/io/file/StandardDeleteOption.java",
                "Add and reuse IOConsumer.forEach(*) and forEachIndexed(*).\n\nUse forEach and streams. src/main/java/org/apache/commons/io/file/StandardDeleteOption.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/TimestampedObserver.java": {
            "message": [
                "[IO-706] Add TimestampedObserver.\n\nAdd simplest toString(). src/main/java/org/apache/commons/io/input/TimestampedObserver.java",
                "Remove trailing whitepsace. src/main/java/org/apache/commons/io/input/TimestampedObserver.java",
                "Sort members. src/main/java/org/apache/commons/io/input/TimestampedObserver.java",
                "PMD: Remove unnecessary final src/main/java/org/apache/commons/io/input/TimestampedObserver.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/TimestampedObserverTest.java": {
            "message": [
                "[IO-706] Add TimestampedObserver.\n\nAdd simplest toString(). src/test/java/org/apache/commons/io/input/TimestampedObserverTest.java",
                "Make public and reuse IOUtils.EMPTY_BYTE_ARRAY. src/test/java/org/apache/commons/io/input/TimestampedObserverTest.java",
                "Remove unused exception. src/test/java/org/apache/commons/io/input/TimestampedObserverTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/input/TimestampedObserverTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/output/BrokenWriter.java": {
            "message": [
                "Javadoc: Close HTML tags. src/main/java/org/apache/commons/io/output/BrokenWriter.java",
                "Add BrokenWriter.INSTANCE. src/main/java/org/apache/commons/io/output/BrokenWriter.java",
                "Add BrokenWriter.INSTANCE. src/main/java/org/apache/commons/io/output/BrokenWriter.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/output/BrokenWriter.java",
                "Sort members. src/main/java/org/apache/commons/io/output/BrokenWriter.java",
                "Prevent IllegalArgumentExceptions in BrokenInputStream/Reader/OutputStream/Writer (#278)\n\n* BrokenInputStream/Reader/OutputStream/Writer use a supplier to prevent IllegalArgumentExceptions in try-with-resources\r\n\r\n* Processed feedback from PR src/main/java/org/apache/commons/io/output/BrokenWriter.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/BufferedFileChannelInputStreamTest.java": {
            "message": [
                "Fix Typos in JavaDoc, Comments and Tests (#201)\n\n* Fixed incorrect/missing JavaDoc.\r\n\r\n* Fixed misc. typos in comments and tests.\r\n\r\n* Fixed typos in exception messages. src/test/java/org/apache/commons/io/input/BufferedFileChannelInputStreamTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/CircularInputStreamTest.java": {
            "message": [
                "- Simplify array declarations.\n- Javadoc.\n- Use try-with-resources. src/test/java/org/apache/commons/io/input/CircularInputStreamTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/UncheckedBufferedReader.java": {
            "message": [
                "Minor refactorings. src/main/java/org/apache/commons/io/input/UncheckedBufferedReader.java",
                "\"@exception\" -> \"@throws\" src/main/java/org/apache/commons/io/input/UncheckedBufferedReader.java",
                "Reduce boilerplate through new UncheckedIO class and friends in\norg.apache.commons.io.function. src/main/java/org/apache/commons/io/input/UncheckedBufferedReader.java",
                "Rename new class src/main/java/org/apache/commons/io/input/UncheckedBufferedReader.java",
                "Move new class and test it explicitly\n\nAs opposed to testing it by running other code. src/main/java/org/apache/commons/io/input/UncheckedBufferedReader.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/UncheckedFilterReader.java": {
            "message": [
                "Minor refactorings. src/main/java/org/apache/commons/io/input/UncheckedFilterReader.java",
                "Reduce boilerplate through new UncheckedIO class and friends in\norg.apache.commons.io.function. src/main/java/org/apache/commons/io/input/UncheckedFilterReader.java",
                "Rename new class src/main/java/org/apache/commons/io/input/UncheckedFilterReader.java",
                "Move new class and test it explicitly\n\nAs opposed to testing it by running other code. src/main/java/org/apache/commons/io/input/UncheckedFilterReader.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/UncheckedFilterInputStreamTest.java": {
            "message": [
                "Add ClosedInputStream.INSTANCE and deprecate CLOSED_INPUT_STREAM. src/test/java/org/apache/commons/io/input/UncheckedFilterInputStreamTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/input/UncheckedFilterInputStreamTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/UncheckedBufferedReaderTest.java": {
            "message": [
                "Add ClosedReader.INSTANCE and deprecate CLOSED_READER. src/test/java/org/apache/commons/io/input/UncheckedBufferedReaderTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/input/UncheckedBufferedReaderTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/UncheckedFilterReaderTest.java": {
            "message": [
                "Add ClosedReader.INSTANCE and deprecate CLOSED_READER. src/test/java/org/apache/commons/io/input/UncheckedFilterReaderTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/input/UncheckedFilterReaderTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/test/ThrowOnCloseOutputStream.java": {
            "message": [
                "Add NullOutputStream.INSTANCE and deprecate NULL_OUTPUT_STREAM. src/test/java/org/apache/commons/io/test/ThrowOnCloseOutputStream.java",
                "Better Javadoc and inline comments. src/test/java/org/apache/commons/io/test/ThrowOnCloseOutputStream.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/test/java/org/apache/commons/io/test/ThrowOnCloseOutputStream.java"
            ]
        },
        "src/test/java/org/apache/commons/io/test/ThrowOnCloseWriter.java": {
            "message": [
                "Add NullWriter.INSTANCE and deprecate NULL_WRITER. src/test/java/org/apache/commons/io/test/ThrowOnCloseWriter.java",
                "Better Javadoc and inline comments. src/test/java/org/apache/commons/io/test/ThrowOnCloseWriter.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/test/java/org/apache/commons/io/test/ThrowOnCloseWriter.java"
            ]
        },
        "src/test/java/org/apache/commons/io/test/ThrowOnCloseInputStream.java": {
            "message": [
                "Add NullInputStream.INSTANCE.\n\nAdd @SuppressWarnings(\"resource\"). src/test/java/org/apache/commons/io/test/ThrowOnCloseInputStream.java",
                "Better Javadoc and inline comments. src/test/java/org/apache/commons/io/test/ThrowOnCloseInputStream.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/test/java/org/apache/commons/io/test/ThrowOnCloseInputStream.java"
            ]
        },
        "src/test/java/org/apache/commons/io/test/ThrowOnCloseReader.java": {
            "message": [
                "Add NullReader.INSTANCE. src/test/java/org/apache/commons/io/test/ThrowOnCloseReader.java",
                "Better Javadoc and inline comments. src/test/java/org/apache/commons/io/test/ThrowOnCloseReader.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/test/java/org/apache/commons/io/test/ThrowOnCloseReader.java"
            ]
        },
        "src/main/java/org/apache/commons/io/output/UncheckedAppendableImpl.java": {
            "message": [
                "Add and reuse UncheckedIOExceptions. src/main/java/org/apache/commons/io/output/UncheckedAppendableImpl.java",
                "Remove superfluous super call. src/main/java/org/apache/commons/io/output/UncheckedAppendableImpl.java",
                "Reduce boilerplate through new UncheckedIO class and friends in\norg.apache.commons.io.function. src/main/java/org/apache/commons/io/output/UncheckedAppendableImpl.java",
                "Rename new class src/main/java/org/apache/commons/io/output/UncheckedAppendableImpl.java",
                "Move new class and test it explicitly\n\nAs opposed to testing it by running other code. src/main/java/org/apache/commons/io/output/UncheckedAppendableImpl.java"
            ]
        },
        "src/main/java/org/apache/commons/io/output/UncheckedAppendable.java": {
            "message": [
                "Javadoc. src/main/java/org/apache/commons/io/output/UncheckedAppendable.java",
                "Minor changes: (#287)\n\n* Simplify assertions.\r\n* Replace lambda for reference.\r\n* Remove Unnecessary interface modifier. src/main/java/org/apache/commons/io/output/UncheckedAppendable.java"
            ]
        },
        "src/test/java/org/apache/commons/io/output/UncheckedAppendableTest.java": {
            "message": [
                "Javadoc. src/test/java/org/apache/commons/io/output/UncheckedAppendableTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/UncheckedIOExceptions.java": {
            "message": [
                "Use final and remove trailing whitespace. src/main/java/org/apache/commons/io/UncheckedIOExceptions.java",
                "Inline single use local variable. src/main/java/org/apache/commons/io/UncheckedIOExceptions.java",
                "Revert \"Inline single use local variable.\"\n\nThis reverts commit eb119aaa711e8e1c205aa31fb5413936eaae34dc. src/main/java/org/apache/commons/io/UncheckedIOExceptions.java",
                "More precise Javadoc. src/main/java/org/apache/commons/io/UncheckedIOExceptions.java",
                "Reduce boilerplate through new UncheckedIO class and friends in\norg.apache.commons.io.function. src/main/java/org/apache/commons/io/UncheckedIOExceptions.java",
                "Javadoc: Replace @code with @link src/main/java/org/apache/commons/io/UncheckedIOExceptions.java",
                "No instances needed src/main/java/org/apache/commons/io/UncheckedIOExceptions.java",
                "No instances needed src/main/java/org/apache/commons/io/UncheckedIOExceptions.java",
                "Make package-private until we need it public src/main/java/org/apache/commons/io/UncheckedIOExceptions.java"
            ]
        },
        "src/main/java/org/apache/commons/io/output/UncheckedFilterWriter.java": {
            "message": [
                "Use final and remove trailing whitespace. src/main/java/org/apache/commons/io/output/UncheckedFilterWriter.java",
                "Rename new class src/main/java/org/apache/commons/io/output/UncheckedFilterWriter.java",
                "Move new class and test it explicitly\n\nAs opposed to testing it by running other code. src/main/java/org/apache/commons/io/output/UncheckedFilterWriter.java"
            ]
        },
        "src/test/java/org/apache/commons/io/UncheckedIOExceptionsTest.java": {
            "message": [
                "Use final and remove trailing whitespace. src/test/java/org/apache/commons/io/UncheckedIOExceptionsTest.java",
                "Reduce boilerplate through new UncheckedIO class and friends in\norg.apache.commons.io.function. src/test/java/org/apache/commons/io/UncheckedIOExceptionsTest.java",
                "Rename new class src/test/java/org/apache/commons/io/UncheckedIOExceptionsTest.java",
                "Move new class and test it explicitly\n\nAs opposed to testing it by running other code. src/test/java/org/apache/commons/io/UncheckedIOExceptionsTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/file/attribute/FileTimes.java": {
            "message": [
                "Add and use PathUtils.isNewer(Path, ChronoZonedDateTime, LinkOption...)\nfor more precision.\n\n- Add and use PathUtils.isNewer(Path, Path) for more precision.\n- Add and use FileUtils.isNewer(File, FileTime) for more precision.\n- Tailer uses more precise file time checks. src/main/java/org/apache/commons/io/file/attribute/FileTimes.java",
                "Javadoc. src/main/java/org/apache/commons/io/file/attribute/FileTimes.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/file/attribute/FileTimes.java",
                "Add NTFS conversion methods from\nhttps://github.com/apache/commons-compress/pull/256 src/main/java/org/apache/commons/io/file/attribute/FileTimes.java",
                "PMD: Remove unnecessary parentheses src/main/java/org/apache/commons/io/file/attribute/FileTimes.java"
            ]
        },
        "src/test/java/org/apache/commons/io/file/attribute/FileTimesTest.java": {
            "message": [
                "Add and use PathUtils.isNewer(Path, ChronoZonedDateTime, LinkOption...)\nfor more precision.\n\n- Add and use PathUtils.isNewer(Path, Path) for more precision.\n- Add and use FileUtils.isNewer(File, FileTime) for more precision.\n- Tailer uses more precise file time checks. src/test/java/org/apache/commons/io/file/attribute/FileTimesTest.java",
                "Fix test method name. src/test/java/org/apache/commons/io/file/attribute/FileTimesTest.java",
                "Add NTFS conversion methods from\nhttps://github.com/apache/commons-compress/pull/256 src/test/java/org/apache/commons/io/file/attribute/FileTimesTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/TestResources.java": {
            "message": [
                "Sort test members. src/test/java/org/apache/commons/io/TestResources.java"
            ]
        },
        "src/test/java/org/apache/commons/io/serialization/AbstractCloseableListTest.java": {
            "message": [
                "Sort test members. src/test/java/org/apache/commons/io/serialization/AbstractCloseableListTest.java",
                "Add IOUtils.closeQuietly(Collection<Closeable>).\n\nAdd IOUtils.closeQuietly(Stream<Closeable>).\nInternal refactoring to avoid type casts. src/test/java/org/apache/commons/io/serialization/AbstractCloseableListTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/filefilter/SymbolicLinkFileFilter.java": {
            "message": [
                "Fix Javadoc. src/main/java/org/apache/commons/io/filefilter/SymbolicLinkFileFilter.java",
                "More precise Javadoc. src/main/java/org/apache/commons/io/filefilter/SymbolicLinkFileFilter.java",
                "Fix FileFilterTestCase use case for symbolic links on non-Windows OS.\n\n- Make SymbolicLinkFileFilter configurable:\n-- Add SymbolicLinkFileFilter.SymbolicLinkFileFilter(FileVisitResult,\nFileVisitResult)\n-- Add AbstractFileFilter(FileVisitResult, FileVisitResult)\n- CountingPathVisitor should not follow links by default to properly\ncount from FileUtils. src/main/java/org/apache/commons/io/filefilter/SymbolicLinkFileFilter.java",
                "Javadoc and refactor to FileTimes.now().\n\nReuse own APIs. src/main/java/org/apache/commons/io/filefilter/SymbolicLinkFileFilter.java",
                "Javadoc: Replace @code with @link src/main/java/org/apache/commons/io/filefilter/SymbolicLinkFileFilter.java"
            ]
        },
        "src/test/java/org/apache/commons/io/ByteOrderMarkTest.java": {
            "message": [
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/ByteOrderMarkTest.java",
                "Migrate from JUnit 4 to 5\n\nException cleanups in tests. src/test/java/org/apache/commons/io/ByteOrderMarkTest.java",
                "Use Objects.requireNonNull()\n\nUpdate Javadoc for existing calls. src/test/java/org/apache/commons/io/ByteOrderMarkTest.java",
                "Organize test imports src/test/java/org/apache/commons/io/ByteOrderMarkTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/CharsetsTest.java": {
            "message": [
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/CharsetsTest.java",
                "Add Charsets.toCharset(Charset, Charset).\n\nAdd Charsets.toCharset(String, Charset). src/test/java/org/apache/commons/io/CharsetsTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/DemuxTest.java": {
            "message": [
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/DemuxTest.java",
                "Avoid Code Duplication: Reuse Sleep from ThreadMonitor.\n\n- Redo changes from PR #66 from DaGeRe.\n- Use sleepQuietly. src/test/java/org/apache/commons/io/DemuxTest.java",
                "Migrate from JUnit 4 to 5\n\nException cleanups in tests. src/test/java/org/apache/commons/io/DemuxTest.java",
                "Use forEach() src/test/java/org/apache/commons/io/DemuxTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/DirectoryWalkerTest.java": {
            "message": [
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/DirectoryWalkerTest.java",
                "Migrate from JUnit 4 to 5\n\nException cleanups in tests. src/test/java/org/apache/commons/io/DirectoryWalkerTest.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/test/java/org/apache/commons/io/DirectoryWalkerTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/FileCleanerTest.java": {
            "message": [
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/FileCleanerTest.java",
                "Formatting and Javadoc. src/test/java/org/apache/commons/io/FileCleanerTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/FileCleaningTrackerTest.java": {
            "message": [
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/FileCleaningTrackerTest.java",
                "Use assertThrows() in tests instead of custom try/catch blocks. src/test/java/org/apache/commons/io/FileCleaningTrackerTest.java",
                "Checkstyle and fix test sources.\n\n- Move Checkstyle configuration from root folder to src/conf.\n- Remove unused imports.\n- Remove trailing whitespace.\n- Adjust line lengths.\n- No tabs.\n- Use final. src/test/java/org/apache/commons/io/FileCleaningTrackerTest.java",
                "Format nit. src/test/java/org/apache/commons/io/FileCleaningTrackerTest.java",
                "[IO-751] When deleting symlinks, File/PathUtils.deleteDirectory()\nchanges file permissions of the target.\n\n\nFix file permission logic when deleting in override read-only mode. src/test/java/org/apache/commons/io/FileCleaningTrackerTest.java",
                "Add final and remove useless parentheses. src/test/java/org/apache/commons/io/FileCleaningTrackerTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/FileCleaningTrackerTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/FileDeleteStrategyTest.java": {
            "message": [
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/FileDeleteStrategyTest.java",
                "Use assertThrows() in tests instead of custom try/catch blocks. src/test/java/org/apache/commons/io/FileDeleteStrategyTest.java",
                "Checkstyle and fix test sources.\n\n- Move Checkstyle configuration from root folder to src/conf.\n- Remove unused imports.\n- Remove trailing whitespace.\n- Adjust line lengths.\n- No tabs.\n- Use final. src/test/java/org/apache/commons/io/FileDeleteStrategyTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/FileDeleteStrategyTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/FileSystemTest.java": {
            "message": [
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/FileSystemTest.java",
                "[IO-762] FileSystem.WINDOWS.isReservedFileName doesn't check for file\nextension src/test/java/org/apache/commons/io/FileSystemTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/FileSystemUtilsTest.java": {
            "message": [
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/FileSystemUtilsTest.java",
                "Use assertThrows() in tests instead of custom try/catch blocks. src/test/java/org/apache/commons/io/FileSystemUtilsTest.java",
                "Checkstyle and fix test sources.\n\n- Move Checkstyle configuration from root folder to src/conf.\n- Remove unused imports.\n- Remove trailing whitespace.\n- Adjust line lengths.\n- No tabs.\n- Use final. src/test/java/org/apache/commons/io/FileSystemUtilsTest.java",
                "Use Objects.requireNonNull()\n\nUpdate Javadoc for existing calls. src/test/java/org/apache/commons/io/FileSystemUtilsTest.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/test/java/org/apache/commons/io/FileSystemUtilsTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTest.java": {
            "message": [
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTest.java",
                "[IO-751] When deleting symlinks, File/PathUtils.deleteDirectory()\nchanges file permissions of the target.\n\n\nFix file permission logic when deleting in override read-only mode. src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTest.java",
                "[IO-751] When deleting symlinks, File/PathUtils.deleteDirectory()\nchanges file permissions of the target.\n\n\nPOSIX: Deleting a file requires write and execute on the parent. Listing a file also requires reading. src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTest.java",
                "Sort members. src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTest.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTest.java": {
            "message": [
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/FileUtilsCopyDirectoryToDirectoryTest.java": {
            "message": [
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/FileUtilsCopyDirectoryToDirectoryTest.java",
                "Rework some tests such that temporary files and directories are as\nshort-lived as possible, also use try-with-resources to make sure temps\nare deleted at the end of a test.\n\nPut all of this under test source tree for now, even the reusable\nclasses. src/test/java/org/apache/commons/io/FileUtilsCopyDirectoryToDirectoryTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/FileUtilsCopyDirectoryToDirectoryTest.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/test/java/org/apache/commons/io/FileUtilsCopyDirectoryToDirectoryTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/FileUtilsCopyToFileTest.java": {
            "message": [
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/FileUtilsCopyToFileTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/FileUtilsDeleteDirectoryBaseTest.java": {
            "message": [
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/FileUtilsDeleteDirectoryBaseTest.java",
                "Add missing javadoc for exceptions thrown for invalid arguments (#339) src/test/java/org/apache/commons/io/FileUtilsDeleteDirectoryBaseTest.java",
                "Sort test members src/test/java/org/apache/commons/io/FileUtilsDeleteDirectoryBaseTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/FileUtilsDeleteDirectoryLinuxTest.java": {
            "message": [
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/FileUtilsDeleteDirectoryLinuxTest.java",
                "Checkstyle and fix test sources.\n\n- Move Checkstyle configuration from root folder to src/conf.\n- Remove unused imports.\n- Remove trailing whitespace.\n- Adjust line lengths.\n- No tabs.\n- Use final. src/test/java/org/apache/commons/io/FileUtilsDeleteDirectoryLinuxTest.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/test/java/org/apache/commons/io/FileUtilsDeleteDirectoryLinuxTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/FileUtilsDeleteDirectoryWindowsTest.java": {
            "message": [
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/FileUtilsDeleteDirectoryWindowsTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTest.java": {
            "message": [
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTest.java",
                "Migrate from JUnit 4 to 5\n\nException cleanups in tests. src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTest.java",
                "Organize test imports src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/FileUtilsFileNewerTest.java": {
            "message": [
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/FileUtilsFileNewerTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/FileUtilsFileNewerTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/FileUtilsListFilesTest.java": {
            "message": [
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/FileUtilsListFilesTest.java",
                "Migrate from JUnit 4 to 5\n\nException cleanups in tests. src/test/java/org/apache/commons/io/FileUtilsListFilesTest.java",
                "Use forEach() src/test/java/org/apache/commons/io/FileUtilsListFilesTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/FileUtilsTest.java": {
            "message": [
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/FileUtilsTest.java",
                "Use assertThrows() in tests instead of custom try/catch blocks. src/test/java/org/apache/commons/io/FileUtilsTest.java",
                "Avoid Code Duplication: Reuse Sleep from ThreadMonitor.\n\n- Redo changes from PR #66 from DaGeRe.\n- Use sleepQuietly. src/test/java/org/apache/commons/io/FileUtilsTest.java",
                "[IO-750] FileUtils.iterateFiles also lists directories. src/test/java/org/apache/commons/io/FileUtilsTest.java",
                "Sort test members. src/test/java/org/apache/commons/io/FileUtilsTest.java",
                "Remove old inline comment. src/test/java/org/apache/commons/io/FileUtilsTest.java",
                "Minor changes: (#287)\n\n* Simplify assertions.\r\n* Replace lambda for reference.\r\n* Remove Unnecessary interface modifier. src/test/java/org/apache/commons/io/FileUtilsTest.java",
                "Fix typo in comment. src/test/java/org/apache/commons/io/FileUtilsTest.java",
                "[IO-751] When deleting symlinks, File/PathUtils.deleteDirectory()\nchanges file permissions of the target.\n\n\nFix file permission logic when deleting in override read-only mode. src/test/java/org/apache/commons/io/FileUtilsTest.java",
                "FileUtils.copyURLToFile should create target parent directories and\noverwrite target file #319.\n\n- Based on PR #39 but different.\n- New assert method leaks input stream; this bug was copied from\nexisting code into a new method.\n- Use NIO.\n- Tests don't need to schedule files for deletion on exit when JUnit\nalready manages the directory. src/test/java/org/apache/commons/io/FileUtilsTest.java",
                "Restore some behavior based on findings described in\nhttps://github.com/apache/commons-io/pull/324 src/test/java/org/apache/commons/io/FileUtilsTest.java",
                "Update tests to use Files.createSymbolicLink() instead of\nRuntime.getRuntime().exec() to create symbolic link fixtures.\n\nAlso fixes two CodeQL issues. src/test/java/org/apache/commons/io/FileUtilsTest.java",
                "Add a few assertions. src/test/java/org/apache/commons/io/FileUtilsTest.java",
                "Add missing javadoc for exceptions thrown for invalid arguments (#339) src/test/java/org/apache/commons/io/FileUtilsTest.java",
                "Use JUnit TempDir instead of custom code. src/test/java/org/apache/commons/io/FileUtilsTest.java",
                "Revert \"Use JUnit TempDir instead of custom code.\"\n\nThis reverts commit ebf06ea477399a778564d2bc60422f652b89989f. src/test/java/org/apache/commons/io/FileUtilsTest.java",
                "Rework some tests such that temporary files and directories are as\nshort-lived as possible, also use try-with-resources to make sure temps\nare deleted at the end of a test.\n\nPut all of this under test source tree for now, even the reusable\nclasses. src/test/java/org/apache/commons/io/FileUtilsTest.java",
                "Remove unused exceptions from test method signatures src/test/java/org/apache/commons/io/FileUtilsTest.java",
                "Add PathUtils.touch(Path)\n\nRefactor src/test/java/org/apache/commons/io/FileUtilsTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/FileUtilsTest.java",
                "Add FileUtils.isFileNewer(File, ChronoLocalDate, OffsetTime).\n\nAdd FileUtils.isFileNewer(File, OffsetDateTime).\nAdd FileUtils.isFileOlder(File, ChronoLocalDate, OffsetTime).\nAdd FileUtils.isFileOlder(File, OffsetDateTime). src/test/java/org/apache/commons/io/FileUtilsTest.java",
                "Use Files API instead of custom fixture building code. src/test/java/org/apache/commons/io/FileUtilsTest.java",
                "Use Files API instead of custom fixture building code. src/test/java/org/apache/commons/io/FileUtilsTest.java",
                "Reuse StandardCharsets src/test/java/org/apache/commons/io/FileUtilsTest.java",
                "Use forEach() src/test/java/org/apache/commons/io/FileUtilsTest.java",
                "Reuse own code src/test/java/org/apache/commons/io/FileUtilsTest.java",
                "Sort test members src/test/java/org/apache/commons/io/FileUtilsTest.java",
                "[IO-386] FileUtils.doCopyFile uses different methods to check the file\nsizes.\n\n- The method org.apache.commons.io.FileUtils.copyFile(File, File,\nCopyOption...) no longer checks file sizes.\n- [IO-443] FileUtils.copyFile methods throw an unnecessary \"Failed to\ncopy full contents from\" exception.\n- Remove test that does not reflect what happens on disk since we use\nFiles.copy(Path,Path,CopyOptions) src/test/java/org/apache/commons/io/FileUtilsTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/FileUtilsWaitForTest.java": {
            "message": [
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/FileUtilsWaitForTest.java",
                "We had the same test twice, replace with another bounfary condition. src/test/java/org/apache/commons/io/FileUtilsWaitForTest.java",
                "Add a TODO comment (see GitHub builds). src/test/java/org/apache/commons/io/FileUtilsWaitForTest.java",
                "Increase timeout for when build are super slow (on my GitHub at least) src/test/java/org/apache/commons/io/FileUtilsWaitForTest.java",
                "Javadoc src/test/java/org/apache/commons/io/FileUtilsWaitForTest.java",
                "Javadoc src/test/java/org/apache/commons/io/FileUtilsWaitForTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/FilenameUtilsTest.java": {
            "message": [
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/FilenameUtilsTest.java",
                "Checkstyle and fix test sources.\n\n- Move Checkstyle configuration from root folder to src/conf.\n- Remove unused imports.\n- Remove trailing whitespace.\n- Adjust line lengths.\n- No tabs.\n- Use final. src/test/java/org/apache/commons/io/FilenameUtilsTest.java",
                "(doc) [IO-484] Fix incorrect FilenameUtils documentation for null bytes (#310)\n\n* (doc) [IO-484] Fix incorrect FilenameUtils documentation for null bytes\r\n\r\n* (doc) Consistently use term \"null character\"\r\n\r\n* (doc) Remove TODO comments for null character handling src/test/java/org/apache/commons/io/FilenameUtilsTest.java",
                "Remove unused exceptions from test method signatures src/test/java/org/apache/commons/io/FilenameUtilsTest.java",
                "Migrate from JUnit 4 to 5\n\nRemove useless comments src/test/java/org/apache/commons/io/FilenameUtilsTest.java",
                "Migrate from JUnit 4 to 5\n\nException cleanups in tests. src/test/java/org/apache/commons/io/FilenameUtilsTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/FilenameUtilsTest.java",
                "Organize test imports src/test/java/org/apache/commons/io/FilenameUtilsTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/FilenameUtilsWildcardTest.java": {
            "message": [
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/FilenameUtilsWildcardTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/IOCaseTest.java": {
            "message": [
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/IOCaseTest.java",
                "Use assertThrows() in tests instead of custom try/catch blocks. src/test/java/org/apache/commons/io/IOCaseTest.java",
                "Checkstyle and fix test sources.\n\n- Move Checkstyle configuration from root folder to src/conf.\n- Remove unused imports.\n- Remove trailing whitespace.\n- Adjust line lengths.\n- No tabs.\n- Use final. src/test/java/org/apache/commons/io/IOCaseTest.java",
                "IOCase.isCaseSensitive(IOCase) result is backward (#325)\n\n* Handle static method isCaseSensitive of class IOCase.\r\n\r\n* Update RegexFileFilter.java\r\n\r\nChange the order of import statements, which the IDE automatically changes.\r\n\r\n* Add a test of static method isCaseSensitive in class IOCaseTest.\r\n\r\nCo-authored-by: huangxiaowei <huangxw@newland.com.cn> src/test/java/org/apache/commons/io/IOCaseTest.java",
                "IOCase.isCaseSensitive(IOCase) result is backward #325\n\nMove test method to proper location. src/test/java/org/apache/commons/io/IOCaseTest.java",
                "Use try-with-resources src/test/java/org/apache/commons/io/IOCaseTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/IOExceptionListTest.java": {
            "message": [
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/IOExceptionListTest.java",
                "Initialize the message of an IOExceptionList to a default if null. src/test/java/org/apache/commons/io/IOExceptionListTest.java",
                "Add IOExceptionList.checkEmpty(List, Object). src/test/java/org/apache/commons/io/IOExceptionListTest.java",
                "Adjust exception message. Javadoc typo. Resue own method. src/test/java/org/apache/commons/io/IOExceptionListTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/IOExceptionWithCauseTest.java": {
            "message": [
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/IOExceptionWithCauseTest.java",
                "Remove extra space. src/test/java/org/apache/commons/io/IOExceptionWithCauseTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/IOIndexedExceptionTest.java": {
            "message": [
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/IOIndexedExceptionTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/IOUtilsCopyTest.java": {
            "message": [
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/IOUtilsCopyTest.java",
                "[IO-753] Add IOUtils method to copy output stream to input stream (#281)\n\n* IO-753 - added method to copy ByteArrayOutputStream to InputStream\r\n\r\n* IO-753 fixed auto-indentation and organize-import changes\r\n\r\n* IO-753 fixed organize-import changes\r\n\r\n* IO-753 fixed checkstyle warnings\r\n\r\n* IO-753 fixed javadoc errors\r\n\r\n* IO-753 fixed PR remarks src/test/java/org/apache/commons/io/IOUtilsCopyTest.java",
                "Sort members. src/test/java/org/apache/commons/io/IOUtilsCopyTest.java",
                "Rework some tests such that temporary files and directories are as\nshort-lived as possible, also use try-with-resources to make sure temps\nare deleted at the end of a test.\n\nPut all of this under test source tree for now, even the reusable\nclasses. src/test/java/org/apache/commons/io/IOUtilsCopyTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/IOUtilsCopyTest.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/test/java/org/apache/commons/io/IOUtilsCopyTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/IOUtilsTest.java": {
            "message": [
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/IOUtilsTest.java",
                "Checkstyle and fix test sources.\n\n- Move Checkstyle configuration from root folder to src/conf.\n- Remove unused imports.\n- Remove trailing whitespace.\n- Adjust line lengths.\n- No tabs.\n- Use final. src/test/java/org/apache/commons/io/IOUtilsTest.java",
                "Reimplement internals to use try-with-resources. src/test/java/org/apache/commons/io/IOUtilsTest.java",
                "use assertThrows in testAsBufferedNull src/test/java/org/apache/commons/io/IOUtilsTest.java",
                "[IO-764] IOUtils.write() throws\nOutOfMemoryError/NegativeArraySizeException while writing big strings.\n\n- Better test than in PR #343 that validates the output size. src/test/java/org/apache/commons/io/IOUtilsTest.java",
                "Use try-with-resources, avoids compiler warnings. src/test/java/org/apache/commons/io/IOUtilsTest.java",
                "Checkstyle. src/test/java/org/apache/commons/io/IOUtilsTest.java",
                "Reuse own code. src/test/java/org/apache/commons/io/IOUtilsTest.java",
                "add more tests for IOUtils.contentEqualsIgnoreEOL (#137) src/test/java/org/apache/commons/io/IOUtilsTest.java",
                "[IO-764] IOUtils.write() throws\nOutOfMemoryError/NegativeArraySizeException while writing big strings\n\n- Adapt PR #343 by DaGeRe.\n- Use a ternary expression. src/test/java/org/apache/commons/io/IOUtilsTest.java",
                "[IO-764] IOUtils.write() throws\nOutOfMemoryError/NegativeArraySizeException while writing big strings\n\nReuse solution. src/test/java/org/apache/commons/io/IOUtilsTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/IOUtilsTest.java",
                "Add IOUtils.closeQuietly(Collection<Closeable>).\n\nAdd IOUtils.closeQuietly(Stream<Closeable>).\nInternal refactoring to avoid type casts. src/test/java/org/apache/commons/io/IOUtilsTest.java",
                "Reuse StandardCharsets src/test/java/org/apache/commons/io/IOUtilsTest.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/test/java/org/apache/commons/io/IOUtilsTest.java",
                "More precise exceptions src/test/java/org/apache/commons/io/IOUtilsTest.java",
                "Add IOUtils.consume(Reader). src/test/java/org/apache/commons/io/IOUtilsTest.java",
                "Javadoc src/test/java/org/apache/commons/io/IOUtilsTest.java",
                "Add missing test in IOUtils src/test/java/org/apache/commons/io/IOUtilsTest.java",
                "Sort test members src/test/java/org/apache/commons/io/IOUtilsTest.java",
                "Add missing IOUtils test src/test/java/org/apache/commons/io/IOUtilsTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/IOUtilsWriteTest.java": {
            "message": [
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/IOUtilsWriteTest.java",
                "Use assertThrows() in tests instead of custom try/catch blocks. src/test/java/org/apache/commons/io/IOUtilsWriteTest.java",
                "Reuse StandardCharsets src/test/java/org/apache/commons/io/IOUtilsWriteTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/LineIteratorTest.java": {
            "message": [
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/LineIteratorTest.java",
                "Minor changes: (#287)\n\n* Simplify assertions.\r\n* Replace lambda for reference.\r\n* Remove Unnecessary interface modifier. src/test/java/org/apache/commons/io/LineIteratorTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/LineIteratorTest.java",
                "Use Objects.requireNonNull()\n\nJavadoc. Reuse own API. src/test/java/org/apache/commons/io/LineIteratorTest.java",
                "Reuse StandardCharsets src/test/java/org/apache/commons/io/LineIteratorTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/ThreadMonitorTest.java": {
            "message": [
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/ThreadMonitorTest.java",
                "Checkstyle and fix test sources.\n\n- Move Checkstyle configuration from root folder to src/conf.\n- Remove unused imports.\n- Remove trailing whitespace.\n- Adjust line lengths.\n- No tabs.\n- Use final. src/test/java/org/apache/commons/io/ThreadMonitorTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/comparator/ComparatorAbstractTest.java": {
            "message": [
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/comparator/ComparatorAbstractTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/filefilter/AndFileFilterTest.java": {
            "message": [
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/filefilter/AndFileFilterTest.java",
                "Use forEach() src/test/java/org/apache/commons/io/filefilter/AndFileFilterTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTest.java": {
            "message": [
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTest.java",
                "Use forEach() src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/filefilter/FileFilterTest.java": {
            "message": [
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/filefilter/FileFilterTest.java",
                "Use assertThrows() in tests instead of custom try/catch blocks. src/test/java/org/apache/commons/io/filefilter/FileFilterTest.java",
                "(doc) - fix misleading comments (#334)\n\nCo-authored-by: richard <ra22597@gmail.com> src/test/java/org/apache/commons/io/filefilter/FileFilterTest.java",
                "FileFilterTest minor fixes (#340)\n\n* use assertThrows for cleaner test\r\n\r\n* cleaner assertions for testFilterListNullParameters\r\n\r\n* add missing boolan combination in testAnd\r\n\r\n* use assertThrows for cleaner test: testNameFilterNullArgument\r\n\r\nCo-authored-by: richard <ra22597@gmail.com> src/test/java/org/apache/commons/io/filefilter/FileFilterTest.java",
                "Rework some tests such that temporary files and directories are as\nshort-lived as possible, also use try-with-resources to make sure temps\nare deleted at the end of a test.\n\nPut all of this under test source tree for now, even the reusable\nclasses. src/test/java/org/apache/commons/io/filefilter/FileFilterTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/filefilter/FileFilterTest.java",
                "Use Objects.requireNonNull()\n\nUpdate Javadoc for existing calls. src/test/java/org/apache/commons/io/filefilter/FileFilterTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTest.java": {
            "message": [
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTest.java",
                "Use forEach() src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTest.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/filefilter/OrFileFilterTest.java": {
            "message": [
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/filefilter/OrFileFilterTest.java",
                "Use forEach() src/test/java/org/apache/commons/io/filefilter/OrFileFilterTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTest.java": {
            "message": [
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTest.java",
                "Use assertThrows() in tests instead of custom try/catch blocks. src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTest.java",
                "Checkstyle and fix test sources.\n\n- Move Checkstyle configuration from root folder to src/conf.\n- Remove unused imports.\n- Remove trailing whitespace.\n- Adjust line lengths.\n- No tabs.\n- Use final. src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTest.java",
                "[IO-773] RegexFileFilter is no longer Serializable. src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTest.java",
                "Use Objects.requireNonNull()\n\nUpdate Javadoc for existing calls. src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTest.java",
                "Add missing RegexFileFilter tests src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTest.java",
                "Organize test imports src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/monitor/AbstractMonitorTest.java": {
            "message": [
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/monitor/AbstractMonitorTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTest.java": {
            "message": [
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTest.java",
                "Migrate from JUnit 4 to 5\n\nException cleanups in tests. src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTest.java",
                "Use forEach() src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTest.java": {
            "message": [
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTest.java": {
            "message": [
                "Rename test classes from JUnit 3 style *TestCase to JUnit 4 style *Test.\n\nAll test classes now follow the naming *Test. src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTest.java",
                "Checkstyle and fix test sources.\n\n- Move Checkstyle configuration from root folder to src/conf.\n- Remove unused imports.\n- Remove trailing whitespace.\n- Adjust line lengths.\n- No tabs.\n- Use final. src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTest.java",
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/filefilter/AbstractFilterTest.java": {
            "message": [
                "Format to longer line lengths.\n\nRemove // --- comment. src/test/java/org/apache/commons/io/filefilter/AbstractFilterTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/filefilter/WildcardFileFilterTest.java": {
            "message": [
                "Use assertThrows() in tests instead of custom try/catch blocks. src/test/java/org/apache/commons/io/filefilter/WildcardFileFilterTest.java",
                "Checkstyle and fix test sources.\n\n- Move Checkstyle configuration from root folder to src/conf.\n- Remove unused imports.\n- Remove trailing whitespace.\n- Adjust line lengths.\n- No tabs.\n- Use final. src/test/java/org/apache/commons/io/filefilter/WildcardFileFilterTest.java",
                "Use Objects.requireNonNull()\n\nUpdate Javadoc for existing calls. src/test/java/org/apache/commons/io/filefilter/WildcardFileFilterTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/MemoryMappedFileInputStreamTest.java": {
            "message": [
                "Rename @AfterEach method. src/test/java/org/apache/commons/io/input/MemoryMappedFileInputStreamTest.java",
                "Simplify test fixture creation src/test/java/org/apache/commons/io/input/MemoryMappedFileInputStreamTest.java",
                "Try to better clean up test fixtures. src/test/java/org/apache/commons/io/input/MemoryMappedFileInputStreamTest.java",
                "Reuse ArrayUtils.EMPTY_BYTE_ARRAY in test src/test/java/org/apache/commons/io/input/MemoryMappedFileInputStreamTest.java",
                "Organize test imports src/test/java/org/apache/commons/io/input/MemoryMappedFileInputStreamTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/output/UncheckedFilterOutputStream.java": {
            "message": [
                "Sort members. src/main/java/org/apache/commons/io/output/UncheckedFilterOutputStream.java",
                "Reuse our own code src/main/java/org/apache/commons/io/output/UncheckedFilterOutputStream.java",
                "Rename new class src/main/java/org/apache/commons/io/output/UncheckedFilterOutputStream.java",
                "Move new class and test it explicitly\n\nAs opposed to testing it by running other code. src/main/java/org/apache/commons/io/output/UncheckedFilterOutputStream.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/ByteBufferCleanerTest.java": {
            "message": [
                "Checkstyle and fix test sources.\n\n- Move Checkstyle configuration from root folder to src/conf.\n- Remove unused imports.\n- Remove trailing whitespace.\n- Adjust line lengths.\n- No tabs.\n- Use final. src/test/java/org/apache/commons/io/input/ByteBufferCleanerTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/DeleteDirectoryTest.java": {
            "message": [
                "[IO-751] Add disabled failing test. src/test/java/org/apache/commons/io/DeleteDirectoryTest.java",
                "Only disable failing tests, not the whole class. src/test/java/org/apache/commons/io/DeleteDirectoryTest.java",
                "[IO-751] When deleting symlinks, File/PathUtils.deleteDirectory()\nchanges file permissions of the target.\n\n\nFix file permission logic when deleting in override read-only mode. src/test/java/org/apache/commons/io/DeleteDirectoryTest.java",
                "[IO-751] When deleting symlinks, File/PathUtils.deleteDirectory()\nchanges file permissions of the target.\n\n\nBetter assertion message. Builds OK on Windows and macOS, one test fails\non Ubuntu. src/test/java/org/apache/commons/io/DeleteDirectoryTest.java",
                "[IO-751] When deleting symlinks, File/PathUtils.deleteDirectory()\nchanges file permissions of the target.\n\n\nPOSIX: Deleting a file requires write and execute on the parent. Listing a file also requires reading. src/test/java/org/apache/commons/io/DeleteDirectoryTest.java",
                "[IO-751] When deleting symlinks, File/PathUtils.deleteDirectory()\nchanges file permissions of the target.\n\nPOSIX: Deleting a file requires write and execute on the parent. Listing\na file also requires reading.\n\nLooking for a fix to the Ubuntu failure in the GitHub builds. src/test/java/org/apache/commons/io/DeleteDirectoryTest.java",
                "Diable one test method on Linux and comment as TODO. src/test/java/org/apache/commons/io/DeleteDirectoryTest.java",
                "Diable one test method on Linux and comment as TODO. src/test/java/org/apache/commons/io/DeleteDirectoryTest.java",
                "Sort members. src/test/java/org/apache/commons/io/DeleteDirectoryTest.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/test/java/org/apache/commons/io/DeleteDirectoryTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/function/IOConsumerTest.java": {
            "message": [
                "Fix typo in Javadoc. src/test/java/org/apache/commons/io/function/IOConsumerTest.java",
                "Format tweak. src/test/java/org/apache/commons/io/function/IOConsumerTest.java",
                "Add some missing tests. src/test/java/org/apache/commons/io/function/IOConsumerTest.java",
                "Organize test imports src/test/java/org/apache/commons/io/function/IOConsumerTest.java",
                "Move new class and test it explicitly\n\nAs opposed to testing it by running other code. src/test/java/org/apache/commons/io/function/IOConsumerTest.java",
                "Add IOConsumer.asConsumer(). src/test/java/org/apache/commons/io/function/IOConsumerTest.java",
                "Add IOBiConsumer#asBiConsumer() src/test/java/org/apache/commons/io/function/IOConsumerTest.java",
                "Change parameter order of new methods, use var-args, improve tests src/test/java/org/apache/commons/io/function/IOConsumerTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/function/IOStreams.java": {
            "message": [
                "[IO-751] When deleting symlinks, File/PathUtils.deleteDirectory()\nchanges file permissions of the target.\n\n\nFix file permission logic when deleting in override read-only mode. src/main/java/org/apache/commons/io/function/IOStreams.java",
                "Sort members. src/main/java/org/apache/commons/io/function/IOStreams.java",
                "Javadoc src/main/java/org/apache/commons/io/function/IOStreams.java",
                "Add and reuse IOConsumer.forEach(*) and forEachIndexed(*).\n\nUse forEach and streams. src/main/java/org/apache/commons/io/function/IOStreams.java",
                "Add and reuse IOConsumer forAll(*), forEach(*) src/main/java/org/apache/commons/io/function/IOStreams.java"
            ]
        },
        "src/main/java/org/apache/commons/io/CloseableURLConnection.java": {
            "message": [
                "Add @SuppressWarnings. src/main/java/org/apache/commons/io/CloseableURLConnection.java",
                "Remove @SuppressWarnings, not needed. src/main/java/org/apache/commons/io/CloseableURLConnection.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/main/java/org/apache/commons/io/CloseableURLConnection.java"
            ]
        },
        "src/main/java/org/apache/commons/io/RandomAccessFileMode.java": {
            "message": [
                "Javadoc. src/main/java/org/apache/commons/io/RandomAccessFileMode.java",
                "Javadoc. src/main/java/org/apache/commons/io/RandomAccessFileMode.java"
            ]
        },
        "src/main/java/org/apache/commons/io/charset/CharsetEncoders.java": {
            "message": [
                "Add CharsetDecoders. src/main/java/org/apache/commons/io/charset/CharsetEncoders.java",
                "Add final and remove useless parentheses. src/main/java/org/apache/commons/io/charset/CharsetEncoders.java",
                "Make new constructors private src/main/java/org/apache/commons/io/charset/CharsetEncoders.java"
            ]
        },
        "src/main/java/org/apache/commons/io/charset/CharsetDecoders.java": {
            "message": [
                "Add final and remove useless parentheses. src/main/java/org/apache/commons/io/charset/CharsetDecoders.java",
                "Make new constructors private src/main/java/org/apache/commons/io/charset/CharsetDecoders.java"
            ]
        },
        "src/main/java/org/apache/commons/io/function/IOBiConsumer.java": {
            "message": [
                "Add final and remove useless parentheses. src/main/java/org/apache/commons/io/function/IOBiConsumer.java",
                "Javadoc: Replace @code with @link src/main/java/org/apache/commons/io/function/IOBiConsumer.java",
                "[IO-755] Add passing tests:\nAccumulatorPathVisitorTest.testFolderWhileDeleting* src/main/java/org/apache/commons/io/function/IOBiConsumer.java",
                "Reduce new public API footprint\n\nMove new constants to a package private class src/main/java/org/apache/commons/io/function/IOBiConsumer.java",
                "Better parameter names src/main/java/org/apache/commons/io/function/IOBiConsumer.java",
                "Javadoc src/main/java/org/apache/commons/io/function/IOBiConsumer.java",
                "Javadoc src/main/java/org/apache/commons/io/function/IOBiConsumer.java",
                "Add IOBiConsumer#asBiConsumer() src/main/java/org/apache/commons/io/function/IOBiConsumer.java",
                "Javadoc src/main/java/org/apache/commons/io/function/IOBiConsumer.java",
                "Javadoc src/main/java/org/apache/commons/io/function/IOBiConsumer.java"
            ]
        },
        "src/main/java/org/apache/commons/io/function/IOSupplier.java": {
            "message": [
                "Normalize Javadoc. src/main/java/org/apache/commons/io/function/IOSupplier.java",
                "Add IOSupplier.asSupplier(). src/main/java/org/apache/commons/io/function/IOSupplier.java",
                "Javadoc src/main/java/org/apache/commons/io/function/IOSupplier.java",
                "Javadoc src/main/java/org/apache/commons/io/function/IOSupplier.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/UncheckedFilterInputStream.java": {
            "message": [
                "Reduce boilerplate through new UncheckedIO class and friends in\norg.apache.commons.io.function. src/main/java/org/apache/commons/io/input/UncheckedFilterInputStream.java",
                "Javadoc: Replace @code with @link src/main/java/org/apache/commons/io/input/UncheckedFilterInputStream.java",
                "Rename new class src/main/java/org/apache/commons/io/input/UncheckedFilterInputStream.java",
                "Move new class and test it explicitly\n\nAs opposed to testing it by running other code. src/main/java/org/apache/commons/io/input/UncheckedFilterInputStream.java"
            ]
        },
        "src/test/java/org/apache/commons/io/file/AbstractTempDirTest.java": {
            "message": [
                "Javadoc src/test/java/org/apache/commons/io/file/AbstractTempDirTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/file/TempDirectoryTest.java": {
            "message": [
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/file/TempDirectoryTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/file/TempFileTest.java": {
            "message": [
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/file/TempFileTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/input/StringInputStreamTest.java": {
            "message": [
                "PMD: Remove unnecessary final src/test/java/org/apache/commons/io/input/StringInputStreamTest.java",
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/test/java/org/apache/commons/io/input/StringInputStreamTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/charset/CharsetDecodersTest.java": {
            "message": [
                "Fix test class name src/test/java/org/apache/commons/io/charset/CharsetDecodersTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/buffer/package-info.java": {
            "message": [
                "Javadoc: Replace @code with @link src/main/java/org/apache/commons/io/input/buffer/package-info.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/package-info.java": {
            "message": [
                "Javadoc: Replace @code with @link src/main/java/org/apache/commons/io/input/package-info.java"
            ]
        },
        "src/main/java/org/apache/commons/io/output/package-info.java": {
            "message": [
                "Javadoc: Replace @code with @link src/main/java/org/apache/commons/io/output/package-info.java"
            ]
        },
        "src/test/java/org/apache/commons/io/function/IOBiConsumerTest.java": {
            "message": [
                "[IO-755] Add passing tests:\nAccumulatorPathVisitorTest.testFolderWhileDeleting* src/test/java/org/apache/commons/io/function/IOBiConsumerTest.java",
                "Reduce new public API footprint\n\nMove new constants to a package private class src/test/java/org/apache/commons/io/function/IOBiConsumerTest.java",
                "Add IOBiConsumer#asBiConsumer() src/test/java/org/apache/commons/io/function/IOBiConsumerTest.java",
                "Change parameter order of new methods, use var-args, improve tests src/test/java/org/apache/commons/io/function/IOBiConsumerTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/function/IOBiFunction.java": {
            "message": [
                "Add IOBiFunction.noop() src/main/java/org/apache/commons/io/function/IOBiFunction.java",
                "Reduce new public API footprint\n\nMove new constants to a package private class src/main/java/org/apache/commons/io/function/IOBiFunction.java",
                "Add missing entries for adding IOBiFunction and IOTriFunction.\n\nSimplify to avoid ambiguous signature when inlining lambdas. src/main/java/org/apache/commons/io/function/IOBiFunction.java",
                "Javadoc src/main/java/org/apache/commons/io/function/IOBiFunction.java",
                "Sort main members src/main/java/org/apache/commons/io/function/IOBiFunction.java",
                "Add IOBiFunction#asBiFunction() src/main/java/org/apache/commons/io/function/IOBiFunction.java",
                "Javadoc src/main/java/org/apache/commons/io/function/IOBiFunction.java",
                "Javadoc src/main/java/org/apache/commons/io/function/IOBiFunction.java",
                "Javadoc src/main/java/org/apache/commons/io/function/IOBiFunction.java"
            ]
        },
        "src/test/java/org/apache/commons/io/function/IOBiFunctionTest.java": {
            "message": [
                "Add IOBiFunction.noop() src/test/java/org/apache/commons/io/function/IOBiFunctionTest.java",
                "Reduce new public API footprint\n\nMove new constants to a package private class src/test/java/org/apache/commons/io/function/IOBiFunctionTest.java",
                "Add missing entries for adding IOBiFunction and IOTriFunction.\n\nSimplify to avoid ambiguous signature when inlining lambdas. src/test/java/org/apache/commons/io/function/IOBiFunctionTest.java",
                "Add IOBiFunction#asBiFunction() src/test/java/org/apache/commons/io/function/IOBiFunctionTest.java",
                "Change parameter order of new methods, use var-args, improve tests src/test/java/org/apache/commons/io/function/IOBiFunctionTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/ByteBufferCleaner.java": {
            "message": [
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/main/java/org/apache/commons/io/input/ByteBufferCleaner.java"
            ]
        },
        "src/main/java/org/apache/commons/io/input/MemoryMappedFileInputStream.java": {
            "message": [
                "(chore) Fix minor typos (#367)\n\nFix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- private field, constant or method names,\r\n- method attribute and variable names,\r\n- test class and method names,\r\n- exception messages. src/main/java/org/apache/commons/io/input/MemoryMappedFileInputStream.java"
            ]
        },
        "src/main/java/org/apache/commons/io/function/IOTriFunction.java": {
            "message": [
                "Add missing entries for adding IOBiFunction and IOTriFunction.\n\nSimplify to avoid ambiguous signature when inlining lambdas. src/main/java/org/apache/commons/io/function/IOTriFunction.java",
                "Sort main members src/main/java/org/apache/commons/io/function/IOTriFunction.java",
                "Javadoc src/main/java/org/apache/commons/io/function/IOTriFunction.java"
            ]
        },
        "src/test/java/org/apache/commons/io/function/IOTriFunctionTest.java": {
            "message": [
                "Add missing entries for adding IOBiFunction and IOTriFunction.\n\nSimplify to avoid ambiguous signature when inlining lambdas. src/test/java/org/apache/commons/io/function/IOTriFunctionTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/UncheckedIO.java": {
            "message": [
                "Add IOQuadFunction. src/main/java/org/apache/commons/io/UncheckedIO.java",
                "Add IOPredicate src/main/java/org/apache/commons/io/UncheckedIO.java",
                "Add IOTriConsumer src/main/java/org/apache/commons/io/UncheckedIO.java",
                "Javadoc src/main/java/org/apache/commons/io/UncheckedIO.java"
            ]
        },
        "src/main/java/org/apache/commons/io/function/Constants.java": {
            "message": [
                "Add IOPredicate src/main/java/org/apache/commons/io/function/Constants.java",
                "Add IOTriConsumer src/main/java/org/apache/commons/io/function/Constants.java"
            ]
        },
        "src/test/java/org/apache/commons/io/function/IOPredicateTest.java": {
            "message": [
                "Fix reference src/test/java/org/apache/commons/io/function/IOPredicateTest.java",
                "Get IOPredicate to 100% code coverage src/test/java/org/apache/commons/io/function/IOPredicateTest.java",
                "Sort test members src/test/java/org/apache/commons/io/function/IOPredicateTest.java",
                "Reuse TestConstants in test src/test/java/org/apache/commons/io/function/IOPredicateTest.java",
                "Add tests src/test/java/org/apache/commons/io/function/IOPredicateTest.java",
                "Change parameter order of new methods, use var-args, improve tests src/test/java/org/apache/commons/io/function/IOPredicateTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/file/FilesUncheck.java": {
            "message": [
                "Rename new class src/main/java/org/apache/commons/io/file/FilesUncheck.java",
                "Sort main members src/main/java/org/apache/commons/io/file/FilesUncheck.java",
                "Move new class and test it explicitly\n\nAs opposed to testing it by running other code. src/main/java/org/apache/commons/io/file/FilesUncheck.java",
                "Javadoc src/main/java/org/apache/commons/io/file/FilesUncheck.java"
            ]
        },
        "src/main/java/org/apache/commons/io/function/IOPredicate.java": {
            "message": [
                "Rename new class src/main/java/org/apache/commons/io/function/IOPredicate.java",
                "Move new class and test it explicitly\n\nAs opposed to testing it by running other code. src/main/java/org/apache/commons/io/function/IOPredicate.java",
                "Javadoc src/main/java/org/apache/commons/io/function/IOPredicate.java",
                "Javadoc src/main/java/org/apache/commons/io/function/IOPredicate.java",
                "Javadoc src/main/java/org/apache/commons/io/function/IOPredicate.java"
            ]
        },
        "src/test/java/org/apache/commons/io/UncheckedIOTest.java": {
            "message": [
                "Rename new class src/test/java/org/apache/commons/io/UncheckedIOTest.java",
                "Move new class and test it explicitly\n\nAs opposed to testing it by running other code. src/test/java/org/apache/commons/io/UncheckedIOTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/file/FilesUncheckTest.java": {
            "message": [
                "Rename new class src/test/java/org/apache/commons/io/file/FilesUncheckTest.java",
                "testProbeContentType behavior is OS-dependent. src/test/java/org/apache/commons/io/file/FilesUncheckTest.java",
                "testProbeContentType behavior is OS-dependent. src/test/java/org/apache/commons/io/file/FilesUncheckTest.java",
                "Remove unused import. src/test/java/org/apache/commons/io/file/FilesUncheckTest.java",
                "testProbeContentType behavior is OS-dependent. src/test/java/org/apache/commons/io/file/FilesUncheckTest.java",
                "testProbeContentType behavior is OS-dependent. src/test/java/org/apache/commons/io/file/FilesUncheckTest.java",
                "Move new class and test it explicitly\n\nAs opposed to testing it by running other code. src/test/java/org/apache/commons/io/file/FilesUncheckTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/function/IOTriConsumer.java": {
            "message": [
                "Javadoc src/main/java/org/apache/commons/io/function/IOTriConsumer.java",
                "Javadoc src/main/java/org/apache/commons/io/function/IOTriConsumer.java"
            ]
        },
        "src/test/java/org/apache/commons/io/file/PathWrapper.java": {
            "message": [
                "Add missing CopyDirectoryVisitor tests src/test/java/org/apache/commons/io/file/PathWrapper.java"
            ]
        },
        "src/test/java/org/apache/commons/io/DemuxInputStreamTest.java": {
            "message": [
                "Use try-with-resources which also allows us to test close() src/test/java/org/apache/commons/io/DemuxInputStreamTest.java",
                "Formatting src/test/java/org/apache/commons/io/DemuxInputStreamTest.java",
                "Add missing DemuxInputStream test src/test/java/org/apache/commons/io/DemuxInputStreamTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/function/IOQuadFunction.java": {
            "message": [
                "Sort main members src/main/java/org/apache/commons/io/function/IOQuadFunction.java",
                "Javadoc src/main/java/org/apache/commons/io/function/IOQuadFunction.java"
            ]
        },
        "src/test/java/org/apache/commons/io/function/UncheckTest.java": {
            "message": [
                "Add IOSupplier.asSupplier(). src/test/java/org/apache/commons/io/function/UncheckTest.java",
                "Change parameter order of new methods, use var-args, improve tests src/test/java/org/apache/commons/io/function/UncheckTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/function/IORunnable.java": {
            "message": [
                "Add IORunnable#asRunnable() src/main/java/org/apache/commons/io/function/IORunnable.java",
                "Javadoc src/main/java/org/apache/commons/io/function/IORunnable.java"
            ]
        },
        "src/test/java/org/apache/commons/io/function/IORunnableTest.java": {
            "message": [
                "Add IORunnable#asRunnable() src/test/java/org/apache/commons/io/function/IORunnableTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/function/IOSupplierTest.java": {
            "message": [
                "Add an assert test src/test/java/org/apache/commons/io/function/IOSupplierTest.java",
                "Use final, end file with empty line, refactor commons code in test src/test/java/org/apache/commons/io/function/IOSupplierTest.java"
            ]
        },
        "src/main/java/org/apache/commons/io/function/Uncheck.java": {
            "message": [
                "Add IOComparator src/main/java/org/apache/commons/io/function/Uncheck.java"
            ]
        },
        "src/test/java/org/apache/commons/io/function/TestConstants.java": {
            "message": [
                "Add IOComparator src/test/java/org/apache/commons/io/function/TestConstants.java",
                "Add IOUnaryOperator src/test/java/org/apache/commons/io/function/TestConstants.java",
                "Add IOBinaryOperator src/test/java/org/apache/commons/io/function/TestConstants.java",
                "Use final, end file with empty line, refactor commons code in test src/test/java/org/apache/commons/io/function/TestConstants.java"
            ]
        },
        "src/test/java/org/apache/commons/io/function/TestUtils.java": {
            "message": [
                "Add IOUnaryOperator src/test/java/org/apache/commons/io/function/TestUtils.java",
                "Add IOBinaryOperator src/test/java/org/apache/commons/io/function/TestUtils.java",
                "Change parameter order of new methods, use var-args, improve tests src/test/java/org/apache/commons/io/function/TestUtils.java"
            ]
        },
        "src/test/java/org/apache/commons/io/function/IOBinaryOperatorStreamTest.java": {
            "message": [
                "Change parameter order of new methods, use var-args, improve tests src/test/java/org/apache/commons/io/function/IOBinaryOperatorStreamTest.java"
            ]
        },
        "src/test/java/org/apache/commons/io/function/IOComparatorTest.java": {
            "message": [
                "Change parameter order of new methods, use var-args, improve tests src/test/java/org/apache/commons/io/function/IOComparatorTest.java"
            ]
        }
    }
}