{
    "changes": [
        {
            "commit_id": 1,
            "hash": "29119dead7ff12541a3f5c154d2128573f740a78",
            "commit_summary": "Savepoint.  Does not compile or work yet.  More work this weekend.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140288 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "extension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.extension"
                },
                {
                    "function name": "fileExists",
                    "function params": [
                        "fileName"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.fileExists"
                },
                {
                    "function name": "fileRead",
                    "function params": [
                        "fileName"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.fileRead"
                },
                {
                    "function name": "fileWrite",
                    "function params": [
                        "fileName",
                        "data"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.fileWrite"
                },
                {
                    "function name": "basename",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.basename"
                },
                {
                    "function name": "getFile",
                    "function params": [
                        "fileName"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.getFile"
                },
                {
                    "function name": "byteCountToDisplaySize",
                    "function params": [
                        "size"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.byteCountToDisplaySize"
                },
                {
                    "function name": "waitFor",
                    "function params": [
                        "fileName",
                        "seconds"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.waitFor"
                },
                {
                    "function name": "fileDelete",
                    "function params": [
                        "fileName"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.fileDelete"
                },
                {
                    "function name": "basename",
                    "function params": [
                        "filename",
                        "suffix"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.basename"
                },
                {
                    "function name": "dirname",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.dirname"
                },
                {
                    "function name": "filename",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.filename"
                },
                {
                    "function name": "testLockDir",
                    "function params": [
                        "lockDir"
                    ],
                    "file name": "LockableFileWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.LockableFileWriter.testLockDir"
                },
                {
                    "function name": "write",
                    "function params": [
                        "cbuf",
                        "off",
                        "len"
                    ],
                    "file name": "LockableFileWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.LockableFileWriter.write"
                },
                {
                    "function name": "LockableFileWriter",
                    "function params": [
                        "file",
                        "append",
                        "lockDir"
                    ],
                    "file name": "LockableFileWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.LockableFileWriter.LockableFileWriter"
                },
                {
                    "function name": "LockableFileWriter",
                    "function params": [
                        "file",
                        "append"
                    ],
                    "file name": "LockableFileWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.LockableFileWriter.LockableFileWriter"
                },
                {
                    "function name": "LockableFileWriter",
                    "function params": [
                        "file"
                    ],
                    "file name": "LockableFileWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.LockableFileWriter.LockableFileWriter"
                },
                {
                    "function name": "LockableFileWriter",
                    "function params": [
                        "fileName",
                        "append"
                    ],
                    "file name": "LockableFileWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.LockableFileWriter.LockableFileWriter"
                },
                {
                    "function name": "flush",
                    "function params": [],
                    "file name": "LockableFileWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.LockableFileWriter.flush"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "LockableFileWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.LockableFileWriter.close"
                },
                {
                    "function name": "createLock",
                    "function params": [],
                    "file name": "LockableFileWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.LockableFileWriter.createLock"
                },
                {
                    "function name": "LockableFileWriter",
                    "function params": [
                        "fileName",
                        "append",
                        "lockDir"
                    ],
                    "file name": "LockableFileWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.LockableFileWriter.LockableFileWriter"
                },
                {
                    "function name": "LockableFileWriter",
                    "function params": [
                        "fileName"
                    ],
                    "file name": "LockableFileWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.LockableFileWriter.LockableFileWriter"
                },
                {
                    "function name": "readStream",
                    "function params": [
                        "toRead",
                        "bufferSize"
                    ],
                    "file name": "StreamUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/StreamUtils.java",
                    "full name": "src.java.org.apache.commons.io.StreamUtils.readStream"
                },
                {
                    "function name": "pipe",
                    "function params": [
                        "toRead",
                        "toWrite"
                    ],
                    "file name": "StreamUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/StreamUtils.java",
                    "full name": "src.java.org.apache.commons.io.StreamUtils.pipe"
                },
                {
                    "function name": "streamAsString",
                    "function params": [
                        "toRead",
                        "bufferSize",
                        "encoding"
                    ],
                    "file name": "StreamUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/StreamUtils.java",
                    "full name": "src.java.org.apache.commons.io.StreamUtils.streamAsString"
                },
                {
                    "function name": "streamAsString",
                    "function params": [
                        "toRead"
                    ],
                    "file name": "StreamUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/StreamUtils.java",
                    "full name": "src.java.org.apache.commons.io.StreamUtils.streamAsString"
                },
                {
                    "function name": "streamAsBytes",
                    "function params": [
                        "toRead",
                        "bufferSize"
                    ],
                    "file name": "StreamUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/StreamUtils.java",
                    "full name": "src.java.org.apache.commons.io.StreamUtils.streamAsBytes"
                },
                {
                    "function name": "pipe",
                    "function params": [
                        "toRead",
                        "toWrite",
                        "bufferSize"
                    ],
                    "file name": "StreamUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/StreamUtils.java",
                    "full name": "src.java.org.apache.commons.io.StreamUtils.pipe"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "IOTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOTestCase.suite"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "IOTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOTestCase.setUp"
                },
                {
                    "function name": "IOTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "IOTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOTestCase.IOTestCase"
                },
                {
                    "function name": "testSomething",
                    "function params": [],
                    "file name": "IOTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOTestCase.testSomething"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "IOTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOTestCase.tearDown"
                }
            ],
            "date": "2002-01-26"
        },
        {
            "commit_id": 2,
            "hash": "51e80fc903c8404d9515c60436b3f67b702f7c4c",
            "commit_summary": "Updated build file.\nSniped from alexandria's FileUtils.\nAdded FileUtils test case.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140289 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/test/org/apache/commons/io/IOTestCase.java"
            ],
            "functions": [
                {
                    "function name": "getFilesFromExtension",
                    "function params": [
                        "directory",
                        "extensions"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.getFilesFromExtension"
                },
                {
                    "function name": "isValidFile",
                    "function params": [
                        "file",
                        "extensions"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.isValidFile"
                },
                {
                    "function name": "extension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.extension"
                },
                {
                    "function name": "blendFilesToVector",
                    "function params": [
                        "v",
                        "files"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.blendFilesToVector"
                },
                {
                    "function name": "testFileUtils",
                    "function params": [],
                    "file name": "IOTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOTestCase.testFileUtils"
                }
            ],
            "date": "2002-01-28"
        },
        {
            "commit_id": 3,
            "hash": "0010fcad01ce4ac5051a61bec349bd6ac397c994",
            "commit_summary": "Code formatting.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140290 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/java/org/apache/commons/io/LockableFileWriter.java",
                "src/java/org/apache/commons/io/StreamUtils.java",
                "src/test/org/apache/commons/io/IOTestCase.java"
            ],
            "functions": [
                {
                    "function name": "getFilesFromExtension",
                    "function params": [
                        "directory",
                        "extensions"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.getFilesFromExtension"
                },
                {
                    "function name": "fileDelete",
                    "function params": [
                        "fileName"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.fileDelete"
                },
                {
                    "function name": "byteCountToDisplaySize",
                    "function params": [
                        "size"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.byteCountToDisplaySize"
                },
                {
                    "function name": "dirname",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.dirname"
                },
                {
                    "function name": "fileExists",
                    "function params": [
                        "fileName"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.fileExists"
                },
                {
                    "function name": "fileRead",
                    "function params": [
                        "fileName"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.fileRead"
                },
                {
                    "function name": "fileWrite",
                    "function params": [
                        "fileName",
                        "data"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.fileWrite"
                },
                {
                    "function name": "basename",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.basename"
                },
                {
                    "function name": "waitFor",
                    "function params": [
                        "fileName",
                        "seconds"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.waitFor"
                },
                {
                    "function name": "basename",
                    "function params": [
                        "filename",
                        "suffix"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.basename"
                },
                {
                    "function name": "getFile",
                    "function params": [
                        "fileName"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.getFile"
                },
                {
                    "function name": "extension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.extension"
                },
                {
                    "function name": "filename",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.filename"
                },
                {
                    "function name": "LockableFileWriter",
                    "function params": [
                        "fileName"
                    ],
                    "file name": "LockableFileWriter.java",
                    "file old path": "src/java/org/apache/commons/io/LockableFileWriter.java",
                    "file new path": "src/java/org/apache/commons/io/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.LockableFileWriter.LockableFileWriter"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "LockableFileWriter.java",
                    "file old path": "src/java/org/apache/commons/io/LockableFileWriter.java",
                    "file new path": "src/java/org/apache/commons/io/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.LockableFileWriter.close"
                },
                {
                    "function name": "testLockDir",
                    "function params": [
                        "lockDir"
                    ],
                    "file name": "LockableFileWriter.java",
                    "file old path": "src/java/org/apache/commons/io/LockableFileWriter.java",
                    "file new path": "src/java/org/apache/commons/io/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.LockableFileWriter.testLockDir"
                },
                {
                    "function name": "LockableFileWriter",
                    "function params": [
                        "file"
                    ],
                    "file name": "LockableFileWriter.java",
                    "file old path": "src/java/org/apache/commons/io/LockableFileWriter.java",
                    "file new path": "src/java/org/apache/commons/io/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.LockableFileWriter.LockableFileWriter"
                },
                {
                    "function name": "LockableFileWriter",
                    "function params": [
                        "file",
                        "append",
                        "lockDir"
                    ],
                    "file name": "LockableFileWriter.java",
                    "file old path": "src/java/org/apache/commons/io/LockableFileWriter.java",
                    "file new path": "src/java/org/apache/commons/io/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.LockableFileWriter.LockableFileWriter"
                },
                {
                    "function name": "LockableFileWriter",
                    "function params": [
                        "fileName",
                        "append"
                    ],
                    "file name": "LockableFileWriter.java",
                    "file old path": "src/java/org/apache/commons/io/LockableFileWriter.java",
                    "file new path": "src/java/org/apache/commons/io/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.LockableFileWriter.LockableFileWriter"
                },
                {
                    "function name": "write",
                    "function params": [
                        "cbuf",
                        "off",
                        "len"
                    ],
                    "file name": "LockableFileWriter.java",
                    "file old path": "src/java/org/apache/commons/io/LockableFileWriter.java",
                    "file new path": "src/java/org/apache/commons/io/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.LockableFileWriter.write"
                },
                {
                    "function name": "LockableFileWriter",
                    "function params": [
                        "fileName",
                        "append",
                        "lockDir"
                    ],
                    "file name": "LockableFileWriter.java",
                    "file old path": "src/java/org/apache/commons/io/LockableFileWriter.java",
                    "file new path": "src/java/org/apache/commons/io/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.LockableFileWriter.LockableFileWriter"
                },
                {
                    "function name": "LockableFileWriter",
                    "function params": [
                        "file",
                        "append"
                    ],
                    "file name": "LockableFileWriter.java",
                    "file old path": "src/java/org/apache/commons/io/LockableFileWriter.java",
                    "file new path": "src/java/org/apache/commons/io/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.LockableFileWriter.LockableFileWriter"
                },
                {
                    "function name": "flush",
                    "function params": [],
                    "file name": "LockableFileWriter.java",
                    "file old path": "src/java/org/apache/commons/io/LockableFileWriter.java",
                    "file new path": "src/java/org/apache/commons/io/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.LockableFileWriter.flush"
                },
                {
                    "function name": "createLock",
                    "function params": [],
                    "file name": "LockableFileWriter.java",
                    "file old path": "src/java/org/apache/commons/io/LockableFileWriter.java",
                    "file new path": "src/java/org/apache/commons/io/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.LockableFileWriter.createLock"
                },
                {
                    "function name": "streamAsString",
                    "function params": [
                        "toRead"
                    ],
                    "file name": "StreamUtils.java",
                    "file old path": "src/java/org/apache/commons/io/StreamUtils.java",
                    "file new path": "src/java/org/apache/commons/io/StreamUtils.java",
                    "full name": "src.java.org.apache.commons.io.StreamUtils.streamAsString"
                },
                {
                    "function name": "streamAsBytes",
                    "function params": [
                        "toRead",
                        "bufferSize"
                    ],
                    "file name": "StreamUtils.java",
                    "file old path": "src/java/org/apache/commons/io/StreamUtils.java",
                    "file new path": "src/java/org/apache/commons/io/StreamUtils.java",
                    "full name": "src.java.org.apache.commons.io.StreamUtils.streamAsBytes"
                },
                {
                    "function name": "readStream",
                    "function params": [
                        "toRead",
                        "bufferSize"
                    ],
                    "file name": "StreamUtils.java",
                    "file old path": "src/java/org/apache/commons/io/StreamUtils.java",
                    "file new path": "src/java/org/apache/commons/io/StreamUtils.java",
                    "full name": "src.java.org.apache.commons.io.StreamUtils.readStream"
                },
                {
                    "function name": "pipe",
                    "function params": [
                        "toRead",
                        "toWrite"
                    ],
                    "file name": "StreamUtils.java",
                    "file old path": "src/java/org/apache/commons/io/StreamUtils.java",
                    "file new path": "src/java/org/apache/commons/io/StreamUtils.java",
                    "full name": "src.java.org.apache.commons.io.StreamUtils.pipe"
                },
                {
                    "function name": "pipe",
                    "function params": [
                        "toRead",
                        "toWrite",
                        "bufferSize"
                    ],
                    "file name": "StreamUtils.java",
                    "file old path": "src/java/org/apache/commons/io/StreamUtils.java",
                    "file new path": "src/java/org/apache/commons/io/StreamUtils.java",
                    "full name": "src.java.org.apache.commons.io.StreamUtils.pipe"
                },
                {
                    "function name": "streamAsString",
                    "function params": [
                        "toRead",
                        "bufferSize",
                        "encoding"
                    ],
                    "file name": "StreamUtils.java",
                    "file old path": "src/java/org/apache/commons/io/StreamUtils.java",
                    "file new path": "src/java/org/apache/commons/io/StreamUtils.java",
                    "full name": "src.java.org.apache.commons.io.StreamUtils.streamAsString"
                }
            ],
            "date": "2002-01-28"
        },
        {
            "commit_id": 4,
            "hash": "26e200f3e9e5fc2b353842093e047008913aada4",
            "commit_summary": "Added a simple mkdir() function.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140291 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [
                {
                    "function name": "mkdir",
                    "function params": [
                        "dir"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.mkdir"
                }
            ],
            "date": "2002-01-28"
        },
        {
            "commit_id": 5,
            "hash": "c8ad7794bca92258eb9419a4cf1f82ee1efccf62",
            "commit_summary": "Should be static :)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140292 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [
                {
                    "function name": "mkdir",
                    "function params": [
                        "dir"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.mkdir"
                }
            ],
            "date": "2002-01-28"
        },
        {
            "commit_id": 6,
            "hash": "4ad59c5ac249ce6e011ac6eb3d0d026274761f43",
            "commit_summary": "Moved over from the Commons.Utils project..\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140293 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "dump",
                    "function params": [
                        "value"
                    ],
                    "file name": "HexDump.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/HexDump.java",
                    "full name": "src.java.org.apache.commons.io.HexDump.dump"
                },
                {
                    "function name": "dump",
                    "function params": [
                        "data",
                        "offset",
                        "stream",
                        "index"
                    ],
                    "file name": "HexDump.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/HexDump.java",
                    "full name": "src.java.org.apache.commons.io.HexDump.dump"
                },
                {
                    "function name": "dump",
                    "function params": [
                        "value"
                    ],
                    "file name": "HexDump.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/HexDump.java",
                    "full name": "src.java.org.apache.commons.io.HexDump.dump"
                },
                {
                    "function name": "HexDump",
                    "function params": [],
                    "file name": "HexDump.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/HexDump.java",
                    "full name": "src.java.org.apache.commons.io.HexDump.HexDump"
                }
            ],
            "date": "2002-02-22"
        },
        {
            "commit_id": 7,
            "hash": "5ed3ee1f12d13fe78202dde454b2be4e2365ef8a",
            "commit_summary": "Moved over from the Commons.Utils package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140294 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "main",
                    "function params": [
                        "ignored_args"
                    ],
                    "file name": "HexDumpTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/HexDumpTest.java",
                    "full name": "src.test.org.apache.commons.io.HexDumpTest.main"
                },
                {
                    "function name": "HexDumpTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "HexDumpTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/HexDumpTest.java",
                    "full name": "src.test.org.apache.commons.io.HexDumpTest.HexDumpTest"
                },
                {
                    "function name": "toHex",
                    "function params": [
                        "n"
                    ],
                    "file name": "HexDumpTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/HexDumpTest.java",
                    "full name": "src.test.org.apache.commons.io.HexDumpTest.toHex"
                },
                {
                    "function name": "toAscii",
                    "function params": [
                        "c"
                    ],
                    "file name": "HexDumpTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/HexDumpTest.java",
                    "full name": "src.test.org.apache.commons.io.HexDumpTest.toAscii"
                },
                {
                    "function name": "testDump",
                    "function params": [],
                    "file name": "HexDumpTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/HexDumpTest.java",
                    "full name": "src.test.org.apache.commons.io.HexDumpTest.testDump"
                }
            ],
            "date": "2002-02-22"
        },
        {
            "commit_id": 8,
            "hash": "c39b5b1cfaca258fec0bfb8e597ae264bf5fae93",
            "commit_summary": "Pretty standard classes. A stream to count the number of bytes that\ngo by it (logging) and a stream for branching into two streams.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140295 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "getCount",
                    "function params": [],
                    "file name": "CountingOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/CountingOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.CountingOutputStream.getCount"
                },
                {
                    "function name": "write",
                    "function params": [
                        "b",
                        "off",
                        "len"
                    ],
                    "file name": "CountingOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/CountingOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.CountingOutputStream.write"
                },
                {
                    "function name": "CountingOutputStream",
                    "function params": [
                        "out"
                    ],
                    "file name": "CountingOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/CountingOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.CountingOutputStream.CountingOutputStream"
                },
                {
                    "function name": "write",
                    "function params": [
                        "b"
                    ],
                    "file name": "CountingOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/CountingOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.CountingOutputStream.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "b"
                    ],
                    "file name": "CountingOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/CountingOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.CountingOutputStream.write"
                },
                {
                    "function name": "flush",
                    "function params": [],
                    "file name": "TeeOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/TeeOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.TeeOutputStream.flush"
                },
                {
                    "function name": "write",
                    "function params": [
                        "b"
                    ],
                    "file name": "TeeOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/TeeOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.TeeOutputStream.write"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "TeeOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/TeeOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.TeeOutputStream.close"
                },
                {
                    "function name": "TeeOutputStream",
                    "function params": [
                        "out",
                        "branch"
                    ],
                    "file name": "TeeOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/TeeOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.TeeOutputStream.TeeOutputStream"
                },
                {
                    "function name": "write",
                    "function params": [
                        "b",
                        "off",
                        "len"
                    ],
                    "file name": "TeeOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/TeeOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.TeeOutputStream.write"
                }
            ],
            "date": "2002-02-23"
        },
        {
            "commit_id": 9,
            "hash": "a20f19d70eae2f16cc82b11a446192463342a109",
            "commit_summary": "Patch by Youngho Cho <youngho@nannet.co.kr> to clarify the type of\nexception thrown by the fileRead(String) class method.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140296 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [
                {
                    "function name": "fileRead",
                    "function params": [
                        "fileName"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.fileRead"
                }
            ],
            "date": "2002-06-12"
        },
        {
            "commit_id": 10,
            "hash": "c20dc79c1ddd373a2a345ef97cc0ab221b913d16",
            "commit_summary": "Added fileCopy method\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140298 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [
                {
                    "function name": "fileCopy",
                    "function params": [
                        "inFileName",
                        "outFileName"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.fileCopy"
                }
            ],
            "date": "2002-06-22"
        },
        {
            "commit_id": 11,
            "hash": "c358911580db423133c958f8c68207a184137400",
            "commit_summary": "Samples for bzip2\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140300 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "Bzip2Compress.java",
                    "file old path": null,
                    "file new path": "src/examples/org/apache/commons/io/bzip2/Bzip2Compress.java",
                    "full name": "src.examples.org.apache.commons.io.bzip2.Bzip2Compress.copy"
                },
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "Bzip2Compress.java",
                    "file old path": null,
                    "file new path": "src/examples/org/apache/commons/io/bzip2/Bzip2Compress.java",
                    "full name": "src.examples.org.apache.commons.io.bzip2.Bzip2Compress.main"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "Bzip2Uncompress.java",
                    "file old path": null,
                    "file new path": "src/examples/org/apache/commons/io/bzip2/Bzip2Uncompress.java",
                    "full name": "src.examples.org.apache.commons.io.bzip2.Bzip2Uncompress.copy"
                },
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "Bzip2Uncompress.java",
                    "file old path": null,
                    "file new path": "src/examples/org/apache/commons/io/bzip2/Bzip2Uncompress.java",
                    "full name": "src.examples.org.apache.commons.io.bzip2.Bzip2Uncompress.main"
                }
            ],
            "date": "2002-07-08"
        },
        {
            "commit_id": 12,
            "hash": "c360a10db25701f682849e5913d150f13a09f3bb",
            "commit_summary": "New io classes from Avalon excalibur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140301 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "AndFileFilter",
                    "function params": [
                        "filter1",
                        "filter2"
                    ],
                    "file name": "AndFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.AndFileFilter.AndFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file",
                        "name"
                    ],
                    "file name": "AndFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.AndFileFilter.accept"
                },
                {
                    "function name": "ClassLoaderObjectInputStream",
                    "function params": [
                        "classLoader",
                        "inputStream"
                    ],
                    "file name": "ClassLoaderObjectInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/ClassLoaderObjectInputStream.java",
                    "full name": "src.java.org.apache.commons.io.ClassLoaderObjectInputStream.ClassLoaderObjectInputStream"
                },
                {
                    "function name": "resolveClass",
                    "function params": [
                        "objectStreamClass"
                    ],
                    "file name": "ClassLoaderObjectInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/ClassLoaderObjectInputStream.java",
                    "full name": "src.java.org.apache.commons.io.ClassLoaderObjectInputStream.resolveClass"
                },
                {
                    "function name": "read",
                    "function params": [],
                    "file name": "DemuxInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/DemuxInputStream.java",
                    "full name": "src.java.org.apache.commons.io.DemuxInputStream.read"
                },
                {
                    "function name": "getStream",
                    "function params": [],
                    "file name": "DemuxInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/DemuxInputStream.java",
                    "full name": "src.java.org.apache.commons.io.DemuxInputStream.getStream"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "DemuxInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/DemuxInputStream.java",
                    "full name": "src.java.org.apache.commons.io.DemuxInputStream.close"
                },
                {
                    "function name": "bindStream",
                    "function params": [
                        "input"
                    ],
                    "file name": "DemuxInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/DemuxInputStream.java",
                    "full name": "src.java.org.apache.commons.io.DemuxInputStream.bindStream"
                },
                {
                    "function name": "bindStream",
                    "function params": [
                        "output"
                    ],
                    "file name": "DemuxOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/DemuxOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.DemuxOutputStream.bindStream"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "DemuxOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/DemuxOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.DemuxOutputStream.close"
                },
                {
                    "function name": "getStream",
                    "function params": [],
                    "file name": "DemuxOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/DemuxOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.DemuxOutputStream.getStream"
                },
                {
                    "function name": "flush",
                    "function params": [],
                    "file name": "DemuxOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/DemuxOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.DemuxOutputStream.flush"
                },
                {
                    "function name": "write",
                    "function params": [
                        "ch"
                    ],
                    "file name": "DemuxOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/DemuxOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.DemuxOutputStream.write"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file",
                        "name"
                    ],
                    "file name": "DirectoryFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/DirectoryFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryFileFilter.accept"
                },
                {
                    "function name": "readSwappedLong",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtil.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtil.readSwappedLong"
                },
                {
                    "function name": "swapDouble",
                    "function params": [
                        "value"
                    ],
                    "file name": "EndianUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtil.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtil.swapDouble"
                },
                {
                    "function name": "readSwappedDouble",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtil.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtil.readSwappedDouble"
                },
                {
                    "function name": "writeSwappedShort",
                    "function params": [
                        "output",
                        "value"
                    ],
                    "file name": "EndianUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtil.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtil.writeSwappedShort"
                },
                {
                    "function name": "swapLong",
                    "function params": [
                        "value"
                    ],
                    "file name": "EndianUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtil.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtil.swapLong"
                },
                {
                    "function name": "writeSwappedInteger",
                    "function params": [
                        "output",
                        "value"
                    ],
                    "file name": "EndianUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtil.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtil.writeSwappedInteger"
                },
                {
                    "function name": "readSwappedUnsignedShort",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtil.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtil.readSwappedUnsignedShort"
                },
                {
                    "function name": "writeSwappedLong",
                    "function params": [
                        "data",
                        "offset",
                        "value"
                    ],
                    "file name": "EndianUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtil.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtil.writeSwappedLong"
                },
                {
                    "function name": "writeSwappedShort",
                    "function params": [
                        "data",
                        "offset",
                        "value"
                    ],
                    "file name": "EndianUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtil.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtil.writeSwappedShort"
                },
                {
                    "function name": "readSwappedDouble",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtil.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtil.readSwappedDouble"
                },
                {
                    "function name": "readSwappedUnsignedInteger",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtil.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtil.readSwappedUnsignedInteger"
                },
                {
                    "function name": "readSwappedLong",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtil.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtil.readSwappedLong"
                },
                {
                    "function name": "readSwappedUnsignedInteger",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtil.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtil.readSwappedUnsignedInteger"
                },
                {
                    "function name": "writeSwappedFloat",
                    "function params": [
                        "output",
                        "value"
                    ],
                    "file name": "EndianUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtil.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtil.writeSwappedFloat"
                },
                {
                    "function name": "readSwappedFloat",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtil.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtil.readSwappedFloat"
                },
                {
                    "function name": "writeSwappedInteger",
                    "function params": [
                        "data",
                        "offset",
                        "value"
                    ],
                    "file name": "EndianUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtil.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtil.writeSwappedInteger"
                },
                {
                    "function name": "readSwappedInteger",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtil.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtil.readSwappedInteger"
                },
                {
                    "function name": "writeSwappedFloat",
                    "function params": [
                        "data",
                        "offset",
                        "value"
                    ],
                    "file name": "EndianUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtil.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtil.writeSwappedFloat"
                },
                {
                    "function name": "swapFloat",
                    "function params": [
                        "value"
                    ],
                    "file name": "EndianUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtil.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtil.swapFloat"
                },
                {
                    "function name": "swapShort",
                    "function params": [
                        "value"
                    ],
                    "file name": "EndianUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtil.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtil.swapShort"
                },
                {
                    "function name": "writeSwappedDouble",
                    "function params": [
                        "output",
                        "value"
                    ],
                    "file name": "EndianUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtil.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtil.writeSwappedDouble"
                },
                {
                    "function name": "readSwappedInteger",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtil.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtil.readSwappedInteger"
                },
                {
                    "function name": "read",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtil.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtil.read"
                },
                {
                    "function name": "readSwappedFloat",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtil.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtil.readSwappedFloat"
                },
                {
                    "function name": "readSwappedShort",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtil.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtil.readSwappedShort"
                },
                {
                    "function name": "writeSwappedDouble",
                    "function params": [
                        "data",
                        "offset",
                        "value"
                    ],
                    "file name": "EndianUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtil.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtil.writeSwappedDouble"
                },
                {
                    "function name": "writeSwappedLong",
                    "function params": [
                        "output",
                        "value"
                    ],
                    "file name": "EndianUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtil.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtil.writeSwappedLong"
                },
                {
                    "function name": "readSwappedUnsignedShort",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtil.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtil.readSwappedUnsignedShort"
                },
                {
                    "function name": "swapInteger",
                    "function params": [
                        "value"
                    ],
                    "file name": "EndianUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtil.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtil.swapInteger"
                },
                {
                    "function name": "readSwappedShort",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtil.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtil.readSwappedShort"
                },
                {
                    "function name": "ExtensionFileFilter",
                    "function params": [
                        "extension"
                    ],
                    "file name": "ExtensionFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/ExtensionFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.ExtensionFileFilter.ExtensionFileFilter"
                },
                {
                    "function name": "ExtensionFileFilter",
                    "function params": [
                        "extensions"
                    ],
                    "file name": "ExtensionFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/ExtensionFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.ExtensionFileFilter.ExtensionFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file",
                        "name"
                    ],
                    "file name": "ExtensionFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/ExtensionFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.ExtensionFileFilter.accept"
                },
                {
                    "function name": "removeExtension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FileUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileUtil.java",
                    "full name": "src.java.org.apache.commons.io.FileUtil.removeExtension"
                },
                {
                    "function name": "deleteDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileUtil.java",
                    "full name": "src.java.org.apache.commons.io.FileUtil.deleteDirectory"
                },
                {
                    "function name": "sizeOfDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileUtil.java",
                    "full name": "src.java.org.apache.commons.io.FileUtil.sizeOfDirectory"
                },
                {
                    "function name": "normalize",
                    "function params": [
                        "path"
                    ],
                    "file name": "FileUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileUtil.java",
                    "full name": "src.java.org.apache.commons.io.FileUtil.normalize"
                },
                {
                    "function name": "forceDelete",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileUtil.java",
                    "full name": "src.java.org.apache.commons.io.FileUtil.forceDelete"
                },
                {
                    "function name": "copyURLToFile",
                    "function params": [
                        "source",
                        "destination"
                    ],
                    "file name": "FileUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileUtil.java",
                    "full name": "src.java.org.apache.commons.io.FileUtil.copyURLToFile"
                },
                {
                    "function name": "removeExtention",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FileUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileUtil.java",
                    "full name": "src.java.org.apache.commons.io.FileUtil.removeExtention"
                },
                {
                    "function name": "getPath",
                    "function params": [
                        "filepath"
                    ],
                    "file name": "FileUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileUtil.java",
                    "full name": "src.java.org.apache.commons.io.FileUtil.getPath"
                },
                {
                    "function name": "getExtension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FileUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileUtil.java",
                    "full name": "src.java.org.apache.commons.io.FileUtil.getExtension"
                },
                {
                    "function name": "cleanDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileUtil.java",
                    "full name": "src.java.org.apache.commons.io.FileUtil.cleanDirectory"
                },
                {
                    "function name": "copyFileToDirectory",
                    "function params": [
                        "source",
                        "destinationDirectory"
                    ],
                    "file name": "FileUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileUtil.java",
                    "full name": "src.java.org.apache.commons.io.FileUtil.copyFileToDirectory"
                },
                {
                    "function name": "removePath",
                    "function params": [
                        "filepath"
                    ],
                    "file name": "FileUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileUtil.java",
                    "full name": "src.java.org.apache.commons.io.FileUtil.removePath"
                },
                {
                    "function name": "forceDelete",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileUtil.java",
                    "full name": "src.java.org.apache.commons.io.FileUtil.forceDelete"
                },
                {
                    "function name": "forceDeleteOnExit",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileUtil.java",
                    "full name": "src.java.org.apache.commons.io.FileUtil.forceDeleteOnExit"
                },
                {
                    "function name": "copyFile",
                    "function params": [
                        "source",
                        "destination"
                    ],
                    "file name": "FileUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileUtil.java",
                    "full name": "src.java.org.apache.commons.io.FileUtil.copyFile"
                },
                {
                    "function name": "removePath",
                    "function params": [
                        "filepath",
                        "fileSeparatorChar"
                    ],
                    "file name": "FileUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileUtil.java",
                    "full name": "src.java.org.apache.commons.io.FileUtil.removePath"
                },
                {
                    "function name": "toURLs",
                    "function params": [
                        "files"
                    ],
                    "file name": "FileUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileUtil.java",
                    "full name": "src.java.org.apache.commons.io.FileUtil.toURLs"
                },
                {
                    "function name": "cleanDirectoryOnExit",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileUtil.java",
                    "full name": "src.java.org.apache.commons.io.FileUtil.cleanDirectoryOnExit"
                },
                {
                    "function name": "catPath",
                    "function params": [
                        "lookupPath",
                        "path"
                    ],
                    "file name": "FileUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileUtil.java",
                    "full name": "src.java.org.apache.commons.io.FileUtil.catPath"
                },
                {
                    "function name": "sizeOfDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileUtil.java",
                    "full name": "src.java.org.apache.commons.io.FileUtil.sizeOfDirectory"
                },
                {
                    "function name": "copyFileToDirectory",
                    "function params": [
                        "source",
                        "destinationDirectory"
                    ],
                    "file name": "FileUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileUtil.java",
                    "full name": "src.java.org.apache.commons.io.FileUtil.copyFileToDirectory"
                },
                {
                    "function name": "forceMkdir",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileUtil.java",
                    "full name": "src.java.org.apache.commons.io.FileUtil.forceMkdir"
                },
                {
                    "function name": "getPath",
                    "function params": [
                        "filepath",
                        "fileSeparatorChar"
                    ],
                    "file name": "FileUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileUtil.java",
                    "full name": "src.java.org.apache.commons.io.FileUtil.getPath"
                },
                {
                    "function name": "toFile",
                    "function params": [
                        "url"
                    ],
                    "file name": "FileUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileUtil.java",
                    "full name": "src.java.org.apache.commons.io.FileUtil.toFile"
                },
                {
                    "function name": "deleteDirectoryOnExit",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileUtil.java",
                    "full name": "src.java.org.apache.commons.io.FileUtil.deleteDirectoryOnExit"
                },
                {
                    "function name": "cleanDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileUtil.java",
                    "full name": "src.java.org.apache.commons.io.FileUtil.cleanDirectory"
                },
                {
                    "function name": "FileUtil",
                    "function params": [],
                    "file name": "FileUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileUtil.java",
                    "full name": "src.java.org.apache.commons.io.FileUtil.FileUtil"
                },
                {
                    "function name": "contentEquals",
                    "function params": [
                        "file1",
                        "file2"
                    ],
                    "file name": "FileUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileUtil.java",
                    "full name": "src.java.org.apache.commons.io.FileUtil.contentEquals"
                },
                {
                    "function name": "resolveFile",
                    "function params": [
                        "baseFile",
                        "filename"
                    ],
                    "file name": "FileUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileUtil.java",
                    "full name": "src.java.org.apache.commons.io.FileUtil.resolveFile"
                },
                {
                    "function name": "deleteDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileUtil.java",
                    "full name": "src.java.org.apache.commons.io.FileUtil.deleteDirectory"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "encoding",
                        "bufferSize"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.toString"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding",
                        "bufferSize"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.copy"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "encoding",
                        "bufferSize"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.toString"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.copy"
                },
                {
                    "function name": "shutdownStream",
                    "function params": [
                        "output"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.shutdownStream"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.copy"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.toByteArray"
                },
                {
                    "function name": "shutdownStream",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.shutdownStream"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.copy"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "bufferSize"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.toString"
                },
                {
                    "function name": "contentEquals",
                    "function params": [
                        "input1",
                        "input2"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.contentEquals"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding",
                        "bufferSize"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.copy"
                },
                {
                    "function name": "IOUtil",
                    "function params": [],
                    "file name": "IOUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.IOUtil"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.copy"
                },
                {
                    "function name": "bufferedCopy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.bufferedCopy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.copy"
                },
                {
                    "function name": "shutdownWriter",
                    "function params": [
                        "output"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.shutdownWriter"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input",
                        "bufferSize"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.toByteArray"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.toString"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.toString"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.toByteArray"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "bufferSize"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.toString"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "encoding"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.toString"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.copy"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input",
                        "bufferSize"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.toByteArray"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "encoding"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.toString"
                },
                {
                    "function name": "shutdownReader",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.shutdownReader"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "bufferSize"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.toString"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.toString"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input",
                        "bufferSize"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.toByteArray"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.toByteArray"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.copy"
                },
                {
                    "function name": "InvertedFileFilter",
                    "function params": [
                        "originalFilter"
                    ],
                    "file name": "InvertedFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/InvertedFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.InvertedFileFilter.InvertedFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file",
                        "name"
                    ],
                    "file name": "InvertedFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/InvertedFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.InvertedFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file",
                        "name"
                    ],
                    "file name": "OrFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/OrFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.OrFileFilter.accept"
                },
                {
                    "function name": "OrFileFilter",
                    "function params": [
                        "filter1",
                        "filter2"
                    ],
                    "file name": "OrFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/OrFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.OrFileFilter.OrFileFilter"
                },
                {
                    "function name": "PrefixFileFilter",
                    "function params": [
                        "prefix"
                    ],
                    "file name": "PrefixFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/PrefixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.PrefixFileFilter.PrefixFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file",
                        "name"
                    ],
                    "file name": "PrefixFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/PrefixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.PrefixFileFilter.accept"
                },
                {
                    "function name": "PrefixFileFilter",
                    "function params": [
                        "prefixs"
                    ],
                    "file name": "PrefixFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/PrefixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.PrefixFileFilter.PrefixFileFilter"
                },
                {
                    "function name": "available",
                    "function params": [],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.SwappedDataInputStream.available"
                },
                {
                    "function name": "readLong",
                    "function params": [],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.SwappedDataInputStream.readLong"
                },
                {
                    "function name": "readChar",
                    "function params": [],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.SwappedDataInputStream.readChar"
                },
                {
                    "function name": "readShort",
                    "function params": [],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.SwappedDataInputStream.readShort"
                },
                {
                    "function name": "readFloat",
                    "function params": [],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.SwappedDataInputStream.readFloat"
                },
                {
                    "function name": "markSupported",
                    "function params": [],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.SwappedDataInputStream.markSupported"
                },
                {
                    "function name": "mark",
                    "function params": [
                        "readLimit"
                    ],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.SwappedDataInputStream.mark"
                },
                {
                    "function name": "readBoolean",
                    "function params": [],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.SwappedDataInputStream.readBoolean"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.SwappedDataInputStream.close"
                },
                {
                    "function name": "skipBytes",
                    "function params": [
                        "count"
                    ],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.SwappedDataInputStream.skipBytes"
                },
                {
                    "function name": "skip",
                    "function params": [
                        "count"
                    ],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.SwappedDataInputStream.skip"
                },
                {
                    "function name": "SwappedDataInputStream",
                    "function params": [
                        "input"
                    ],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.SwappedDataInputStream.SwappedDataInputStream"
                },
                {
                    "function name": "readFully",
                    "function params": [
                        "data"
                    ],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.SwappedDataInputStream.readFully"
                },
                {
                    "function name": "readDouble",
                    "function params": [],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.SwappedDataInputStream.readDouble"
                },
                {
                    "function name": "read",
                    "function params": [],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.SwappedDataInputStream.read"
                },
                {
                    "function name": "readUnsignedByte",
                    "function params": [],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.SwappedDataInputStream.readUnsignedByte"
                },
                {
                    "function name": "readByte",
                    "function params": [],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.SwappedDataInputStream.readByte"
                },
                {
                    "function name": "readLine",
                    "function params": [],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.SwappedDataInputStream.readLine"
                },
                {
                    "function name": "read",
                    "function params": [
                        "data",
                        "offset",
                        "length"
                    ],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.SwappedDataInputStream.read"
                },
                {
                    "function name": "readFully",
                    "function params": [
                        "data",
                        "offset",
                        "length"
                    ],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.SwappedDataInputStream.readFully"
                },
                {
                    "function name": "reset",
                    "function params": [],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.SwappedDataInputStream.reset"
                },
                {
                    "function name": "readUnsignedShort",
                    "function params": [],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.SwappedDataInputStream.readUnsignedShort"
                },
                {
                    "function name": "readInt",
                    "function params": [],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.SwappedDataInputStream.readInt"
                },
                {
                    "function name": "read",
                    "function params": [
                        "data"
                    ],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.SwappedDataInputStream.read"
                },
                {
                    "function name": "readUTF",
                    "function params": [],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.SwappedDataInputStream.readUTF"
                }
            ],
            "date": "2002-07-08"
        },
        {
            "commit_id": 13,
            "hash": "f34016d0fce891d13371ec11099b6b715d15099f",
            "commit_summary": "New bzip2 classes from Avalon excalibur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140302 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "CBZip2InputStream",
                    "function params": [
                        "input"
                    ],
                    "file name": "CBZip2InputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2InputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2InputStream.CBZip2InputStream"
                },
                {
                    "function name": "readInt",
                    "function params": [],
                    "file name": "CBZip2InputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2InputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2InputStream.readInt"
                },
                {
                    "function name": "badBlockHeader",
                    "function params": [],
                    "file name": "CBZip2InputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2InputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2InputStream.badBlockHeader"
                },
                {
                    "function name": "makeMaps",
                    "function params": [],
                    "file name": "CBZip2InputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2InputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2InputStream.makeMaps"
                },
                {
                    "function name": "hbCreateDecodeTables",
                    "function params": [
                        "limit",
                        "base",
                        "perm",
                        "length",
                        "minLen",
                        "maxLen",
                        "alphaSize"
                    ],
                    "file name": "CBZip2InputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2InputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2InputStream.hbCreateDecodeTables"
                },
                {
                    "function name": "getAndMoveToFrontDecode",
                    "function params": [],
                    "file name": "CBZip2InputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2InputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2InputStream.getAndMoveToFrontDecode"
                },
                {
                    "function name": "setupNoRandPartB",
                    "function params": [],
                    "file name": "CBZip2InputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2InputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2InputStream.setupNoRandPartB"
                },
                {
                    "function name": "bsSetStream",
                    "function params": [
                        "input"
                    ],
                    "file name": "CBZip2InputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2InputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2InputStream.bsSetStream"
                },
                {
                    "function name": "recvDecodingTables",
                    "function params": [],
                    "file name": "CBZip2InputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2InputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2InputStream.recvDecodingTables"
                },
                {
                    "function name": "endBlock",
                    "function params": [],
                    "file name": "CBZip2InputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2InputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2InputStream.endBlock"
                },
                {
                    "function name": "setupRandPartC",
                    "function params": [],
                    "file name": "CBZip2InputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2InputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2InputStream.setupRandPartC"
                },
                {
                    "function name": "read",
                    "function params": [],
                    "file name": "CBZip2InputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2InputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2InputStream.read"
                },
                {
                    "function name": "setupBlock",
                    "function params": [],
                    "file name": "CBZip2InputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2InputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2InputStream.setupBlock"
                },
                {
                    "function name": "bsFinishedWithStream",
                    "function params": [],
                    "file name": "CBZip2InputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2InputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2InputStream.bsFinishedWithStream"
                },
                {
                    "function name": "initBlock",
                    "function params": [],
                    "file name": "CBZip2InputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2InputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2InputStream.initBlock"
                },
                {
                    "function name": "crcError",
                    "function params": [],
                    "file name": "CBZip2InputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2InputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2InputStream.crcError"
                },
                {
                    "function name": "compressedStreamEOF",
                    "function params": [],
                    "file name": "CBZip2InputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2InputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2InputStream.compressedStreamEOF"
                },
                {
                    "function name": "setDecompressStructureSizes",
                    "function params": [
                        "newSize100k"
                    ],
                    "file name": "CBZip2InputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2InputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2InputStream.setDecompressStructureSizes"
                },
                {
                    "function name": "buildInUseTable",
                    "function params": [],
                    "file name": "CBZip2InputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2InputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2InputStream.buildInUseTable"
                },
                {
                    "function name": "readUnsignedChar",
                    "function params": [],
                    "file name": "CBZip2InputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2InputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2InputStream.readUnsignedChar"
                },
                {
                    "function name": "bsR",
                    "function params": [
                        "n"
                    ],
                    "file name": "CBZip2InputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2InputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2InputStream.bsR"
                },
                {
                    "function name": "cadvise",
                    "function params": [],
                    "file name": "CBZip2InputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2InputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2InputStream.cadvise"
                },
                {
                    "function name": "readVariableSizedInt",
                    "function params": [
                        "numBits"
                    ],
                    "file name": "CBZip2InputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2InputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2InputStream.readVariableSizedInt"
                },
                {
                    "function name": "setupNoRandPartA",
                    "function params": [],
                    "file name": "CBZip2InputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2InputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2InputStream.setupNoRandPartA"
                },
                {
                    "function name": "setupRandPartB",
                    "function params": [],
                    "file name": "CBZip2InputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2InputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2InputStream.setupRandPartB"
                },
                {
                    "function name": "blockOverrun",
                    "function params": [],
                    "file name": "CBZip2InputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2InputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2InputStream.blockOverrun"
                },
                {
                    "function name": "setupNoRandPartC",
                    "function params": [],
                    "file name": "CBZip2InputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2InputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2InputStream.setupNoRandPartC"
                },
                {
                    "function name": "initialize",
                    "function params": [],
                    "file name": "CBZip2InputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2InputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2InputStream.initialize"
                },
                {
                    "function name": "setupRandPartA",
                    "function params": [],
                    "file name": "CBZip2InputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2InputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2InputStream.setupRandPartA"
                },
                {
                    "function name": "complete",
                    "function params": [],
                    "file name": "CBZip2InputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2InputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2InputStream.complete"
                },
                {
                    "function name": "endCompression",
                    "function params": [],
                    "file name": "CBZip2OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2OutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2OutputStream.endCompression"
                },
                {
                    "function name": "bsPutint",
                    "function params": [
                        "u"
                    ],
                    "file name": "CBZip2OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2OutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2OutputStream.bsPutint"
                },
                {
                    "function name": "panic",
                    "function params": [],
                    "file name": "CBZip2OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2OutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2OutputStream.panic"
                },
                {
                    "function name": "bsSetStream",
                    "function params": [
                        "f"
                    ],
                    "file name": "CBZip2OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2OutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2OutputStream.bsSetStream"
                },
                {
                    "function name": "CBZip2OutputStream",
                    "function params": [
                        "output",
                        "blockSize"
                    ],
                    "file name": "CBZip2OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2OutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2OutputStream.CBZip2OutputStream"
                },
                {
                    "function name": "flush",
                    "function params": [],
                    "file name": "CBZip2OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2OutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2OutputStream.flush"
                },
                {
                    "function name": "hbAssignCodes",
                    "function params": [
                        "code",
                        "length",
                        "minLen",
                        "maxLen",
                        "alphaSize"
                    ],
                    "file name": "CBZip2OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2OutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2OutputStream.hbAssignCodes"
                },
                {
                    "function name": "vswap",
                    "function params": [
                        "p1",
                        "p2",
                        "n"
                    ],
                    "file name": "CBZip2OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2OutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2OutputStream.vswap"
                },
                {
                    "function name": "finalize",
                    "function params": [],
                    "file name": "CBZip2OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2OutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2OutputStream.finalize"
                },
                {
                    "function name": "bsPutIntVS",
                    "function params": [
                        "numBits",
                        "c"
                    ],
                    "file name": "CBZip2OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2OutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2OutputStream.bsPutIntVS"
                },
                {
                    "function name": "bsFinishedWithStream",
                    "function params": [],
                    "file name": "CBZip2OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2OutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2OutputStream.bsFinishedWithStream"
                },
                {
                    "function name": "bsW",
                    "function params": [
                        "n",
                        "v"
                    ],
                    "file name": "CBZip2OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2OutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2OutputStream.bsW"
                },
                {
                    "function name": "moveToFrontCodeAndSend",
                    "function params": [],
                    "file name": "CBZip2OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2OutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2OutputStream.moveToFrontCodeAndSend"
                },
                {
                    "function name": "qSort3",
                    "function params": [
                        "loSt",
                        "hiSt",
                        "dSt"
                    ],
                    "file name": "CBZip2OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2OutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2OutputStream.qSort3"
                },
                {
                    "function name": "calculateWeight",
                    "function params": [
                        "v1",
                        "v2"
                    ],
                    "file name": "CBZip2OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2OutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2OutputStream.calculateWeight"
                },
                {
                    "function name": "initBlock",
                    "function params": [],
                    "file name": "CBZip2OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2OutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2OutputStream.initBlock"
                },
                {
                    "function name": "generateMTFValues",
                    "function params": [],
                    "file name": "CBZip2OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2OutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2OutputStream.generateMTFValues"
                },
                {
                    "function name": "endBlock",
                    "function params": [],
                    "file name": "CBZip2OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2OutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2OutputStream.endBlock"
                },
                {
                    "function name": "sendMTFValues",
                    "function params": [],
                    "file name": "CBZip2OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2OutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2OutputStream.sendMTFValues"
                },
                {
                    "function name": "hbMakeCodeLengths",
                    "function params": [
                        "len",
                        "freq",
                        "alphaSize",
                        "maxLen"
                    ],
                    "file name": "CBZip2OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2OutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2OutputStream.hbMakeCodeLengths"
                },
                {
                    "function name": "mainSort",
                    "function params": [],
                    "file name": "CBZip2OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2OutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2OutputStream.mainSort"
                },
                {
                    "function name": "makeMaps",
                    "function params": [],
                    "file name": "CBZip2OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2OutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2OutputStream.makeMaps"
                },
                {
                    "function name": "simpleSort",
                    "function params": [
                        "lo",
                        "hi",
                        "d"
                    ],
                    "file name": "CBZip2OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2OutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2OutputStream.simpleSort"
                },
                {
                    "function name": "fullGtU",
                    "function params": [
                        "i1",
                        "i2"
                    ],
                    "file name": "CBZip2OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2OutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2OutputStream.fullGtU"
                },
                {
                    "function name": "med3",
                    "function params": [
                        "a",
                        "b",
                        "c"
                    ],
                    "file name": "CBZip2OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2OutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2OutputStream.med3"
                },
                {
                    "function name": "allocateCompressStructures",
                    "function params": [],
                    "file name": "CBZip2OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2OutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2OutputStream.allocateCompressStructures"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "CBZip2OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2OutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2OutputStream.close"
                },
                {
                    "function name": "bsPutUChar",
                    "function params": [
                        "c"
                    ],
                    "file name": "CBZip2OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2OutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2OutputStream.bsPutUChar"
                },
                {
                    "function name": "randomiseBlock",
                    "function params": [],
                    "file name": "CBZip2OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2OutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2OutputStream.randomiseBlock"
                },
                {
                    "function name": "doReversibleTransformation",
                    "function params": [],
                    "file name": "CBZip2OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2OutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2OutputStream.doReversibleTransformation"
                },
                {
                    "function name": "initialize",
                    "function params": [],
                    "file name": "CBZip2OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2OutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2OutputStream.initialize"
                },
                {
                    "function name": "writeRun",
                    "function params": [],
                    "file name": "CBZip2OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2OutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2OutputStream.writeRun"
                },
                {
                    "function name": "CBZip2OutputStream",
                    "function params": [
                        "output"
                    ],
                    "file name": "CBZip2OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2OutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2OutputStream.CBZip2OutputStream"
                },
                {
                    "function name": "write",
                    "function params": [
                        "bv"
                    ],
                    "file name": "CBZip2OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CBZip2OutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CBZip2OutputStream.write"
                },
                {
                    "function name": "initialiseCRC",
                    "function params": [],
                    "file name": "CRC.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CRC.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CRC.initialiseCRC"
                },
                {
                    "function name": "updateCRC",
                    "function params": [
                        "inCh"
                    ],
                    "file name": "CRC.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CRC.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CRC.updateCRC"
                },
                {
                    "function name": "CRC",
                    "function params": [],
                    "file name": "CRC.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CRC.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CRC.CRC"
                },
                {
                    "function name": "getFinalCRC",
                    "function params": [],
                    "file name": "CRC.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/bzip2/CRC.java",
                    "full name": "src.java.org.apache.commons.io.compress.bzip2.CRC.getFinalCRC"
                }
            ],
            "date": "2002-07-08"
        },
        {
            "commit_id": 14,
            "hash": "70492febc8a6384aeec79676cf74911bc43ac3c6",
            "commit_summary": "New tar classes from Avalon excalibur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140303 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "TarBuffer",
                    "function params": [
                        "output",
                        "blockSize"
                    ],
                    "file name": "TarBuffer.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarBuffer.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarBuffer.TarBuffer"
                },
                {
                    "function name": "writeRecord",
                    "function params": [
                        "record"
                    ],
                    "file name": "TarBuffer.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarBuffer.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarBuffer.writeRecord"
                },
                {
                    "function name": "initialize",
                    "function params": [
                        "blockSize",
                        "recordSize"
                    ],
                    "file name": "TarBuffer.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarBuffer.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarBuffer.initialize"
                },
                {
                    "function name": "getCurrentRecordNum",
                    "function params": [],
                    "file name": "TarBuffer.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarBuffer.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarBuffer.getCurrentRecordNum"
                },
                {
                    "function name": "TarBuffer",
                    "function params": [
                        "input",
                        "blockSize",
                        "recordSize"
                    ],
                    "file name": "TarBuffer.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarBuffer.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarBuffer.TarBuffer"
                },
                {
                    "function name": "readRecord",
                    "function params": [],
                    "file name": "TarBuffer.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarBuffer.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarBuffer.readRecord"
                },
                {
                    "function name": "isEOFRecord",
                    "function params": [
                        "record"
                    ],
                    "file name": "TarBuffer.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarBuffer.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarBuffer.isEOFRecord"
                },
                {
                    "function name": "flushBlock",
                    "function params": [],
                    "file name": "TarBuffer.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarBuffer.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarBuffer.flushBlock"
                },
                {
                    "function name": "TarBuffer",
                    "function params": [
                        "output"
                    ],
                    "file name": "TarBuffer.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarBuffer.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarBuffer.TarBuffer"
                },
                {
                    "function name": "TarBuffer",
                    "function params": [
                        "input",
                        "blockSize"
                    ],
                    "file name": "TarBuffer.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarBuffer.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarBuffer.TarBuffer"
                },
                {
                    "function name": "getRecordSize",
                    "function params": [],
                    "file name": "TarBuffer.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarBuffer.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarBuffer.getRecordSize"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "TarBuffer.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarBuffer.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarBuffer.close"
                },
                {
                    "function name": "skipRecord",
                    "function params": [],
                    "file name": "TarBuffer.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarBuffer.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarBuffer.skipRecord"
                },
                {
                    "function name": "TarBuffer",
                    "function params": [
                        "output",
                        "blockSize",
                        "recordSize"
                    ],
                    "file name": "TarBuffer.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarBuffer.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarBuffer.TarBuffer"
                },
                {
                    "function name": "writeBlock",
                    "function params": [],
                    "file name": "TarBuffer.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarBuffer.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarBuffer.writeBlock"
                },
                {
                    "function name": "TarBuffer",
                    "function params": [
                        "input"
                    ],
                    "file name": "TarBuffer.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarBuffer.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarBuffer.TarBuffer"
                },
                {
                    "function name": "setDebug",
                    "function params": [
                        "debug"
                    ],
                    "file name": "TarBuffer.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarBuffer.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarBuffer.setDebug"
                },
                {
                    "function name": "getBlockSize",
                    "function params": [],
                    "file name": "TarBuffer.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarBuffer.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarBuffer.getBlockSize"
                },
                {
                    "function name": "getCurrentBlockNum",
                    "function params": [],
                    "file name": "TarBuffer.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarBuffer.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarBuffer.getCurrentBlockNum"
                },
                {
                    "function name": "debug",
                    "function params": [
                        "message"
                    ],
                    "file name": "TarBuffer.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarBuffer.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarBuffer.debug"
                },
                {
                    "function name": "readBlock",
                    "function params": [],
                    "file name": "TarBuffer.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarBuffer.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarBuffer.readBlock"
                },
                {
                    "function name": "writeRecord",
                    "function params": [
                        "buffer",
                        "offset"
                    ],
                    "file name": "TarBuffer.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarBuffer.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarBuffer.writeRecord"
                },
                {
                    "function name": "setUserId",
                    "function params": [
                        "userId"
                    ],
                    "file name": "TarEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarEntry.setUserId"
                },
                {
                    "function name": "getDirectoryEntries",
                    "function params": [],
                    "file name": "TarEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarEntry.getDirectoryEntries"
                },
                {
                    "function name": "TarEntry",
                    "function params": [],
                    "file name": "TarEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarEntry.TarEntry"
                },
                {
                    "function name": "getGroupName",
                    "function params": [],
                    "file name": "TarEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarEntry.getGroupName"
                },
                {
                    "function name": "getModTime",
                    "function params": [],
                    "file name": "TarEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarEntry.getModTime"
                },
                {
                    "function name": "getName",
                    "function params": [],
                    "file name": "TarEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarEntry.getName"
                },
                {
                    "function name": "isDescendent",
                    "function params": [
                        "desc"
                    ],
                    "file name": "TarEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarEntry.isDescendent"
                },
                {
                    "function name": "setGroupId",
                    "function params": [
                        "groupId"
                    ],
                    "file name": "TarEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarEntry.setGroupId"
                },
                {
                    "function name": "isGNULongNameEntry",
                    "function params": [],
                    "file name": "TarEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarEntry.isGNULongNameEntry"
                },
                {
                    "function name": "getMode",
                    "function params": [],
                    "file name": "TarEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarEntry.getMode"
                },
                {
                    "function name": "getGroupId",
                    "function params": [],
                    "file name": "TarEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarEntry.getGroupId"
                },
                {
                    "function name": "writeEntryHeader",
                    "function params": [
                        "buffer"
                    ],
                    "file name": "TarEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarEntry.writeEntryHeader"
                },
                {
                    "function name": "setGroupID",
                    "function params": [
                        "groupId"
                    ],
                    "file name": "TarEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarEntry.setGroupID"
                },
                {
                    "function name": "setModTime",
                    "function params": [
                        "time"
                    ],
                    "file name": "TarEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarEntry.setModTime"
                },
                {
                    "function name": "getSize",
                    "function params": [],
                    "file name": "TarEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarEntry.getSize"
                },
                {
                    "function name": "setMode",
                    "function params": [
                        "mode"
                    ],
                    "file name": "TarEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarEntry.setMode"
                },
                {
                    "function name": "TarEntry",
                    "function params": [
                        "name"
                    ],
                    "file name": "TarEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarEntry.TarEntry"
                },
                {
                    "function name": "TarEntry",
                    "function params": [
                        "name",
                        "linkFlag"
                    ],
                    "file name": "TarEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarEntry.TarEntry"
                },
                {
                    "function name": "setUserID",
                    "function params": [
                        "userId"
                    ],
                    "file name": "TarEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarEntry.setUserID"
                },
                {
                    "function name": "getFile",
                    "function params": [],
                    "file name": "TarEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarEntry.getFile"
                },
                {
                    "function name": "isDirectory",
                    "function params": [],
                    "file name": "TarEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarEntry.isDirectory"
                },
                {
                    "function name": "getUserId",
                    "function params": [],
                    "file name": "TarEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarEntry.getUserId"
                },
                {
                    "function name": "getGroupID",
                    "function params": [],
                    "file name": "TarEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarEntry.getGroupID"
                },
                {
                    "function name": "getCheckSum",
                    "function params": [],
                    "file name": "TarEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarEntry.getCheckSum"
                },
                {
                    "function name": "TarEntry",
                    "function params": [
                        "file"
                    ],
                    "file name": "TarEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarEntry.TarEntry"
                },
                {
                    "function name": "equals",
                    "function params": [
                        "other"
                    ],
                    "file name": "TarEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarEntry.equals"
                },
                {
                    "function name": "getUserName",
                    "function params": [],
                    "file name": "TarEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarEntry.getUserName"
                },
                {
                    "function name": "setModTime",
                    "function params": [
                        "time"
                    ],
                    "file name": "TarEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarEntry.setModTime"
                },
                {
                    "function name": "TarEntry",
                    "function params": [
                        "header"
                    ],
                    "file name": "TarEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarEntry.TarEntry"
                },
                {
                    "function name": "setName",
                    "function params": [
                        "name"
                    ],
                    "file name": "TarEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarEntry.setName"
                },
                {
                    "function name": "setUserName",
                    "function params": [
                        "userName"
                    ],
                    "file name": "TarEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarEntry.setUserName"
                },
                {
                    "function name": "setSize",
                    "function params": [
                        "size"
                    ],
                    "file name": "TarEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarEntry.setSize"
                },
                {
                    "function name": "parseTarHeader",
                    "function params": [
                        "header"
                    ],
                    "file name": "TarEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarEntry.parseTarHeader"
                },
                {
                    "function name": "getUserID",
                    "function params": [],
                    "file name": "TarEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarEntry.getUserID"
                },
                {
                    "function name": "setGroupName",
                    "function params": [
                        "groupName"
                    ],
                    "file name": "TarEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarEntry.setGroupName"
                },
                {
                    "function name": "available",
                    "function params": [],
                    "file name": "TarInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarInputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarInputStream.available"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "TarInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarInputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarInputStream.close"
                },
                {
                    "function name": "TarInputStream",
                    "function params": [
                        "input"
                    ],
                    "file name": "TarInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarInputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarInputStream.TarInputStream"
                },
                {
                    "function name": "reset",
                    "function params": [],
                    "file name": "TarInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarInputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarInputStream.reset"
                },
                {
                    "function name": "getNextEntry",
                    "function params": [],
                    "file name": "TarInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarInputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarInputStream.getNextEntry"
                },
                {
                    "function name": "skip",
                    "function params": [
                        "numToSkip"
                    ],
                    "file name": "TarInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarInputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarInputStream.skip"
                },
                {
                    "function name": "copyEntryContents",
                    "function params": [
                        "output"
                    ],
                    "file name": "TarInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarInputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarInputStream.copyEntryContents"
                },
                {
                    "function name": "read",
                    "function params": [
                        "buffer",
                        "offset",
                        "count"
                    ],
                    "file name": "TarInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarInputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarInputStream.read"
                },
                {
                    "function name": "TarInputStream",
                    "function params": [
                        "input",
                        "blockSize",
                        "recordSize"
                    ],
                    "file name": "TarInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarInputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarInputStream.TarInputStream"
                },
                {
                    "function name": "read",
                    "function params": [],
                    "file name": "TarInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarInputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarInputStream.read"
                },
                {
                    "function name": "getRecordSize",
                    "function params": [],
                    "file name": "TarInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarInputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarInputStream.getRecordSize"
                },
                {
                    "function name": "markSupported",
                    "function params": [],
                    "file name": "TarInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarInputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarInputStream.markSupported"
                },
                {
                    "function name": "mark",
                    "function params": [
                        "markLimit"
                    ],
                    "file name": "TarInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarInputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarInputStream.mark"
                },
                {
                    "function name": "TarInputStream",
                    "function params": [
                        "input",
                        "blockSize"
                    ],
                    "file name": "TarInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarInputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarInputStream.TarInputStream"
                },
                {
                    "function name": "setDebug",
                    "function params": [
                        "debug"
                    ],
                    "file name": "TarInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarInputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarInputStream.setDebug"
                },
                {
                    "function name": "debug",
                    "function params": [
                        "message"
                    ],
                    "file name": "TarInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarInputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarInputStream.debug"
                },
                {
                    "function name": "read",
                    "function params": [
                        "buffer"
                    ],
                    "file name": "TarInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarInputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarInputStream.read"
                },
                {
                    "function name": "copyEntryContents",
                    "function params": [
                        "input"
                    ],
                    "file name": "TarOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarOutputStream.copyEntryContents"
                },
                {
                    "function name": "setBufferDebug",
                    "function params": [
                        "debug"
                    ],
                    "file name": "TarOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarOutputStream.setBufferDebug"
                },
                {
                    "function name": "finish",
                    "function params": [],
                    "file name": "TarOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarOutputStream.finish"
                },
                {
                    "function name": "write",
                    "function params": [
                        "buffer"
                    ],
                    "file name": "TarOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarOutputStream.write"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "TarOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarOutputStream.close"
                },
                {
                    "function name": "TarOutputStream",
                    "function params": [
                        "output",
                        "blockSize"
                    ],
                    "file name": "TarOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarOutputStream.TarOutputStream"
                },
                {
                    "function name": "setLongFileMode",
                    "function params": [
                        "longFileMode"
                    ],
                    "file name": "TarOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarOutputStream.setLongFileMode"
                },
                {
                    "function name": "TarOutputStream",
                    "function params": [
                        "output",
                        "blockSize",
                        "recordSize"
                    ],
                    "file name": "TarOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarOutputStream.TarOutputStream"
                },
                {
                    "function name": "TarOutputStream",
                    "function params": [
                        "output"
                    ],
                    "file name": "TarOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarOutputStream.TarOutputStream"
                },
                {
                    "function name": "putNextEntry",
                    "function params": [
                        "entry"
                    ],
                    "file name": "TarOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarOutputStream.putNextEntry"
                },
                {
                    "function name": "writeEOFRecord",
                    "function params": [],
                    "file name": "TarOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarOutputStream.writeEOFRecord"
                },
                {
                    "function name": "closeEntry",
                    "function params": [],
                    "file name": "TarOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarOutputStream.closeEntry"
                },
                {
                    "function name": "write",
                    "function params": [
                        "buffer",
                        "offset",
                        "count"
                    ],
                    "file name": "TarOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarOutputStream.write"
                },
                {
                    "function name": "getRecordSize",
                    "function params": [],
                    "file name": "TarOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarOutputStream.getRecordSize"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data"
                    ],
                    "file name": "TarOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarOutputStream.write"
                },
                {
                    "function name": "parseName",
                    "function params": [
                        "header",
                        "offset",
                        "length"
                    ],
                    "file name": "TarUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarUtils.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarUtils.parseName"
                },
                {
                    "function name": "getCheckSumOctalBytes",
                    "function params": [
                        "value",
                        "buf",
                        "offset",
                        "length"
                    ],
                    "file name": "TarUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarUtils.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarUtils.getCheckSumOctalBytes"
                },
                {
                    "function name": "getOctalBytes",
                    "function params": [
                        "value",
                        "buffer",
                        "offset",
                        "length"
                    ],
                    "file name": "TarUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarUtils.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarUtils.getOctalBytes"
                },
                {
                    "function name": "computeCheckSum",
                    "function params": [
                        "buffer"
                    ],
                    "file name": "TarUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarUtils.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarUtils.computeCheckSum"
                },
                {
                    "function name": "getNameBytes",
                    "function params": [
                        "name",
                        "buffer",
                        "offset",
                        "length"
                    ],
                    "file name": "TarUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarUtils.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarUtils.getNameBytes"
                },
                {
                    "function name": "getLongOctalBytes",
                    "function params": [
                        "value",
                        "buf",
                        "offset",
                        "length"
                    ],
                    "file name": "TarUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarUtils.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarUtils.getLongOctalBytes"
                },
                {
                    "function name": "parseOctal",
                    "function params": [
                        "header",
                        "offset",
                        "length"
                    ],
                    "file name": "TarUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/tar/TarUtils.java",
                    "full name": "src.java.org.apache.commons.io.compress.tar.TarUtils.parseOctal"
                }
            ],
            "date": "2002-07-08"
        },
        {
            "commit_id": 15,
            "hash": "e44faf9fa20c0213106c81ad8e25e7a527d97d15",
            "commit_summary": "New zip classes from Avalon excalibur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140304 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "setUserID",
                    "function params": [
                        "uid"
                    ],
                    "file name": "AsiExtraField.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/AsiExtraField.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.AsiExtraField.setUserID"
                },
                {
                    "function name": "isDirectory",
                    "function params": [],
                    "file name": "AsiExtraField.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/AsiExtraField.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.AsiExtraField.isDirectory"
                },
                {
                    "function name": "getUserID",
                    "function params": [],
                    "file name": "AsiExtraField.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/AsiExtraField.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.AsiExtraField.getUserID"
                },
                {
                    "function name": "getGroupId",
                    "function params": [],
                    "file name": "AsiExtraField.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/AsiExtraField.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.AsiExtraField.getGroupId"
                },
                {
                    "function name": "setGroupId",
                    "function params": [
                        "gid"
                    ],
                    "file name": "AsiExtraField.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/AsiExtraField.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.AsiExtraField.setGroupId"
                },
                {
                    "function name": "getLocalFileDataData",
                    "function params": [],
                    "file name": "AsiExtraField.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/AsiExtraField.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.AsiExtraField.getLocalFileDataData"
                },
                {
                    "function name": "setMode",
                    "function params": [
                        "mode"
                    ],
                    "file name": "AsiExtraField.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/AsiExtraField.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.AsiExtraField.setMode"
                },
                {
                    "function name": "getHeaderID",
                    "function params": [],
                    "file name": "AsiExtraField.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/AsiExtraField.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.AsiExtraField.getHeaderID"
                },
                {
                    "function name": "getGroupID",
                    "function params": [],
                    "file name": "AsiExtraField.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/AsiExtraField.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.AsiExtraField.getGroupID"
                },
                {
                    "function name": "getMode",
                    "function params": [],
                    "file name": "AsiExtraField.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/AsiExtraField.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.AsiExtraField.getMode"
                },
                {
                    "function name": "getUserId",
                    "function params": [],
                    "file name": "AsiExtraField.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/AsiExtraField.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.AsiExtraField.getUserId"
                },
                {
                    "function name": "setDirectory",
                    "function params": [
                        "dirFlag"
                    ],
                    "file name": "AsiExtraField.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/AsiExtraField.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.AsiExtraField.setDirectory"
                },
                {
                    "function name": "getCentralDirectoryData",
                    "function params": [],
                    "file name": "AsiExtraField.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/AsiExtraField.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.AsiExtraField.getCentralDirectoryData"
                },
                {
                    "function name": "getMode",
                    "function params": [
                        "mode"
                    ],
                    "file name": "AsiExtraField.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/AsiExtraField.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.AsiExtraField.getMode"
                },
                {
                    "function name": "getLinkedFile",
                    "function params": [],
                    "file name": "AsiExtraField.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/AsiExtraField.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.AsiExtraField.getLinkedFile"
                },
                {
                    "function name": "setLinkedFile",
                    "function params": [
                        "name"
                    ],
                    "file name": "AsiExtraField.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/AsiExtraField.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.AsiExtraField.setLinkedFile"
                },
                {
                    "function name": "parseFromLocalFileData",
                    "function params": [
                        "buffer",
                        "offset",
                        "length"
                    ],
                    "file name": "AsiExtraField.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/AsiExtraField.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.AsiExtraField.parseFromLocalFileData"
                },
                {
                    "function name": "getLocalFileDataLength",
                    "function params": [],
                    "file name": "AsiExtraField.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/AsiExtraField.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.AsiExtraField.getLocalFileDataLength"
                },
                {
                    "function name": "setUserId",
                    "function params": [
                        "uid"
                    ],
                    "file name": "AsiExtraField.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/AsiExtraField.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.AsiExtraField.setUserId"
                },
                {
                    "function name": "isLink",
                    "function params": [],
                    "file name": "AsiExtraField.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/AsiExtraField.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.AsiExtraField.isLink"
                },
                {
                    "function name": "getCentralDirectoryLength",
                    "function params": [],
                    "file name": "AsiExtraField.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/AsiExtraField.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.AsiExtraField.getCentralDirectoryLength"
                },
                {
                    "function name": "mergeLocalFileDataData",
                    "function params": [
                        "data"
                    ],
                    "file name": "ExtraFieldUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ExtraFieldUtils.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ExtraFieldUtils.mergeLocalFileDataData"
                },
                {
                    "function name": "mergeCentralDirectoryData",
                    "function params": [
                        "data"
                    ],
                    "file name": "ExtraFieldUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ExtraFieldUtils.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ExtraFieldUtils.mergeCentralDirectoryData"
                },
                {
                    "function name": "createExtraField",
                    "function params": [
                        "headerID"
                    ],
                    "file name": "ExtraFieldUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ExtraFieldUtils.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ExtraFieldUtils.createExtraField"
                },
                {
                    "function name": "parse",
                    "function params": [
                        "data"
                    ],
                    "file name": "ExtraFieldUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ExtraFieldUtils.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ExtraFieldUtils.parse"
                },
                {
                    "function name": "register",
                    "function params": [
                        "clazz"
                    ],
                    "file name": "ExtraFieldUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ExtraFieldUtils.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ExtraFieldUtils.register"
                },
                {
                    "function name": "getCentralDirectoryData",
                    "function params": [],
                    "file name": "UnrecognizedExtraField.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/UnrecognizedExtraField.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.UnrecognizedExtraField.getCentralDirectoryData"
                },
                {
                    "function name": "setHeaderID",
                    "function params": [
                        "headerID"
                    ],
                    "file name": "UnrecognizedExtraField.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/UnrecognizedExtraField.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.UnrecognizedExtraField.setHeaderID"
                },
                {
                    "function name": "setCentralDirectoryData",
                    "function params": [
                        "centralData"
                    ],
                    "file name": "UnrecognizedExtraField.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/UnrecognizedExtraField.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.UnrecognizedExtraField.setCentralDirectoryData"
                },
                {
                    "function name": "getLocalFileDataData",
                    "function params": [],
                    "file name": "UnrecognizedExtraField.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/UnrecognizedExtraField.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.UnrecognizedExtraField.getLocalFileDataData"
                },
                {
                    "function name": "getHeaderId",
                    "function params": [],
                    "file name": "UnrecognizedExtraField.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/UnrecognizedExtraField.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.UnrecognizedExtraField.getHeaderId"
                },
                {
                    "function name": "getCentralDirectoryLength",
                    "function params": [],
                    "file name": "UnrecognizedExtraField.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/UnrecognizedExtraField.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.UnrecognizedExtraField.getCentralDirectoryLength"
                },
                {
                    "function name": "setLocalFileDataData",
                    "function params": [
                        "localData"
                    ],
                    "file name": "UnrecognizedExtraField.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/UnrecognizedExtraField.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.UnrecognizedExtraField.setLocalFileDataData"
                },
                {
                    "function name": "parseFromLocalFileData",
                    "function params": [
                        "buffer",
                        "offset",
                        "length"
                    ],
                    "file name": "UnrecognizedExtraField.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/UnrecognizedExtraField.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.UnrecognizedExtraField.parseFromLocalFileData"
                },
                {
                    "function name": "getLocalFileDataLength",
                    "function params": [],
                    "file name": "UnrecognizedExtraField.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/UnrecognizedExtraField.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.UnrecognizedExtraField.getLocalFileDataLength"
                },
                {
                    "function name": "getHeaderID",
                    "function params": [],
                    "file name": "UnrecognizedExtraField.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/UnrecognizedExtraField.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.UnrecognizedExtraField.getHeaderID"
                },
                {
                    "function name": "setHeaderId",
                    "function params": [
                        "headerID"
                    ],
                    "file name": "UnrecognizedExtraField.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/UnrecognizedExtraField.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.UnrecognizedExtraField.setHeaderId"
                },
                {
                    "function name": "getLocalFileDataExtra",
                    "function params": [],
                    "file name": "ZipEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipEntry.getLocalFileDataExtra"
                },
                {
                    "function name": "ZipEntry",
                    "function params": [
                        "entry"
                    ],
                    "file name": "ZipEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipEntry.ZipEntry"
                },
                {
                    "function name": "setComprSize",
                    "function params": [
                        "size"
                    ],
                    "file name": "ZipEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipEntry.setComprSize"
                },
                {
                    "function name": "getCompressedSize",
                    "function params": [],
                    "file name": "ZipEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipEntry.getCompressedSize"
                },
                {
                    "function name": "getExternalAttributes",
                    "function params": [],
                    "file name": "ZipEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipEntry.getExternalAttributes"
                },
                {
                    "function name": "getExtraFields",
                    "function params": [],
                    "file name": "ZipEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipEntry.getExtraFields"
                },
                {
                    "function name": "checkSCS",
                    "function params": [],
                    "file name": "ZipEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipEntry.checkSCS"
                },
                {
                    "function name": "setExtra",
                    "function params": [
                        "extra"
                    ],
                    "file name": "ZipEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipEntry.setExtra"
                },
                {
                    "function name": "ZipEntry",
                    "function params": [
                        "name"
                    ],
                    "file name": "ZipEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipEntry.ZipEntry"
                },
                {
                    "function name": "getInternalAttributes",
                    "function params": [],
                    "file name": "ZipEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipEntry.getInternalAttributes"
                },
                {
                    "function name": "setInternalAttributes",
                    "function params": [
                        "value"
                    ],
                    "file name": "ZipEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipEntry.setInternalAttributes"
                },
                {
                    "function name": "removeExtraField",
                    "function params": [
                        "type"
                    ],
                    "file name": "ZipEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipEntry.removeExtraField"
                },
                {
                    "function name": "setExtraFields",
                    "function params": [
                        "fields"
                    ],
                    "file name": "ZipEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipEntry.setExtraFields"
                },
                {
                    "function name": "setExternalAttributes",
                    "function params": [
                        "externalAttributes"
                    ],
                    "file name": "ZipEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipEntry.setExternalAttributes"
                },
                {
                    "function name": "clone",
                    "function params": [],
                    "file name": "ZipEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipEntry.clone"
                },
                {
                    "function name": "ZipEntry",
                    "function params": [
                        "entry"
                    ],
                    "file name": "ZipEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipEntry.ZipEntry"
                },
                {
                    "function name": "addExtraField",
                    "function params": [
                        "extraField"
                    ],
                    "file name": "ZipEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipEntry.addExtraField"
                },
                {
                    "function name": "getCentralDirectoryExtra",
                    "function params": [],
                    "file name": "ZipEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipEntry.getCentralDirectoryExtra"
                },
                {
                    "function name": "performSetCompressedSize",
                    "function params": [
                        "entry",
                        "size"
                    ],
                    "file name": "ZipEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipEntry.performSetCompressedSize"
                },
                {
                    "function name": "setExtra",
                    "function params": [],
                    "file name": "ZipEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipEntry.setExtra"
                },
                {
                    "function name": "haveSetCompressedSize",
                    "function params": [],
                    "file name": "ZipEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipEntry.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipEntry.haveSetCompressedSize"
                },
                {
                    "function name": "ZipLong",
                    "function params": [
                        "buffer",
                        "offset"
                    ],
                    "file name": "ZipLong.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipLong.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipLong.ZipLong"
                },
                {
                    "function name": "equals",
                    "function params": [
                        "o"
                    ],
                    "file name": "ZipLong.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipLong.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipLong.equals"
                },
                {
                    "function name": "ZipLong",
                    "function params": [
                        "value"
                    ],
                    "file name": "ZipLong.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipLong.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipLong.ZipLong"
                },
                {
                    "function name": "getBytes",
                    "function params": [],
                    "file name": "ZipLong.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipLong.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipLong.getBytes"
                },
                {
                    "function name": "getValue",
                    "function params": [],
                    "file name": "ZipLong.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipLong.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipLong.getValue"
                },
                {
                    "function name": "ZipLong",
                    "function params": [
                        "buffer"
                    ],
                    "file name": "ZipLong.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipLong.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipLong.ZipLong"
                },
                {
                    "function name": "hashCode",
                    "function params": [],
                    "file name": "ZipLong.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipLong.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipLong.hashCode"
                },
                {
                    "function name": "finish",
                    "function params": [],
                    "file name": "ZipOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipOutputStream.finish"
                },
                {
                    "function name": "ZipOutputStream",
                    "function params": [
                        "output"
                    ],
                    "file name": "ZipOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipOutputStream.ZipOutputStream"
                },
                {
                    "function name": "setLevel",
                    "function params": [
                        "level"
                    ],
                    "file name": "ZipOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipOutputStream.setLevel"
                },
                {
                    "function name": "writeCentralFileHeader",
                    "function params": [
                        "entry"
                    ],
                    "file name": "ZipOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipOutputStream.writeCentralFileHeader"
                },
                {
                    "function name": "write",
                    "function params": [
                        "buffer",
                        "offset",
                        "length"
                    ],
                    "file name": "ZipOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipOutputStream.write"
                },
                {
                    "function name": "writeDataDescriptor",
                    "function params": [
                        "ze"
                    ],
                    "file name": "ZipOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipOutputStream.writeDataDescriptor"
                },
                {
                    "function name": "setComment",
                    "function params": [
                        "comment"
                    ],
                    "file name": "ZipOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipOutputStream.setComment"
                },
                {
                    "function name": "writeLocalFileHeader",
                    "function params": [
                        "entry"
                    ],
                    "file name": "ZipOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipOutputStream.writeLocalFileHeader"
                },
                {
                    "function name": "getBytes",
                    "function params": [
                        "name"
                    ],
                    "file name": "ZipOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipOutputStream.getBytes"
                },
                {
                    "function name": "closeEntry",
                    "function params": [],
                    "file name": "ZipOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipOutputStream.closeEntry"
                },
                {
                    "function name": "setEncoding",
                    "function params": [
                        "encoding"
                    ],
                    "file name": "ZipOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipOutputStream.setEncoding"
                },
                {
                    "function name": "getEncoding",
                    "function params": [],
                    "file name": "ZipOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipOutputStream.getEncoding"
                },
                {
                    "function name": "putNextEntry",
                    "function params": [
                        "entry"
                    ],
                    "file name": "ZipOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipOutputStream.putNextEntry"
                },
                {
                    "function name": "toDosTime",
                    "function params": [
                        "time"
                    ],
                    "file name": "ZipOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipOutputStream.toDosTime"
                },
                {
                    "function name": "writeCentralDirectoryEnd",
                    "function params": [],
                    "file name": "ZipOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipOutputStream.writeCentralDirectoryEnd"
                },
                {
                    "function name": "setMethod",
                    "function params": [
                        "method"
                    ],
                    "file name": "ZipOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipOutputStream.setMethod"
                },
                {
                    "function name": "equals",
                    "function params": [
                        "o"
                    ],
                    "file name": "ZipShort.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipShort.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipShort.equals"
                },
                {
                    "function name": "getValue",
                    "function params": [],
                    "file name": "ZipShort.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipShort.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipShort.getValue"
                },
                {
                    "function name": "ZipShort",
                    "function params": [
                        "value"
                    ],
                    "file name": "ZipShort.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipShort.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipShort.ZipShort"
                },
                {
                    "function name": "ZipShort",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "ZipShort.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipShort.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipShort.ZipShort"
                },
                {
                    "function name": "ZipShort",
                    "function params": [
                        "bytes",
                        "offset"
                    ],
                    "file name": "ZipShort.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipShort.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipShort.ZipShort"
                },
                {
                    "function name": "getBytes",
                    "function params": [],
                    "file name": "ZipShort.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipShort.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipShort.getBytes"
                },
                {
                    "function name": "hashCode",
                    "function params": [],
                    "file name": "ZipShort.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/compress/zip/ZipShort.java",
                    "full name": "src.java.org.apache.commons.io.compress.zip.ZipShort.hashCode"
                }
            ],
            "date": "2002-07-08"
        },
        {
            "commit_id": 16,
            "hash": "1af24b6d5132e00526b380879934141b27f710b0",
            "commit_summary": "Testcases for new classes from Avalon excalibur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140305 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "doJoin",
                    "function params": [],
                    "file name": "DemuxTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.doJoin"
                },
                {
                    "function name": "ReaderThread",
                    "function params": [],
                    "file name": "DemuxTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.ReaderThread"
                },
                {
                    "function name": "DemuxTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "DemuxTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.DemuxTestCase"
                },
                {
                    "function name": "ReaderThread",
                    "function params": [],
                    "file name": "DemuxTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.ReaderThread"
                },
                {
                    "function name": "WriterThread",
                    "function params": [],
                    "file name": "DemuxTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.WriterThread"
                },
                {
                    "function name": "testInputStream",
                    "function params": [],
                    "file name": "DemuxTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.testInputStream"
                },
                {
                    "function name": "ReaderThread",
                    "function params": [
                        "name",
                        "input",
                        "demux"
                    ],
                    "file name": "DemuxTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.ReaderThread"
                },
                {
                    "function name": "getOutput",
                    "function params": [
                        "threadName"
                    ],
                    "file name": "DemuxTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.getOutput"
                },
                {
                    "function name": "startReader",
                    "function params": [
                        "name",
                        "data",
                        "demux"
                    ],
                    "file name": "DemuxTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.startReader"
                },
                {
                    "function name": "startWriter",
                    "function params": [
                        "name",
                        "data",
                        "demux"
                    ],
                    "file name": "DemuxTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.startWriter"
                },
                {
                    "function name": "getInput",
                    "function params": [
                        "threadName"
                    ],
                    "file name": "DemuxTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.getInput"
                },
                {
                    "function name": "testOutputStream",
                    "function params": [],
                    "file name": "DemuxTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.testOutputStream"
                },
                {
                    "function name": "WriterThread",
                    "function params": [
                        "name",
                        "data",
                        "output",
                        "demux"
                    ],
                    "file name": "DemuxTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.WriterThread"
                },
                {
                    "function name": "doStart",
                    "function params": [],
                    "file name": "DemuxTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.doStart"
                },
                {
                    "function name": "testForceDeleteDir",
                    "function params": [],
                    "file name": "FileUtilTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilTestCase.testForceDeleteDir"
                },
                {
                    "function name": "testNormalize",
                    "function params": [],
                    "file name": "FileUtilTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilTestCase.testNormalize"
                },
                {
                    "function name": "testForceDeleteAFile2",
                    "function params": [],
                    "file name": "FileUtilTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilTestCase.testForceDeleteAFile2"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "FileUtilTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilTestCase.suite"
                },
                {
                    "function name": "testForceDeleteAFile1",
                    "function params": [],
                    "file name": "FileUtilTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilTestCase.testForceDeleteAFile1"
                },
                {
                    "function name": "FileUtilTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "FileUtilTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilTestCase.FileUtilTestCase"
                },
                {
                    "function name": "testCopyFile1",
                    "function params": [],
                    "file name": "FileUtilTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilTestCase.testCopyFile1"
                },
                {
                    "function name": "testCopyFile1ToDir",
                    "function params": [],
                    "file name": "FileUtilTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilTestCase.testCopyFile1ToDir"
                },
                {
                    "function name": "testCopyFile2ToDir",
                    "function params": [],
                    "file name": "FileUtilTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilTestCase.testCopyFile2ToDir"
                },
                {
                    "function name": "createFile",
                    "function params": [
                        "file",
                        "size"
                    ],
                    "file name": "FileUtilTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilTestCase.createFile"
                },
                {
                    "function name": "testCopyFile2",
                    "function params": [],
                    "file name": "FileUtilTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilTestCase.testCopyFile2"
                },
                {
                    "function name": "testResolveFileDot",
                    "function params": [],
                    "file name": "FileUtilTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilTestCase.testResolveFileDot"
                },
                {
                    "function name": "testResolveFileDotDot",
                    "function params": [],
                    "file name": "FileUtilTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilTestCase.testResolveFileDotDot"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "IOTestSuite.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.IOTestSuite.suite"
                },
                {
                    "function name": "testReaderToOutputStream",
                    "function params": [],
                    "file name": "IOUtilTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilTestCase.testReaderToOutputStream"
                },
                {
                    "function name": "testStringToWriter",
                    "function params": [],
                    "file name": "IOUtilTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilTestCase.testStringToWriter"
                },
                {
                    "function name": "testByteArrayToWriter",
                    "function params": [],
                    "file name": "IOUtilTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilTestCase.testByteArrayToWriter"
                },
                {
                    "function name": "checkFile",
                    "function params": [
                        "file"
                    ],
                    "file name": "IOUtilTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilTestCase.checkFile"
                },
                {
                    "function name": "testReaderToString",
                    "function params": [],
                    "file name": "IOUtilTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilTestCase.testReaderToString"
                },
                {
                    "function name": "testInputStreamToByteArray",
                    "function params": [],
                    "file name": "IOUtilTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilTestCase.testInputStreamToByteArray"
                },
                {
                    "function name": "testReaderToWriter",
                    "function params": [],
                    "file name": "IOUtilTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilTestCase.testReaderToWriter"
                },
                {
                    "function name": "testStringToOutputStream",
                    "function params": [],
                    "file name": "IOUtilTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilTestCase.testStringToOutputStream"
                },
                {
                    "function name": "testInputStreamToString",
                    "function params": [],
                    "file name": "IOUtilTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilTestCase.testInputStreamToString"
                },
                {
                    "function name": "newFile",
                    "function params": [
                        "filename"
                    ],
                    "file name": "IOUtilTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilTestCase.newFile"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "IOUtilTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilTestCase.tearDown"
                },
                {
                    "function name": "IOUtilTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "IOUtilTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilTestCase.IOUtilTestCase"
                },
                {
                    "function name": "assertEqualContent",
                    "function params": [
                        "b0",
                        "file"
                    ],
                    "file name": "IOUtilTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilTestCase.assertEqualContent"
                },
                {
                    "function name": "testStringToByteArray",
                    "function params": [],
                    "file name": "IOUtilTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilTestCase.testStringToByteArray"
                },
                {
                    "function name": "deleteFile",
                    "function params": [
                        "file"
                    ],
                    "file name": "IOUtilTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilTestCase.deleteFile"
                },
                {
                    "function name": "checkWrite",
                    "function params": [
                        "output"
                    ],
                    "file name": "IOUtilTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilTestCase.checkWrite"
                },
                {
                    "function name": "createFile",
                    "function params": [
                        "file",
                        "size"
                    ],
                    "file name": "IOUtilTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilTestCase.createFile"
                },
                {
                    "function name": "testByteArrayToString",
                    "function params": [],
                    "file name": "IOUtilTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilTestCase.testByteArrayToString"
                },
                {
                    "function name": "testInputStreamToOutputStream",
                    "function params": [],
                    "file name": "IOUtilTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilTestCase.testInputStreamToOutputStream"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "IOUtilTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilTestCase.setUp"
                },
                {
                    "function name": "assertEqualContent",
                    "function params": [
                        "f0",
                        "f1"
                    ],
                    "file name": "IOUtilTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilTestCase.assertEqualContent"
                },
                {
                    "function name": "testInputStreamToWriter",
                    "function params": [],
                    "file name": "IOUtilTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilTestCase.testInputStreamToWriter"
                },
                {
                    "function name": "testByteArrayToOutputStream",
                    "function params": [],
                    "file name": "IOUtilTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilTestCase.testByteArrayToOutputStream"
                },
                {
                    "function name": "checkWrite",
                    "function params": [
                        "output"
                    ],
                    "file name": "IOUtilTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilTestCase.checkWrite"
                },
                {
                    "function name": "assertEqualContent",
                    "function params": [
                        "b0",
                        "b1"
                    ],
                    "file name": "IOUtilTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilTestCase.assertEqualContent"
                },
                {
                    "function name": "forceDelete",
                    "function params": [
                        "outputFile"
                    ],
                    "file name": "BzipTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/bzip2/BzipTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.bzip2.BzipTestCase.forceDelete"
                },
                {
                    "function name": "testBzipInputStream",
                    "function params": [],
                    "file name": "BzipTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/bzip2/BzipTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.bzip2.BzipTestCase.testBzipInputStream"
                },
                {
                    "function name": "getPackedOutput",
                    "function params": [
                        "output"
                    ],
                    "file name": "BzipTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/bzip2/BzipTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.bzip2.BzipTestCase.getPackedOutput"
                },
                {
                    "function name": "compareContents",
                    "function params": [
                        "initial",
                        "generated"
                    ],
                    "file name": "BzipTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/bzip2/BzipTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.bzip2.BzipTestCase.compareContents"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "BzipTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/bzip2/BzipTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.bzip2.BzipTestCase.copy"
                },
                {
                    "function name": "shutdownStream",
                    "function params": [
                        "output"
                    ],
                    "file name": "BzipTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/bzip2/BzipTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.bzip2.BzipTestCase.shutdownStream"
                },
                {
                    "function name": "getPath",
                    "function params": [
                        "filepath"
                    ],
                    "file name": "BzipTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/bzip2/BzipTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.bzip2.BzipTestCase.getPath"
                },
                {
                    "function name": "getOutputFile",
                    "function params": [
                        "postfix"
                    ],
                    "file name": "BzipTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/bzip2/BzipTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.bzip2.BzipTestCase.getOutputFile"
                },
                {
                    "function name": "BzipTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "BzipTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/bzip2/BzipTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.bzip2.BzipTestCase.BzipTestCase"
                },
                {
                    "function name": "shutdownStream",
                    "function params": [
                        "input"
                    ],
                    "file name": "BzipTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/bzip2/BzipTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.bzip2.BzipTestCase.shutdownStream"
                },
                {
                    "function name": "contentEquals",
                    "function params": [
                        "input1",
                        "input2"
                    ],
                    "file name": "BzipTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/bzip2/BzipTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.bzip2.BzipTestCase.contentEquals"
                },
                {
                    "function name": "getPackedInput",
                    "function params": [
                        "input"
                    ],
                    "file name": "BzipTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/bzip2/BzipTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.bzip2.BzipTestCase.getPackedInput"
                },
                {
                    "function name": "testBzipOutputStream",
                    "function params": [],
                    "file name": "BzipTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/bzip2/BzipTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.bzip2.BzipTestCase.testBzipOutputStream"
                },
                {
                    "function name": "getInputStream",
                    "function params": [
                        "resource"
                    ],
                    "file name": "BzipTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/bzip2/BzipTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.bzip2.BzipTestCase.getInputStream"
                },
                {
                    "function name": "compareTar",
                    "function params": [
                        "entryName",
                        "file1"
                    ],
                    "file name": "TarTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/tar/TarTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.tar.TarTestCase.compareTar"
                },
                {
                    "function name": "TarTestCase",
                    "function params": [],
                    "file name": "TarTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/tar/TarTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.tar.TarTestCase.TarTestCase"
                },
                {
                    "function name": "testReadGnuTar",
                    "function params": [],
                    "file name": "TarTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/tar/TarTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.tar.TarTestCase.testReadGnuTar"
                },
                {
                    "function name": "calcBaseDir",
                    "function params": [],
                    "file name": "TarTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/tar/TarTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.tar.TarTestCase.calcBaseDir"
                },
                {
                    "function name": "contentEquals",
                    "function params": [
                        "input1",
                        "input2"
                    ],
                    "file name": "TarTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/tar/TarTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.tar.TarTestCase.contentEquals"
                },
                {
                    "function name": "contentEquals",
                    "function params": [
                        "file1",
                        "file2"
                    ],
                    "file name": "TarTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/tar/TarTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.tar.TarTestCase.contentEquals"
                },
                {
                    "function name": "setupEntry",
                    "function params": [
                        "entry"
                    ],
                    "file name": "TarTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/tar/TarTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.tar.TarTestCase.setupEntry"
                },
                {
                    "function name": "testReadPosixTar",
                    "function params": [],
                    "file name": "TarTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/tar/TarTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.tar.TarTestCase.testReadPosixTar"
                },
                {
                    "function name": "testWriteGnuTar",
                    "function params": [],
                    "file name": "TarTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/tar/TarTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.tar.TarTestCase.testWriteGnuTar"
                },
                {
                    "function name": "shutdownStream",
                    "function params": [
                        "input"
                    ],
                    "file name": "TarTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/tar/TarTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.tar.TarTestCase.shutdownStream"
                },
                {
                    "function name": "TarTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "TarTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/tar/TarTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.tar.TarTestCase.TarTestCase"
                },
                {
                    "function name": "shutdownStream",
                    "function params": [
                        "output"
                    ],
                    "file name": "TarTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/tar/TarTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.tar.TarTestCase.shutdownStream"
                },
                {
                    "function name": "testWritePosixTar",
                    "function params": [],
                    "file name": "TarTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/tar/TarTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.tar.TarTestCase.testWritePosixTar"
                },
                {
                    "function name": "checkEntry",
                    "function params": [
                        "entry"
                    ],
                    "file name": "TarTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/tar/TarTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.tar.TarTestCase.checkEntry"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "TarTestSuite.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/tar/TarTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.compress.tar.TarTestSuite.suite"
                },
                {
                    "function name": "testContent2",
                    "function params": [],
                    "file name": "AsiExtraFieldTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/zip/AsiExtraFieldTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.zip.AsiExtraFieldTestCase.testContent2"
                },
                {
                    "function name": "testReparse2",
                    "function params": [],
                    "file name": "AsiExtraFieldTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/zip/AsiExtraFieldTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.zip.AsiExtraFieldTestCase.testReparse2"
                },
                {
                    "function name": "testContent1",
                    "function params": [],
                    "file name": "AsiExtraFieldTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/zip/AsiExtraFieldTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.zip.AsiExtraFieldTestCase.testContent1"
                },
                {
                    "function name": "AsiExtraFieldTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "AsiExtraFieldTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/zip/AsiExtraFieldTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.zip.AsiExtraFieldTestCase.AsiExtraFieldTestCase"
                },
                {
                    "function name": "testReparse1",
                    "function params": [],
                    "file name": "AsiExtraFieldTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/zip/AsiExtraFieldTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.zip.AsiExtraFieldTestCase.testReparse1"
                },
                {
                    "function name": "testReparse4",
                    "function params": [],
                    "file name": "AsiExtraFieldTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/zip/AsiExtraFieldTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.zip.AsiExtraFieldTestCase.testReparse4"
                },
                {
                    "function name": "testReparse3",
                    "function params": [],
                    "file name": "AsiExtraFieldTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/zip/AsiExtraFieldTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.zip.AsiExtraFieldTestCase.testReparse3"
                },
                {
                    "function name": "testModes",
                    "function params": [],
                    "file name": "AsiExtraFieldTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/zip/AsiExtraFieldTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.zip.AsiExtraFieldTestCase.testModes"
                },
                {
                    "function name": "createField",
                    "function params": [],
                    "file name": "AsiExtraFieldTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/zip/AsiExtraFieldTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.zip.AsiExtraFieldTestCase.createField"
                },
                {
                    "function name": "ExtraFieldUtilsTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "ExtraFieldUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/zip/ExtraFieldUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.zip.ExtraFieldUtilsTestCase.ExtraFieldUtilsTestCase"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "ExtraFieldUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/zip/ExtraFieldUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.zip.ExtraFieldUtilsTestCase.setUp"
                },
                {
                    "function name": "testParse",
                    "function params": [],
                    "file name": "ExtraFieldUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/zip/ExtraFieldUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.zip.ExtraFieldUtilsTestCase.testParse"
                },
                {
                    "function name": "testMerge",
                    "function params": [],
                    "file name": "ExtraFieldUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/zip/ExtraFieldUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.zip.ExtraFieldUtilsTestCase.testMerge"
                },
                {
                    "function name": "testExtraFields",
                    "function params": [],
                    "file name": "ZipEntryTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/zip/ZipEntryTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.zip.ZipEntryTestCase.testExtraFields"
                },
                {
                    "function name": "createField",
                    "function params": [],
                    "file name": "ZipEntryTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/zip/ZipEntryTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.zip.ZipEntryTestCase.createField"
                },
                {
                    "function name": "ZipEntryTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "ZipEntryTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/zip/ZipEntryTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.zip.ZipEntryTestCase.ZipEntryTestCase"
                },
                {
                    "function name": "createExtraField",
                    "function params": [],
                    "file name": "ZipEntryTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/zip/ZipEntryTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.zip.ZipEntryTestCase.createExtraField"
                },
                {
                    "function name": "testEquals",
                    "function params": [],
                    "file name": "ZipLongTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/zip/ZipLongTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.zip.ZipLongTestCase.testEquals"
                },
                {
                    "function name": "testFromBytes",
                    "function params": [],
                    "file name": "ZipLongTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/zip/ZipLongTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.zip.ZipLongTestCase.testFromBytes"
                },
                {
                    "function name": "ZipLongTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "ZipLongTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/zip/ZipLongTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.zip.ZipLongTestCase.ZipLongTestCase"
                },
                {
                    "function name": "testSign",
                    "function params": [],
                    "file name": "ZipLongTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/zip/ZipLongTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.zip.ZipLongTestCase.testSign"
                },
                {
                    "function name": "testToBytes",
                    "function params": [],
                    "file name": "ZipLongTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/zip/ZipLongTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.zip.ZipLongTestCase.testToBytes"
                },
                {
                    "function name": "testSign",
                    "function params": [],
                    "file name": "ZipShortTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/zip/ZipShortTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.zip.ZipShortTestCase.testSign"
                },
                {
                    "function name": "testFromBytes",
                    "function params": [],
                    "file name": "ZipShortTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/zip/ZipShortTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.zip.ZipShortTestCase.testFromBytes"
                },
                {
                    "function name": "testEquals",
                    "function params": [],
                    "file name": "ZipShortTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/zip/ZipShortTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.zip.ZipShortTestCase.testEquals"
                },
                {
                    "function name": "ZipShortTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "ZipShortTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/zip/ZipShortTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.zip.ZipShortTestCase.ZipShortTestCase"
                },
                {
                    "function name": "testToBytes",
                    "function params": [],
                    "file name": "ZipShortTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/compress/zip/ZipShortTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.zip.ZipShortTestCase.testToBytes"
                }
            ],
            "date": "2002-07-08"
        },
        {
            "commit_id": 17,
            "hash": "7e0a9f6790af02c81bbb93f9d7f912c8300a3c69",
            "commit_summary": "Fixed compilation and old import.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140306 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/examples/org/apache/commons/io/bzip2/Bzip2Compress.java",
                "src/examples/org/apache/commons/io/bzip2/Bzip2Uncompress.java"
            ],
            "functions": [
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "Bzip2Uncompress.java",
                    "file old path": "src/examples/org/apache/commons/io/bzip2/Bzip2Uncompress.java",
                    "file new path": "src/examples/org/apache/commons/io/bzip2/Bzip2Uncompress.java",
                    "full name": "src.examples.org.apache.commons.io.bzip2.Bzip2Uncompress.main"
                }
            ],
            "date": "2002-07-09"
        },
        {
            "commit_id": 18,
            "hash": "4507f3cbb6519619331852673ef6c11098c4485f",
            "commit_summary": "Make testcases compile.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140308 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/DemuxTestCase.java",
                "src/test/org/apache/commons/io/FileUtilTestCase.java",
                "src/test/org/apache/commons/io/IOUtilTestCase.java",
                "src/test/org/apache/commons/io/compress/bzip2/BzipTestCase.java",
                "src/test/org/apache/commons/io/compress/tar/TarTestCase.java",
                "src/test/org/apache/commons/io/compress/zip/AsiExtraFieldTestCase.java",
                "src/test/org/apache/commons/io/compress/zip/ExtraFieldUtilsTestCase.java",
                "src/test/org/apache/commons/io/compress/zip/ZipEntryTestCase.java",
                "src/test/org/apache/commons/io/compress/zip/ZipLongTestCase.java",
                "src/test/org/apache/commons/io/compress/zip/ZipShortTestCase.java"
            ],
            "functions": [],
            "date": "2002-07-09"
        },
        {
            "commit_id": 19,
            "hash": "359b9bcac4dbb0617903612251590c89348856bf",
            "commit_summary": "Make testcases compile run, even if some still fail :-/\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140310 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/compress/bzip2/BzipTestCase.java",
                "src/test/org/apache/commons/io/compress/tar/TarTestCase.java"
            ],
            "functions": [
                {
                    "function name": "getInputStream",
                    "function params": [
                        "resource"
                    ],
                    "file name": "BzipTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/compress/bzip2/BzipTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/compress/bzip2/BzipTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.bzip2.BzipTestCase.getInputStream"
                },
                {
                    "function name": "calcBaseDir",
                    "function params": [],
                    "file name": "TarTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/compress/tar/TarTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/compress/tar/TarTestCase.java",
                    "full name": "src.test.org.apache.commons.io.compress.tar.TarTestCase.calcBaseDir"
                }
            ],
            "date": "2002-07-09"
        },
        {
            "commit_id": 20,
            "hash": "cbf6d9b66682a8ee5cebb2281f622b93f43f48bc",
            "commit_summary": "Fixed package.\nAn this is the last fix.\nMove finished :-)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140312 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/compress/tar/TarTestSuite.java"
            ],
            "functions": [],
            "date": "2002-07-13"
        },
        {
            "commit_id": 21,
            "hash": "fcb1f1dc86e216faca4bdb9626200d99a6d9915a",
            "commit_summary": "Added long license.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140313 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/compress/bzip2/BZip2Constants.java",
                "src/java/org/apache/commons/io/compress/bzip2/CBZip2InputStream.java",
                "src/java/org/apache/commons/io/compress/bzip2/CBZip2OutputStream.java",
                "src/java/org/apache/commons/io/compress/bzip2/CRC.java",
                "src/java/org/apache/commons/io/compress/tar/TarBuffer.java",
                "src/java/org/apache/commons/io/compress/tar/TarConstants.java",
                "src/java/org/apache/commons/io/compress/tar/TarEntry.java",
                "src/java/org/apache/commons/io/compress/tar/TarInputStream.java",
                "src/java/org/apache/commons/io/compress/tar/TarOutputStream.java",
                "src/java/org/apache/commons/io/compress/tar/TarUtils.java",
                "src/java/org/apache/commons/io/compress/zip/AsiExtraField.java",
                "src/java/org/apache/commons/io/compress/zip/ExtraFieldUtils.java",
                "src/java/org/apache/commons/io/compress/zip/UnixStat.java",
                "src/java/org/apache/commons/io/compress/zip/UnrecognizedExtraField.java",
                "src/java/org/apache/commons/io/compress/zip/ZipEntry.java",
                "src/java/org/apache/commons/io/compress/zip/ZipExtraField.java",
                "src/java/org/apache/commons/io/compress/zip/ZipLong.java",
                "src/java/org/apache/commons/io/compress/zip/ZipOutputStream.java",
                "src/java/org/apache/commons/io/compress/zip/ZipShort.java"
            ],
            "functions": [],
            "date": "2002-07-13"
        },
        {
            "commit_id": 22,
            "hash": "8eeb52fc81c4e65c00839cfeef9f1cde8b1cc613",
            "commit_summary": "FileUtil moved into FileUtils. Oddly enough no methods clash in name.\nHowever there is a lot of clash of functionality, so methods need to be\nconsidered and removed.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140314 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [
                {
                    "function name": "cleanDirectoryOnExit",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.cleanDirectoryOnExit"
                },
                {
                    "function name": "sizeOfDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.sizeOfDirectory"
                },
                {
                    "function name": "getPath",
                    "function params": [
                        "filepath",
                        "fileSeparatorChar"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.getPath"
                },
                {
                    "function name": "cleanDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.cleanDirectory"
                },
                {
                    "function name": "forceDeleteOnExit",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.forceDeleteOnExit"
                },
                {
                    "function name": "copyFileToDirectory",
                    "function params": [
                        "source",
                        "destinationDirectory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyFileToDirectory"
                },
                {
                    "function name": "deleteDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.deleteDirectory"
                },
                {
                    "function name": "copyFileToDirectory",
                    "function params": [
                        "source",
                        "destinationDirectory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyFileToDirectory"
                },
                {
                    "function name": "contentEquals",
                    "function params": [
                        "file1",
                        "file2"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.contentEquals"
                },
                {
                    "function name": "toURLs",
                    "function params": [
                        "files"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.toURLs"
                },
                {
                    "function name": "sizeOfDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.sizeOfDirectory"
                },
                {
                    "function name": "deleteDirectoryOnExit",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.deleteDirectoryOnExit"
                },
                {
                    "function name": "copyFile",
                    "function params": [
                        "source",
                        "destination"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyFile"
                },
                {
                    "function name": "normalize",
                    "function params": [
                        "path"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.normalize"
                },
                {
                    "function name": "removeExtension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.removeExtension"
                },
                {
                    "function name": "deleteDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.deleteDirectory"
                },
                {
                    "function name": "forceDelete",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.forceDelete"
                },
                {
                    "function name": "removePath",
                    "function params": [
                        "filepath",
                        "fileSeparatorChar"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.removePath"
                },
                {
                    "function name": "FileUtils",
                    "function params": [],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.FileUtils"
                },
                {
                    "function name": "removePath",
                    "function params": [
                        "filepath"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.removePath"
                },
                {
                    "function name": "getExtension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.getExtension"
                },
                {
                    "function name": "forceDelete",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.forceDelete"
                },
                {
                    "function name": "forceMkdir",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.forceMkdir"
                },
                {
                    "function name": "removeExtention",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.removeExtention"
                },
                {
                    "function name": "toFile",
                    "function params": [
                        "url"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.toFile"
                },
                {
                    "function name": "getPath",
                    "function params": [
                        "filepath"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.getPath"
                },
                {
                    "function name": "cleanDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.cleanDirectory"
                },
                {
                    "function name": "catPath",
                    "function params": [
                        "lookupPath",
                        "path"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.catPath"
                },
                {
                    "function name": "resolveFile",
                    "function params": [
                        "baseFile",
                        "filename"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.resolveFile"
                },
                {
                    "function name": "copyURLToFile",
                    "function params": [
                        "source",
                        "destination"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyURLToFile"
                }
            ],
            "date": "2002-07-28"
        },
        {
            "commit_id": 23,
            "hash": "8eca0b1684f87025702aa6900ddd1ac0b61f6657",
            "commit_summary": "Jakarta FileFilters.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140315 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "accept",
                    "function params": [
                        "f"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "dir",
                        "name"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file",
                        "name"
                    ],
                    "file name": "AndFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AndFileFilter.accept"
                },
                {
                    "function name": "AndFileFilter",
                    "function params": [
                        "filter1",
                        "filter2"
                    ],
                    "file name": "AndFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter"
                },
                {
                    "function name": "DelegateFileFilter",
                    "function params": [
                        "filter"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.DelegateFileFilter"
                },
                {
                    "function name": "DelegateFileFilter",
                    "function params": [
                        "filter"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.DelegateFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "dir",
                        "name"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "f"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "DirectoryFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DirectoryFileFilter.accept"
                },
                {
                    "function name": "ExtensionFileFilter",
                    "function params": [
                        "extension"
                    ],
                    "file name": "ExtensionFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/ExtensionFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.ExtensionFileFilter.ExtensionFileFilter"
                },
                {
                    "function name": "ExtensionFileFilter",
                    "function params": [
                        "extensions"
                    ],
                    "file name": "ExtensionFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/ExtensionFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.ExtensionFileFilter.ExtensionFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file",
                        "name"
                    ],
                    "file name": "ExtensionFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/ExtensionFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.ExtensionFileFilter.accept"
                },
                {
                    "function name": "InvertedFileFilter",
                    "function params": [
                        "originalFilter"
                    ],
                    "file name": "InvertedFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/InvertedFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.InvertedFileFilter.InvertedFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file",
                        "name"
                    ],
                    "file name": "InvertedFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/InvertedFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.InvertedFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "dir",
                        "name"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "f"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.accept"
                },
                {
                    "function name": "OrFileFilter",
                    "function params": [
                        "filter1",
                        "filter2"
                    ],
                    "file name": "OrFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file",
                        "name"
                    ],
                    "file name": "OrFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.OrFileFilter.accept"
                },
                {
                    "function name": "PrefixFileFilter",
                    "function params": [
                        "prefix"
                    ],
                    "file name": "PrefixFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter"
                },
                {
                    "function name": "PrefixFileFilter",
                    "function params": [
                        "prefixs"
                    ],
                    "file name": "PrefixFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file",
                        "name"
                    ],
                    "file name": "PrefixFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.PrefixFileFilter.accept"
                }
            ],
            "date": "2002-07-28"
        },
        {
            "commit_id": 24,
            "hash": "60f97fa32115c99627fa69c2aa2fdf76134d4563",
            "commit_summary": "Added licence.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140316 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                "src/java/org/apache/commons/io/filefilter/NullFileFilter.java"
            ],
            "functions": [
                {
                    "function name": "forceMkdir",
                    "function params": [
                        "file"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.forceMkdir"
                },
                {
                    "function name": "fileDelete",
                    "function params": [
                        "fileName"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.fileDelete"
                },
                {
                    "function name": "getPath",
                    "function params": [
                        "filepath"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.getPath"
                },
                {
                    "function name": "copyFileToDirectory",
                    "function params": [
                        "source",
                        "destinationDirectory"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.copyFileToDirectory"
                },
                {
                    "function name": "sizeOfDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.sizeOfDirectory"
                },
                {
                    "function name": "getPath",
                    "function params": [
                        "filepath",
                        "fileSeparatorChar"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.getPath"
                },
                {
                    "function name": "cleanDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.cleanDirectory"
                },
                {
                    "function name": "fileCopy",
                    "function params": [
                        "inFileName",
                        "outFileName"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.fileCopy"
                },
                {
                    "function name": "basename",
                    "function params": [
                        "filename"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.basename"
                },
                {
                    "function name": "isValidFile",
                    "function params": [
                        "file",
                        "extensions"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.isValidFile"
                },
                {
                    "function name": "toURLs",
                    "function params": [
                        "files"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.toURLs"
                },
                {
                    "function name": "copyFileToDirectory",
                    "function params": [
                        "source",
                        "destinationDirectory"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.copyFileToDirectory"
                },
                {
                    "function name": "deleteDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.deleteDirectory"
                },
                {
                    "function name": "deleteDirectoryOnExit",
                    "function params": [
                        "directory"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.deleteDirectoryOnExit"
                },
                {
                    "function name": "basename",
                    "function params": [
                        "filename",
                        "suffix"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.basename"
                },
                {
                    "function name": "sizeOfDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.sizeOfDirectory"
                },
                {
                    "function name": "contentEquals",
                    "function params": [
                        "file1",
                        "file2"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.contentEquals"
                },
                {
                    "function name": "removePath",
                    "function params": [
                        "filepath",
                        "fileSeparatorChar"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.removePath"
                },
                {
                    "function name": "filename",
                    "function params": [
                        "filename"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.filename"
                },
                {
                    "function name": "removeExtension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.removeExtension"
                },
                {
                    "function name": "removePath",
                    "function params": [
                        "filepath"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.removePath"
                },
                {
                    "function name": "extension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.extension"
                },
                {
                    "function name": "FileUtils",
                    "function params": [],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.FileUtils"
                },
                {
                    "function name": "blendFilesToVector",
                    "function params": [
                        "v",
                        "files"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.blendFilesToVector"
                },
                {
                    "function name": "forceDelete",
                    "function params": [
                        "file"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.forceDelete"
                },
                {
                    "function name": "removeExtention",
                    "function params": [
                        "filename"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.removeExtention"
                },
                {
                    "function name": "toFile",
                    "function params": [
                        "url"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.toFile"
                },
                {
                    "function name": "byteCountToDisplaySize",
                    "function params": [
                        "size"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.byteCountToDisplaySize"
                },
                {
                    "function name": "cleanDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.cleanDirectory"
                },
                {
                    "function name": "catPath",
                    "function params": [
                        "lookupPath",
                        "path"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.catPath"
                },
                {
                    "function name": "dirname",
                    "function params": [
                        "filename"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.dirname"
                },
                {
                    "function name": "resolveFile",
                    "function params": [
                        "baseFile",
                        "filename"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.resolveFile"
                },
                {
                    "function name": "fileExists",
                    "function params": [
                        "fileName"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.fileExists"
                },
                {
                    "function name": "fileRead",
                    "function params": [
                        "fileName"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.fileRead"
                },
                {
                    "function name": "copyURLToFile",
                    "function params": [
                        "source",
                        "destination"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.copyURLToFile"
                },
                {
                    "function name": "forceDeleteOnExit",
                    "function params": [
                        "file"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.forceDeleteOnExit"
                },
                {
                    "function name": "cleanDirectoryOnExit",
                    "function params": [
                        "directory"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.cleanDirectoryOnExit"
                },
                {
                    "function name": "fileWrite",
                    "function params": [
                        "fileName",
                        "data"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.fileWrite"
                },
                {
                    "function name": "waitFor",
                    "function params": [
                        "fileName",
                        "seconds"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.waitFor"
                },
                {
                    "function name": "normalize",
                    "function params": [
                        "path"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.normalize"
                },
                {
                    "function name": "deleteDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.deleteDirectory"
                },
                {
                    "function name": "copyFile",
                    "function params": [
                        "source",
                        "destination"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.copyFile"
                },
                {
                    "function name": "getFile",
                    "function params": [
                        "fileName"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.getFile"
                },
                {
                    "function name": "forceDelete",
                    "function params": [
                        "file"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.forceDelete"
                },
                {
                    "function name": "mkdir",
                    "function params": [
                        "dir"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.mkdir"
                },
                {
                    "function name": "getExtension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.getExtension"
                },
                {
                    "function name": "getFilesFromExtension",
                    "function params": [
                        "directory",
                        "extensions"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.getFilesFromExtension"
                },
                {
                    "function name": "fileDelete",
                    "function params": [
                        "fileName"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.fileDelete"
                },
                {
                    "function name": "getPath",
                    "function params": [
                        "filepath"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.getPath"
                },
                {
                    "function name": "copyFileToDirectory",
                    "function params": [
                        "source",
                        "destinationDirectory"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.copyFileToDirectory"
                },
                {
                    "function name": "fileCopy",
                    "function params": [
                        "inFileName",
                        "outFileName"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.fileCopy"
                },
                {
                    "function name": "getPath",
                    "function params": [
                        "filepath",
                        "fileSeparatorChar"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.getPath"
                },
                {
                    "function name": "sizeOfDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.sizeOfDirectory"
                },
                {
                    "function name": "cleanDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.cleanDirectory"
                },
                {
                    "function name": "basename",
                    "function params": [
                        "filename"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.basename"
                },
                {
                    "function name": "isValidFile",
                    "function params": [
                        "file",
                        "extensions"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.isValidFile"
                },
                {
                    "function name": "toURLs",
                    "function params": [
                        "files"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.toURLs"
                },
                {
                    "function name": "copyFileToDirectory",
                    "function params": [
                        "source",
                        "destinationDirectory"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.copyFileToDirectory"
                },
                {
                    "function name": "deleteDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.deleteDirectory"
                },
                {
                    "function name": "deleteDirectoryOnExit",
                    "function params": [
                        "directory"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.deleteDirectoryOnExit"
                },
                {
                    "function name": "basename",
                    "function params": [
                        "filename",
                        "suffix"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.basename"
                },
                {
                    "function name": "sizeOfDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.sizeOfDirectory"
                },
                {
                    "function name": "contentEquals",
                    "function params": [
                        "file1",
                        "file2"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.contentEquals"
                },
                {
                    "function name": "removeExtension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.removeExtension"
                },
                {
                    "function name": "removePath",
                    "function params": [
                        "filepath",
                        "fileSeparatorChar"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.removePath"
                },
                {
                    "function name": "filename",
                    "function params": [
                        "filename"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.filename"
                },
                {
                    "function name": "FileUtils",
                    "function params": [],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.FileUtils"
                },
                {
                    "function name": "removePath",
                    "function params": [
                        "filepath"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.removePath"
                },
                {
                    "function name": "extension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.extension"
                },
                {
                    "function name": "blendFilesToVector",
                    "function params": [
                        "v",
                        "files"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.blendFilesToVector"
                },
                {
                    "function name": "forceDelete",
                    "function params": [
                        "file"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.forceDelete"
                },
                {
                    "function name": "removeExtention",
                    "function params": [
                        "filename"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.removeExtention"
                },
                {
                    "function name": "toFile",
                    "function params": [
                        "url"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.toFile"
                },
                {
                    "function name": "byteCountToDisplaySize",
                    "function params": [
                        "size"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.byteCountToDisplaySize"
                },
                {
                    "function name": "dirname",
                    "function params": [
                        "filename"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.dirname"
                },
                {
                    "function name": "cleanDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.cleanDirectory"
                },
                {
                    "function name": "catPath",
                    "function params": [
                        "lookupPath",
                        "path"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.catPath"
                },
                {
                    "function name": "resolveFile",
                    "function params": [
                        "baseFile",
                        "filename"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.resolveFile"
                },
                {
                    "function name": "fileExists",
                    "function params": [
                        "fileName"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.fileExists"
                },
                {
                    "function name": "copyURLToFile",
                    "function params": [
                        "source",
                        "destination"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.copyURLToFile"
                },
                {
                    "function name": "cleanDirectoryOnExit",
                    "function params": [
                        "directory"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.cleanDirectoryOnExit"
                },
                {
                    "function name": "fileRead",
                    "function params": [
                        "fileName"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.fileRead"
                },
                {
                    "function name": "forceDeleteOnExit",
                    "function params": [
                        "file"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.forceDeleteOnExit"
                },
                {
                    "function name": "fileWrite",
                    "function params": [
                        "fileName",
                        "data"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.fileWrite"
                },
                {
                    "function name": "waitFor",
                    "function params": [
                        "fileName",
                        "seconds"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.waitFor"
                },
                {
                    "function name": "copyFile",
                    "function params": [
                        "source",
                        "destination"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.copyFile"
                },
                {
                    "function name": "normalize",
                    "function params": [
                        "path"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.normalize"
                },
                {
                    "function name": "deleteDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.deleteDirectory"
                },
                {
                    "function name": "forceDelete",
                    "function params": [
                        "file"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.forceDelete"
                },
                {
                    "function name": "getFile",
                    "function params": [
                        "fileName"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.getFile"
                },
                {
                    "function name": "getFilesFromExtension",
                    "function params": [
                        "directory",
                        "extensions"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.getFilesFromExtension"
                },
                {
                    "function name": "mkdir",
                    "function params": [
                        "dir"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.mkdir"
                },
                {
                    "function name": "forceMkdir",
                    "function params": [
                        "file"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.forceMkdir"
                },
                {
                    "function name": "getExtension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.getExtension"
                },
                {
                    "function name": "forceDelete",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.forceDelete"
                },
                {
                    "function name": "mkdir",
                    "function params": [
                        "dir"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.mkdir"
                },
                {
                    "function name": "getExtension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.getExtension"
                },
                {
                    "function name": "getFilesFromExtension",
                    "function params": [
                        "directory",
                        "extensions"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.getFilesFromExtension"
                },
                {
                    "function name": "forceMkdir",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.forceMkdir"
                },
                {
                    "function name": "fileDelete",
                    "function params": [
                        "fileName"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.fileDelete"
                },
                {
                    "function name": "getPath",
                    "function params": [
                        "filepath"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.getPath"
                },
                {
                    "function name": "copyFileToDirectory",
                    "function params": [
                        "source",
                        "destinationDirectory"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.copyFileToDirectory"
                },
                {
                    "function name": "getPath",
                    "function params": [
                        "filepath",
                        "fileSeparatorChar"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.getPath"
                },
                {
                    "function name": "cleanDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.cleanDirectory"
                },
                {
                    "function name": "fileCopy",
                    "function params": [
                        "inFileName",
                        "outFileName"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.fileCopy"
                },
                {
                    "function name": "sizeOfDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.sizeOfDirectory"
                },
                {
                    "function name": "isValidFile",
                    "function params": [
                        "file",
                        "extensions"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.isValidFile"
                },
                {
                    "function name": "toURLs",
                    "function params": [
                        "files"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.toURLs"
                },
                {
                    "function name": "basename",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.basename"
                },
                {
                    "function name": "deleteDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.deleteDirectory"
                },
                {
                    "function name": "deleteDirectoryOnExit",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.deleteDirectoryOnExit"
                },
                {
                    "function name": "basename",
                    "function params": [
                        "filename",
                        "suffix"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.basename"
                },
                {
                    "function name": "copyFileToDirectory",
                    "function params": [
                        "source",
                        "destinationDirectory"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.copyFileToDirectory"
                },
                {
                    "function name": "contentEquals",
                    "function params": [
                        "file1",
                        "file2"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.contentEquals"
                },
                {
                    "function name": "sizeOfDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.sizeOfDirectory"
                },
                {
                    "function name": "removePath",
                    "function params": [
                        "filepath",
                        "fileSeparatorChar"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.removePath"
                },
                {
                    "function name": "filename",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.filename"
                },
                {
                    "function name": "removeExtension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.removeExtension"
                },
                {
                    "function name": "removePath",
                    "function params": [
                        "filepath"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.removePath"
                },
                {
                    "function name": "extension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.extension"
                },
                {
                    "function name": "FileUtils",
                    "function params": [],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.FileUtils"
                },
                {
                    "function name": "forceDelete",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.forceDelete"
                },
                {
                    "function name": "blendFilesToVector",
                    "function params": [
                        "v",
                        "files"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.blendFilesToVector"
                },
                {
                    "function name": "toFile",
                    "function params": [
                        "url"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.toFile"
                },
                {
                    "function name": "removeExtention",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.removeExtention"
                },
                {
                    "function name": "cleanDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.cleanDirectory"
                },
                {
                    "function name": "byteCountToDisplaySize",
                    "function params": [
                        "size"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.byteCountToDisplaySize"
                },
                {
                    "function name": "catPath",
                    "function params": [
                        "lookupPath",
                        "path"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.catPath"
                },
                {
                    "function name": "dirname",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.dirname"
                },
                {
                    "function name": "resolveFile",
                    "function params": [
                        "baseFile",
                        "filename"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.resolveFile"
                },
                {
                    "function name": "fileExists",
                    "function params": [
                        "fileName"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.fileExists"
                },
                {
                    "function name": "copyURLToFile",
                    "function params": [
                        "source",
                        "destination"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.copyURLToFile"
                },
                {
                    "function name": "forceDeleteOnExit",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.forceDeleteOnExit"
                },
                {
                    "function name": "cleanDirectoryOnExit",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.cleanDirectoryOnExit"
                },
                {
                    "function name": "fileWrite",
                    "function params": [
                        "fileName",
                        "data"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.fileWrite"
                },
                {
                    "function name": "fileRead",
                    "function params": [
                        "fileName"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.fileRead"
                },
                {
                    "function name": "waitFor",
                    "function params": [
                        "fileName",
                        "seconds"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.waitFor"
                },
                {
                    "function name": "normalize",
                    "function params": [
                        "path"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.normalize"
                },
                {
                    "function name": "deleteDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.deleteDirectory"
                },
                {
                    "function name": "copyFile",
                    "function params": [
                        "source",
                        "destination"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.copyFile"
                },
                {
                    "function name": "getFile",
                    "function params": [
                        "fileName"
                    ],
                    "file name": "FileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilter.getFile"
                },
                {
                    "function name": "getFile",
                    "function params": [
                        "fileName"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.getFile"
                },
                {
                    "function name": "forceDelete",
                    "function params": [
                        "file"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.forceDelete"
                },
                {
                    "function name": "mkdir",
                    "function params": [
                        "dir"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.mkdir"
                },
                {
                    "function name": "forceMkdir",
                    "function params": [
                        "file"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.forceMkdir"
                },
                {
                    "function name": "getExtension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.getExtension"
                },
                {
                    "function name": "getFilesFromExtension",
                    "function params": [
                        "directory",
                        "extensions"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.getFilesFromExtension"
                },
                {
                    "function name": "fileDelete",
                    "function params": [
                        "fileName"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.fileDelete"
                },
                {
                    "function name": "getPath",
                    "function params": [
                        "filepath"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.getPath"
                },
                {
                    "function name": "copyFileToDirectory",
                    "function params": [
                        "source",
                        "destinationDirectory"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.copyFileToDirectory"
                },
                {
                    "function name": "fileCopy",
                    "function params": [
                        "inFileName",
                        "outFileName"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.fileCopy"
                },
                {
                    "function name": "getPath",
                    "function params": [
                        "filepath",
                        "fileSeparatorChar"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.getPath"
                },
                {
                    "function name": "sizeOfDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.sizeOfDirectory"
                },
                {
                    "function name": "cleanDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.cleanDirectory"
                },
                {
                    "function name": "basename",
                    "function params": [
                        "filename"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.basename"
                },
                {
                    "function name": "isValidFile",
                    "function params": [
                        "file",
                        "extensions"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.isValidFile"
                },
                {
                    "function name": "toURLs",
                    "function params": [
                        "files"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.toURLs"
                },
                {
                    "function name": "copyFileToDirectory",
                    "function params": [
                        "source",
                        "destinationDirectory"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.copyFileToDirectory"
                },
                {
                    "function name": "deleteDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.deleteDirectory"
                },
                {
                    "function name": "deleteDirectoryOnExit",
                    "function params": [
                        "directory"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.deleteDirectoryOnExit"
                },
                {
                    "function name": "basename",
                    "function params": [
                        "filename",
                        "suffix"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.basename"
                },
                {
                    "function name": "sizeOfDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.sizeOfDirectory"
                },
                {
                    "function name": "contentEquals",
                    "function params": [
                        "file1",
                        "file2"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.contentEquals"
                },
                {
                    "function name": "removeExtension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.removeExtension"
                },
                {
                    "function name": "removePath",
                    "function params": [
                        "filepath",
                        "fileSeparatorChar"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.removePath"
                },
                {
                    "function name": "filename",
                    "function params": [
                        "filename"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.filename"
                },
                {
                    "function name": "FileUtils",
                    "function params": [],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.FileUtils"
                },
                {
                    "function name": "removePath",
                    "function params": [
                        "filepath"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.removePath"
                },
                {
                    "function name": "extension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.extension"
                },
                {
                    "function name": "blendFilesToVector",
                    "function params": [
                        "v",
                        "files"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.blendFilesToVector"
                },
                {
                    "function name": "forceDelete",
                    "function params": [
                        "file"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.forceDelete"
                },
                {
                    "function name": "removeExtention",
                    "function params": [
                        "filename"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.removeExtention"
                },
                {
                    "function name": "toFile",
                    "function params": [
                        "url"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.toFile"
                },
                {
                    "function name": "byteCountToDisplaySize",
                    "function params": [
                        "size"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.byteCountToDisplaySize"
                },
                {
                    "function name": "dirname",
                    "function params": [
                        "filename"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.dirname"
                },
                {
                    "function name": "cleanDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.cleanDirectory"
                },
                {
                    "function name": "catPath",
                    "function params": [
                        "lookupPath",
                        "path"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.catPath"
                },
                {
                    "function name": "resolveFile",
                    "function params": [
                        "baseFile",
                        "filename"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.resolveFile"
                },
                {
                    "function name": "fileExists",
                    "function params": [
                        "fileName"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.fileExists"
                },
                {
                    "function name": "fileRead",
                    "function params": [
                        "fileName"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.fileRead"
                },
                {
                    "function name": "copyURLToFile",
                    "function params": [
                        "source",
                        "destination"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.copyURLToFile"
                },
                {
                    "function name": "forceDeleteOnExit",
                    "function params": [
                        "file"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.forceDeleteOnExit"
                },
                {
                    "function name": "cleanDirectoryOnExit",
                    "function params": [
                        "directory"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.cleanDirectoryOnExit"
                },
                {
                    "function name": "fileWrite",
                    "function params": [
                        "fileName",
                        "data"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.fileWrite"
                },
                {
                    "function name": "waitFor",
                    "function params": [
                        "fileName",
                        "seconds"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.waitFor"
                },
                {
                    "function name": "normalize",
                    "function params": [
                        "path"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.normalize"
                },
                {
                    "function name": "deleteDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.deleteDirectory"
                },
                {
                    "function name": "copyFile",
                    "function params": [
                        "source",
                        "destination"
                    ],
                    "file name": "NullFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NullFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NullFileFilter.copyFile"
                }
            ],
            "date": "2002-07-28"
        },
        {
            "commit_id": 25,
            "hash": "e9abfd49bb59e0c46f76aeca8b64bca1d23e6d5b",
            "commit_summary": "Oops. Now the licence without FileUtils :)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140317 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/FileFilter.java",
                "src/java/org/apache/commons/io/filefilter/NullFileFilter.java"
            ],
            "functions": [],
            "date": "2002-07-28"
        },
        {
            "commit_id": 26,
            "hash": "1746a56d83b16216eb5c6b219714a26523e374a9",
            "commit_summary": "Removed deprecated mispelt method.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140318 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [],
            "date": "2002-07-28"
        },
        {
            "commit_id": 27,
            "hash": "db7b3426781854f492c1ba2427abe660a4c2b58a",
            "commit_summary": "Corrected compilation errors reported by today's GUMP run which were\ncaused by a few references to Avalon Excalibur's IO FileUtil class\n(introduced during recent addition of its functionality).\n\nNothing but goodness can come from the merger of these two classes;\nhopefully Avalon will eventually adopt Commons IO's FileUtils,\nwrapping their old interface around this class (and possibly\ndeprecating it).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140319 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [
                {
                    "function name": "cleanDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.cleanDirectory"
                },
                {
                    "function name": "cleanDirectoryOnExit",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.cleanDirectoryOnExit"
                },
                {
                    "function name": "fileCopy",
                    "function params": [
                        "inFileName",
                        "outFileName"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.fileCopy"
                },
                {
                    "function name": "isValidFile",
                    "function params": [
                        "file",
                        "extensions"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.isValidFile"
                }
            ],
            "date": "2002-07-28"
        },
        {
            "commit_id": 28,
            "hash": "161f99e598b0673dd7b1a386198959444b4ff519",
            "commit_summary": "These are now in the sub-directory.\nThe AbstractFileFilter system is the one I put in in there, Ola Berg [I think]\nhad another variant which may want to replace that. I don't think it makes much\nif any difference to the filters themselves, just to someone extending\nAbstractFileFilter and not implementing a method.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140320 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [],
            "date": "2002-10-17"
        },
        {
            "commit_id": 29,
            "hash": "885a192916263ecadd9efcbdfef51a0a1c7a2f03",
            "commit_summary": "Count an InputStream too. Typo fixed in OutputStream.\n\nNeed to decide how much to increase a count by when an int is read or written.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140321 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/CountingOutputStream.java"
            ],
            "functions": [
                {
                    "function name": "CountingInputStream",
                    "function params": [
                        "in"
                    ],
                    "file name": "CountingInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/CountingInputStream.java",
                    "full name": "src.java.org.apache.commons.io.CountingInputStream.CountingInputStream"
                },
                {
                    "function name": "read",
                    "function params": [
                        "b",
                        "off",
                        "len"
                    ],
                    "file name": "CountingInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/CountingInputStream.java",
                    "full name": "src.java.org.apache.commons.io.CountingInputStream.read"
                },
                {
                    "function name": "getCount",
                    "function params": [],
                    "file name": "CountingInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/CountingInputStream.java",
                    "full name": "src.java.org.apache.commons.io.CountingInputStream.getCount"
                },
                {
                    "function name": "read",
                    "function params": [
                        "b"
                    ],
                    "file name": "CountingInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/CountingInputStream.java",
                    "full name": "src.java.org.apache.commons.io.CountingInputStream.read"
                },
                {
                    "function name": "read",
                    "function params": [],
                    "file name": "CountingInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/CountingInputStream.java",
                    "full name": "src.java.org.apache.commons.io.CountingInputStream.read"
                }
            ],
            "date": "2002-10-18"
        },
        {
            "commit_id": 30,
            "hash": "d3d4c5940a05ec914f5d0256483e0d643af7ea0c",
            "commit_summary": "Code changed so it compiles. Tests don't pass, but its a step anyway.\nProblems are probably all caused by my slow-refactoring.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140322 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FileUtilTestCase.java",
                "src/test/org/apache/commons/io/IOUtilTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testForceDeleteAFile2",
                    "function params": [],
                    "file name": "FileUtilTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilTestCase.testForceDeleteAFile2"
                },
                {
                    "function name": "testForceDeleteAFile1",
                    "function params": [],
                    "file name": "FileUtilTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilTestCase.testForceDeleteAFile1"
                },
                {
                    "function name": "testCopyFile2",
                    "function params": [],
                    "file name": "FileUtilTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilTestCase.testCopyFile2"
                },
                {
                    "function name": "testResolveFileDot",
                    "function params": [],
                    "file name": "FileUtilTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilTestCase.testResolveFileDot"
                },
                {
                    "function name": "testResolveFileDotDot",
                    "function params": [],
                    "file name": "FileUtilTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilTestCase.testResolveFileDotDot"
                },
                {
                    "function name": "testForceDeleteDir",
                    "function params": [],
                    "file name": "FileUtilTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilTestCase.testForceDeleteDir"
                },
                {
                    "function name": "testNormalize",
                    "function params": [],
                    "file name": "FileUtilTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilTestCase.testNormalize"
                },
                {
                    "function name": "testCopyFile1",
                    "function params": [],
                    "file name": "FileUtilTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilTestCase.testCopyFile1"
                },
                {
                    "function name": "testCopyFile1ToDir",
                    "function params": [],
                    "file name": "FileUtilTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilTestCase.testCopyFile1ToDir"
                },
                {
                    "function name": "testCopyFile2ToDir",
                    "function params": [],
                    "file name": "FileUtilTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilTestCase.testCopyFile2ToDir"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "IOUtilTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilTestCase.tearDown"
                }
            ],
            "date": "2002-10-26"
        },
        {
            "commit_id": 31,
            "hash": "1be498782acbf507108e14f75034b242833e8bdc",
            "commit_summary": "InputStreams moved into input.\nOutputStreams moved into output.\nWriters moved into output.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140323 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [],
            "date": "2002-11-11"
        },
        {
            "commit_id": 32,
            "hash": "afdcadd7cf86d59adc7eccd154e50d521d8ec677",
            "commit_summary": "DemuxTest moved to new package\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140324 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [],
            "date": "2002-11-12"
        },
        {
            "commit_id": 33,
            "hash": "b0a70108d841858f90ad9e28be3bdd2a75b8189e",
            "commit_summary": "Damn. Moving this was wrong. It tests an output and an input.\nReplacing in its old place.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140325 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [],
            "date": "2002-11-12"
        },
        {
            "commit_id": 34,
            "hash": "6f81be3cd06900a879bb277a264e8fd2cf06b719",
            "commit_summary": "IOTestCase folded into FileUtilTestCase as it dealt with FileUtils.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140327 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FileUtilTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testFileUtils",
                    "function params": [],
                    "file name": "FileUtilTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilTestCase.testFileUtils"
                }
            ],
            "date": "2002-11-12"
        },
        {
            "commit_id": 35,
            "hash": "e4da4f33b2776c10a0b8bf37fe9f90d1df00fb79",
            "commit_summary": "Putting this file back in.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140328 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "doStart",
                    "function params": [],
                    "file name": "DemuxTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.doStart"
                },
                {
                    "function name": "doJoin",
                    "function params": [],
                    "file name": "DemuxTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.doJoin"
                },
                {
                    "function name": "ReaderThread",
                    "function params": [],
                    "file name": "DemuxTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.ReaderThread"
                },
                {
                    "function name": "DemuxTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "DemuxTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.DemuxTestCase"
                },
                {
                    "function name": "ReaderThread",
                    "function params": [],
                    "file name": "DemuxTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.ReaderThread"
                },
                {
                    "function name": "testOutputStream",
                    "function params": [],
                    "file name": "DemuxTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.testOutputStream"
                },
                {
                    "function name": "WriterThread",
                    "function params": [],
                    "file name": "DemuxTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.WriterThread"
                },
                {
                    "function name": "testInputStream",
                    "function params": [],
                    "file name": "DemuxTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.testInputStream"
                },
                {
                    "function name": "ReaderThread",
                    "function params": [
                        "name",
                        "input",
                        "demux"
                    ],
                    "file name": "DemuxTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.ReaderThread"
                },
                {
                    "function name": "getOutput",
                    "function params": [
                        "threadName"
                    ],
                    "file name": "DemuxTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.getOutput"
                },
                {
                    "function name": "startReader",
                    "function params": [
                        "name",
                        "data",
                        "demux"
                    ],
                    "file name": "DemuxTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.startReader"
                },
                {
                    "function name": "startWriter",
                    "function params": [
                        "name",
                        "data",
                        "demux"
                    ],
                    "file name": "DemuxTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.startWriter"
                },
                {
                    "function name": "getInput",
                    "function params": [
                        "threadName"
                    ],
                    "file name": "DemuxTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.getInput"
                },
                {
                    "function name": "WriterThread",
                    "function params": [
                        "name",
                        "data",
                        "output",
                        "demux"
                    ],
                    "file name": "DemuxTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.WriterThread"
                }
            ],
            "date": "2002-11-12"
        },
        {
            "commit_id": 36,
            "hash": "79cf7b99aa472a176a1914d8f03dfdceaeed1ee7",
            "commit_summary": "Beginning of a class to test all file filters. Just testing extension\nfilter to begin with.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140329 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.setUp"
                },
                {
                    "function name": "testExtension",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testExtension"
                },
                {
                    "function name": "FileFilterTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "FileFilterTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.FileFilterTestCase"
                },
                {
                    "function name": "assertFiltering",
                    "function params": [
                        "filter",
                        "file",
                        "expected"
                    ],
                    "file name": "FileFilterTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.tearDown"
                }
            ],
            "date": "2002-11-12"
        },
        {
            "commit_id": 37,
            "hash": "0ec666a40d878b0dd2bc83ce27fcf494f953ce8b",
            "commit_summary": "More tests added to FileFilter, Demux fixed to use right package names.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140332 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/DemuxTestCase.java",
                "src/test/org/apache/commons/io/IOTestSuite.java",
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "IOTestSuite.java",
                    "file old path": "src/test/org/apache/commons/io/IOTestSuite.java",
                    "file new path": "src/test/org/apache/commons/io/IOTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.IOTestSuite.suite"
                },
                {
                    "function name": "testDirectory",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testDirectory"
                },
                {
                    "function name": "testNull",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testNull"
                },
                {
                    "function name": "assertFiltering",
                    "function params": [
                        "filter",
                        "file",
                        "expected"
                    ],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering"
                },
                {
                    "function name": "testPrefix",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix"
                }
            ],
            "date": "2002-12-07"
        },
        {
            "commit_id": 38,
            "hash": "79f6ffa3f3582ffde0687304c8858f159b9dc567",
            "commit_summary": "Now FileFilter's are Predicates. Thus new classes.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140333 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/FileFilter.java"
            ],
            "functions": [
                {
                    "function name": "evaluate",
                    "function params": [
                        "object"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.evaluate"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "dir",
                        "name"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.accept"
                },
                {
                    "function name": "predicateToFileFilter",
                    "function params": [
                        "predicate"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.predicateToFileFilter"
                },
                {
                    "function name": "notFileFilter",
                    "function params": [
                        "f"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.notFileFilter"
                },
                {
                    "function name": "FileFilterUtils",
                    "function params": [],
                    "file name": "FileFilterUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.FileFilterUtils"
                },
                {
                    "function name": "nullFileFilter",
                    "function params": [],
                    "file name": "FileFilterUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.nullFileFilter"
                },
                {
                    "function name": "orFileFilter",
                    "function params": [
                        "f1",
                        "f2"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.orFileFilter"
                },
                {
                    "function name": "andFileFilter",
                    "function params": [
                        "f1",
                        "f2"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.andFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "f"
                    ],
                    "file name": "PredicateFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/PredicateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.PredicateFileFilter.accept"
                },
                {
                    "function name": "PredicateFileFilter",
                    "function params": [
                        "predicate"
                    ],
                    "file name": "PredicateFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/PredicateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.PredicateFileFilter.PredicateFileFilter"
                }
            ],
            "date": "2002-12-07"
        },
        {
            "commit_id": 39,
            "hash": "eca62ddf18f8075984150bcfca63714e323b6b69",
            "commit_summary": "No longer needed as FileFilter's are now Predicates.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140334 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [],
            "date": "2002-12-07"
        },
        {
            "commit_id": 40,
            "hash": "9eb15e876f5a310934cfa77f25638af37de24483",
            "commit_summary": "StreamUtils is redundant, all the functionality is in IOUtils.\nProxyStreams are needed as FilterStream's are not 'honest' about\ncalling the same method that was called upon themselves. I find this\na pain to code to.\nCountingOutput/TeeOutput both changed to be Proxy's.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140335 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/IOUtil.java",
                "src/java/org/apache/commons/io/output/CountingOutputStream.java",
                "src/java/org/apache/commons/io/output/TeeOutputStream.java"
            ],
            "functions": [
                {
                    "function name": "shutdownStream",
                    "function params": [
                        "output"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtil.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.shutdownStream"
                },
                {
                    "function name": "shutdownReader",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtil.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.shutdownReader"
                },
                {
                    "function name": "shutdownWriter",
                    "function params": [
                        "output"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtil.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.shutdownWriter"
                },
                {
                    "function name": "shutdownStream",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtil.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.shutdownStream"
                },
                {
                    "function name": "available",
                    "function params": [],
                    "file name": "ProxyInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.ProxyInputStream.available"
                },
                {
                    "function name": "markSupported",
                    "function params": [],
                    "file name": "ProxyInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.ProxyInputStream.markSupported"
                },
                {
                    "function name": "ProxyInputStream",
                    "function params": [
                        "proxy"
                    ],
                    "file name": "ProxyInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.ProxyInputStream.ProxyInputStream"
                },
                {
                    "function name": "reset",
                    "function params": [],
                    "file name": "ProxyInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.ProxyInputStream.reset"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "ProxyInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.ProxyInputStream.close"
                },
                {
                    "function name": "read",
                    "function params": [
                        "bts"
                    ],
                    "file name": "ProxyInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.ProxyInputStream.read"
                },
                {
                    "function name": "read",
                    "function params": [
                        "bts",
                        "st",
                        "end"
                    ],
                    "file name": "ProxyInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.ProxyInputStream.read"
                },
                {
                    "function name": "mark",
                    "function params": [
                        "idx"
                    ],
                    "file name": "ProxyInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.ProxyInputStream.mark"
                },
                {
                    "function name": "skip",
                    "function params": [
                        "ln"
                    ],
                    "file name": "ProxyInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.ProxyInputStream.skip"
                },
                {
                    "function name": "read",
                    "function params": [],
                    "file name": "ProxyInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.ProxyInputStream.read"
                },
                {
                    "function name": "write",
                    "function params": [
                        "idx"
                    ],
                    "file name": "ProxyOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/ProxyOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.ProxyOutputStream.write"
                },
                {
                    "function name": "flush",
                    "function params": [],
                    "file name": "ProxyOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/ProxyOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.ProxyOutputStream.flush"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "ProxyOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/ProxyOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.ProxyOutputStream.close"
                },
                {
                    "function name": "write",
                    "function params": [
                        "bts",
                        "st",
                        "end"
                    ],
                    "file name": "ProxyOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/ProxyOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.ProxyOutputStream.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "bts"
                    ],
                    "file name": "ProxyOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/ProxyOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.ProxyOutputStream.write"
                },
                {
                    "function name": "ProxyOutputStream",
                    "function params": [
                        "proxy"
                    ],
                    "file name": "ProxyOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/ProxyOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.ProxyOutputStream.ProxyOutputStream"
                },
                {
                    "function name": "write",
                    "function params": [
                        "b"
                    ],
                    "file name": "TeeOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/TeeOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/TeeOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.TeeOutputStream.write"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "TeeOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/TeeOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/TeeOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.TeeOutputStream.close"
                },
                {
                    "function name": "flush",
                    "function params": [],
                    "file name": "TeeOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/TeeOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/TeeOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.TeeOutputStream.flush"
                }
            ],
            "date": "2002-12-07"
        },
        {
            "commit_id": 41,
            "hash": "8ddc246a3b02467b1991c8acdd8b6eaae574af1e",
            "commit_summary": "Make the test compile against the current code\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140338 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testNull",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testNull"
                }
            ],
            "date": "2002-12-25"
        },
        {
            "commit_id": 42,
            "hash": "d5a84f6d56f77d478ebe751fe7f91998a6e12c21",
            "commit_summary": "Rename test case to match renamed code\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140339 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.suite"
                },
                {
                    "function name": "FileUtilsTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.FileUtilsTestCase"
                }
            ],
            "date": "2002-12-25"
        },
        {
            "commit_id": 43,
            "hash": "e5afd028158ad98c6649571960560f67ca4bda0c",
            "commit_summary": "Removed as they live in the commons-sandbox bzip2 project.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140341 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [],
            "date": "2003-01-23"
        },
        {
            "commit_id": 44,
            "hash": "699c3b67c2673ae1725012e2523524ffee019c96",
            "commit_summary": "Removed as bzip2 already exists as a 'top level' Commons project\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140342 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [],
            "date": "2003-01-24"
        },
        {
            "commit_id": 45,
            "hash": "c93fe8e1120284ffe7867fd66a836fcfde527110",
            "commit_summary": "Removed as bzip2 already exists as a 'top level' Commons project. There\nare some minor differences between the test cases in each project, but\nthey are to do with the project specific packaging.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140343 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [],
            "date": "2003-01-24"
        },
        {
            "commit_id": 46,
            "hash": "e79f0fea64a359e2883922d6b5f594f6552b7f1a",
            "commit_summary": "Removed examples/ logic from build.xml in the hope gump will build.\nAdded some more tests to the FileFilter tests.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140345 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testDirectory",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testDirectory"
                },
                {
                    "function name": "testPrefix",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix"
                },
                {
                    "function name": "testNull",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testNull"
                }
            ],
            "date": "2003-01-27"
        },
        {
            "commit_id": 47,
            "hash": "efbe0991e910a089c02463b9777f7a64a7501318",
            "commit_summary": "Added three tests.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140346 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/IOTestSuite.java"
            ],
            "functions": [
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "IOTestSuite.java",
                    "file old path": "src/test/org/apache/commons/io/IOTestSuite.java",
                    "file new path": "src/test/org/apache/commons/io/IOTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.IOTestSuite.suite"
                }
            ],
            "date": "2003-01-27"
        },
        {
            "commit_id": 48,
            "hash": "e5d4220d2635a31283bada96a769ccb674a9195e",
            "commit_summary": "fixed FileFilterTestCase, was not running due to a few NPEs and faulty test cases\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140348 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testDirectory",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testDirectory"
                },
                {
                    "function name": "testPrefix",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix"
                },
                {
                    "function name": "assertFiltering",
                    "function params": [
                        "filter",
                        "file",
                        "expected"
                    ],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering"
                },
                {
                    "function name": "testNull",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testNull"
                }
            ],
            "date": "2003-02-25"
        },
        {
            "commit_id": 49,
            "hash": "7ab815749af053b524a820f30ae5361739597aff",
            "commit_summary": "oops, file filter test case, directory-filter tests for non-existent directory 'test' now fixed\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140349 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testDirectory",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testDirectory"
                }
            ],
            "date": "2003-02-25"
        },
        {
            "commit_id": 50,
            "hash": "7a0867f54cd6036e9ec2243595207b035c436161",
            "commit_summary": "TTesting the DirectoryFileFilter against a \"non-existent\" directory\nof the name \"test\" was causing problems due to the fact that another\nTestCase for FileUtils was creating this directory.  On Linux, this\ndirectory was being created and deleted, on Windows this directory\nwas being created but not deleted.  Hence, this test case was failing\non Windows machines and not on Linux machine.  To remedy the situation\nthe test now checks for a directory named \"imaginary\" which does not\nexist.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140350 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testDirectory",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testDirectory"
                }
            ],
            "date": "2003-02-25"
        },
        {
            "commit_id": 51,
            "hash": "a8dd6b9044fa06f4ace201672124e2c539d8925c",
            "commit_summary": "Committed Jeremias Maerki's (and FOP's) improved ByteArrayOutputStream\nand accompanying classes.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140351 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "write",
                    "function params": [
                        "b",
                        "off",
                        "len"
                    ],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.write"
                },
                {
                    "function name": "size",
                    "function params": [],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.size"
                },
                {
                    "function name": "reset",
                    "function params": [],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.reset"
                },
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.toString"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "enc"
                    ],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.toString"
                },
                {
                    "function name": "writeTo",
                    "function params": [
                        "out"
                    ],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.writeTo"
                },
                {
                    "function name": "ByteArrayOutputStream",
                    "function params": [
                        "size"
                    ],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream"
                },
                {
                    "function name": "needNewBuffer",
                    "function params": [
                        "newcount"
                    ],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.needNewBuffer"
                },
                {
                    "function name": "getBuffer",
                    "function params": [
                        "index"
                    ],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.getBuffer"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.close"
                },
                {
                    "function name": "write",
                    "function params": [
                        "b"
                    ],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.write"
                },
                {
                    "function name": "toByteArray",
                    "function params": [],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.toByteArray"
                },
                {
                    "function name": "ByteArrayOutputStream",
                    "function params": [],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream"
                },
                {
                    "function name": "getCurrentCapacity",
                    "function params": [],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.getCurrentCapacity"
                },
                {
                    "function name": "write",
                    "function params": [
                        "b",
                        "off",
                        "len"
                    ],
                    "file name": "NullOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/NullOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.NullOutputStream.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "b"
                    ],
                    "file name": "NullOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/NullOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.NullOutputStream.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "b"
                    ],
                    "file name": "NullOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/NullOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.NullOutputStream.write"
                },
                {
                    "function name": "byteCmp",
                    "function params": [],
                    "file name": "ByteArrayOutputStreamTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                    "full name": "src.test.org.apache.commons.io.output.ByteArrayOutputStreamTestCase.byteCmp"
                },
                {
                    "function name": "writeData",
                    "function params": [],
                    "file name": "ByteArrayOutputStreamTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                    "full name": "src.test.org.apache.commons.io.output.ByteArrayOutputStreamTestCase.writeData"
                },
                {
                    "function name": "for",
                    "function params": [
                        "i"
                    ],
                    "file name": "ByteArrayOutputStreamTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                    "full name": "src.test.org.apache.commons.io.output.ByteArrayOutputStreamTestCase.for"
                },
                {
                    "function name": "checkStreams",
                    "function params": [],
                    "file name": "ByteArrayOutputStreamTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                    "full name": "src.test.org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkStreams"
                },
                {
                    "function name": "ByteArrayOutputStreamTestCase",
                    "function params": [],
                    "file name": "ByteArrayOutputStreamTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                    "full name": "src.test.org.apache.commons.io.output.ByteArrayOutputStreamTestCase.ByteArrayOutputStreamTestCase"
                },
                {
                    "function name": "testStream",
                    "function params": [],
                    "file name": "ByteArrayOutputStreamTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                    "full name": "src.test.org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream"
                },
                {
                    "function name": "checkByteArrays",
                    "function params": [],
                    "file name": "ByteArrayOutputStreamTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                    "full name": "src.test.org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkByteArrays"
                },
                {
                    "function name": "writeData",
                    "function params": [],
                    "file name": "ByteArrayOutputStreamTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                    "full name": "src.test.org.apache.commons.io.output.ByteArrayOutputStreamTestCase.writeData"
                }
            ],
            "date": "2003-04-04"
        },
        {
            "commit_id": 52,
            "hash": "036e8c4cf49e623f0ba1067ffc14c143dee8d85a",
            "commit_summary": "Refactor filefilter directory to remove dependency on lang\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140357 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "dir",
                        "name"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "f"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "dir",
                        "name"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file",
                        "name"
                    ],
                    "file name": "AndFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AndFileFilter.accept"
                },
                {
                    "function name": "AndFileFilter",
                    "function params": [
                        "filter1",
                        "filter2"
                    ],
                    "file name": "AndFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "AndFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AndFileFilter.accept"
                },
                {
                    "function name": "DelegateFileFilter",
                    "function params": [
                        "filter"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.DelegateFileFilter"
                },
                {
                    "function name": "DelegateFileFilter",
                    "function params": [
                        "filter"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.DelegateFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "f"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "dir",
                        "name"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.accept"
                },
                {
                    "function name": "DelegateFileFilter",
                    "function params": [
                        "filter"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.DelegateFileFilter"
                },
                {
                    "function name": "DirectoryFileFilter",
                    "function params": [],
                    "file name": "DirectoryFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DirectoryFileFilter.DirectoryFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "DirectoryFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DirectoryFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "FalseFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/ExtensionFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FalseFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "dir",
                        "name"
                    ],
                    "file name": "FalseFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/ExtensionFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FalseFileFilter.accept"
                },
                {
                    "function name": "FalseFileFilter",
                    "function params": [],
                    "file name": "FalseFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/ExtensionFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FalseFileFilter.FalseFileFilter"
                },
                {
                    "function name": "andFileFilter",
                    "function params": [
                        "filter1",
                        "filter2"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.andFileFilter"
                },
                {
                    "function name": "notFileFilter",
                    "function params": [
                        "f"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.notFileFilter"
                },
                {
                    "function name": "andFileFilter",
                    "function params": [
                        "f1",
                        "f2"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.andFileFilter"
                },
                {
                    "function name": "prefixFileFilter",
                    "function params": [
                        "prefix"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.prefixFileFilter"
                },
                {
                    "function name": "falseFileFilter",
                    "function params": [],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.falseFileFilter"
                },
                {
                    "function name": "suffixFileFilter",
                    "function params": [
                        "suffix"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.suffixFileFilter"
                },
                {
                    "function name": "directoryFileFilter",
                    "function params": [],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.directoryFileFilter"
                },
                {
                    "function name": "orFileFilter",
                    "function params": [
                        "filter1",
                        "filter2"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.orFileFilter"
                },
                {
                    "function name": "trueFileFilter",
                    "function params": [],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.trueFileFilter"
                },
                {
                    "function name": "notFileFilter",
                    "function params": [
                        "filter"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.notFileFilter"
                },
                {
                    "function name": "orFileFilter",
                    "function params": [
                        "f1",
                        "f2"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.orFileFilter"
                },
                {
                    "function name": "NotFileFilter",
                    "function params": [
                        "filter"
                    ],
                    "file name": "NotFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NotFileFilter.NotFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file",
                        "name"
                    ],
                    "file name": "NotFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NotFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "NotFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NotFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file",
                        "name"
                    ],
                    "file name": "OrFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.OrFileFilter.accept"
                },
                {
                    "function name": "OrFileFilter",
                    "function params": [
                        "filter1",
                        "filter2"
                    ],
                    "file name": "OrFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "OrFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.OrFileFilter.accept"
                },
                {
                    "function name": "PrefixFileFilter",
                    "function params": [
                        "prefix"
                    ],
                    "file name": "PrefixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter"
                },
                {
                    "function name": "PrefixFileFilter",
                    "function params": [
                        "prefixes"
                    ],
                    "file name": "PrefixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "PrefixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.PrefixFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file",
                        "name"
                    ],
                    "file name": "PrefixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.PrefixFileFilter.accept"
                },
                {
                    "function name": "PrefixFileFilter",
                    "function params": [
                        "prefixs"
                    ],
                    "file name": "PrefixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter"
                },
                {
                    "function name": "PrefixFileFilter",
                    "function params": [
                        "prefixes"
                    ],
                    "file name": "PrefixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "SuffixFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.SuffixFileFilter.accept"
                },
                {
                    "function name": "SuffixFileFilter",
                    "function params": [
                        "suffixes"
                    ],
                    "file name": "SuffixFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file",
                        "name"
                    ],
                    "file name": "SuffixFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.SuffixFileFilter.accept"
                },
                {
                    "function name": "SuffixFileFilter",
                    "function params": [
                        "suffixes"
                    ],
                    "file name": "SuffixFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter"
                },
                {
                    "function name": "SuffixFileFilter",
                    "function params": [
                        "suffix"
                    ],
                    "file name": "SuffixFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "dir",
                        "name"
                    ],
                    "file name": "TrueFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.TrueFileFilter.accept"
                },
                {
                    "function name": "TrueFileFilter",
                    "function params": [],
                    "file name": "TrueFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.TrueFileFilter.TrueFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "TrueFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.TrueFileFilter.accept"
                },
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.main"
                },
                {
                    "function name": "FileFilterTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.FileFilterTestCase"
                },
                {
                    "function name": "testDirectory",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testDirectory"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.tearDown"
                },
                {
                    "function name": "testFalse",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testFalse"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.setUp"
                },
                {
                    "function name": "assertFiltering",
                    "function params": [
                        "filter",
                        "file",
                        "expected"
                    ],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.suite"
                },
                {
                    "function name": "testTrue",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testTrue"
                },
                {
                    "function name": "testPrefix",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix"
                },
                {
                    "function name": "testNot",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testNot"
                },
                {
                    "function name": "testOr",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testOr"
                },
                {
                    "function name": "testSuffix",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix"
                },
                {
                    "function name": "testAnd",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testAnd"
                },
                {
                    "function name": "assertFiltering",
                    "function params": [
                        "filter",
                        "file",
                        "expected"
                    ],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering"
                }
            ],
            "date": "2003-05-16"
        },
        {
            "commit_id": 53,
            "hash": "d29928ee2b1535a122ff4a72d6468967aef4b382",
            "commit_summary": "Javadocs\nthe most important copy() methods now return the number of bytes copied.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140358 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/IOUtil.java"
            ],
            "functions": [
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtil.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtil.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtil.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "IOUtil.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtil.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtil.java",
                    "full name": "src.java.org.apache.commons.io.IOUtil.copy"
                }
            ],
            "date": "2003-07-03"
        },
        {
            "commit_id": 54,
            "hash": "fbfda96ec03c67678571643516d03eff40daa188",
            "commit_summary": "Test number of bytes returned by copy() methods.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140359 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/IOUtilTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testReaderToWriter",
                    "function params": [],
                    "file name": "IOUtilTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilTestCase.testReaderToWriter"
                },
                {
                    "function name": "testInputStreamToOutputStream",
                    "function params": [],
                    "file name": "IOUtilTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilTestCase.testInputStreamToOutputStream"
                }
            ],
            "date": "2003-07-03"
        },
        {
            "commit_id": 55,
            "hash": "7748ed36401ea37104ae313be804f81f2526cd6d",
            "commit_summary": "IOUtil to IOUtils and EndianUtil to EndianUtils.\nFix references so dependant classes reference *Utils\nSubmitted by: Matthew Hawthorne <mhawthorne@alumni.pitt.edu>\n\nDeprecate IOUtil and EndianUtil.\nFix some of the license headers (more to do)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140365 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/EndianUtil.java",
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/java/org/apache/commons/io/IOUtil.java",
                "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                "src/test/org/apache/commons/io/IOTestSuite.java",
                "src/test/org/apache/commons/io/IOUtilTestCase.java"
            ],
            "functions": [
                {
                    "function name": "writeSwappedShort",
                    "function params": [
                        "data",
                        "offset",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedShort"
                },
                {
                    "function name": "readSwappedUnsignedInteger",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger"
                },
                {
                    "function name": "readSwappedUnsignedShort",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedUnsignedShort"
                },
                {
                    "function name": "swapFloat",
                    "function params": [
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.swapFloat"
                },
                {
                    "function name": "readSwappedLong",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedLong"
                },
                {
                    "function name": "writeSwappedInteger",
                    "function params": [
                        "output",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedInteger"
                },
                {
                    "function name": "readSwappedDouble",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedDouble"
                },
                {
                    "function name": "swapShort",
                    "function params": [
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.swapShort"
                },
                {
                    "function name": "readSwappedShort",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedShort"
                },
                {
                    "function name": "writeSwappedLong",
                    "function params": [
                        "data",
                        "offset",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedLong"
                },
                {
                    "function name": "readSwappedInteger",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedInteger"
                },
                {
                    "function name": "writeSwappedLong",
                    "function params": [
                        "output",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedLong"
                },
                {
                    "function name": "swapInteger",
                    "function params": [
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.swapInteger"
                },
                {
                    "function name": "writeSwappedDouble",
                    "function params": [
                        "output",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedDouble"
                },
                {
                    "function name": "readSwappedFloat",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedFloat"
                },
                {
                    "function name": "read",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.read"
                },
                {
                    "function name": "swapDouble",
                    "function params": [
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.swapDouble"
                },
                {
                    "function name": "readSwappedInteger",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedInteger"
                },
                {
                    "function name": "readSwappedLong",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedLong"
                },
                {
                    "function name": "writeSwappedShort",
                    "function params": [
                        "output",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedShort"
                },
                {
                    "function name": "readSwappedUnsignedShort",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedUnsignedShort"
                },
                {
                    "function name": "EndianUtils",
                    "function params": [],
                    "file name": "EndianUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.EndianUtils"
                },
                {
                    "function name": "writeSwappedFloat",
                    "function params": [
                        "data",
                        "offset",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedFloat"
                },
                {
                    "function name": "swapLong",
                    "function params": [
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.swapLong"
                },
                {
                    "function name": "readSwappedUnsignedInteger",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger"
                },
                {
                    "function name": "writeSwappedInteger",
                    "function params": [
                        "data",
                        "offset",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedInteger"
                },
                {
                    "function name": "writeSwappedFloat",
                    "function params": [
                        "output",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedFloat"
                },
                {
                    "function name": "readSwappedDouble",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedDouble"
                },
                {
                    "function name": "writeSwappedDouble",
                    "function params": [
                        "data",
                        "offset",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedDouble"
                },
                {
                    "function name": "readSwappedShort",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedShort"
                },
                {
                    "function name": "readSwappedFloat",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedFloat"
                },
                {
                    "function name": "copyURLToFile",
                    "function params": [
                        "source",
                        "destination"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyURLToFile"
                },
                {
                    "function name": "contentEquals",
                    "function params": [
                        "file1",
                        "file2"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.contentEquals"
                },
                {
                    "function name": "copyFile",
                    "function params": [
                        "source",
                        "destination"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyFile"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "bufferedCopy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.bufferedCopy"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toByteArray"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "shutdownStream",
                    "function params": [
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.shutdownStream"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toByteArray"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toByteArray"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toByteArray"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "contentEquals",
                    "function params": [
                        "input1",
                        "input2"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.contentEquals"
                },
                {
                    "function name": "shutdownWriter",
                    "function params": [
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.shutdownWriter"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "encoding",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toByteArray"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "shutdownReader",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.shutdownReader"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toByteArray"
                },
                {
                    "function name": "IOUtils",
                    "function params": [],
                    "file name": "IOUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.IOUtils"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "shutdownStream",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.shutdownStream"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "encoding",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "readDouble",
                    "function params": [],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.SwappedDataInputStream.readDouble"
                },
                {
                    "function name": "readUnsignedShort",
                    "function params": [],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.SwappedDataInputStream.readUnsignedShort"
                },
                {
                    "function name": "readInt",
                    "function params": [],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.SwappedDataInputStream.readInt"
                },
                {
                    "function name": "readLong",
                    "function params": [],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.SwappedDataInputStream.readLong"
                },
                {
                    "function name": "readShort",
                    "function params": [],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.SwappedDataInputStream.readShort"
                },
                {
                    "function name": "readFloat",
                    "function params": [],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.SwappedDataInputStream.readFloat"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "IOTestSuite.java",
                    "file old path": "src/test/org/apache/commons/io/IOTestSuite.java",
                    "file new path": "src/test/org/apache/commons/io/IOTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.IOTestSuite.suite"
                },
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "IOTestSuite.java",
                    "file old path": "src/test/org/apache/commons/io/IOTestSuite.java",
                    "file new path": "src/test/org/apache/commons/io/IOTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.IOTestSuite.main"
                },
                {
                    "function name": "testByteArrayToOutputStream",
                    "function params": [],
                    "file name": "IOUtilTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilTestCase.testByteArrayToOutputStream"
                },
                {
                    "function name": "testByteArrayToWriter",
                    "function params": [],
                    "file name": "IOUtilTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilTestCase.testByteArrayToWriter"
                },
                {
                    "function name": "testReaderToOutputStream",
                    "function params": [],
                    "file name": "IOUtilTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilTestCase.testReaderToOutputStream"
                },
                {
                    "function name": "testStringToWriter",
                    "function params": [],
                    "file name": "IOUtilTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilTestCase.testStringToWriter"
                },
                {
                    "function name": "testReaderToString",
                    "function params": [],
                    "file name": "IOUtilTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilTestCase.testReaderToString"
                },
                {
                    "function name": "testInputStreamToByteArray",
                    "function params": [],
                    "file name": "IOUtilTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilTestCase.testInputStreamToByteArray"
                },
                {
                    "function name": "testReaderToWriter",
                    "function params": [],
                    "file name": "IOUtilTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilTestCase.testReaderToWriter"
                },
                {
                    "function name": "testStringToOutputStream",
                    "function params": [],
                    "file name": "IOUtilTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilTestCase.testStringToOutputStream"
                },
                {
                    "function name": "testInputStreamToString",
                    "function params": [],
                    "file name": "IOUtilTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilTestCase.testInputStreamToString"
                },
                {
                    "function name": "testStringToByteArray",
                    "function params": [],
                    "file name": "IOUtilTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilTestCase.testStringToByteArray"
                },
                {
                    "function name": "testByteArrayToString",
                    "function params": [],
                    "file name": "IOUtilTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilTestCase.testByteArrayToString"
                },
                {
                    "function name": "testInputStreamToOutputStream",
                    "function params": [],
                    "file name": "IOUtilTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilTestCase.testInputStreamToOutputStream"
                },
                {
                    "function name": "testInputStreamToWriter",
                    "function params": [],
                    "file name": "IOUtilTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilTestCase.testInputStreamToWriter"
                }
            ],
            "date": "2003-07-25"
        },
        {
            "commit_id": 56,
            "hash": "899191b4e4a08e6e65c62f4843453e6005b26b4b",
            "commit_summary": "Removed unused import.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140366 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java"
            ],
            "functions": [
                {
                    "function name": "writeData",
                    "function params": [],
                    "file name": "ByteArrayOutputStreamTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                    "full name": "src.test.org.apache.commons.io.output.ByteArrayOutputStreamTestCase.writeData"
                },
                {
                    "function name": "byteCmp",
                    "function params": [],
                    "file name": "ByteArrayOutputStreamTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                    "full name": "src.test.org.apache.commons.io.output.ByteArrayOutputStreamTestCase.byteCmp"
                },
                {
                    "function name": "checkByteArrays",
                    "function params": [],
                    "file name": "ByteArrayOutputStreamTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                    "full name": "src.test.org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkByteArrays"
                },
                {
                    "function name": "writeData",
                    "function params": [],
                    "file name": "ByteArrayOutputStreamTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                    "full name": "src.test.org.apache.commons.io.output.ByteArrayOutputStreamTestCase.writeData"
                },
                {
                    "function name": "for",
                    "function params": [
                        "i"
                    ],
                    "file name": "ByteArrayOutputStreamTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                    "full name": "src.test.org.apache.commons.io.output.ByteArrayOutputStreamTestCase.for"
                },
                {
                    "function name": "checkStreams",
                    "function params": [],
                    "file name": "ByteArrayOutputStreamTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                    "full name": "src.test.org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkStreams"
                },
                {
                    "function name": "testStream",
                    "function params": [],
                    "file name": "ByteArrayOutputStreamTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                    "full name": "src.test.org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream"
                },
                {
                    "function name": "ByteArrayOutputStreamTestCase",
                    "function params": [],
                    "file name": "ByteArrayOutputStreamTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                    "full name": "src.test.org.apache.commons.io.output.ByteArrayOutputStreamTestCase.ByteArrayOutputStreamTestCase"
                }
            ],
            "date": "2003-07-25"
        },
        {
            "commit_id": 57,
            "hash": "4d35175bb740dda3d4eb806cf4c2a234cbde9032",
            "commit_summary": "Remove already deprecated method.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140367 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/IOUtils.java"
            ],
            "functions": [],
            "date": "2003-07-25"
        },
        {
            "commit_id": 58,
            "hash": "595f424d0a7e459af0a3279fc69efe8be4ce6899",
            "commit_summary": "Renamed IOUtilTestCase to IOUtilsTestCase.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140370 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/IOTestSuite.java"
            ],
            "functions": [
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "IOTestSuite.java",
                    "file old path": "src/test/org/apache/commons/io/IOTestSuite.java",
                    "file new path": "src/test/org/apache/commons/io/IOTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.IOTestSuite.suite"
                },
                {
                    "function name": "IOUtilsTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.IOUtilsTestCase"
                }
            ],
            "date": "2003-07-27"
        },
        {
            "commit_id": 59,
            "hash": "05c1bb985b4a9b362043373a5c6003eb4085cf89",
            "commit_summary": "Correct license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140371 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "src/java/org/apache/commons/io/filefilter/IOFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "FileFilterUtils",
                    "function params": [],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.FileFilterUtils"
                }
            ],
            "date": "2003-07-27"
        },
        {
            "commit_id": 60,
            "hash": "a23156e7b0f7fc6a6c3d0b52745b9c7aa7ae9b75",
            "commit_summary": "Correct license\nJavadocs\nUse ProxyInputStream as base class to reduce code.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140372 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/SwappedDataInputStream.java"
            ],
            "functions": [
                {
                    "function name": "readUnsignedShort",
                    "function params": [],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.SwappedDataInputStream.readUnsignedShort"
                },
                {
                    "function name": "readInt",
                    "function params": [],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.SwappedDataInputStream.readInt"
                },
                {
                    "function name": "skipBytes",
                    "function params": [
                        "count"
                    ],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.SwappedDataInputStream.skipBytes"
                },
                {
                    "function name": "readUTF",
                    "function params": [],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.SwappedDataInputStream.readUTF"
                },
                {
                    "function name": "readLong",
                    "function params": [],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.SwappedDataInputStream.readLong"
                },
                {
                    "function name": "readFloat",
                    "function params": [],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.SwappedDataInputStream.readFloat"
                },
                {
                    "function name": "readByte",
                    "function params": [],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.SwappedDataInputStream.readByte"
                },
                {
                    "function name": "readShort",
                    "function params": [],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.SwappedDataInputStream.readShort"
                },
                {
                    "function name": "SwappedDataInputStream",
                    "function params": [
                        "input"
                    ],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.SwappedDataInputStream.SwappedDataInputStream"
                },
                {
                    "function name": "readDouble",
                    "function params": [],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.SwappedDataInputStream.readDouble"
                },
                {
                    "function name": "readUnsignedByte",
                    "function params": [],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.SwappedDataInputStream.readUnsignedByte"
                },
                {
                    "function name": "readLine",
                    "function params": [],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.SwappedDataInputStream.readLine"
                }
            ],
            "date": "2003-07-27"
        },
        {
            "commit_id": 61,
            "hash": "da2a407c7b152ab2a9538682534a312c8d8fd498",
            "commit_summary": "Javadocs\nComment out currently usused method\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140373 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java"
            ],
            "functions": [
                {
                    "function name": "getBuffer",
                    "function params": [
                        "index"
                    ],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.getBuffer"
                },
                {
                    "function name": "write",
                    "function params": [
                        "b"
                    ],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.write"
                },
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.toString"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.close"
                },
                {
                    "function name": "needNewBuffer",
                    "function params": [
                        "newcount"
                    ],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.needNewBuffer"
                },
                {
                    "function name": "size",
                    "function params": [],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.size"
                },
                {
                    "function name": "write",
                    "function params": [
                        "b",
                        "off",
                        "len"
                    ],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.write"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "enc"
                    ],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.toString"
                },
                {
                    "function name": "ByteArrayOutputStream",
                    "function params": [
                        "size"
                    ],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream"
                },
                {
                    "function name": "toByteArray",
                    "function params": [],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.toByteArray"
                },
                {
                    "function name": "ByteArrayOutputStream",
                    "function params": [],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream"
                },
                {
                    "function name": "writeTo",
                    "function params": [
                        "out"
                    ],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.writeTo"
                },
                {
                    "function name": "reset",
                    "function params": [],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.reset"
                }
            ],
            "date": "2003-07-27"
        },
        {
            "commit_id": 62,
            "hash": "79f638c7fad60afb933cfa5a3001a5976cb675cf",
            "commit_summary": "Remove unused imports\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140374 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/output/NullOutputStream.java"
            ],
            "functions": [
                {
                    "function name": "write",
                    "function params": [
                        "b"
                    ],
                    "file name": "NullOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/NullOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/NullOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.NullOutputStream.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "b",
                        "off",
                        "len"
                    ],
                    "file name": "NullOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/NullOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/NullOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.NullOutputStream.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "b"
                    ],
                    "file name": "NullOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/NullOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/NullOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.NullOutputStream.write"
                }
            ],
            "date": "2003-07-27"
        },
        {
            "commit_id": 63,
            "hash": "fc2416dea6ae62052160b690adb3d46cfec66de4",
            "commit_summary": "Correct license\nJavadocs\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140375 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                "src/java/org/apache/commons/io/input/CountingInputStream.java",
                "src/java/org/apache/commons/io/input/DemuxInputStream.java",
                "src/java/org/apache/commons/io/output/CountingOutputStream.java",
                "src/java/org/apache/commons/io/output/DemuxOutputStream.java",
                "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                "src/java/org/apache/commons/io/output/TeeOutputStream.java"
            ],
            "functions": [],
            "date": "2003-07-27"
        },
        {
            "commit_id": 64,
            "hash": "5a7b10648fd0765a0df19d9520464883a917570b",
            "commit_summary": "Javadocs\nRemoved unnecessary constants\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140376 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/EndianUtils.java"
            ],
            "functions": [],
            "date": "2003-07-27"
        },
        {
            "commit_id": 65,
            "hash": "fdaa056d5ee2546596310d0c72315ab0ca6a6c30",
            "commit_summary": "Javadocs\nRewrite some methods to leverage off methods from IOUtils.\nAdded some TODO items (methods not making sense...)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140377 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [
                {
                    "function name": "fileRead",
                    "function params": [
                        "fileName"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.fileRead"
                },
                {
                    "function name": "forceMkdir",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.forceMkdir"
                },
                {
                    "function name": "FileUtils",
                    "function params": [],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.FileUtils"
                },
                {
                    "function name": "fileRead",
                    "function params": [
                        "fileName"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.fileRead"
                },
                {
                    "function name": "forceMkdir",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.forceMkdir"
                },
                {
                    "function name": "fileWrite",
                    "function params": [
                        "fileName",
                        "data"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.fileWrite"
                }
            ],
            "date": "2003-07-27"
        },
        {
            "commit_id": 66,
            "hash": "6ecc948a706517f8969fa80162da250063466946",
            "commit_summary": "Javadocs\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140378 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/HexDump.java",
                "src/java/org/apache/commons/io/IOUtils.java"
            ],
            "functions": [],
            "date": "2003-07-27"
        },
        {
            "commit_id": 67,
            "hash": "eeca0e6056634fa89406602e4185940633c86e6c",
            "commit_summary": "Move Proxy*Stream to input/output subpackages for consistency.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140379 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "read",
                    "function params": [
                        "bts"
                    ],
                    "file name": "ProxyInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyInputStream.read"
                },
                {
                    "function name": "read",
                    "function params": [
                        "bts",
                        "st",
                        "end"
                    ],
                    "file name": "ProxyInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyInputStream.read"
                },
                {
                    "function name": "available",
                    "function params": [],
                    "file name": "ProxyInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyInputStream.available"
                },
                {
                    "function name": "read",
                    "function params": [],
                    "file name": "ProxyInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyInputStream.read"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "ProxyInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyInputStream.close"
                },
                {
                    "function name": "markSupported",
                    "function params": [],
                    "file name": "ProxyInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyInputStream.markSupported"
                },
                {
                    "function name": "ProxyInputStream",
                    "function params": [
                        "proxy"
                    ],
                    "file name": "ProxyInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyInputStream.ProxyInputStream"
                },
                {
                    "function name": "reset",
                    "function params": [],
                    "file name": "ProxyInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyInputStream.reset"
                },
                {
                    "function name": "mark",
                    "function params": [
                        "idx"
                    ],
                    "file name": "ProxyInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyInputStream.mark"
                },
                {
                    "function name": "skip",
                    "function params": [
                        "ln"
                    ],
                    "file name": "ProxyInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyInputStream.skip"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "ProxyOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyOutputStream.close"
                },
                {
                    "function name": "flush",
                    "function params": [],
                    "file name": "ProxyOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyOutputStream.flush"
                },
                {
                    "function name": "write",
                    "function params": [
                        "idx"
                    ],
                    "file name": "ProxyOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyOutputStream.write"
                },
                {
                    "function name": "ProxyOutputStream",
                    "function params": [
                        "proxy"
                    ],
                    "file name": "ProxyOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyOutputStream.ProxyOutputStream"
                },
                {
                    "function name": "write",
                    "function params": [
                        "bts",
                        "st",
                        "end"
                    ],
                    "file name": "ProxyOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyOutputStream.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "bts"
                    ],
                    "file name": "ProxyOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyOutputStream.write"
                }
            ],
            "date": "2003-07-27"
        },
        {
            "commit_id": 68,
            "hash": "41669d5e6724f1e1d31d85f02adda2d923ca4393",
            "commit_summary": "Remove private constructors because of problems with Velocity which needs an instance (Christoph Reck)\nsome todos.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140380 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/EndianUtils.java",
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/java/org/apache/commons/io/HexDump.java",
                "src/java/org/apache/commons/io/IOUtils.java"
            ],
            "functions": [],
            "date": "2003-07-29"
        },
        {
            "commit_id": 69,
            "hash": "6a1bb4d53562a50bbaad48ee2c94971649e24cf5",
            "commit_summary": "Bugzilla 22075: Copy copy methods from IOUtils to CopyUtils, deprecate old copy methods.\nBugzilla 22332: Deprecated FileUtils string methods, Code style-up\nSubmitted by: Matthew Hawthorne <mhawthorne at alumni.pitt.edu>\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140382 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/java/org/apache/commons/io/IOUtils.java"
            ],
            "functions": [
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding",
                        "bufferSize"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "CopyUtils",
                    "function params": [],
                    "file name": "CopyUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.CopyUtils"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding",
                        "bufferSize"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "isFileNewer",
                    "function params": [
                        "file",
                        "date"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.isFileNewer"
                },
                {
                    "function name": "toURLs",
                    "function params": [
                        "files"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.toURLs"
                },
                {
                    "function name": "basename",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.basename"
                },
                {
                    "function name": "deleteDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.deleteDirectory"
                },
                {
                    "function name": "sizeOfDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.sizeOfDirectory"
                },
                {
                    "function name": "basename",
                    "function params": [
                        "filename",
                        "suffix"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.basename"
                },
                {
                    "function name": "removeExtension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.removeExtension"
                },
                {
                    "function name": "filename",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.filename"
                },
                {
                    "function name": "extension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.extension"
                },
                {
                    "function name": "removePath",
                    "function params": [
                        "filepath"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.removePath"
                },
                {
                    "function name": "forceMkdir",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.forceMkdir"
                },
                {
                    "function name": "forceDelete",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.forceDelete"
                },
                {
                    "function name": "resolveFile",
                    "function params": [
                        "baseFile",
                        "filename"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.resolveFile"
                },
                {
                    "function name": "fileWrite",
                    "function params": [
                        "fileName",
                        "data"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.fileWrite"
                },
                {
                    "function name": "deleteDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.deleteDirectory"
                },
                {
                    "function name": "copyFile",
                    "function params": [
                        "source",
                        "destination"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyFile"
                },
                {
                    "function name": "forceDelete",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.forceDelete"
                },
                {
                    "function name": "getExtension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.getExtension"
                },
                {
                    "function name": "getFilesFromExtension",
                    "function params": [
                        "directory",
                        "extensions"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.getFilesFromExtension"
                },
                {
                    "function name": "getPath",
                    "function params": [
                        "filepath"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.getPath"
                },
                {
                    "function name": "copyFileToDirectory",
                    "function params": [
                        "source",
                        "destinationDirectory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyFileToDirectory"
                },
                {
                    "function name": "getPath",
                    "function params": [
                        "filepath",
                        "fileSeparatorChar"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.getPath"
                },
                {
                    "function name": "sizeOfDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.sizeOfDirectory"
                },
                {
                    "function name": "fileCopy",
                    "function params": [
                        "inFileName",
                        "outFileName"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.fileCopy"
                },
                {
                    "function name": "cleanDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.cleanDirectory"
                },
                {
                    "function name": "isValidFile",
                    "function params": [
                        "file",
                        "extensions"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.isValidFile"
                },
                {
                    "function name": "deleteDirectoryOnExit",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.deleteDirectoryOnExit"
                },
                {
                    "function name": "copyFileToDirectory",
                    "function params": [
                        "source",
                        "destinationDirectory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyFileToDirectory"
                },
                {
                    "function name": "contentEquals",
                    "function params": [
                        "file1",
                        "file2"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.contentEquals"
                },
                {
                    "function name": "isFileNewer",
                    "function params": [
                        "file",
                        "timeMillis"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.isFileNewer"
                },
                {
                    "function name": "removePath",
                    "function params": [
                        "filepath",
                        "fileSeparatorChar"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.removePath"
                },
                {
                    "function name": "toFile",
                    "function params": [
                        "url"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.toFile"
                },
                {
                    "function name": "cleanDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.cleanDirectory"
                },
                {
                    "function name": "catPath",
                    "function params": [
                        "lookupPath",
                        "path"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.catPath"
                },
                {
                    "function name": "dirname",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.dirname"
                },
                {
                    "function name": "copyURLToFile",
                    "function params": [
                        "source",
                        "destination"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyURLToFile"
                },
                {
                    "function name": "cleanDirectoryOnExit",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.cleanDirectoryOnExit"
                },
                {
                    "function name": "forceDeleteOnExit",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.forceDeleteOnExit"
                },
                {
                    "function name": "waitFor",
                    "function params": [
                        "fileName",
                        "seconds"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.waitFor"
                },
                {
                    "function name": "isFileNewer",
                    "function params": [
                        "file",
                        "reference"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.isFileNewer"
                },
                {
                    "function name": "normalize",
                    "function params": [
                        "path"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.normalize"
                },
                {
                    "function name": "IOUtils",
                    "function params": [],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.IOUtils"
                }
            ],
            "date": "2003-08-21"
        },
        {
            "commit_id": 70,
            "hash": "45a201a6a18076cb290e1c9bb30c9d0bd9e5ffa4",
            "commit_summary": "FileBasedTestCase as base class for test classes working with files.\n\nSpecial stream classes that can yell if a forbidden method is called.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140383 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "createFile",
                    "function params": [
                        "file",
                        "size"
                    ],
                    "file name": "FileBasedTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "full name": "src.test.org.apache.commons.io.testtools.FileBasedTestCase.createFile"
                },
                {
                    "function name": "assertEqualContent",
                    "function params": [
                        "b0",
                        "file"
                    ],
                    "file name": "FileBasedTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "full name": "src.test.org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent"
                },
                {
                    "function name": "newFile",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FileBasedTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "full name": "src.test.org.apache.commons.io.testtools.FileBasedTestCase.newFile"
                },
                {
                    "function name": "deleteFile",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileBasedTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "full name": "src.test.org.apache.commons.io.testtools.FileBasedTestCase.deleteFile"
                },
                {
                    "function name": "checkWrite",
                    "function params": [
                        "output"
                    ],
                    "file name": "FileBasedTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "full name": "src.test.org.apache.commons.io.testtools.FileBasedTestCase.checkWrite"
                },
                {
                    "function name": "generateTestData",
                    "function params": [
                        "size"
                    ],
                    "file name": "FileBasedTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "full name": "src.test.org.apache.commons.io.testtools.FileBasedTestCase.generateTestData"
                },
                {
                    "function name": "FileBasedTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "FileBasedTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "full name": "src.test.org.apache.commons.io.testtools.FileBasedTestCase.FileBasedTestCase"
                },
                {
                    "function name": "checkWrite",
                    "function params": [
                        "output"
                    ],
                    "file name": "FileBasedTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "full name": "src.test.org.apache.commons.io.testtools.FileBasedTestCase.checkWrite"
                },
                {
                    "function name": "generateTestData",
                    "function params": [
                        "out",
                        "size"
                    ],
                    "file name": "FileBasedTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "full name": "src.test.org.apache.commons.io.testtools.FileBasedTestCase.generateTestData"
                },
                {
                    "function name": "getTestDirectory",
                    "function params": [],
                    "file name": "FileBasedTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "full name": "src.test.org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory"
                },
                {
                    "function name": "assertEqualContent",
                    "function params": [
                        "f0",
                        "f1"
                    ],
                    "file name": "FileBasedTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "full name": "src.test.org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent"
                },
                {
                    "function name": "checkFile",
                    "function params": [
                        "file",
                        "referenceFile"
                    ],
                    "file name": "FileBasedTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "full name": "src.test.org.apache.commons.io.testtools.FileBasedTestCase.checkFile"
                },
                {
                    "function name": "YellOnCloseInputStream",
                    "function params": [
                        "proxy"
                    ],
                    "file name": "YellOnCloseInputStream.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/testtools/YellOnCloseInputStream.java",
                    "full name": "src.test.org.apache.commons.io.testtools.YellOnCloseInputStream.YellOnCloseInputStream"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "YellOnCloseInputStream.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/testtools/YellOnCloseInputStream.java",
                    "full name": "src.test.org.apache.commons.io.testtools.YellOnCloseInputStream.close"
                },
                {
                    "function name": "YellOnFlushAndCloseOutputStream",
                    "function params": [
                        "proxy",
                        "yellForFlush",
                        "yellForClose"
                    ],
                    "file name": "YellOnFlushAndCloseOutputStream.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/testtools/YellOnFlushAndCloseOutputStream.java",
                    "full name": "src.test.org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream"
                },
                {
                    "function name": "flush",
                    "function params": [],
                    "file name": "YellOnFlushAndCloseOutputStream.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/testtools/YellOnFlushAndCloseOutputStream.java",
                    "full name": "src.test.org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "YellOnFlushAndCloseOutputStream.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/testtools/YellOnFlushAndCloseOutputStream.java",
                    "full name": "src.test.org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.close"
                }
            ],
            "date": "2003-08-21"
        },
        {
            "commit_id": 71,
            "hash": "ea08b91e20fa6a49d40a31126d47424e3bd019f3",
            "commit_summary": "TestCases for isFileNewer methods in FileUtils\nSubmitted by: Alban Peignier <alban.peignier at free.fr>\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140384 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "testIsFileNewer",
                    "function params": [],
                    "file name": "FileUtilsFileNewerTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer"
                },
                {
                    "function name": "testIsFileNewerNoFile",
                    "function params": [],
                    "file name": "FileUtilsFileNewerTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerNoFile"
                },
                {
                    "function name": "FileUtilsFileNewerTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "FileUtilsFileNewerTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsFileNewerTestCase.FileUtilsFileNewerTestCase"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "FileUtilsFileNewerTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsFileNewerTestCase.setUp"
                },
                {
                    "function name": "testIsFileNewerNoDate",
                    "function params": [],
                    "file name": "FileUtilsFileNewerTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerNoDate"
                },
                {
                    "function name": "testIsFileNewerNoFileReference",
                    "function params": [],
                    "file name": "FileUtilsFileNewerTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerNoFileReference"
                },
                {
                    "function name": "testIsFileNewerImaginaryFile",
                    "function params": [],
                    "file name": "FileUtilsFileNewerTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerImaginaryFile"
                },
                {
                    "function name": "testIsFileNewer",
                    "function params": [
                        "description",
                        "file",
                        "time",
                        "wantedResult"
                    ],
                    "file name": "FileUtilsFileNewerTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "FileUtilsFileNewerTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsFileNewerTestCase.tearDown"
                }
            ],
            "date": "2003-08-21"
        },
        {
            "commit_id": 72,
            "hash": "1db3dd9683694300ba27e6c1247f9dc721d1b65f",
            "commit_summary": "Bugzilla 22075: Copy copy methods from IOUtils to CopyUtils, deprecate old copy methods.\nBugzilla 22332: Deprecated FileUtils string methods, Code style-up\nSubmitted by: Matthew Hawthorne <mhawthorne at alumni.pitt.edu>\n\nTestcases (and infrastructure) modified a bit by myself after applying Matthew's patches.\nCopyUtils testcases are done in memory now instead of using files.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140385 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "src/test/org/apache/commons/io/IOTestSuite.java",
                "src/test/org/apache/commons/io/IOUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testCopy_stringToWriter",
                    "function params": [],
                    "file name": "CopyUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.CopyUtilsTest.testCopy_stringToWriter"
                },
                {
                    "function name": "testCopy_byteArrayToOutputStream",
                    "function params": [],
                    "file name": "CopyUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToOutputStream"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "CopyUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.CopyUtilsTest.setUp"
                },
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "CopyUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.CopyUtilsTest.main"
                },
                {
                    "function name": "testCopy_stringToOutputStream",
                    "function params": [],
                    "file name": "CopyUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.CopyUtilsTest.testCopy_stringToOutputStream"
                },
                {
                    "function name": "testCopy_inputStreamToOutputStream",
                    "function params": [],
                    "file name": "CopyUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToOutputStream"
                },
                {
                    "function name": "testCopy_readerToOutputStream",
                    "function params": [],
                    "file name": "CopyUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.CopyUtilsTest.testCopy_readerToOutputStream"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "CopyUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.CopyUtilsTest.suite"
                },
                {
                    "function name": "testCopy_byteArrayToWriter",
                    "function params": [],
                    "file name": "CopyUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToWriter"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "CopyUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.CopyUtilsTest.tearDown"
                },
                {
                    "function name": "CopyUtilsTest",
                    "function params": [
                        "testName"
                    ],
                    "file name": "CopyUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.CopyUtilsTest.CopyUtilsTest"
                },
                {
                    "function name": "testCopy_inputStreamToWriter",
                    "function params": [],
                    "file name": "CopyUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToWriter"
                },
                {
                    "function name": "testCopy_readerToWriter",
                    "function params": [],
                    "file name": "CopyUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.CopyUtilsTest.testCopy_readerToWriter"
                },
                {
                    "function name": "testRemoveExtension",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testRemoveExtension"
                },
                {
                    "function name": "testCopyFile1ToDir",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyFile1ToDir"
                },
                {
                    "function name": "DISABLED__testGetExtensionWithPaths",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.DISABLED__testGetExtensionWithPaths"
                },
                {
                    "function name": "testResolveFileDot",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testResolveFileDot"
                },
                {
                    "function name": "testResolveFileDotDot",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testResolveFileDotDot"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.setUp"
                },
                {
                    "function name": "testNormalize",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testNormalize"
                },
                {
                    "function name": "testCopyFile2ToDir",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyFile2ToDir"
                },
                {
                    "function name": "testForceDeleteDir",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testForceDeleteDir"
                },
                {
                    "function name": "replaceAll",
                    "function params": [
                        "text",
                        "lookFor",
                        "replaceWith"
                    ],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.replaceAll"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.tearDown"
                },
                {
                    "function name": "testGetExtension",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testGetExtension"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.suite"
                },
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.main"
                },
                {
                    "function name": "DISABLED__testRemoveExtensionWithPaths",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.DISABLED__testRemoveExtensionWithPaths"
                },
                {
                    "function name": "testForceDeleteAFile1",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile1"
                },
                {
                    "function name": "testCopyFile2",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyFile2"
                },
                {
                    "function name": "testCopyFile1",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyFile1"
                },
                {
                    "function name": "testFileUtils",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testFileUtils"
                },
                {
                    "function name": "FileUtilsTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.FileUtilsTestCase"
                },
                {
                    "function name": "testForceDeleteAFile2",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile2"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "IOTestSuite.java",
                    "file old path": "src/test/org/apache/commons/io/IOTestSuite.java",
                    "file new path": "src/test/org/apache/commons/io/IOTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.IOTestSuite.suite"
                },
                {
                    "function name": "testReaderToString",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testReaderToString"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.setUp"
                },
                {
                    "function name": "testInputStreamToOutputStream",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testInputStreamToOutputStream"
                },
                {
                    "function name": "testStringToWriter",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testStringToWriter"
                },
                {
                    "function name": "testInputStreamToString",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testInputStreamToString"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.tearDown"
                },
                {
                    "function name": "testByteArrayToOutputStream",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testByteArrayToOutputStream"
                },
                {
                    "function name": "testReaderToOutputStream",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testReaderToOutputStream"
                },
                {
                    "function name": "testStringToByteArray",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testStringToByteArray"
                },
                {
                    "function name": "testInputStreamToByteArray",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray"
                },
                {
                    "function name": "assertEqualContent",
                    "function params": [
                        "f0",
                        "f1"
                    ],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.assertEqualContent"
                },
                {
                    "function name": "testByteArrayToString",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testByteArrayToString"
                },
                {
                    "function name": "assertEqualContent",
                    "function params": [
                        "b0",
                        "file"
                    ],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.assertEqualContent"
                },
                {
                    "function name": "testByteArrayToWriter",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testByteArrayToWriter"
                },
                {
                    "function name": "testInputStreamToWriter",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testInputStreamToWriter"
                },
                {
                    "function name": "testReaderToWriter",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testReaderToWriter"
                },
                {
                    "function name": "testStringToOutputStream",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testStringToOutputStream"
                }
            ],
            "date": "2003-08-21"
        },
        {
            "commit_id": 73,
            "hash": "95cddf5d03419405f083f2256cfa973ce83e48f4",
            "commit_summary": "Javadoc\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140389 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "src/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/TrueFileFilter.java"
            ],
            "functions": [
                {
                    "function name": "asFileFilter",
                    "function params": [
                        "filter"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.asFileFilter"
                },
                {
                    "function name": "FileFilterUtils",
                    "function params": [],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.FileFilterUtils"
                },
                {
                    "function name": "asFileFilter",
                    "function params": [
                        "filter"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.asFileFilter"
                }
            ],
            "date": "2003-09-20"
        },
        {
            "commit_id": 74,
            "hash": "f3454e26015b9880f596bf26e1c25f461763aae5",
            "commit_summary": "Fixed typos in apache license\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140393 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/CopyUtils.java",
                "src/java/org/apache/commons/io/EndianUtils.java",
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/java/org/apache/commons/io/HexDump.java",
                "src/java/org/apache/commons/io/IOUtils.java",
                "src/java/org/apache/commons/io/compress/tar/TarBuffer.java",
                "src/java/org/apache/commons/io/compress/tar/TarConstants.java",
                "src/java/org/apache/commons/io/compress/tar/TarEntry.java",
                "src/java/org/apache/commons/io/compress/tar/TarInputStream.java",
                "src/java/org/apache/commons/io/compress/tar/TarOutputStream.java",
                "src/java/org/apache/commons/io/compress/tar/TarUtils.java",
                "src/java/org/apache/commons/io/compress/zip/AsiExtraField.java",
                "src/java/org/apache/commons/io/compress/zip/ExtraFieldUtils.java",
                "src/java/org/apache/commons/io/compress/zip/UnixStat.java",
                "src/java/org/apache/commons/io/compress/zip/UnrecognizedExtraField.java",
                "src/java/org/apache/commons/io/compress/zip/ZipEntry.java",
                "src/java/org/apache/commons/io/compress/zip/ZipExtraField.java",
                "src/java/org/apache/commons/io/compress/zip/ZipLong.java",
                "src/java/org/apache/commons/io/compress/zip/ZipOutputStream.java",
                "src/java/org/apache/commons/io/compress/zip/ZipShort.java",
                "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "src/java/org/apache/commons/io/filefilter/IOFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "src/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                "src/java/org/apache/commons/io/input/CountingInputStream.java",
                "src/java/org/apache/commons/io/input/DemuxInputStream.java",
                "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "src/java/org/apache/commons/io/output/CountingOutputStream.java",
                "src/java/org/apache/commons/io/output/DemuxOutputStream.java",
                "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                "src/java/org/apache/commons/io/output/NullOutputStream.java",
                "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                "src/java/org/apache/commons/io/output/TeeOutputStream.java",
                "src/test/org/apache/commons/io/CopyUtilsTest.java",
                "src/test/org/apache/commons/io/DemuxTestCase.java",
                "src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "src/test/org/apache/commons/io/HexDumpTest.java",
                "src/test/org/apache/commons/io/IOTestSuite.java",
                "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                "src/test/org/apache/commons/io/testtools/YellOnCloseInputStream.java",
                "src/test/org/apache/commons/io/testtools/YellOnFlushAndCloseOutputStream.java"
            ],
            "functions": [],
            "date": "2003-10-13"
        },
        {
            "commit_id": 75,
            "hash": "d9224439fc7c437a665ae4b5d9f91e3676b90496",
            "commit_summary": "Bugzilla #22738 from yours truly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140394 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "getFilesFromExtension",
                    "function params": [
                        "directory",
                        "extensions"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.getFilesFromExtension"
                },
                {
                    "function name": "getFile",
                    "function params": [
                        "fileName"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.getFile"
                },
                {
                    "function name": "blendFiles",
                    "function params": [
                        "c",
                        "files"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.blendFiles"
                },
                {
                    "function name": "testFileUtils",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testFileUtils"
                },
                {
                    "function name": "testToURLs",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testToURLs"
                },
                {
                    "function name": "testCopyFile1ToDir",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyFile1ToDir"
                },
                {
                    "function name": "testRemoveExtension",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testRemoveExtension"
                },
                {
                    "function name": "testSizeOfDirectory",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testSizeOfDirectory"
                },
                {
                    "function name": "DISABLED__testGetExtensionWithPaths",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.DISABLED__testGetExtensionWithPaths"
                },
                {
                    "function name": "testMkdir",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testMkdir"
                },
                {
                    "function name": "DISABLED__testRemoveExtensionWithPaths",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.DISABLED__testRemoveExtensionWithPaths"
                },
                {
                    "function name": "testWaitFor",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testWaitFor"
                },
                {
                    "function name": "testCopyURLToFile",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyURLToFile"
                },
                {
                    "function name": "testCopyFile1",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyFile1"
                },
                {
                    "function name": "testContentEquals",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testContentEquals"
                },
                {
                    "function name": "FileUtilsTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.FileUtilsTestCase"
                },
                {
                    "function name": "testCopyFile2",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyFile2"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.setUp"
                },
                {
                    "function name": "XtestIsFileNewer",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.XtestIsFileNewer"
                },
                {
                    "function name": "testByteCountToDisplaySize",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySize"
                },
                {
                    "function name": "log",
                    "function params": [
                        "obj"
                    ],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.log"
                },
                {
                    "function name": "testCopyFile2ToDir",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyFile2ToDir"
                },
                {
                    "function name": "testForceDeleteDir",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testForceDeleteDir"
                },
                {
                    "function name": "testGetFilesFromExtension",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testGetFilesFromExtension"
                },
                {
                    "function name": "testGetPath",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testGetPath"
                },
                {
                    "function name": "replaceAll",
                    "function params": [
                        "text",
                        "lookFor",
                        "replaceWith"
                    ],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.replaceAll"
                },
                {
                    "function name": "testRemovePath",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testRemovePath"
                },
                {
                    "function name": "testForceMkdir",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testForceMkdir"
                },
                {
                    "function name": "testGetExtension",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testGetExtension"
                },
                {
                    "function name": "testCatPath",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCatPath"
                }
            ],
            "date": "2003-10-17"
        },
        {
            "commit_id": 76,
            "hash": "d3b1bac788bcef2487065bd699ab727bbd320f41",
            "commit_summary": "Bugfix for single prefix constructor (copy/paste-error)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140397 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java"
            ],
            "functions": [
                {
                    "function name": "PrefixFileFilter",
                    "function params": [
                        "prefix"
                    ],
                    "file name": "PrefixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter"
                }
            ],
            "date": "2003-11-22"
        },
        {
            "commit_id": 77,
            "hash": "ffe318486dba0a7dd2d14ee638059109acd01590",
            "commit_summary": "Filters for the whole name, not just the prefix or postfix.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140398 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "NameFileFilter",
                    "function params": [
                        "name"
                    ],
                    "file name": "NameFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter"
                },
                {
                    "function name": "NameFileFilter",
                    "function params": [
                        "names"
                    ],
                    "file name": "NameFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "NameFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NameFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file",
                        "name"
                    ],
                    "file name": "NameFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NameFileFilter.accept"
                },
                {
                    "function name": "NameFileFilter",
                    "function params": [
                        "names"
                    ],
                    "file name": "NameFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter"
                }
            ],
            "date": "2003-11-22"
        },
        {
            "commit_id": 78,
            "hash": "985c1831405bc7e96ea6a140b830594b9c41bf1e",
            "commit_summary": "Add the new name filter.\nAdd method to decorate a filter to become \"CVS-aware\", thus filtering out all CVS directories. This is driven by some functionality in FileUtils as I'm refactoring that class.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140399 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java"
            ],
            "functions": [
                {
                    "function name": "nameFileFilter",
                    "function params": [
                        "name"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter"
                },
                {
                    "function name": "makeCVSAware",
                    "function params": [
                        "filter"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.makeCVSAware"
                }
            ],
            "date": "2003-11-22"
        },
        {
            "commit_id": 79,
            "hash": "9d18fa2121851958b078e57a0bfa31054db2d766",
            "commit_summary": "More tests (especially the bug I just fixed in PrefixFileFilter and the new NameFileFilter)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140402 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testNameFilter",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilter"
                },
                {
                    "function name": "testSuffix",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix"
                },
                {
                    "function name": "testPrefix",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix"
                }
            ],
            "date": "2003-11-22"
        },
        {
            "commit_id": 80,
            "hash": "6114d8ab8a2030f51ec0887a540a06c93a09ba9e",
            "commit_summary": "Use Commons IO ByteArrayOutputStream\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140403 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java"
            ],
            "functions": [],
            "date": "2003-11-22"
        },
        {
            "commit_id": 81,
            "hash": "84bc510bcdd51a730116309c41bd827da0fe0a7f",
            "commit_summary": "Use Commons IO ByteArrayOutputStream\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140404 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/IOUtils.java",
                "src/test/org/apache/commons/io/CopyUtilsTest.java",
                "src/test/org/apache/commons/io/DemuxTestCase.java",
                "src/test/org/apache/commons/io/HexDumpTest.java"
            ],
            "functions": [],
            "date": "2003-11-22"
        },
        {
            "commit_id": 82,
            "hash": "3e4ec2a42b3118266deada58dbee39db2a48677b",
            "commit_summary": "I've moved some methods around while cleaning up, so, sorry for the big diff. I moved up the methods I checked through. There's a marker in the lower half of the file indicating where I progressed. Everything below that marker still has to be sorted out. I consider the stuff above that marker cleaned up and reviewed to a certain degree.\n\nReal changes are:\n- new method: touch(File)\n- some method signatures rewritten to use java.io.File instead of String, because it's this class' policy. This might break dependant projects.\n- updated some javadocs\n- Removed getFilesFromExtension (this method wants to do too much). This might break dependant projects.\n- Replacement for getFilesFromExtension, new method(s): listFiles which is implemented using the filefilter package. The CVS filter functionality of getFilesFromExtension can be achieved by using FileFilterUtils.makeCVSAware.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140405 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [
                {
                    "function name": "byteCountToDisplaySize",
                    "function params": [
                        "size"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.byteCountToDisplaySize"
                },
                {
                    "function name": "isFileNewer",
                    "function params": [
                        "file",
                        "date"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.isFileNewer"
                },
                {
                    "function name": "getPath",
                    "function params": [
                        "filepath",
                        "fileSeparatorChar"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.getPath"
                },
                {
                    "function name": "cleanDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.cleanDirectory"
                },
                {
                    "function name": "blendFiles",
                    "function params": [
                        "c",
                        "files"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.blendFiles"
                },
                {
                    "function name": "listFiles",
                    "function params": [
                        "directory",
                        "fileFilter",
                        "dirFilter"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.listFiles"
                },
                {
                    "function name": "isValidFile",
                    "function params": [
                        "file",
                        "extensions"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.isValidFile"
                },
                {
                    "function name": "toSuffixes",
                    "function params": [
                        "extensions"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.toSuffixes"
                },
                {
                    "function name": "deleteDirectoryOnExit",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.deleteDirectoryOnExit"
                },
                {
                    "function name": "copyFileToDirectory",
                    "function params": [
                        "source",
                        "destinationDirectory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyFileToDirectory"
                },
                {
                    "function name": "contentEquals",
                    "function params": [
                        "file1",
                        "file2"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.contentEquals"
                },
                {
                    "function name": "touch",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.touch"
                },
                {
                    "function name": "sizeOfDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.sizeOfDirectory"
                },
                {
                    "function name": "isFileNewer",
                    "function params": [
                        "file",
                        "timeMillis"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.isFileNewer"
                },
                {
                    "function name": "convertFileCollectionToFileArray",
                    "function params": [
                        "files"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.convertFileCollectionToFileArray"
                },
                {
                    "function name": "removePath",
                    "function params": [
                        "filepath",
                        "fileSeparatorChar"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.removePath"
                },
                {
                    "function name": "removeExtension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.removeExtension"
                },
                {
                    "function name": "removePath",
                    "function params": [
                        "filepath"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.removePath"
                },
                {
                    "function name": "forceMkdir",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.forceMkdir"
                },
                {
                    "function name": "waitFor",
                    "function params": [
                        "file",
                        "seconds"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.waitFor"
                },
                {
                    "function name": "byteCountToDisplaySize",
                    "function params": [
                        "size"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.byteCountToDisplaySize"
                },
                {
                    "function name": "catPath",
                    "function params": [
                        "lookupPath",
                        "path"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.catPath"
                },
                {
                    "function name": "resolveFile",
                    "function params": [
                        "baseFile",
                        "filename"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.resolveFile"
                },
                {
                    "function name": "fileExists",
                    "function params": [
                        "fileName"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.fileExists"
                },
                {
                    "function name": "cleanDirectoryOnExit",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.cleanDirectoryOnExit"
                },
                {
                    "function name": "waitFor",
                    "function params": [
                        "fileName",
                        "seconds"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.waitFor"
                },
                {
                    "function name": "isFileNewer",
                    "function params": [
                        "file",
                        "reference"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.isFileNewer"
                },
                {
                    "function name": "normalize",
                    "function params": [
                        "path"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.normalize"
                },
                {
                    "function name": "readFileToString",
                    "function params": [
                        "file",
                        "encoding"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.readFileToString"
                },
                {
                    "function name": "innerListFiles",
                    "function params": [
                        "files",
                        "directory",
                        "filter"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.innerListFiles"
                },
                {
                    "function name": "deleteDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.deleteDirectory"
                },
                {
                    "function name": "copyFile",
                    "function params": [
                        "source",
                        "destination"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyFile"
                },
                {
                    "function name": "listFiles",
                    "function params": [
                        "directory",
                        "extensions",
                        "recursive"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.listFiles"
                },
                {
                    "function name": "mkdir",
                    "function params": [
                        "dir"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.mkdir"
                },
                {
                    "function name": "getExtension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.getExtension"
                },
                {
                    "function name": "getFilesFromExtension",
                    "function params": [
                        "directory",
                        "extensions"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.getFilesFromExtension"
                },
                {
                    "function name": "writeStringToFile",
                    "function params": [
                        "file",
                        "data",
                        "encoding"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.writeStringToFile"
                },
                {
                    "function name": "fileDelete",
                    "function params": [
                        "fileName"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.fileDelete"
                },
                {
                    "function name": "getPath",
                    "function params": [
                        "filepath"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.getPath"
                }
            ],
            "date": "2003-11-22"
        },
        {
            "commit_id": 83,
            "hash": "2060d3b19b669908c22c58d108fa3dc9ec3e5822",
            "commit_summary": "Testcase for new FileUtils.listFiles() methods\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140406 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "testListFiles",
                    "function params": [],
                    "file name": "FileUtilsListFilesTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsListFilesTestCase.testListFiles"
                },
                {
                    "function name": "FileUtilsListFilesTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "FileUtilsListFilesTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsListFilesTestCase.FileUtilsListFilesTestCase"
                },
                {
                    "function name": "testListFilesByExtension",
                    "function params": [],
                    "file name": "FileUtilsListFilesTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsListFilesTestCase.testListFilesByExtension"
                },
                {
                    "function name": "getLocalTestDirectory",
                    "function params": [],
                    "file name": "FileUtilsListFilesTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsListFilesTestCase.getLocalTestDirectory"
                },
                {
                    "function name": "filesToFilenames",
                    "function params": [
                        "files"
                    ],
                    "file name": "FileUtilsListFilesTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsListFilesTestCase.filesToFilenames"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "FileUtilsListFilesTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsListFilesTestCase.setUp"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "FileUtilsListFilesTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsListFilesTestCase.tearDown"
                }
            ],
            "date": "2003-11-22"
        },
        {
            "commit_id": 84,
            "hash": "d221f4814fca46b4d4cfa72db8e384cacc9979ce",
            "commit_summary": "Adjust to new method signatures (File instead of String)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140407 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testFileUtils",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testFileUtils"
                },
                {
                    "function name": "testWaitFor",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testWaitFor"
                }
            ],
            "date": "2003-11-22"
        },
        {
            "commit_id": 85,
            "hash": "07b8e3325ebb212e2947fc9ec729d728f8af5348",
            "commit_summary": "Remove test for deleted getFilesFromExtension\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140408 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [],
            "date": "2003-11-22"
        },
        {
            "commit_id": 86,
            "hash": "b53bc0eef26160a5ee39f44a8d2da60538fcae4b",
            "commit_summary": "Now really delete getFilesFromExtension.\nUse one of the listFiles() (and optionally FileFilterUtils.makeCVSAware) instead\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140409 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [],
            "date": "2003-11-22"
        },
        {
            "commit_id": 87,
            "hash": "c594f49b9ee462420e1b26fc8e69f04a60d78f83",
            "commit_summary": "Fix test for contentEquals which throws an exception upon comparing directories now.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140410 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testContentEquals",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testContentEquals"
                }
            ],
            "date": "2003-11-22"
        },
        {
            "commit_id": 88,
            "hash": "6039304ef35e414097557c2bf5691ef72e46adfb",
            "commit_summary": "added a slightly better reason for why this class is of importance\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140412 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/ProxyInputStream.java"
            ],
            "functions": [],
            "date": "2003-11-23"
        },
        {
            "commit_id": 89,
            "hash": "fc4d32f8b415b47f9799344b81027b48fb979ce2",
            "commit_summary": "added a set of tests for when NameFileFilter is created with a List\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140413 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testNameFilter",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilter"
                }
            ],
            "date": "2003-11-23"
        },
        {
            "commit_id": 90,
            "hash": "9c52bac39ddeff7a3337f2de45bb022285a75bc6",
            "commit_summary": "modified so that when a read(byte[]) method returns a different number of bytes read than requested, the count is correct\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140414 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/CountingInputStream.java"
            ],
            "functions": [
                {
                    "function name": "read",
                    "function params": [
                        "b"
                    ],
                    "file name": "CountingInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.CountingInputStream.read"
                },
                {
                    "function name": "read",
                    "function params": [
                        "b",
                        "off",
                        "len"
                    ],
                    "file name": "CountingInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.CountingInputStream.read"
                }
            ],
            "date": "2003-11-23"
        },
        {
            "commit_id": 91,
            "hash": "a439404386c052622b880abd6baadef2f851a885",
            "commit_summary": "count to this.count so I can point out a change in the last commit from Filter to Proxy stream. FilterStream does not correctly proxy methods but optimises.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140415 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/CountingInputStream.java"
            ],
            "functions": [
                {
                    "function name": "read",
                    "function params": [],
                    "file name": "CountingInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.CountingInputStream.read"
                },
                {
                    "function name": "read",
                    "function params": [
                        "b",
                        "off",
                        "len"
                    ],
                    "file name": "CountingInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.CountingInputStream.read"
                },
                {
                    "function name": "read",
                    "function params": [
                        "b"
                    ],
                    "file name": "CountingInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.CountingInputStream.read"
                }
            ],
            "date": "2003-11-23"
        },
        {
            "commit_id": 92,
            "hash": "aa2db449ad2f7b38810fd4c5db5996f2f6094c53",
            "commit_summary": "unit test for counting input stream\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140416 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "CountingInputStreamTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "CountingInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/CountingInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.CountingInputStreamTest.CountingInputStreamTest"
                },
                {
                    "function name": "testCounting",
                    "function params": [],
                    "file name": "CountingInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/CountingInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.CountingInputStreamTest.testCounting"
                }
            ],
            "date": "2003-11-23"
        },
        {
            "commit_id": 93,
            "hash": "4753f91de1cfbc08b27c632fba0683044f597ab6",
            "commit_summary": "tests added for CountingOutputStream and TeeOutputStream\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140417 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "CountingOutputStreamTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "CountingOutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/CountingOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.CountingOutputStreamTest.CountingOutputStreamTest"
                },
                {
                    "function name": "testCounting",
                    "function params": [],
                    "file name": "CountingOutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/CountingOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.CountingOutputStreamTest.testCounting"
                },
                {
                    "function name": "assertByteArrayEquals",
                    "function params": [
                        "msg",
                        "array",
                        "start",
                        "end"
                    ],
                    "file name": "CountingOutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/CountingOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.CountingOutputStreamTest.assertByteArrayEquals"
                },
                {
                    "function name": "TeeOutputStreamTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "TeeOutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/TeeOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.TeeOutputStreamTest.TeeOutputStreamTest"
                },
                {
                    "function name": "main",
                    "function params": [
                        "ignored_args"
                    ],
                    "file name": "TeeOutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/TeeOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.TeeOutputStreamTest.main"
                },
                {
                    "function name": "testTee",
                    "function params": [],
                    "file name": "TeeOutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/TeeOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.TeeOutputStreamTest.testTee"
                },
                {
                    "function name": "assertByteArrayEquals",
                    "function params": [
                        "msg",
                        "array1",
                        "array2"
                    ],
                    "file name": "TeeOutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/TeeOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.TeeOutputStreamTest.assertByteArrayEquals"
                }
            ],
            "date": "2003-11-23"
        },
        {
            "commit_id": 94,
            "hash": "506478890c3846f947a3b6e0569ddcb8693f9a21",
            "commit_summary": "Removed the compress packages from IO. They will appear soon in a holding\nproject in the sandbox named 'compress'.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140421 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [],
            "date": "2003-11-23"
        },
        {
            "commit_id": 95,
            "hash": "b901739a6779843da45a917a141cfd17114909de",
            "commit_summary": "moved all filename methods out of FileUtils and into the new FilenameUtils class. Updated the unit tests, though one test in FileUtilsTest does a bit of Filename testing. Javadoc will need a bit of checking. Updated tasks.xml to reflect this.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140425 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "cleanDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.cleanDirectory"
                },
                {
                    "function name": "copyFileToDirectory",
                    "function params": [
                        "source",
                        "destinationDirectory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyFileToDirectory"
                },
                {
                    "function name": "sizeOfDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.sizeOfDirectory"
                },
                {
                    "function name": "deleteDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.deleteDirectory"
                },
                {
                    "function name": "forceDelete",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.forceDelete"
                },
                {
                    "function name": "getPath",
                    "function params": [
                        "filepath",
                        "fileSeparatorChar"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.getPath"
                },
                {
                    "function name": "getExtension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.getExtension"
                },
                {
                    "function name": "removePath",
                    "function params": [
                        "filepath",
                        "fileSeparatorChar"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.removePath"
                },
                {
                    "function name": "extension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.extension"
                },
                {
                    "function name": "normalize",
                    "function params": [
                        "path"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.normalize"
                },
                {
                    "function name": "forceDelete",
                    "function params": [
                        "file"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.forceDelete"
                },
                {
                    "function name": "catPath",
                    "function params": [
                        "lookupPath",
                        "path"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.catPath"
                },
                {
                    "function name": "removeExtension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.removeExtension"
                },
                {
                    "function name": "fileDelete",
                    "function params": [
                        "fileName"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.fileDelete"
                },
                {
                    "function name": "removePath",
                    "function params": [
                        "filepath"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.removePath"
                },
                {
                    "function name": "getFile",
                    "function params": [
                        "fileName"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.getFile"
                },
                {
                    "function name": "fileExists",
                    "function params": [
                        "fileName"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.fileExists"
                },
                {
                    "function name": "cleanDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.cleanDirectory"
                },
                {
                    "function name": "basename",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.basename"
                },
                {
                    "function name": "dirname",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.dirname"
                },
                {
                    "function name": "deleteDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.deleteDirectory"
                },
                {
                    "function name": "mkdir",
                    "function params": [
                        "dir"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.mkdir"
                },
                {
                    "function name": "filename",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.filename"
                },
                {
                    "function name": "sizeOfDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.sizeOfDirectory"
                },
                {
                    "function name": "basename",
                    "function params": [
                        "filename",
                        "suffix"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.basename"
                },
                {
                    "function name": "getPath",
                    "function params": [
                        "filepath"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.getPath"
                },
                {
                    "function name": "copyFileToDirectory",
                    "function params": [
                        "source",
                        "destinationDirectory"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.copyFileToDirectory"
                },
                {
                    "function name": "resolveFile",
                    "function params": [
                        "baseFile",
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.resolveFile"
                },
                {
                    "function name": "testFileUtils",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testFileUtils"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.setUp"
                },
                {
                    "function name": "testGetPath",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testGetPath"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.suite"
                },
                {
                    "function name": "replaceAll",
                    "function params": [
                        "text",
                        "lookFor",
                        "replaceWith"
                    ],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.replaceAll"
                },
                {
                    "function name": "DISABLED__testGetExtensionWithPaths",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.DISABLED__testGetExtensionWithPaths"
                },
                {
                    "function name": "testRemovePath",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testRemovePath"
                },
                {
                    "function name": "testRemoveExtension",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testRemoveExtension"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.tearDown"
                },
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.main"
                },
                {
                    "function name": "log",
                    "function params": [
                        "obj"
                    ],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.log"
                },
                {
                    "function name": "testResolveFileDotDot",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testResolveFileDotDot"
                },
                {
                    "function name": "testResolveFileDot",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testResolveFileDot"
                },
                {
                    "function name": "testCatPath",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testCatPath"
                },
                {
                    "function name": "FilenameUtilsTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.FilenameUtilsTestCase"
                },
                {
                    "function name": "testMkdir",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testMkdir"
                },
                {
                    "function name": "testGetExtension",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testGetExtension"
                },
                {
                    "function name": "testNormalize",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testNormalize"
                },
                {
                    "function name": "DISABLED__testRemoveExtensionWithPaths",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.DISABLED__testRemoveExtensionWithPaths"
                }
            ],
            "date": "2003-11-23"
        },
        {
            "commit_id": 96,
            "hash": "b3601a1a39bc3c4f6d10bce7218d162e449eebf3",
            "commit_summary": "better than nothing\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140427 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "NullOutputStreamTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "NullOutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/NullOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.NullOutputStreamTest.NullOutputStreamTest"
                },
                {
                    "function name": "testNull",
                    "function params": [],
                    "file name": "NullOutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/NullOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.NullOutputStreamTest.testNull"
                }
            ],
            "date": "2003-11-25"
        },
        {
            "commit_id": 97,
            "hash": "d0e9037f9c64a203dbdc1bd98b03877d4eda3510",
            "commit_summary": "Killing this to get to 1.0.\n\nThe pluralised class has the better javadoc and has been around since\nJuly. The only difference is that EndianUtil has 5 constants that\nEndianUtil(s) itself has no need for.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140428 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [],
            "date": "2003-11-26"
        },
        {
            "commit_id": 98,
            "hash": "297ea8ee3d60ef5279d9d0934c14c7a067d30d17",
            "commit_summary": "the beginnings of a unit test for this class\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140429 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "testSwapShort",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testSwapShort"
                },
                {
                    "function name": "EndianUtilsTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "EndianUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.EndianUtilsTest"
                },
                {
                    "function name": "testSwapInteger",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testSwapInteger"
                },
                {
                    "function name": "testSwapLong",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testSwapLong"
                }
            ],
            "date": "2003-11-26"
        },
        {
            "commit_id": 99,
            "hash": "20155901bf0972af2eb5377d12393335976718f1",
            "commit_summary": "Filled things in a bit more test wise.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140430 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/EndianUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "testSymmetry",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testSymmetry"
                },
                {
                    "function name": "testSwapShort",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testSwapShort"
                }
            ],
            "date": "2003-11-26"
        },
        {
            "commit_id": 100,
            "hash": "c5e108cc7c78ac689f75746cbe39a52331ff1a09",
            "commit_summary": "Can't say I understand Float.intBitsToFloat and the Double.longBitsToDouble,\nbut seems to pass the test well enough. I just have this feeling it should\nbe complaining about lost bits.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140431 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/EndianUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "testSwapLong",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testSwapLong"
                },
                {
                    "function name": "testSwapDouble",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testSwapDouble"
                },
                {
                    "function name": "testSwapFloat",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testSwapFloat"
                },
                {
                    "function name": "testSymmetry",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testSymmetry"
                }
            ],
            "date": "2003-11-26"
        },
        {
            "commit_id": 101,
            "hash": "b62e9c2e3cf03e0bf6fb40585ae857eec3f26610",
            "commit_summary": "It seems that the values passed into writeShort methods should be shorts not ints.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140432 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/EndianUtils.java"
            ],
            "functions": [
                {
                    "function name": "writeSwappedShort",
                    "function params": [
                        "data",
                        "offset",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedShort"
                },
                {
                    "function name": "writeSwappedShort",
                    "function params": [
                        "data",
                        "offset",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedShort"
                },
                {
                    "function name": "writeSwappedShort",
                    "function params": [
                        "output",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedShort"
                },
                {
                    "function name": "writeSwappedShort",
                    "function params": [
                        "output",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedShort"
                }
            ],
            "date": "2003-11-27"
        },
        {
            "commit_id": 102,
            "hash": "d0efecf204a20fadf1dae6e18ee34ea1f970973a",
            "commit_summary": "The byte array element when shifted is only in an 'int' scope I believe,\nso when it's shifted by more than 24, it goes off the end.\n\nMy solution is to break in two parts and then shift them on top once they're\nin a long scope.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140433 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/EndianUtils.java"
            ],
            "functions": [
                {
                    "function name": "readSwappedLong",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedLong"
                }
            ],
            "date": "2003-11-27"
        },
        {
            "commit_id": 103,
            "hash": "7df318bdc9a289511b581cd892a2222f6a7afaac",
            "commit_summary": "Added unit tests for the read/write methods for short/int/long with byte[].\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140434 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/EndianUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "testWriteSwappedLong",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong"
                },
                {
                    "function name": "testWriteSwappedShort",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testWriteSwappedShort"
                },
                {
                    "function name": "testWriteSwappedInteger",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testWriteSwappedInteger"
                },
                {
                    "function name": "testReadSwappedShort",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testReadSwappedShort"
                },
                {
                    "function name": "testReadSwappedLong",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testReadSwappedLong"
                },
                {
                    "function name": "testReadSwappedInteger",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testReadSwappedInteger"
                }
            ],
            "date": "2003-11-27"
        },
        {
            "commit_id": 104,
            "hash": "374feada250156b14d14a242033e4ebf111b2b53",
            "commit_summary": "removed unused line and added the read/write float byte methods\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140435 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/EndianUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "testReadSwappedFloat",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat"
                },
                {
                    "function name": "testWriteSwappedFloat",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testWriteSwappedFloat"
                },
                {
                    "function name": "testReadSwappedLong",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testReadSwappedLong"
                }
            ],
            "date": "2003-11-27"
        },
        {
            "commit_id": 105,
            "hash": "65ae33cbdae95c4230131f73d1e76de8f5f61321",
            "commit_summary": "added read/write double byte methods\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140436 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/EndianUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "testReadSwappedDouble",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testReadSwappedDouble"
                },
                {
                    "function name": "testWriteSwappedDouble",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testWriteSwappedDouble"
                }
            ],
            "date": "2003-11-27"
        },
        {
            "commit_id": 106,
            "hash": "02ceff52b5513ef6f48c5f8d4d809daad7566f7f",
            "commit_summary": "Removed comment about unit tests coming soon. It's been 2 years and the\nother stuff never had ut's anyway. I hope. Else I just wasted a lot of time.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140437 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/EndianUtils.java"
            ],
            "functions": [],
            "date": "2003-11-27"
        },
        {
            "commit_id": 107,
            "hash": "ed23a1ad6dbece4c3d7efc0eb5f3c6f51ddb7861",
            "commit_summary": "Removing the 4 month deprecated IOUtil class\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140439 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [],
            "date": "2003-11-27"
        },
        {
            "commit_id": 108,
            "hash": "65c6dc37ee499861e46661bbe73c339818707b89",
            "commit_summary": "removed main method\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140440 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/output/TeeOutputStreamTest.java"
            ],
            "functions": [],
            "date": "2003-11-27"
        },
        {
            "commit_id": 109,
            "hash": "43692b54237b49929e308552091d8a1cab97077f",
            "commit_summary": "removed the javadoc as commons-util is long dead\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140441 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/output/LockableFileWriter.java"
            ],
            "functions": [],
            "date": "2003-11-27"
        },
        {
            "commit_id": 110,
            "hash": "54a6cd666d4513e505d3add7a6ba5cc3463fd9ce",
            "commit_summary": "removed avalon comment as not important to segregate now\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140443 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java"
            ],
            "functions": [],
            "date": "2003-11-27"
        },
        {
            "commit_id": 111,
            "hash": "469ee761f04f1c3835b9dfd016a6efbec33a9d7b",
            "commit_summary": "removed log method as nothing uses it\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140444 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FilenameUtilsTestCase.java"
            ],
            "functions": [],
            "date": "2003-11-27"
        },
        {
            "commit_id": 112,
            "hash": "62933fa0b495f47154e91b71d85b7004d965e9f3",
            "commit_summary": "Improved test: Test listFiles with extensions = null\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140447 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java"
            ],
            "functions": [
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "FileUtilsListFilesTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsListFilesTestCase.setUp"
                },
                {
                    "function name": "testListFilesByExtension",
                    "function params": [],
                    "file name": "FileUtilsListFilesTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsListFilesTestCase.testListFilesByExtension"
                }
            ],
            "date": "2003-12-25"
        },
        {
            "commit_id": 113,
            "hash": "65b3c8a113786f6fb9ab9a387d9631012395fcf0",
            "commit_summary": "BugZilla #25742:\nChange listFiles so its behaviour matches the javadocs.\nFixes NPE when extension is null.\nSubmitted by: Ignat Skoryh <ignat.at.tiger.unisquad.com>\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140448 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [
                {
                    "function name": "listFiles",
                    "function params": [
                        "directory",
                        "extensions",
                        "recursive"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.listFiles"
                }
            ],
            "date": "2003-12-25"
        },
        {
            "commit_id": 114,
            "hash": "418d7a0ac343be700fd251d747bcc2d7ac0056d7",
            "commit_summary": "Renamed shutdownXxx methods to closeQuietly(Xxx).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140449 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/java/org/apache/commons/io/IOUtils.java",
                "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java"
            ],
            "functions": [
                {
                    "function name": "copyFile",
                    "function params": [
                        "source",
                        "destination"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyFile"
                },
                {
                    "function name": "copyURLToFile",
                    "function params": [
                        "source",
                        "destination"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyURLToFile"
                },
                {
                    "function name": "readFileToString",
                    "function params": [
                        "file",
                        "encoding"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.readFileToString"
                },
                {
                    "function name": "writeStringToFile",
                    "function params": [
                        "file",
                        "data",
                        "encoding"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.writeStringToFile"
                },
                {
                    "function name": "contentEquals",
                    "function params": [
                        "file1",
                        "file2"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.contentEquals"
                },
                {
                    "function name": "closeQuietly",
                    "function params": [
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.closeQuietly"
                },
                {
                    "function name": "closeQuietly",
                    "function params": [
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.closeQuietly"
                },
                {
                    "function name": "closeQuietly",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.closeQuietly"
                },
                {
                    "function name": "closeQuietly",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.closeQuietly"
                },
                {
                    "function name": "createFile",
                    "function params": [
                        "file",
                        "size"
                    ],
                    "file name": "FileBasedTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "full name": "src.test.org.apache.commons.io.testtools.FileBasedTestCase.createFile"
                }
            ],
            "date": "2003-12-29"
        },
        {
            "commit_id": 115,
            "hash": "8baab07e0d47ba43a197933f6519141871fde6c3",
            "commit_summary": "fixed the links to point to FileUtils\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140451 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java"
            ],
            "functions": [],
            "date": "2003-12-29"
        },
        {
            "commit_id": 116,
            "hash": "a77ea19924b8590d847d75720f28afcaac84ebfb",
            "commit_summary": "FilterReader and FilterWriter are not predictable either, so adding these simple classes\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140453 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "mark",
                    "function params": [
                        "idx"
                    ],
                    "file name": "ProxyReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyReader.mark"
                },
                {
                    "function name": "read",
                    "function params": [],
                    "file name": "ProxyReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyReader.read"
                },
                {
                    "function name": "skip",
                    "function params": [
                        "ln"
                    ],
                    "file name": "ProxyReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyReader.skip"
                },
                {
                    "function name": "read",
                    "function params": [
                        "chr",
                        "st",
                        "end"
                    ],
                    "file name": "ProxyReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyReader.read"
                },
                {
                    "function name": "markSupported",
                    "function params": [],
                    "file name": "ProxyReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyReader.markSupported"
                },
                {
                    "function name": "read",
                    "function params": [
                        "chr"
                    ],
                    "file name": "ProxyReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyReader.read"
                },
                {
                    "function name": "ready",
                    "function params": [],
                    "file name": "ProxyReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyReader.ready"
                },
                {
                    "function name": "ProxyReader",
                    "function params": [
                        "proxy"
                    ],
                    "file name": "ProxyReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyReader.ProxyReader"
                },
                {
                    "function name": "reset",
                    "function params": [],
                    "file name": "ProxyReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyReader.reset"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "ProxyReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyReader.close"
                },
                {
                    "function name": "ProxyWriter",
                    "function params": [
                        "proxy"
                    ],
                    "file name": "ProxyWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.ProxyWriter"
                },
                {
                    "function name": "write",
                    "function params": [
                        "str"
                    ],
                    "file name": "ProxyWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "str",
                        "st",
                        "end"
                    ],
                    "file name": "ProxyWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "idx"
                    ],
                    "file name": "ProxyWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.write"
                },
                {
                    "function name": "flush",
                    "function params": [],
                    "file name": "ProxyWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.flush"
                },
                {
                    "function name": "write",
                    "function params": [
                        "chr",
                        "st",
                        "end"
                    ],
                    "file name": "ProxyWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "chr"
                    ],
                    "file name": "ProxyWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.write"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "ProxyWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.close"
                }
            ],
            "date": "2003-12-29"
        },
        {
            "commit_id": 117,
            "hash": "a330996bf5514705e476d491069b1a4a65794023",
            "commit_summary": "made toSuffixes private as it is a helper method to another method\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140455 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [
                {
                    "function name": "toSuffixes",
                    "function params": [
                        "extensions"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.toSuffixes"
                }
            ],
            "date": "2003-12-29"
        },
        {
            "commit_id": 118,
            "hash": "d5e24a4f1a2ff0e5c565f5b78fc0691e639b876e",
            "commit_summary": "removed lots of finals\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140456 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/CopyUtils.java",
                "src/java/org/apache/commons/io/EndianUtils.java",
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/java/org/apache/commons/io/FilenameUtils.java",
                "src/java/org/apache/commons/io/HexDump.java",
                "src/java/org/apache/commons/io/IOUtils.java"
            ],
            "functions": [
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding",
                        "bufferSize"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding",
                        "bufferSize"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding",
                        "bufferSize"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding",
                        "bufferSize"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "readSwappedLong",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedLong"
                },
                {
                    "function name": "swapInteger",
                    "function params": [
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.swapInteger"
                },
                {
                    "function name": "readSwappedUnsignedShort",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedUnsignedShort"
                },
                {
                    "function name": "readSwappedInteger",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedInteger"
                },
                {
                    "function name": "swapLong",
                    "function params": [
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.swapLong"
                },
                {
                    "function name": "readSwappedShort",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedShort"
                },
                {
                    "function name": "writeSwappedInteger",
                    "function params": [
                        "data",
                        "offset",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedInteger"
                },
                {
                    "function name": "writeSwappedFloat",
                    "function params": [
                        "data",
                        "offset",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedFloat"
                },
                {
                    "function name": "readSwappedDouble",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedDouble"
                },
                {
                    "function name": "readSwappedShort",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedShort"
                },
                {
                    "function name": "readSwappedUnsignedShort",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedUnsignedShort"
                },
                {
                    "function name": "readSwappedFloat",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedFloat"
                },
                {
                    "function name": "readSwappedUnsignedShort",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedUnsignedShort"
                },
                {
                    "function name": "readSwappedUnsignedShort",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedUnsignedShort"
                },
                {
                    "function name": "readSwappedLong",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedLong"
                },
                {
                    "function name": "readSwappedShort",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedShort"
                },
                {
                    "function name": "readSwappedFloat",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedFloat"
                },
                {
                    "function name": "swapDouble",
                    "function params": [
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.swapDouble"
                },
                {
                    "function name": "readSwappedDouble",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedDouble"
                },
                {
                    "function name": "writeSwappedDouble",
                    "function params": [
                        "data",
                        "offset",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedDouble"
                },
                {
                    "function name": "writeSwappedFloat",
                    "function params": [
                        "output",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedFloat"
                },
                {
                    "function name": "writeSwappedFloat",
                    "function params": [
                        "data",
                        "offset",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedFloat"
                },
                {
                    "function name": "read",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.read"
                },
                {
                    "function name": "readSwappedLong",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedLong"
                },
                {
                    "function name": "swapInteger",
                    "function params": [
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.swapInteger"
                },
                {
                    "function name": "swapFloat",
                    "function params": [
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.swapFloat"
                },
                {
                    "function name": "swapLong",
                    "function params": [
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.swapLong"
                },
                {
                    "function name": "writeSwappedShort",
                    "function params": [
                        "data",
                        "offset",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedShort"
                },
                {
                    "function name": "swapDouble",
                    "function params": [
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.swapDouble"
                },
                {
                    "function name": "readSwappedDouble",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedDouble"
                },
                {
                    "function name": "writeSwappedShort",
                    "function params": [
                        "data",
                        "offset",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedShort"
                },
                {
                    "function name": "readSwappedInteger",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedInteger"
                },
                {
                    "function name": "writeSwappedLong",
                    "function params": [
                        "output",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedLong"
                },
                {
                    "function name": "readSwappedUnsignedInteger",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger"
                },
                {
                    "function name": "writeSwappedFloat",
                    "function params": [
                        "output",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedFloat"
                },
                {
                    "function name": "writeSwappedDouble",
                    "function params": [
                        "data",
                        "offset",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedDouble"
                },
                {
                    "function name": "readSwappedUnsignedInteger",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger"
                },
                {
                    "function name": "writeSwappedInteger",
                    "function params": [
                        "output",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedInteger"
                },
                {
                    "function name": "readSwappedLong",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedLong"
                },
                {
                    "function name": "writeSwappedDouble",
                    "function params": [
                        "output",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedDouble"
                },
                {
                    "function name": "readSwappedUnsignedInteger",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger"
                },
                {
                    "function name": "swapFloat",
                    "function params": [
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.swapFloat"
                },
                {
                    "function name": "writeSwappedInteger",
                    "function params": [
                        "output",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedInteger"
                },
                {
                    "function name": "swapShort",
                    "function params": [
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.swapShort"
                },
                {
                    "function name": "readSwappedDouble",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedDouble"
                },
                {
                    "function name": "swapShort",
                    "function params": [
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.swapShort"
                },
                {
                    "function name": "readSwappedFloat",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedFloat"
                },
                {
                    "function name": "readSwappedUnsignedInteger",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger"
                },
                {
                    "function name": "writeSwappedLong",
                    "function params": [
                        "output",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedLong"
                },
                {
                    "function name": "writeSwappedLong",
                    "function params": [
                        "data",
                        "offset",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedLong"
                },
                {
                    "function name": "readSwappedInteger",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedInteger"
                },
                {
                    "function name": "writeSwappedLong",
                    "function params": [
                        "data",
                        "offset",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedLong"
                },
                {
                    "function name": "readSwappedShort",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedShort"
                },
                {
                    "function name": "read",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.read"
                },
                {
                    "function name": "writeSwappedShort",
                    "function params": [
                        "output",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedShort"
                },
                {
                    "function name": "readSwappedInteger",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedInteger"
                },
                {
                    "function name": "writeSwappedDouble",
                    "function params": [
                        "output",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedDouble"
                },
                {
                    "function name": "writeSwappedShort",
                    "function params": [
                        "output",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedShort"
                },
                {
                    "function name": "readSwappedFloat",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedFloat"
                },
                {
                    "function name": "writeSwappedInteger",
                    "function params": [
                        "data",
                        "offset",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedInteger"
                },
                {
                    "function name": "deleteDirectoryOnExit",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.deleteDirectoryOnExit"
                },
                {
                    "function name": "waitFor",
                    "function params": [
                        "file",
                        "seconds"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.waitFor"
                },
                {
                    "function name": "isFileNewer",
                    "function params": [
                        "file",
                        "timeMillis"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.isFileNewer"
                },
                {
                    "function name": "forceMkdir",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.forceMkdir"
                },
                {
                    "function name": "sizeOfDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.sizeOfDirectory"
                },
                {
                    "function name": "toFile",
                    "function params": [
                        "url"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.toFile"
                },
                {
                    "function name": "sizeOfDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.sizeOfDirectory"
                },
                {
                    "function name": "cleanDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.cleanDirectory"
                },
                {
                    "function name": "waitFor",
                    "function params": [
                        "file",
                        "seconds"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.waitFor"
                },
                {
                    "function name": "readFileToString",
                    "function params": [
                        "file",
                        "encoding"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.readFileToString"
                },
                {
                    "function name": "copyURLToFile",
                    "function params": [
                        "source",
                        "destination"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyURLToFile"
                },
                {
                    "function name": "cleanDirectoryOnExit",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.cleanDirectoryOnExit"
                },
                {
                    "function name": "isFileNewer",
                    "function params": [
                        "file",
                        "reference"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.isFileNewer"
                },
                {
                    "function name": "forceDeleteOnExit",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.forceDeleteOnExit"
                },
                {
                    "function name": "isFileNewer",
                    "function params": [
                        "file",
                        "date"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.isFileNewer"
                },
                {
                    "function name": "contentEquals",
                    "function params": [
                        "file1",
                        "file2"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.contentEquals"
                },
                {
                    "function name": "deleteDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.deleteDirectory"
                },
                {
                    "function name": "toSuffixes",
                    "function params": [
                        "extensions"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.toSuffixes"
                },
                {
                    "function name": "isFileNewer",
                    "function params": [
                        "file",
                        "reference"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.isFileNewer"
                },
                {
                    "function name": "readFileToString",
                    "function params": [
                        "file",
                        "encoding"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.readFileToString"
                },
                {
                    "function name": "copyFile",
                    "function params": [
                        "source",
                        "destination"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyFile"
                },
                {
                    "function name": "copyFileToDirectory",
                    "function params": [
                        "source",
                        "destinationDirectory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyFileToDirectory"
                },
                {
                    "function name": "deleteDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.deleteDirectory"
                },
                {
                    "function name": "forceDeleteOnExit",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.forceDeleteOnExit"
                },
                {
                    "function name": "forceDelete",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.forceDelete"
                },
                {
                    "function name": "forceDelete",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.forceDelete"
                },
                {
                    "function name": "toURLs",
                    "function params": [
                        "files"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.toURLs"
                },
                {
                    "function name": "isFileNewer",
                    "function params": [
                        "file",
                        "timeMillis"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.isFileNewer"
                },
                {
                    "function name": "deleteDirectoryOnExit",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.deleteDirectoryOnExit"
                },
                {
                    "function name": "forceMkdir",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.forceMkdir"
                },
                {
                    "function name": "writeStringToFile",
                    "function params": [
                        "file",
                        "data",
                        "encoding"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.writeStringToFile"
                },
                {
                    "function name": "toFile",
                    "function params": [
                        "url"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.toFile"
                },
                {
                    "function name": "copyFileToDirectory",
                    "function params": [
                        "source",
                        "destinationDirectory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyFileToDirectory"
                },
                {
                    "function name": "toURLs",
                    "function params": [
                        "files"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.toURLs"
                },
                {
                    "function name": "isFileNewer",
                    "function params": [
                        "file",
                        "date"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.isFileNewer"
                },
                {
                    "function name": "cleanDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.cleanDirectory"
                },
                {
                    "function name": "copyURLToFile",
                    "function params": [
                        "source",
                        "destination"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyURLToFile"
                },
                {
                    "function name": "writeStringToFile",
                    "function params": [
                        "file",
                        "data",
                        "encoding"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.writeStringToFile"
                },
                {
                    "function name": "toSuffixes",
                    "function params": [
                        "extensions"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.toSuffixes"
                },
                {
                    "function name": "cleanDirectoryOnExit",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.cleanDirectoryOnExit"
                },
                {
                    "function name": "contentEquals",
                    "function params": [
                        "file1",
                        "file2"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.contentEquals"
                },
                {
                    "function name": "copyFile",
                    "function params": [
                        "source",
                        "destination"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyFile"
                },
                {
                    "function name": "catPath",
                    "function params": [
                        "lookupPath",
                        "path"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.catPath"
                },
                {
                    "function name": "normalize",
                    "function params": [
                        "path"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.normalize"
                },
                {
                    "function name": "removePath",
                    "function params": [
                        "filepath",
                        "fileSeparatorChar"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.removePath"
                },
                {
                    "function name": "removePath",
                    "function params": [
                        "filepath"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.removePath"
                },
                {
                    "function name": "deleteDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.deleteDirectory"
                },
                {
                    "function name": "removeExtension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.removeExtension"
                },
                {
                    "function name": "normalize",
                    "function params": [
                        "path"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.normalize"
                },
                {
                    "function name": "forceDelete",
                    "function params": [
                        "file"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.forceDelete"
                },
                {
                    "function name": "cleanDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.cleanDirectory"
                },
                {
                    "function name": "deleteDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.deleteDirectory"
                },
                {
                    "function name": "getPath",
                    "function params": [
                        "filepath",
                        "fileSeparatorChar"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.getPath"
                },
                {
                    "function name": "removePath",
                    "function params": [
                        "filepath"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.removePath"
                },
                {
                    "function name": "resolveFile",
                    "function params": [
                        "baseFile",
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.resolveFile"
                },
                {
                    "function name": "catPath",
                    "function params": [
                        "lookupPath",
                        "path"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.catPath"
                },
                {
                    "function name": "sizeOfDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.sizeOfDirectory"
                },
                {
                    "function name": "sizeOfDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.sizeOfDirectory"
                },
                {
                    "function name": "copyFileToDirectory",
                    "function params": [
                        "source",
                        "destinationDirectory"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.copyFileToDirectory"
                },
                {
                    "function name": "getPath",
                    "function params": [
                        "filepath"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.getPath"
                },
                {
                    "function name": "getPath",
                    "function params": [
                        "filepath",
                        "fileSeparatorChar"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.getPath"
                },
                {
                    "function name": "getExtension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.getExtension"
                },
                {
                    "function name": "removeExtension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.removeExtension"
                },
                {
                    "function name": "copyFileToDirectory",
                    "function params": [
                        "source",
                        "destinationDirectory"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.copyFileToDirectory"
                },
                {
                    "function name": "resolveFile",
                    "function params": [
                        "baseFile",
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.resolveFile"
                },
                {
                    "function name": "getExtension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.getExtension"
                },
                {
                    "function name": "removePath",
                    "function params": [
                        "filepath",
                        "fileSeparatorChar"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.removePath"
                },
                {
                    "function name": "getPath",
                    "function params": [
                        "filepath"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.getPath"
                },
                {
                    "function name": "cleanDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.cleanDirectory"
                },
                {
                    "function name": "forceDelete",
                    "function params": [
                        "file"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.forceDelete"
                },
                {
                    "function name": "dump",
                    "function params": [
                        "value"
                    ],
                    "file name": "HexDump.java",
                    "file old path": "src/java/org/apache/commons/io/HexDump.java",
                    "file new path": "src/java/org/apache/commons/io/HexDump.java",
                    "full name": "src.java.org.apache.commons.io.HexDump.dump"
                },
                {
                    "function name": "dump",
                    "function params": [
                        "value"
                    ],
                    "file name": "HexDump.java",
                    "file old path": "src/java/org/apache/commons/io/HexDump.java",
                    "file new path": "src/java/org/apache/commons/io/HexDump.java",
                    "full name": "src.java.org.apache.commons.io.HexDump.dump"
                },
                {
                    "function name": "dump",
                    "function params": [
                        "value"
                    ],
                    "file name": "HexDump.java",
                    "file old path": "src/java/org/apache/commons/io/HexDump.java",
                    "file new path": "src/java/org/apache/commons/io/HexDump.java",
                    "full name": "src.java.org.apache.commons.io.HexDump.dump"
                },
                {
                    "function name": "dump",
                    "function params": [
                        "data",
                        "offset",
                        "stream",
                        "index"
                    ],
                    "file name": "HexDump.java",
                    "file old path": "src/java/org/apache/commons/io/HexDump.java",
                    "file new path": "src/java/org/apache/commons/io/HexDump.java",
                    "full name": "src.java.org.apache.commons.io.HexDump.dump"
                },
                {
                    "function name": "dump",
                    "function params": [
                        "data",
                        "offset",
                        "stream",
                        "index"
                    ],
                    "file name": "HexDump.java",
                    "file old path": "src/java/org/apache/commons/io/HexDump.java",
                    "file new path": "src/java/org/apache/commons/io/HexDump.java",
                    "full name": "src.java.org.apache.commons.io.HexDump.dump"
                },
                {
                    "function name": "dump",
                    "function params": [
                        "value"
                    ],
                    "file name": "HexDump.java",
                    "file old path": "src/java/org/apache/commons/io/HexDump.java",
                    "file new path": "src/java/org/apache/commons/io/HexDump.java",
                    "full name": "src.java.org.apache.commons.io.HexDump.dump"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toByteArray"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toByteArray"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "encoding",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toByteArray"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toByteArray"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "closeQuietly",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.closeQuietly"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toByteArray"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toByteArray"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "closeQuietly",
                    "function params": [
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.closeQuietly"
                },
                {
                    "function name": "closeQuietly",
                    "function params": [
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.closeQuietly"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "encoding",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toByteArray"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "closeQuietly",
                    "function params": [
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.closeQuietly"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toByteArray"
                },
                {
                    "function name": "closeQuietly",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.closeQuietly"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "encoding",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toByteArray"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toByteArray"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toByteArray"
                },
                {
                    "function name": "contentEquals",
                    "function params": [
                        "input1",
                        "input2"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.contentEquals"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "closeQuietly",
                    "function params": [
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.closeQuietly"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "contentEquals",
                    "function params": [
                        "input1",
                        "input2"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.contentEquals"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toByteArray"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "encoding",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "closeQuietly",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.closeQuietly"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "closeQuietly",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.closeQuietly"
                }
            ],
            "date": "2003-12-30"
        },
        {
            "commit_id": 119,
            "hash": "c77a476ee86b107745267bdfc9fc210201e6d414",
            "commit_summary": "removed lots of finals\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140457 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/EndianUtils.java",
                "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "src/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                "src/java/org/apache/commons/io/input/DemuxInputStream.java",
                "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "src/java/org/apache/commons/io/output/DemuxOutputStream.java",
                "src/java/org/apache/commons/io/output/LockableFileWriter.java"
            ],
            "functions": [
                {
                    "function name": "readSwappedUnsignedInteger",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger"
                },
                {
                    "function name": "readSwappedUnsignedShort",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedUnsignedShort"
                },
                {
                    "function name": "read",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.read"
                },
                {
                    "function name": "readSwappedLong",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedLong"
                },
                {
                    "function name": "readSwappedInteger",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedInteger"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "dir",
                        "name"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "dir",
                        "name"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file",
                        "name"
                    ],
                    "file name": "AndFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AndFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file",
                        "name"
                    ],
                    "file name": "AndFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AndFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "DirectoryFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DirectoryFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "DirectoryFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DirectoryFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "NameFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NameFileFilter.accept"
                },
                {
                    "function name": "NameFileFilter",
                    "function params": [
                        "names"
                    ],
                    "file name": "NameFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter"
                },
                {
                    "function name": "NameFileFilter",
                    "function params": [
                        "names"
                    ],
                    "file name": "NameFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter"
                },
                {
                    "function name": "NameFileFilter",
                    "function params": [
                        "names"
                    ],
                    "file name": "NameFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter"
                },
                {
                    "function name": "NameFileFilter",
                    "function params": [
                        "name"
                    ],
                    "file name": "NameFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file",
                        "name"
                    ],
                    "file name": "NameFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NameFileFilter.accept"
                },
                {
                    "function name": "NameFileFilter",
                    "function params": [
                        "name"
                    ],
                    "file name": "NameFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter"
                },
                {
                    "function name": "NameFileFilter",
                    "function params": [
                        "names"
                    ],
                    "file name": "NameFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "NameFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NameFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file",
                        "name"
                    ],
                    "file name": "NameFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NameFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file",
                        "name"
                    ],
                    "file name": "NotFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NotFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file",
                        "name"
                    ],
                    "file name": "NotFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NotFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file",
                        "name"
                    ],
                    "file name": "OrFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.OrFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file",
                        "name"
                    ],
                    "file name": "OrFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.OrFileFilter.accept"
                },
                {
                    "function name": "PrefixFileFilter",
                    "function params": [
                        "prefix"
                    ],
                    "file name": "PrefixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter"
                },
                {
                    "function name": "PrefixFileFilter",
                    "function params": [
                        "prefixes"
                    ],
                    "file name": "PrefixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter"
                },
                {
                    "function name": "PrefixFileFilter",
                    "function params": [
                        "prefix"
                    ],
                    "file name": "PrefixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "PrefixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.PrefixFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "PrefixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.PrefixFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file",
                        "name"
                    ],
                    "file name": "PrefixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.PrefixFileFilter.accept"
                },
                {
                    "function name": "PrefixFileFilter",
                    "function params": [
                        "prefixes"
                    ],
                    "file name": "PrefixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter"
                },
                {
                    "function name": "PrefixFileFilter",
                    "function params": [
                        "prefixes"
                    ],
                    "file name": "PrefixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file",
                        "name"
                    ],
                    "file name": "PrefixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.PrefixFileFilter.accept"
                },
                {
                    "function name": "PrefixFileFilter",
                    "function params": [
                        "prefixes"
                    ],
                    "file name": "PrefixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter"
                },
                {
                    "function name": "SuffixFileFilter",
                    "function params": [
                        "suffixes"
                    ],
                    "file name": "SuffixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter"
                },
                {
                    "function name": "SuffixFileFilter",
                    "function params": [
                        "suffix"
                    ],
                    "file name": "SuffixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter"
                },
                {
                    "function name": "SuffixFileFilter",
                    "function params": [
                        "suffixes"
                    ],
                    "file name": "SuffixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter"
                },
                {
                    "function name": "SuffixFileFilter",
                    "function params": [
                        "suffixes"
                    ],
                    "file name": "SuffixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file",
                        "name"
                    ],
                    "file name": "SuffixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.SuffixFileFilter.accept"
                },
                {
                    "function name": "SuffixFileFilter",
                    "function params": [
                        "suffixes"
                    ],
                    "file name": "SuffixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "SuffixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.SuffixFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "SuffixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.SuffixFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file",
                        "name"
                    ],
                    "file name": "SuffixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.SuffixFileFilter.accept"
                },
                {
                    "function name": "SuffixFileFilter",
                    "function params": [
                        "suffix"
                    ],
                    "file name": "SuffixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter"
                },
                {
                    "function name": "ClassLoaderObjectInputStream",
                    "function params": [
                        "classLoader",
                        "inputStream"
                    ],
                    "file name": "ClassLoaderObjectInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ClassLoaderObjectInputStream.ClassLoaderObjectInputStream"
                },
                {
                    "function name": "resolveClass",
                    "function params": [
                        "objectStreamClass"
                    ],
                    "file name": "ClassLoaderObjectInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ClassLoaderObjectInputStream.resolveClass"
                },
                {
                    "function name": "ClassLoaderObjectInputStream",
                    "function params": [
                        "classLoader",
                        "inputStream"
                    ],
                    "file name": "ClassLoaderObjectInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ClassLoaderObjectInputStream.ClassLoaderObjectInputStream"
                },
                {
                    "function name": "resolveClass",
                    "function params": [
                        "objectStreamClass"
                    ],
                    "file name": "ClassLoaderObjectInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ClassLoaderObjectInputStream.resolveClass"
                },
                {
                    "function name": "bindStream",
                    "function params": [
                        "input"
                    ],
                    "file name": "DemuxInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/DemuxInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/DemuxInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.DemuxInputStream.bindStream"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "DemuxInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/DemuxInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/DemuxInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.DemuxInputStream.close"
                },
                {
                    "function name": "bindStream",
                    "function params": [
                        "input"
                    ],
                    "file name": "DemuxInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/DemuxInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/DemuxInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.DemuxInputStream.bindStream"
                },
                {
                    "function name": "read",
                    "function params": [],
                    "file name": "DemuxInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/DemuxInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/DemuxInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.DemuxInputStream.read"
                },
                {
                    "function name": "readFully",
                    "function params": [
                        "data"
                    ],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.SwappedDataInputStream.readFully"
                },
                {
                    "function name": "skipBytes",
                    "function params": [
                        "count"
                    ],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.SwappedDataInputStream.skipBytes"
                },
                {
                    "function name": "SwappedDataInputStream",
                    "function params": [
                        "input"
                    ],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.SwappedDataInputStream.SwappedDataInputStream"
                },
                {
                    "function name": "SwappedDataInputStream",
                    "function params": [
                        "input"
                    ],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.SwappedDataInputStream.SwappedDataInputStream"
                },
                {
                    "function name": "readFully",
                    "function params": [
                        "data",
                        "offset",
                        "length"
                    ],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.SwappedDataInputStream.readFully"
                },
                {
                    "function name": "readFully",
                    "function params": [
                        "data",
                        "offset",
                        "length"
                    ],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.SwappedDataInputStream.readFully"
                },
                {
                    "function name": "skipBytes",
                    "function params": [
                        "count"
                    ],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.SwappedDataInputStream.skipBytes"
                },
                {
                    "function name": "readFully",
                    "function params": [
                        "data"
                    ],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.SwappedDataInputStream.readFully"
                },
                {
                    "function name": "toByteArray",
                    "function params": [],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.toByteArray"
                },
                {
                    "function name": "needNewBuffer",
                    "function params": [
                        "newcount"
                    ],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.needNewBuffer"
                },
                {
                    "function name": "writeTo",
                    "function params": [
                        "out"
                    ],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.writeTo"
                },
                {
                    "function name": "bindStream",
                    "function params": [
                        "output"
                    ],
                    "file name": "DemuxOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/DemuxOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/DemuxOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.DemuxOutputStream.bindStream"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "DemuxOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/DemuxOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/DemuxOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.DemuxOutputStream.close"
                },
                {
                    "function name": "flush",
                    "function params": [],
                    "file name": "DemuxOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/DemuxOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/DemuxOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.DemuxOutputStream.flush"
                },
                {
                    "function name": "write",
                    "function params": [
                        "ch"
                    ],
                    "file name": "DemuxOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/DemuxOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/DemuxOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.DemuxOutputStream.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "ch"
                    ],
                    "file name": "DemuxOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/DemuxOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/DemuxOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.DemuxOutputStream.write"
                },
                {
                    "function name": "bindStream",
                    "function params": [
                        "output"
                    ],
                    "file name": "DemuxOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/DemuxOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/DemuxOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.DemuxOutputStream.bindStream"
                }
            ],
            "date": "2003-12-30"
        },
        {
            "commit_id": 120,
            "hash": "025fb9c837d749f8f10dce921ad2e1d4e8bd8acd",
            "commit_summary": "removed last couple of finals\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140458 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/SwappedDataInputStream.java"
            ],
            "functions": [
                {
                    "function name": "readFully",
                    "function params": [
                        "data",
                        "offset",
                        "length"
                    ],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.SwappedDataInputStream.readFully"
                },
                {
                    "function name": "readFully",
                    "function params": [
                        "data",
                        "offset",
                        "length"
                    ],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.SwappedDataInputStream.readFully"
                }
            ],
            "date": "2003-12-30"
        },
        {
            "commit_id": 121,
            "hash": "0b9195f60e2708c22325738ebd8ca682ecd2b9b4",
            "commit_summary": "removed finals from test code\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140459 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/CopyUtilsTest.java",
                "src/test/org/apache/commons/io/DemuxTestCase.java",
                "src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                "src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "src/test/org/apache/commons/io/HexDumpTest.java",
                "src/test/org/apache/commons/io/IOTestSuite.java",
                "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "src/test/org/apache/commons/io/input/CountingInputStreamTest.java",
                "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testCopy_stringToOutputStream",
                    "function params": [],
                    "file name": "CopyUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.CopyUtilsTest.testCopy_stringToOutputStream"
                },
                {
                    "function name": "testCopy_readerToOutputStream",
                    "function params": [],
                    "file name": "CopyUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.CopyUtilsTest.testCopy_readerToOutputStream"
                },
                {
                    "function name": "testCopy_stringToWriter",
                    "function params": [],
                    "file name": "CopyUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.CopyUtilsTest.testCopy_stringToWriter"
                },
                {
                    "function name": "testOutputStream",
                    "function params": [],
                    "file name": "DemuxTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.testOutputStream"
                },
                {
                    "function name": "startWriter",
                    "function params": [
                        "name",
                        "data",
                        "demux"
                    ],
                    "file name": "DemuxTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.startWriter"
                },
                {
                    "function name": "getOutput",
                    "function params": [
                        "threadName"
                    ],
                    "file name": "DemuxTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.getOutput"
                },
                {
                    "function name": "WriterThread",
                    "function params": [
                        "name",
                        "data",
                        "output",
                        "demux"
                    ],
                    "file name": "DemuxTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.WriterThread"
                },
                {
                    "function name": "DemuxTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "DemuxTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.DemuxTestCase"
                },
                {
                    "function name": "ReaderThread",
                    "function params": [],
                    "file name": "DemuxTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.ReaderThread"
                },
                {
                    "function name": "WriterThread",
                    "function params": [],
                    "file name": "DemuxTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.WriterThread"
                },
                {
                    "function name": "startWriter",
                    "function params": [
                        "name",
                        "data",
                        "demux"
                    ],
                    "file name": "DemuxTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.startWriter"
                },
                {
                    "function name": "ReaderThread",
                    "function params": [
                        "name",
                        "input",
                        "demux"
                    ],
                    "file name": "DemuxTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.ReaderThread"
                },
                {
                    "function name": "WriterThread",
                    "function params": [
                        "name",
                        "data",
                        "output",
                        "demux"
                    ],
                    "file name": "DemuxTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.WriterThread"
                },
                {
                    "function name": "testInputStream",
                    "function params": [],
                    "file name": "DemuxTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.testInputStream"
                },
                {
                    "function name": "getOutput",
                    "function params": [
                        "threadName"
                    ],
                    "file name": "DemuxTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.getOutput"
                },
                {
                    "function name": "startReader",
                    "function params": [
                        "name",
                        "data",
                        "demux"
                    ],
                    "file name": "DemuxTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.startReader"
                },
                {
                    "function name": "ReaderThread",
                    "function params": [
                        "name",
                        "input",
                        "demux"
                    ],
                    "file name": "DemuxTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.ReaderThread"
                },
                {
                    "function name": "doStart",
                    "function params": [],
                    "file name": "DemuxTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.doStart"
                },
                {
                    "function name": "getInput",
                    "function params": [
                        "threadName"
                    ],
                    "file name": "DemuxTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.getInput"
                },
                {
                    "function name": "startReader",
                    "function params": [
                        "name",
                        "data",
                        "demux"
                    ],
                    "file name": "DemuxTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.startReader"
                },
                {
                    "function name": "DemuxTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "DemuxTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.DemuxTestCase"
                },
                {
                    "function name": "doJoin",
                    "function params": [],
                    "file name": "DemuxTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.doJoin"
                },
                {
                    "function name": "getInput",
                    "function params": [
                        "threadName"
                    ],
                    "file name": "DemuxTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.getInput"
                },
                {
                    "function name": "FileUtilsFileNewerTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "FileUtilsFileNewerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsFileNewerTestCase.FileUtilsFileNewerTestCase"
                },
                {
                    "function name": "FileUtilsFileNewerTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "FileUtilsFileNewerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsFileNewerTestCase.FileUtilsFileNewerTestCase"
                },
                {
                    "function name": "testIsFileNewer",
                    "function params": [
                        "description",
                        "file",
                        "time",
                        "wantedResult"
                    ],
                    "file name": "FileUtilsFileNewerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer"
                },
                {
                    "function name": "testIsFileNewer",
                    "function params": [],
                    "file name": "FileUtilsFileNewerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer"
                },
                {
                    "function name": "testListFilesByExtension",
                    "function params": [],
                    "file name": "FileUtilsListFilesTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsListFilesTestCase.testListFilesByExtension"
                },
                {
                    "function name": "testCopyFile1ToDir",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyFile1ToDir"
                },
                {
                    "function name": "testCopyFile2",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyFile2"
                },
                {
                    "function name": "testForceDeleteAFile2",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile2"
                },
                {
                    "function name": "testSizeOfDirectory",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testSizeOfDirectory"
                },
                {
                    "function name": "log",
                    "function params": [
                        "obj"
                    ],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.log"
                },
                {
                    "function name": "testCopyFile2ToDir",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyFile2ToDir"
                },
                {
                    "function name": "FileUtilsTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.FileUtilsTestCase"
                },
                {
                    "function name": "testForceMkdir",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testForceMkdir"
                },
                {
                    "function name": "testForceDeleteAFile1",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile1"
                },
                {
                    "function name": "testCopyURLToFile",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyURLToFile"
                },
                {
                    "function name": "testCopyFile1",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyFile1"
                },
                {
                    "function name": "testContentEquals",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testContentEquals"
                },
                {
                    "function name": "FileUtilsTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.FileUtilsTestCase"
                },
                {
                    "function name": "testFileUtils",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testFileUtils"
                },
                {
                    "function name": "testToURLs",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testToURLs"
                },
                {
                    "function name": "testGetPath",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testGetPath"
                },
                {
                    "function name": "DISABLED__testGetExtensionWithPaths",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.DISABLED__testGetExtensionWithPaths"
                },
                {
                    "function name": "FilenameUtilsTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.FilenameUtilsTestCase"
                },
                {
                    "function name": "testRemovePath",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testRemovePath"
                },
                {
                    "function name": "testRemoveExtension",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testRemoveExtension"
                },
                {
                    "function name": "testResolveFileDot",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testResolveFileDot"
                },
                {
                    "function name": "testResolveFileDotDot",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testResolveFileDotDot"
                },
                {
                    "function name": "FilenameUtilsTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.FilenameUtilsTestCase"
                },
                {
                    "function name": "testMkdir",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testMkdir"
                },
                {
                    "function name": "DISABLED__testRemoveExtensionWithPaths",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.DISABLED__testRemoveExtensionWithPaths"
                },
                {
                    "function name": "testGetExtension",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testGetExtension"
                },
                {
                    "function name": "testNormalize",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testNormalize"
                },
                {
                    "function name": "toAscii",
                    "function params": [
                        "c"
                    ],
                    "file name": "HexDumpTest.java",
                    "file old path": "src/test/org/apache/commons/io/HexDumpTest.java",
                    "file new path": "src/test/org/apache/commons/io/HexDumpTest.java",
                    "full name": "src.test.org.apache.commons.io.HexDumpTest.toAscii"
                },
                {
                    "function name": "toHex",
                    "function params": [
                        "n"
                    ],
                    "file name": "HexDumpTest.java",
                    "file old path": "src/test/org/apache/commons/io/HexDumpTest.java",
                    "file new path": "src/test/org/apache/commons/io/HexDumpTest.java",
                    "full name": "src.test.org.apache.commons.io.HexDumpTest.toHex"
                },
                {
                    "function name": "toAscii",
                    "function params": [
                        "c"
                    ],
                    "file name": "HexDumpTest.java",
                    "file old path": "src/test/org/apache/commons/io/HexDumpTest.java",
                    "file new path": "src/test/org/apache/commons/io/HexDumpTest.java",
                    "full name": "src.test.org.apache.commons.io.HexDumpTest.toAscii"
                },
                {
                    "function name": "toHex",
                    "function params": [
                        "n"
                    ],
                    "file name": "HexDumpTest.java",
                    "file old path": "src/test/org/apache/commons/io/HexDumpTest.java",
                    "file new path": "src/test/org/apache/commons/io/HexDumpTest.java",
                    "full name": "src.test.org.apache.commons.io.HexDumpTest.toHex"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "IOTestSuite.java",
                    "file old path": "src/test/org/apache/commons/io/IOTestSuite.java",
                    "file new path": "src/test/org/apache/commons/io/IOTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.IOTestSuite.suite"
                },
                {
                    "function name": "testReaderToOutputStream",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testReaderToOutputStream"
                },
                {
                    "function name": "assertEqualContent",
                    "function params": [
                        "b0",
                        "b1"
                    ],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.assertEqualContent"
                },
                {
                    "function name": "testInputStreamToByteArray",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray"
                },
                {
                    "function name": "testStringToByteArray",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testStringToByteArray"
                },
                {
                    "function name": "testReaderToString",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testReaderToString"
                },
                {
                    "function name": "testByteArrayToString",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testByteArrayToString"
                },
                {
                    "function name": "testByteArrayToWriter",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testByteArrayToWriter"
                },
                {
                    "function name": "testInputStreamToWriter",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testInputStreamToWriter"
                },
                {
                    "function name": "testInputStreamToString",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testInputStreamToString"
                },
                {
                    "function name": "testInputStreamToOutputStream",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testInputStreamToOutputStream"
                },
                {
                    "function name": "testStringToWriter",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testStringToWriter"
                },
                {
                    "function name": "testStringToOutputStream",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testStringToOutputStream"
                },
                {
                    "function name": "testReaderToWriter",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testReaderToWriter"
                },
                {
                    "function name": "testByteArrayToOutputStream",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testByteArrayToOutputStream"
                },
                {
                    "function name": "assertEqualContent",
                    "function params": [
                        "b0",
                        "b1"
                    ],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.assertEqualContent"
                },
                {
                    "function name": "byteCmp",
                    "function params": [],
                    "file name": "ByteArrayOutputStreamTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                    "full name": "src.test.org.apache.commons.io.output.ByteArrayOutputStreamTestCase.byteCmp"
                },
                {
                    "function name": "createFile",
                    "function params": [
                        "file",
                        "size"
                    ],
                    "file name": "FileBasedTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "full name": "src.test.org.apache.commons.io.testtools.FileBasedTestCase.createFile"
                },
                {
                    "function name": "newFile",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FileBasedTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "full name": "src.test.org.apache.commons.io.testtools.FileBasedTestCase.newFile"
                },
                {
                    "function name": "checkWrite",
                    "function params": [
                        "output"
                    ],
                    "file name": "FileBasedTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "full name": "src.test.org.apache.commons.io.testtools.FileBasedTestCase.checkWrite"
                },
                {
                    "function name": "checkWrite",
                    "function params": [
                        "output"
                    ],
                    "file name": "FileBasedTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "full name": "src.test.org.apache.commons.io.testtools.FileBasedTestCase.checkWrite"
                },
                {
                    "function name": "createFile",
                    "function params": [
                        "file",
                        "size"
                    ],
                    "file name": "FileBasedTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "full name": "src.test.org.apache.commons.io.testtools.FileBasedTestCase.createFile"
                },
                {
                    "function name": "generateTestData",
                    "function params": [
                        "out",
                        "size"
                    ],
                    "file name": "FileBasedTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "full name": "src.test.org.apache.commons.io.testtools.FileBasedTestCase.generateTestData"
                },
                {
                    "function name": "assertEqualContent",
                    "function params": [
                        "f0",
                        "f1"
                    ],
                    "file name": "FileBasedTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "full name": "src.test.org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent"
                },
                {
                    "function name": "checkFile",
                    "function params": [
                        "file",
                        "referenceFile"
                    ],
                    "file name": "FileBasedTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "full name": "src.test.org.apache.commons.io.testtools.FileBasedTestCase.checkFile"
                },
                {
                    "function name": "checkWrite",
                    "function params": [
                        "output"
                    ],
                    "file name": "FileBasedTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "full name": "src.test.org.apache.commons.io.testtools.FileBasedTestCase.checkWrite"
                },
                {
                    "function name": "checkFile",
                    "function params": [
                        "file",
                        "referenceFile"
                    ],
                    "file name": "FileBasedTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "full name": "src.test.org.apache.commons.io.testtools.FileBasedTestCase.checkFile"
                },
                {
                    "function name": "checkWrite",
                    "function params": [
                        "output"
                    ],
                    "file name": "FileBasedTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "full name": "src.test.org.apache.commons.io.testtools.FileBasedTestCase.checkWrite"
                },
                {
                    "function name": "deleteFile",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileBasedTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "full name": "src.test.org.apache.commons.io.testtools.FileBasedTestCase.deleteFile"
                },
                {
                    "function name": "deleteFile",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileBasedTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "full name": "src.test.org.apache.commons.io.testtools.FileBasedTestCase.deleteFile"
                },
                {
                    "function name": "generateTestData",
                    "function params": [
                        "size"
                    ],
                    "file name": "FileBasedTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "full name": "src.test.org.apache.commons.io.testtools.FileBasedTestCase.generateTestData"
                },
                {
                    "function name": "assertEqualContent",
                    "function params": [
                        "f0",
                        "f1"
                    ],
                    "file name": "FileBasedTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "full name": "src.test.org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent"
                },
                {
                    "function name": "generateTestData",
                    "function params": [
                        "size"
                    ],
                    "file name": "FileBasedTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "full name": "src.test.org.apache.commons.io.testtools.FileBasedTestCase.generateTestData"
                },
                {
                    "function name": "generateTestData",
                    "function params": [
                        "out",
                        "size"
                    ],
                    "file name": "FileBasedTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "full name": "src.test.org.apache.commons.io.testtools.FileBasedTestCase.generateTestData"
                },
                {
                    "function name": "assertEqualContent",
                    "function params": [
                        "b0",
                        "file"
                    ],
                    "file name": "FileBasedTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "full name": "src.test.org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent"
                },
                {
                    "function name": "assertEqualContent",
                    "function params": [
                        "b0",
                        "file"
                    ],
                    "file name": "FileBasedTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "full name": "src.test.org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent"
                }
            ],
            "date": "2003-12-30"
        },
        {
            "commit_id": 122,
            "hash": "d4b1074bcb41724ebc3acafac9feba0294428560",
            "commit_summary": "removed deprecated methods from IOUtils\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140460 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/IOUtils.java",
                "src/test/org/apache/commons/io/IOUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "encoding",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toByteArray"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toByteArray"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "encoding",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toByteArray"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "testReaderToWriter",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testReaderToWriter"
                },
                {
                    "function name": "testStringToOutputStream",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testStringToOutputStream"
                },
                {
                    "function name": "testByteArrayToWriter",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testByteArrayToWriter"
                },
                {
                    "function name": "testInputStreamToWriter",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testInputStreamToWriter"
                },
                {
                    "function name": "testByteArrayToOutputStream",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testByteArrayToOutputStream"
                },
                {
                    "function name": "testInputStreamToOutputStream",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testInputStreamToOutputStream"
                },
                {
                    "function name": "testStringToWriter",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testStringToWriter"
                },
                {
                    "function name": "testReaderToOutputStream",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testReaderToOutputStream"
                }
            ],
            "date": "2003-12-30"
        },
        {
            "commit_id": 123,
            "hash": "7aa6eaeb24ab6bd291da525a533589d94703c11c",
            "commit_summary": "Removed unused import.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140463 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/CountingInputStream.java"
            ],
            "functions": [],
            "date": "2003-12-30"
        },
        {
            "commit_id": 124,
            "hash": "70f378cc6a7f889343de61b6d2d4b95ec339740e",
            "commit_summary": "Removed System.out calls.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140464 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java"
            ],
            "functions": [
                {
                    "function name": "write",
                    "function params": [
                        "b",
                        "off",
                        "len"
                    ],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.write"
                },
                {
                    "function name": "needNewBuffer",
                    "function params": [
                        "newcount"
                    ],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.needNewBuffer"
                }
            ],
            "date": "2003-12-30"
        },
        {
            "commit_id": 125,
            "hash": "8788e98d44271bf6bef67132f8673b814e285dc4",
            "commit_summary": "Reapply final modifier for static constants.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140465 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "src/java/org/apache/commons/io/output/LockableFileWriter.java"
            ],
            "functions": [],
            "date": "2003-12-30"
        },
        {
            "commit_id": 126,
            "hash": "1f3de51cd8936d0bb328a1d4a8b804624070cdb2",
            "commit_summary": "Avoid javadoc warnings in Eclipse.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140466 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java"
            ],
            "functions": [
                {
                    "function name": "copyFileToDirectory",
                    "function params": [
                        "source",
                        "destinationDirectory"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.copyFileToDirectory"
                }
            ],
            "date": "2003-12-30"
        },
        {
            "commit_id": 127,
            "hash": "fcd8e815130dc72fa17be98c1c4bbe3b309927ab",
            "commit_summary": "Javadocs: Missing parameter description\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140467 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [],
            "date": "2003-12-30"
        },
        {
            "commit_id": 128,
            "hash": "3ad5ab7eee972a866f5ed18be6376c9e6e750bf7",
            "commit_summary": "Removed unused imports.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140468 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/IOUtils.java",
                "src/test/org/apache/commons/io/input/CountingInputStreamTest.java"
            ],
            "functions": [],
            "date": "2003-12-30"
        },
        {
            "commit_id": 129,
            "hash": "e77515f7bb91d5e5818b138ff24f7dc6b08e0926",
            "commit_summary": "Reapply final modifier for static constants.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140469 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java"
            ],
            "functions": [],
            "date": "2003-12-30"
        },
        {
            "commit_id": 130,
            "hash": "4f86f96e07153a9ada9b051a718e337831353017",
            "commit_summary": "Added missing license header.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140470 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java"
            ],
            "functions": [],
            "date": "2003-12-30"
        },
        {
            "commit_id": 131,
            "hash": "cb35a90f80e0ab812029566674cf18169f279259",
            "commit_summary": "Reapply final modifier for static constants.\nRemoved unused imports.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140471 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/CopyUtilsTest.java",
                "src/test/org/apache/commons/io/DemuxTestCase.java",
                "src/test/org/apache/commons/io/EndianUtilsTest.java",
                "src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "src/test/org/apache/commons/io/IOUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testIsFileNewer",
                    "function params": [],
                    "file name": "FileUtilsFileNewerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer"
                }
            ],
            "date": "2003-12-30"
        },
        {
            "commit_id": 132,
            "hash": "e8cba4e096c26204dfbd93a99a28bb50a8f4d957",
            "commit_summary": "Made convertFileCollectionToFileArray static.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140472 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [
                {
                    "function name": "convertFileCollectionToFileArray",
                    "function params": [
                        "files"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.convertFileCollectionToFileArray"
                }
            ],
            "date": "2003-12-30"
        },
        {
            "commit_id": 133,
            "hash": "8ab260ef261f794ec394043f496d985411ad396f",
            "commit_summary": "Removed methods that take a bufferSize parameter.\nDiscussion:\nhttp://www.mail-archive.com/commons-dev@jakarta.apache.org/msg19703.html\nhttp://nagoya.apache.org/eyebrowse/BrowseList?listName=commons-dev@jakarta.apache.org&by=thread&from=572862\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140473 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/CopyUtils.java",
                "src/java/org/apache/commons/io/IOUtils.java"
            ],
            "functions": [
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding",
                        "bufferSize"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding",
                        "bufferSize"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "bufferSize"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toByteArray"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toByteArray"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "encoding",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toByteArray"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toByteArray"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toByteArray"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "encoding",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toByteArray"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "bufferSize"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                }
            ],
            "date": "2003-12-30"
        },
        {
            "commit_id": 134,
            "hash": "cc75a3a3936c40e9d15296410b1827944c82dd81",
            "commit_summary": "removed test cases that only test CopyUtils methods, as these methods now have their own tests in the CopyUtilsTest class\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140475 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/IOUtilsTestCase.java"
            ],
            "functions": [],
            "date": "2004-01-02"
        },
        {
            "commit_id": 135,
            "hash": "a3db9971e829bd46e7b051adbbb349c2a689f889",
            "commit_summary": "Implemented tests for the unsigned methods and removed the todo comments\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140478 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/EndianUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "testReadSwappedUnsignedInteger",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger"
                },
                {
                    "function name": "testReadSwappedUnsignedShort",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedShort"
                }
            ],
            "date": "2004-01-02"
        },
        {
            "commit_id": 136,
            "hash": "f9791f1d672c50bc5ee609483d4fce282fb09031",
            "commit_summary": "removed unnecessary line\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140479 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/EndianUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "testReadSwappedInteger",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testReadSwappedInteger"
                }
            ],
            "date": "2004-01-02"
        },
        {
            "commit_id": 137,
            "hash": "a79668954b565a73be56de928e1c62cd05a50cc9",
            "commit_summary": "A beginning on a test for the SwappedDataInputStream, though it only handles the basics\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140481 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "testReadByte",
                    "function params": [],
                    "file name": "SwappedDataInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.SwappedDataInputStreamTest.testReadByte"
                },
                {
                    "function name": "testReadShort",
                    "function params": [],
                    "file name": "SwappedDataInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.SwappedDataInputStreamTest.testReadShort"
                },
                {
                    "function name": "testReadUTF",
                    "function params": [],
                    "file name": "SwappedDataInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUTF"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "SwappedDataInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.SwappedDataInputStreamTest.tearDown"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "SwappedDataInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.SwappedDataInputStreamTest.setUp"
                },
                {
                    "function name": "testReadBoolean",
                    "function params": [],
                    "file name": "SwappedDataInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.SwappedDataInputStreamTest.testReadBoolean"
                },
                {
                    "function name": "testReadChar",
                    "function params": [],
                    "file name": "SwappedDataInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.SwappedDataInputStreamTest.testReadChar"
                },
                {
                    "function name": "testReadInt",
                    "function params": [],
                    "file name": "SwappedDataInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.SwappedDataInputStreamTest.testReadInt"
                },
                {
                    "function name": "SwappedDataInputStreamTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "SwappedDataInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.SwappedDataInputStreamTest.SwappedDataInputStreamTest"
                }
            ],
            "date": "2004-01-02"
        },
        {
            "commit_id": 138,
            "hash": "8888f6f66765f9c6f020240e213fb4d0307b445e",
            "commit_summary": "removed wrong comment due to my misunderstanding of usage\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140482 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java"
            ],
            "functions": [
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "SwappedDataInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.SwappedDataInputStreamTest.setUp"
                }
            ],
            "date": "2004-01-02"
        },
        {
            "commit_id": 139,
            "hash": "950386e4cb3145098ad622b7a71ac57377700661",
            "commit_summary": "removed unnecessary line\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140483 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/EndianUtils.java"
            ],
            "functions": [
                {
                    "function name": "readSwappedLong",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedLong"
                }
            ],
            "date": "2004-01-02"
        },
        {
            "commit_id": 140,
            "hash": "9da7d82d7313103a8583397d90561a9ce0c51929",
            "commit_summary": "tests readLong now\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140484 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java"
            ],
            "functions": [],
            "date": "2004-01-02"
        },
        {
            "commit_id": 141,
            "hash": "e7c586cd1f15b912c85d0ce48054d21d23b9a4d2",
            "commit_summary": "Fixed what I think is a bug in readSwappedLong(InputStream) by rewriting the method to use the readSwappedLong(byte[])\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140485 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/EndianUtils.java"
            ],
            "functions": [
                {
                    "function name": "readSwappedLong",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedLong"
                }
            ],
            "date": "2004-01-02"
        },
        {
            "commit_id": 142,
            "hash": "b11d2671d1b63f4a759cde66d15685bdd9b76df1",
            "commit_summary": "double and float tests succeed now\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140487 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java"
            ],
            "functions": [
                {
                    "function name": "testReadDouble",
                    "function params": [],
                    "file name": "SwappedDataInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.SwappedDataInputStreamTest.testReadDouble"
                },
                {
                    "function name": "testReadFloat",
                    "function params": [],
                    "file name": "SwappedDataInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.SwappedDataInputStreamTest.testReadFloat"
                }
            ],
            "date": "2004-01-02"
        },
        {
            "commit_id": 143,
            "hash": "1dbb70871e3d35f68717923973270d0c5d69d1c4",
            "commit_summary": "skipBytes test added\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140488 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java"
            ],
            "functions": [
                {
                    "function name": "testSkipBytes",
                    "function params": [],
                    "file name": "SwappedDataInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.SwappedDataInputStreamTest.testSkipBytes"
                }
            ],
            "date": "2004-01-02"
        },
        {
            "commit_id": 144,
            "hash": "bddb584fde98885ab7f5769282b6e51a8d9b8f15",
            "commit_summary": "readLine 'test' for UnsupportedException added\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140489 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java"
            ],
            "functions": [
                {
                    "function name": "testReadLine",
                    "function params": [],
                    "file name": "SwappedDataInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLine"
                }
            ],
            "date": "2004-01-02"
        },
        {
            "commit_id": 145,
            "hash": "7f6039cf23c4a3804518d97db05e348d7433ded9",
            "commit_summary": "Add ThresholdingOutputStream and DeferredFileOutputStream, along with tests\nfor the latter. (There are no tests for the former, since it is an abstract\nclass.) These classes originated in Commons FileUpload (and will continue\nto exist there as well, until IO gets to an official release).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140496 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "isInMemory",
                    "function params": [],
                    "file name": "DeferredFileOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.DeferredFileOutputStream.isInMemory"
                },
                {
                    "function name": "getData",
                    "function params": [],
                    "file name": "DeferredFileOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.DeferredFileOutputStream.getData"
                },
                {
                    "function name": "getStream",
                    "function params": [],
                    "file name": "DeferredFileOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.DeferredFileOutputStream.getStream"
                },
                {
                    "function name": "DeferredFileOutputStream",
                    "function params": [
                        "threshold",
                        "outputFile"
                    ],
                    "file name": "DeferredFileOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream"
                },
                {
                    "function name": "getFile",
                    "function params": [],
                    "file name": "DeferredFileOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.DeferredFileOutputStream.getFile"
                },
                {
                    "function name": "thresholdReached",
                    "function params": [],
                    "file name": "DeferredFileOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.DeferredFileOutputStream.thresholdReached"
                },
                {
                    "function name": "write",
                    "function params": [
                        "b"
                    ],
                    "file name": "ThresholdingOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ThresholdingOutputStream.write"
                },
                {
                    "function name": "checkThreshold",
                    "function params": [
                        "count"
                    ],
                    "file name": "ThresholdingOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ThresholdingOutputStream.checkThreshold"
                },
                {
                    "function name": "ThresholdingOutputStream",
                    "function params": [
                        "threshold"
                    ],
                    "file name": "ThresholdingOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ThresholdingOutputStream.ThresholdingOutputStream"
                },
                {
                    "function name": "flush",
                    "function params": [],
                    "file name": "ThresholdingOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ThresholdingOutputStream.flush"
                },
                {
                    "function name": "getThreshold",
                    "function params": [],
                    "file name": "ThresholdingOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ThresholdingOutputStream.getThreshold"
                },
                {
                    "function name": "isThresholdExceeded",
                    "function params": [],
                    "file name": "ThresholdingOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ThresholdingOutputStream.isThresholdExceeded"
                },
                {
                    "function name": "write",
                    "function params": [],
                    "file name": "ThresholdingOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ThresholdingOutputStream.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "off",
                        "len"
                    ],
                    "file name": "ThresholdingOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ThresholdingOutputStream.write"
                },
                {
                    "function name": "getByteCount",
                    "function params": [],
                    "file name": "ThresholdingOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ThresholdingOutputStream.getByteCount"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "ThresholdingOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ThresholdingOutputStream.close"
                },
                {
                    "function name": "DeferredFileOutputStreamTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "DeferredFileOutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.DeferredFileOutputStreamTest.DeferredFileOutputStreamTest"
                },
                {
                    "function name": "testAtThreshold",
                    "function params": [],
                    "file name": "DeferredFileOutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.DeferredFileOutputStreamTest.testAtThreshold"
                },
                {
                    "function name": "testAboveThreshold",
                    "function params": [],
                    "file name": "DeferredFileOutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.DeferredFileOutputStreamTest.testAboveThreshold"
                },
                {
                    "function name": "verifyResultFile",
                    "function params": [
                        "testFile"
                    ],
                    "file name": "DeferredFileOutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.DeferredFileOutputStreamTest.verifyResultFile"
                },
                {
                    "function name": "testThresholdReached",
                    "function params": [],
                    "file name": "DeferredFileOutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.DeferredFileOutputStreamTest.testThresholdReached"
                },
                {
                    "function name": "testBelowThreshold",
                    "function params": [],
                    "file name": "DeferredFileOutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.DeferredFileOutputStreamTest.testBelowThreshold"
                }
            ],
            "date": "2004-02-01"
        },
        {
            "commit_id": 146,
            "hash": "9a379ceb32f505fffaf1fb4f84de3f706eea4ef7",
            "commit_summary": "fixed grammar\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140500 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java"
            ],
            "functions": [],
            "date": "2004-02-10"
        },
        {
            "commit_id": 147,
            "hash": "08ff2f20747c0a8cf5124557865945e5cd4ea958",
            "commit_summary": "improved javadoc\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140503 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/CountingInputStream.java"
            ],
            "functions": [],
            "date": "2004-02-10"
        },
        {
            "commit_id": 148,
            "hash": "08251f9e7ed62b90681fe9e6c17eaca771566b76",
            "commit_summary": "slight paragraph change\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140504 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                "src/java/org/apache/commons/io/input/ProxyReader.java"
            ],
            "functions": [],
            "date": "2004-02-10"
        },
        {
            "commit_id": 149,
            "hash": "b12ab48682d588fec4503b02d31aa863a288b15d",
            "commit_summary": "added the classic should NOT be constructed warning\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140512 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/EndianUtils.java",
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/java/org/apache/commons/io/FilenameUtils.java",
                "src/java/org/apache/commons/io/HexDump.java"
            ],
            "functions": [
                {
                    "function name": "EndianUtils",
                    "function params": [],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.EndianUtils"
                },
                {
                    "function name": "FileUtils",
                    "function params": [],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.FileUtils"
                },
                {
                    "function name": "FilenameUtils",
                    "function params": [],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.FilenameUtils"
                },
                {
                    "function name": "HexDump",
                    "function params": [],
                    "file name": "HexDump.java",
                    "file old path": "src/java/org/apache/commons/io/HexDump.java",
                    "file new path": "src/java/org/apache/commons/io/HexDump.java",
                    "full name": "src.java.org.apache.commons.io.HexDump.HexDump"
                }
            ],
            "date": "2004-02-21"
        },
        {
            "commit_id": 150,
            "hash": "158756bdbe4c19b62354ad27d4aba7a0fb739bdd",
            "commit_summary": "fixed the grammar a touch, though probably needs p tags\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140515 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/HexDump.java"
            ],
            "functions": [],
            "date": "2004-02-23"
        },
        {
            "commit_id": 151,
            "hash": "ae5478f721fef2e41f248c6e85298714c8f6c445",
            "commit_summary": "moved to licence 2.0\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140517 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/CopyUtils.java",
                "src/java/org/apache/commons/io/EndianUtils.java",
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/java/org/apache/commons/io/FilenameUtils.java",
                "src/java/org/apache/commons/io/HexDump.java",
                "src/java/org/apache/commons/io/IOUtils.java",
                "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "src/java/org/apache/commons/io/filefilter/IOFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "src/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                "src/java/org/apache/commons/io/input/CountingInputStream.java",
                "src/java/org/apache/commons/io/input/DemuxInputStream.java",
                "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                "src/java/org/apache/commons/io/input/ProxyReader.java",
                "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "src/java/org/apache/commons/io/output/CountingOutputStream.java",
                "src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "src/java/org/apache/commons/io/output/DemuxOutputStream.java",
                "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                "src/java/org/apache/commons/io/output/NullOutputStream.java",
                "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                "src/java/org/apache/commons/io/output/ProxyWriter.java",
                "src/java/org/apache/commons/io/output/TeeOutputStream.java",
                "src/java/org/apache/commons/io/output/ThresholdingOutputStream.java"
            ],
            "functions": [],
            "date": "2004-02-23"
        },
        {
            "commit_id": 152,
            "hash": "9269472341ff45f193994fc4615f695adbcf99ee",
            "commit_summary": "noted the call over to the byte[] method\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140519 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java"
            ],
            "functions": [],
            "date": "2004-02-23"
        },
        {
            "commit_id": 153,
            "hash": "9ef3966c9d7fb4c70cf2abebbef53edfea1661c5",
            "commit_summary": "added a bit of javadoc\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140520 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/output/TeeOutputStream.java"
            ],
            "functions": [],
            "date": "2004-02-23"
        },
        {
            "commit_id": 154,
            "hash": "0003ff603de4a7280d686e9271a71eb5523f07b1",
            "commit_summary": "improved javadoc\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140521 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/SwappedDataInputStream.java"
            ],
            "functions": [],
            "date": "2004-02-23"
        },
        {
            "commit_id": 155,
            "hash": "41b87ef279e03b06ee840a80fa0b762c70872df9",
            "commit_summary": "moved to v2.0 of the licence\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140523 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/CopyUtilsTest.java",
                "src/test/org/apache/commons/io/DemuxTestCase.java",
                "src/test/org/apache/commons/io/EndianUtilsTest.java",
                "src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                "src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "src/test/org/apache/commons/io/HexDumpTest.java",
                "src/test/org/apache/commons/io/IOTestSuite.java",
                "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "src/test/org/apache/commons/io/input/CountingInputStreamTest.java",
                "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                "src/test/org/apache/commons/io/output/CountingOutputStreamTest.java",
                "src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                "src/test/org/apache/commons/io/output/NullOutputStreamTest.java",
                "src/test/org/apache/commons/io/output/TeeOutputStreamTest.java",
                "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                "src/test/org/apache/commons/io/testtools/YellOnCloseInputStream.java",
                "src/test/org/apache/commons/io/testtools/YellOnFlushAndCloseOutputStream.java"
            ],
            "functions": [],
            "date": "2004-02-23"
        },
        {
            "commit_id": 156,
            "hash": "9a592c4d5695c65311a65054eaad28c18f36aa1f",
            "commit_summary": "test for locking files\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140528 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "LockableFileWriterTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "LockableFileWriterTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.LockableFileWriterTest.LockableFileWriterTest"
                },
                {
                    "function name": "testFileLocked",
                    "function params": [],
                    "file name": "LockableFileWriterTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.LockableFileWriterTest.testFileLocked"
                },
                {
                    "function name": "testFileNotLocked",
                    "function params": [],
                    "file name": "LockableFileWriterTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.LockableFileWriterTest.testFileNotLocked"
                }
            ],
            "date": "2004-02-23"
        },
        {
            "commit_id": 157,
            "hash": "3bb133b6414158eb227fe8d0844f4c06fdb3febe",
            "commit_summary": "cleans up after itself now, rather than leaving lockfiles\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140530 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/output/LockableFileWriterTest.java"
            ],
            "functions": [
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "LockableFileWriterTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.LockableFileWriterTest.setUp"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "LockableFileWriterTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.LockableFileWriterTest.tearDown"
                },
                {
                    "function name": "testFileLocked",
                    "function params": [],
                    "file name": "LockableFileWriterTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.LockableFileWriterTest.testFileLocked"
                },
                {
                    "function name": "testFileNotLocked",
                    "function params": [],
                    "file name": "LockableFileWriterTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.LockableFileWriterTest.testFileNotLocked"
                }
            ],
            "date": "2004-02-29"
        },
        {
            "commit_id": 158,
            "hash": "5245df052c77b89056128761837f228be5ef1c29",
            "commit_summary": "added all readSwapped(InputStream) methods\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140531 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/EndianUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "testReadSwappedLong",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testReadSwappedLong"
                },
                {
                    "function name": "testReadSwappedShort",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testReadSwappedShort"
                },
                {
                    "function name": "testReadSwappedFloat",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat"
                },
                {
                    "function name": "testReadSwappedUnsignedInteger",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger"
                },
                {
                    "function name": "testReadSwappedDouble",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testReadSwappedDouble"
                },
                {
                    "function name": "testReadSwappedUnsignedShort",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedShort"
                },
                {
                    "function name": "testReadSwappedInteger",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testReadSwappedInteger"
                }
            ],
            "date": "2004-02-29"
        },
        {
            "commit_id": 159,
            "hash": "b0fd8335f5a71226169b1f66a3e0a40c7f977ca8",
            "commit_summary": "added all writeSwapped(OutputStream) methods\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140532 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/EndianUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "testWriteSwappedShort",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testWriteSwappedShort"
                },
                {
                    "function name": "testWriteSwappedFloat",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testWriteSwappedFloat"
                },
                {
                    "function name": "testWriteSwappedLong",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong"
                },
                {
                    "function name": "testWriteSwappedInteger",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testWriteSwappedInteger"
                },
                {
                    "function name": "testWriteSwappedDouble",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testWriteSwappedDouble"
                }
            ],
            "date": "2004-02-29"
        },
        {
            "commit_id": 160,
            "hash": "c122d7e7c6ae4d518f5ecb0667d6dbb506eaf675",
            "commit_summary": "added newlines before ByteArrayInputStreams\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140533 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/EndianUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "testReadSwappedFloat",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat"
                },
                {
                    "function name": "testReadSwappedUnsignedInteger",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger"
                },
                {
                    "function name": "testReadSwappedDouble",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testReadSwappedDouble"
                },
                {
                    "function name": "testReadSwappedUnsignedShort",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedShort"
                },
                {
                    "function name": "testReadSwappedShort",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testReadSwappedShort"
                },
                {
                    "function name": "testReadSwappedLong",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testReadSwappedLong"
                },
                {
                    "function name": "testReadSwappedInteger",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testReadSwappedInteger"
                }
            ],
            "date": "2004-02-29"
        },
        {
            "commit_id": 161,
            "hash": "3115876dbf926d3b20d56f304c0649cae5adeaac",
            "commit_summary": "added test for the unsigned methods, though bit unsure that 0201 is right for readUnsignedShort, would have expected different to reading a signed short\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140535 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java"
            ],
            "functions": [
                {
                    "function name": "testReadUnsignedShort",
                    "function params": [],
                    "file name": "SwappedDataInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUnsignedShort"
                },
                {
                    "function name": "testReadUnsignedByte",
                    "function params": [],
                    "file name": "SwappedDataInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUnsignedByte"
                }
            ],
            "date": "2004-02-29"
        },
        {
            "commit_id": 162,
            "hash": "e3f2fe5ecd9f12ad1d6446945f01369f152365ae",
            "commit_summary": "readFully tested\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140536 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java"
            ],
            "functions": [
                {
                    "function name": "testReadFully",
                    "function params": [],
                    "file name": "SwappedDataInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.SwappedDataInputStreamTest.testReadFully"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "SwappedDataInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.SwappedDataInputStreamTest.setUp"
                }
            ],
            "date": "2004-02-29"
        },
        {
            "commit_id": 163,
            "hash": "b13ad1c26d5473dd0559bb78a3424a562cec92b1",
            "commit_summary": "Reestablish JDK 1.3 compatibility.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140540 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "src/test/org/apache/commons/io/FilenameUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "touch",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.touch"
                },
                {
                    "function name": "replaceAll",
                    "function params": [
                        "text",
                        "lookFor",
                        "replaceWith"
                    ],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.replaceAll"
                },
                {
                    "function name": "replaceAll",
                    "function params": [
                        "text",
                        "lookFor",
                        "replaceWith"
                    ],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.replaceAll"
                }
            ],
            "date": "2004-03-12"
        },
        {
            "commit_id": 164,
            "hash": "8d33a71d3c6ef9e1a55d7013841adb1614ec3c26",
            "commit_summary": "Bugzilla #27612\nFix for catPath not handling Windows-style path separators.\nSubmitted by: Maarten Coene <Maarten.Coene.at.qmedit.com>\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140541 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java",
                "src/test/org/apache/commons/io/FilenameUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "indexOfLastPathSeparator",
                    "function params": [
                        "path"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.indexOfLastPathSeparator"
                },
                {
                    "function name": "catPath",
                    "function params": [
                        "lookupPath",
                        "path"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.catPath"
                },
                {
                    "function name": "testIndexOfLastPathSeparator",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testIndexOfLastPathSeparator"
                },
                {
                    "function name": "testCatPath",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testCatPath"
                }
            ],
            "date": "2004-03-12"
        },
        {
            "commit_id": 165,
            "hash": "1bdcc3d74cd87ca5a128f466d31dbca61429ce30",
            "commit_summary": "File copy operations now preserve the file date by default. An additional copyFile variant enables to disable this feature.\nSuggested by: Craig Doremus <craig.at.maine.com> in Bugzilla #27615\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140542 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "copyFileToDirectory",
                    "function params": [
                        "source",
                        "destinationDirectory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyFileToDirectory"
                },
                {
                    "function name": "copyFile",
                    "function params": [
                        "source",
                        "destination"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyFile"
                },
                {
                    "function name": "copyFile",
                    "function params": [
                        "source",
                        "destination",
                        "preserveFileDate"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyFile"
                },
                {
                    "function name": "testCopyFile2WithoutFileDatePreservation",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyFile2WithoutFileDatePreservation"
                },
                {
                    "function name": "testCopyFile2ToDir",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyFile2ToDir"
                },
                {
                    "function name": "testCopyFile1ToDir",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyFile1ToDir"
                },
                {
                    "function name": "testCopyFile2",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyFile2"
                },
                {
                    "function name": "testCopyFile1",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyFile1"
                }
            ],
            "date": "2004-03-12"
        },
        {
            "commit_id": 166,
            "hash": "25211d6141de186b0adecae5081f443275197116",
            "commit_summary": "Looks like the 200ms weren't enough. Gump failed in one of the tests. Maybe this helps. sleeps are never good but I don't know how to do this in a better way.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140544 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testCopyFile1ToDir",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyFile1ToDir"
                },
                {
                    "function name": "testCopyFile2",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyFile2"
                },
                {
                    "function name": "testCopyFile2ToDir",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyFile2ToDir"
                },
                {
                    "function name": "testCopyFile1",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyFile1"
                },
                {
                    "function name": "testCopyFile2WithoutFileDatePreservation",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyFile2WithoutFileDatePreservation"
                }
            ],
            "date": "2004-03-14"
        },
        {
            "commit_id": 167,
            "hash": "a0e777265612f42635895d8c292d8e7892277224",
            "commit_summary": "Tests for file date time for copy operations disabled for now because my method with Thread.sleep() isn't reliable.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140545 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testCopyFile2ToDir",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyFile2ToDir"
                },
                {
                    "function name": "testCopyFile1",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyFile1"
                },
                {
                    "function name": "testCopyFile2WithoutFileDatePreservation",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyFile2WithoutFileDatePreservation"
                },
                {
                    "function name": "testCopyFile1ToDir",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyFile1ToDir"
                }
            ],
            "date": "2004-03-14"
        },
        {
            "commit_id": 168,
            "hash": "daedcb79bcb483f96214be190d7d1f02be8aef86",
            "commit_summary": "New file cleaner that keeps track of files pending deletion, and deletes\nthem only when an associated marker object is reclaimed by the garbage\ncollector. This class avoids the need to use File.deleteOnExit() in a\nserver environment.\n\nObtained from: Noel Bergman\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140546 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "Tracker",
                    "function params": [
                        "file",
                        "marker",
                        "q"
                    ],
                    "file name": "FileCleaner.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaner.Tracker"
                },
                {
                    "function name": "Thread",
                    "function params": [],
                    "file name": "FileCleaner.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaner.Thread"
                },
                {
                    "function name": "getTrackCount",
                    "function params": [],
                    "file name": "FileCleaner.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaner.getTrackCount"
                },
                {
                    "function name": "track",
                    "function params": [
                        "file",
                        "marker"
                    ],
                    "file name": "FileCleaner.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaner.track"
                },
                {
                    "function name": "Tracker",
                    "function params": [
                        "path",
                        "marker",
                        "q"
                    ],
                    "file name": "FileCleaner.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaner.Tracker"
                },
                {
                    "function name": "track",
                    "function params": [
                        "path",
                        "marker"
                    ],
                    "file name": "FileCleaner.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaner.track"
                },
                {
                    "function name": "Tracker",
                    "function params": [],
                    "file name": "FileCleaner.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaner.Tracker"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "FileCleanerTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleanerTestCase.suite"
                },
                {
                    "function name": "FileCleanerTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "FileCleanerTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleanerTestCase.FileCleanerTestCase"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "FileCleanerTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleanerTestCase.tearDown"
                },
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "FileCleanerTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleanerTestCase.main"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "FileCleanerTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleanerTestCase.setUp"
                },
                {
                    "function name": "testFileCleaner",
                    "function params": [],
                    "file name": "FileCleanerTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleanerTestCase.testFileCleaner"
                }
            ],
            "date": "2004-03-18"
        },
        {
            "commit_id": 169,
            "hash": "49be946191c21ab0edba7829bd5f838a20b91df8",
            "commit_summary": "Commenting out FilenameUtils usage as it is not a part of 1.0\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140551 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testFileUtils",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testFileUtils"
                }
            ],
            "date": "2004-04-18"
        },
        {
            "commit_id": 170,
            "hash": "3e5d9d38b2219733413c9515709c9cf82f5d7fa6",
            "commit_summary": "Removed the necessity to have the data/test directory.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140556 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testFileUtils",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testFileUtils"
                }
            ],
            "date": "2004-04-23"
        },
        {
            "commit_id": 171,
            "hash": "4127f8592e1e43b72626998fdee07f1e3c0ec928",
            "commit_summary": "Bugzilla 28496\nFix for: org.apache.commons.io.FileUtils.copyFile shouldn't allow to copy a file on itself\nSubmitted by: dany rizzi <drizzi.at.largesys.it>\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140558 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "copyFile",
                    "function params": [
                        "source",
                        "destination",
                        "preserveFileDate"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyFile"
                },
                {
                    "function name": "testCopyToSelf",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyToSelf"
                },
                {
                    "function name": "testCopyFile1ToDir",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyFile1ToDir"
                },
                {
                    "function name": "testCopyURLToFile",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyURLToFile"
                }
            ],
            "date": "2004-04-23"
        },
        {
            "commit_id": 172,
            "hash": "473241f6f9b5f7b15a28a47ceeab305b3a21ba01",
            "commit_summary": "Removed unused, commented code.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140561 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java"
            ],
            "functions": [],
            "date": "2004-04-24"
        },
        {
            "commit_id": 173,
            "hash": "7121175b470763c10a4b9592b8ff2e71648b0d7d",
            "commit_summary": "Fixed a small javadoc mistake.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140562 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [],
            "date": "2004-04-24"
        },
        {
            "commit_id": 174,
            "hash": "d2a8c83223fd79e89e751ff9386eb748ce040af9",
            "commit_summary": "Javadoc rewritten in both these classes to match the refactoring that happened a while back.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140571 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/CopyUtils.java",
                "src/java/org/apache/commons/io/IOUtils.java"
            ],
            "functions": [],
            "date": "2004-04-24"
        },
        {
            "commit_id": 175,
            "hash": "2e2da038149e9c50bd92aae86378e4e5a10ca0a8",
            "commit_summary": "removed final from 2 Utils to fit the XxxUtils pattern\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140579 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/EndianUtils.java",
                "src/java/org/apache/commons/io/IOUtils.java"
            ],
            "functions": [],
            "date": "2004-06-13"
        },
        {
            "commit_id": 176,
            "hash": "e63fe545bf5eb2b5b33137e270a2a35f881ce298",
            "commit_summary": "moved javadoc about paths into FilenameUtils\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140580 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/java/org/apache/commons/io/FilenameUtils.java"
            ],
            "functions": [],
            "date": "2004-06-13"
        },
        {
            "commit_id": 177,
            "hash": "2f4496cd2d615dba7cd2b7acd1809198044cf12e",
            "commit_summary": "improvement to the extension handling from Oliver Jones\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140581 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java",
                "src/test/org/apache/commons/io/FilenameUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "getExtension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.getExtension"
                },
                {
                    "function name": "removeExtension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.removeExtension"
                },
                {
                    "function name": "removeExtension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.removeExtension"
                },
                {
                    "function name": "getExtension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.getExtension"
                },
                {
                    "function name": "testRemoveExtension",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testRemoveExtension"
                },
                {
                    "function name": "testGetExtension",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testGetExtension"
                }
            ],
            "date": "2004-06-13"
        },
        {
            "commit_id": 178,
            "hash": "0c82c520078d45706f11cac7faa11576b0a8534d",
            "commit_summary": "removed deprecated methods that are not intended to ever be released\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140582 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java"
            ],
            "functions": [
                {
                    "function name": "basename",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.basename"
                }
            ],
            "date": "2004-06-13"
        },
        {
            "commit_id": 179,
            "hash": "4ab6a3f499d70834f72309ae4a9145b2da24d4d0",
            "commit_summary": "reset feature added to counting classes as requested by Lars Beuster\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140583 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/CountingInputStream.java",
                "src/java/org/apache/commons/io/output/CountingOutputStream.java",
                "src/test/org/apache/commons/io/input/CountingInputStreamTest.java",
                "src/test/org/apache/commons/io/output/CountingOutputStreamTest.java"
            ],
            "functions": [
                {
                    "function name": "resetCount",
                    "function params": [],
                    "file name": "CountingInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.CountingInputStream.resetCount"
                },
                {
                    "function name": "resetCount",
                    "function params": [],
                    "file name": "CountingOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/CountingOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/CountingOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.CountingOutputStream.resetCount"
                },
                {
                    "function name": "testResetting",
                    "function params": [],
                    "file name": "CountingInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/CountingInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/CountingInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.CountingInputStreamTest.testResetting"
                },
                {
                    "function name": "testCounting",
                    "function params": [],
                    "file name": "CountingOutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/CountingOutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/CountingOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.CountingOutputStreamTest.testCounting"
                },
                {
                    "function name": "assertByteArrayEquals",
                    "function params": [
                        "msg",
                        "array",
                        "start",
                        "end"
                    ],
                    "file name": "CountingOutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/CountingOutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/CountingOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.CountingOutputStreamTest.assertByteArrayEquals"
                }
            ],
            "date": "2004-06-13"
        },
        {
            "commit_id": 180,
            "hash": "9c0b6072173e0aee67f5c66f8d8b26dc762429a4",
            "commit_summary": "deprecated toByteArray\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140584 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/IOUtils.java"
            ],
            "functions": [],
            "date": "2004-06-13"
        },
        {
            "commit_id": 181,
            "hash": "2d69b93c5c834715422bbcab1748b56972abe1c2",
            "commit_summary": "Bug #29821\nBugfix for FileUtils.touch(). An existings file was overwritten. With new testcase.\nSubmitted by:\tChristoffer Hammarstr\ufffdm <kreiger.at.linuxgods.com>\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140585 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "touch",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.touch"
                },
                {
                    "function name": "testTouch",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testTouch"
                }
            ],
            "date": "2004-07-03"
        },
        {
            "commit_id": 182,
            "hash": "006bedae9b3b77925279bfb3929660a013a99c20",
            "commit_summary": "Fixed imports. Realized the * too late.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140586 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [],
            "date": "2004-07-03"
        },
        {
            "commit_id": 183,
            "hash": "07b41540700406607e1dc75538c6495429120647",
            "commit_summary": "Improve the javadoc to define a use case\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140587 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/output/DeferredFileOutputStream.java"
            ],
            "functions": [],
            "date": "2004-07-14"
        },
        {
            "commit_id": 184,
            "hash": "b31de97f620c9c16d54c6b1e145f155744536eeb",
            "commit_summary": "FileUtils.read/write byte array methods\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140588 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "writeStringToFile",
                    "function params": [
                        "file",
                        "data",
                        "encoding"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.writeStringToFile"
                },
                {
                    "function name": "contentEquals",
                    "function params": [
                        "file1",
                        "file2"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.contentEquals"
                },
                {
                    "function name": "touch",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.touch"
                },
                {
                    "function name": "writeByteArrayToFile",
                    "function params": [
                        "file",
                        "data"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.writeByteArrayToFile"
                },
                {
                    "function name": "readFileToString",
                    "function params": [
                        "file",
                        "encoding"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.readFileToString"
                },
                {
                    "function name": "readFileToByteArray",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.readFileToByteArray"
                },
                {
                    "function name": "testWriteByteArrayToFile",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile"
                },
                {
                    "function name": "testWriteStringToFile",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile"
                },
                {
                    "function name": "testReadFileToString",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testReadFileToString"
                },
                {
                    "function name": "testReadFileToByteArray",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testReadFileToByteArray"
                }
            ],
            "date": "2004-07-15"
        },
        {
            "commit_id": 185,
            "hash": "f0bd3788ad59aaf70fb170a2cb753afea15bf382",
            "commit_summary": "Bugfix for listFiles for directories where the current user has no rights.\n\nReestablish JDK 1.3 compatibility for touch().\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140589 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [
                {
                    "function name": "innerListFiles",
                    "function params": [
                        "files",
                        "directory",
                        "filter"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.innerListFiles"
                },
                {
                    "function name": "touch",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.touch"
                }
            ],
            "date": "2004-07-15"
        },
        {
            "commit_id": 186,
            "hash": "dc17ccbbff183e84950071d1ddf6d5ac9adb1e71",
            "commit_summary": "Testing prerequisites for touch() test, making it safer.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140590 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testTouch",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testTouch"
                }
            ],
            "date": "2004-07-15"
        },
        {
            "commit_id": 187,
            "hash": "ac55decc7490e4d016c948023a94e5a7bcaae6a0",
            "commit_summary": "Fix test case for Win98\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140591 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testTouch",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testTouch"
                }
            ],
            "date": "2004-07-24"
        },
        {
            "commit_id": 188,
            "hash": "891b02a1e7960248d36d1569a7bf2c7063ffce60",
            "commit_summary": "Add FileUtils.toFiles(urls)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140592 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "toFiles",
                    "function params": [
                        "urls"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.toFiles"
                },
                {
                    "function name": "testToFiles4",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testToFiles4"
                },
                {
                    "function name": "testToFiles3",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testToFiles3"
                },
                {
                    "function name": "testToFiles1",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testToFiles1"
                },
                {
                    "function name": "testToFiles2",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testToFiles2"
                },
                {
                    "function name": "testToURLs1",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testToURLs1"
                }
            ],
            "date": "2004-07-24"
        },
        {
            "commit_id": 189,
            "hash": "6afa3db854c9b574faaf1499247a898c524eded7",
            "commit_summary": "Add encoding specific methods, Javadoc, Reformat to standards\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140593 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/CopyUtils.java",
                "src/java/org/apache/commons/io/IOUtils.java"
            ],
            "functions": [
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toByteArray"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toByteArray"
                },
                {
                    "function name": "closeQuietly",
                    "function params": [
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.closeQuietly"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "closeQuietly",
                    "function params": [
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.closeQuietly"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toByteArray"
                },
                {
                    "function name": "contentEquals",
                    "function params": [
                        "input1",
                        "input2"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.contentEquals"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toByteArray"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toByteArray"
                },
                {
                    "function name": "closeQuietly",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.closeQuietly"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "IOUtils",
                    "function params": [],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.IOUtils"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "closeQuietly",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.closeQuietly"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                }
            ],
            "date": "2004-07-31"
        },
        {
            "commit_id": 190,
            "hash": "ceb601db78aff9eeeef35a32b9a6fda26dbce555",
            "commit_summary": "Add char[] methods to CopyUtils\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140594 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/CopyUtils.java",
                "src/test/org/apache/commons/io/CopyUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "testCopy_stringToOutputStream_nullEncoding",
                    "function params": [],
                    "file name": "CopyUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.CopyUtilsTest.testCopy_stringToOutputStream_nullEncoding"
                },
                {
                    "function name": "testCopy_byteArrayToWriter_Encoding",
                    "function params": [],
                    "file name": "CopyUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToWriter_Encoding"
                },
                {
                    "function name": "testCopy_inputStreamToWriter_Encoding",
                    "function params": [],
                    "file name": "CopyUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToWriter_Encoding"
                },
                {
                    "function name": "testCopy_inputStreamToWriter_nullEncoding",
                    "function params": [],
                    "file name": "CopyUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToWriter_nullEncoding"
                },
                {
                    "function name": "testCopy_readerToOutputStream_Encoding",
                    "function params": [],
                    "file name": "CopyUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.CopyUtilsTest.testCopy_readerToOutputStream_Encoding"
                },
                {
                    "function name": "testCopy_charArrayToOutputStream_nullEncoding",
                    "function params": [],
                    "file name": "CopyUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.CopyUtilsTest.testCopy_charArrayToOutputStream_nullEncoding"
                },
                {
                    "function name": "testCopy_stringToOutputStream_Encoding",
                    "function params": [],
                    "file name": "CopyUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.CopyUtilsTest.testCopy_stringToOutputStream_Encoding"
                },
                {
                    "function name": "testCopy_charArrayToWriter",
                    "function params": [],
                    "file name": "CopyUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.CopyUtilsTest.testCopy_charArrayToWriter"
                },
                {
                    "function name": "testCopy_byteArrayToWriter_nullEncoding",
                    "function params": [],
                    "file name": "CopyUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToWriter_nullEncoding"
                },
                {
                    "function name": "testCopy_charArrayToOutputStream_Encoding",
                    "function params": [],
                    "file name": "CopyUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.CopyUtilsTest.testCopy_charArrayToOutputStream_Encoding"
                },
                {
                    "function name": "testCopy_charArrayToOutputStream",
                    "function params": [],
                    "file name": "CopyUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.CopyUtilsTest.testCopy_charArrayToOutputStream"
                },
                {
                    "function name": "testCopy_readerToOutputStream_nullEncoding",
                    "function params": [],
                    "file name": "CopyUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.CopyUtilsTest.testCopy_readerToOutputStream_nullEncoding"
                }
            ],
            "date": "2004-07-31"
        },
        {
            "commit_id": 191,
            "hash": "a5db03820ce1af0768df57b6143a2dfa94fd5489",
            "commit_summary": "Deprecate methods not actually doing IO, Javadoc buffer behaviour\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140595 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/IOUtils.java"
            ],
            "functions": [
                {
                    "function name": "toString",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toByteArray"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                }
            ],
            "date": "2004-07-31"
        },
        {
            "commit_id": 192,
            "hash": "bbf9bb5b413200614e1e05db4f9c1c5e01e41061",
            "commit_summary": "Add code from CopyUtils to IOUtils, refactoring to be simpler, clearer and more efficient\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140596 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/IOUtils.java",
                "src/test/org/apache/commons/io/IOTestSuite.java"
            ],
            "functions": [
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "closeQuietly",
                    "function params": [
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.closeQuietly"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toByteArray"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "contentEquals",
                    "function params": [
                        "input1",
                        "input2"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.contentEquals"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toByteArray"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "contentEquals",
                    "function params": [
                        "input1",
                        "input2"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.contentEquals"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toByteArray"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "IOTestSuite.java",
                    "file old path": "src/test/org/apache/commons/io/IOTestSuite.java",
                    "file new path": "src/test/org/apache/commons/io/IOTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.IOTestSuite.suite"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "IOUtilsCopyTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsCopyTestCase.tearDown"
                },
                {
                    "function name": "testCopy_inputStreamToWriter",
                    "function params": [],
                    "file name": "IOUtilsCopyTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter"
                },
                {
                    "function name": "testCopy_inputStreamToOutputStream_nullIn",
                    "function params": [],
                    "file name": "IOUtilsCopyTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_nullIn"
                },
                {
                    "function name": "testCopy_readerToOutputStream_Encoding_nullOut",
                    "function params": [],
                    "file name": "IOUtilsCopyTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullOut"
                },
                {
                    "function name": "testCopy_readerToOutputStream_Encoding_nullIn",
                    "function params": [],
                    "file name": "IOUtilsCopyTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullIn"
                },
                {
                    "function name": "testCopy_inputStreamToWriter_Encoding",
                    "function params": [],
                    "file name": "IOUtilsCopyTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding"
                },
                {
                    "function name": "testCopy_inputStreamToWriter_Encoding_nullOut",
                    "function params": [],
                    "file name": "IOUtilsCopyTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullOut"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "IOUtilsCopyTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsCopyTestCase.suite"
                },
                {
                    "function name": "testCopy_readerToWriter_nullOut",
                    "function params": [],
                    "file name": "IOUtilsCopyTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_nullOut"
                },
                {
                    "function name": "testCopy_inputStreamToWriter_nullOut",
                    "function params": [],
                    "file name": "IOUtilsCopyTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_nullOut"
                },
                {
                    "function name": "testCopy_inputStreamToOutputStream_nullOut",
                    "function params": [],
                    "file name": "IOUtilsCopyTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_nullOut"
                },
                {
                    "function name": "testCopy_readerToOutputStream_nullOut",
                    "function params": [],
                    "file name": "IOUtilsCopyTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_nullOut"
                },
                {
                    "function name": "testCopy_inputStreamToWriter_Encoding_nullEncoding",
                    "function params": [],
                    "file name": "IOUtilsCopyTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullEncoding"
                },
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "IOUtilsCopyTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsCopyTestCase.main"
                },
                {
                    "function name": "IOUtilsCopyTestCase",
                    "function params": [
                        "testName"
                    ],
                    "file name": "IOUtilsCopyTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsCopyTestCase.IOUtilsCopyTestCase"
                },
                {
                    "function name": "testCopy_readerToOutputStream_Encoding_nullEncoding",
                    "function params": [],
                    "file name": "IOUtilsCopyTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullEncoding"
                },
                {
                    "function name": "testCopy_readerToWriter_nullIn",
                    "function params": [],
                    "file name": "IOUtilsCopyTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_nullIn"
                },
                {
                    "function name": "testCopy_inputStreamToOutputStream",
                    "function params": [],
                    "file name": "IOUtilsCopyTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream"
                },
                {
                    "function name": "testCopy_readerToOutputStream",
                    "function params": [],
                    "file name": "IOUtilsCopyTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream"
                },
                {
                    "function name": "testCopy_inputStreamToWriter_Encoding_nullIn",
                    "function params": [],
                    "file name": "IOUtilsCopyTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullIn"
                },
                {
                    "function name": "testCopy_inputStreamToWriter_nullIn",
                    "function params": [],
                    "file name": "IOUtilsCopyTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_nullIn"
                },
                {
                    "function name": "testCopy_readerToOutputStream_Encoding",
                    "function params": [],
                    "file name": "IOUtilsCopyTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "IOUtilsCopyTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsCopyTestCase.setUp"
                },
                {
                    "function name": "testCopy_readerToWriter",
                    "function params": [],
                    "file name": "IOUtilsCopyTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter"
                },
                {
                    "function name": "testCopy_readerToOutputStream_nullIn",
                    "function params": [],
                    "file name": "IOUtilsCopyTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_nullIn"
                },
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.main"
                },
                {
                    "function name": "testWrite_stringToOutputStream_nullStream",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullStream"
                },
                {
                    "function name": "testWrite_byteArrayToWriter_Encoding",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.suite"
                },
                {
                    "function name": "testWrite_byteArrayToOutputStream_nullData",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream_nullData"
                },
                {
                    "function name": "testWrite_byteArrayToWriter_nullWriter",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_nullWriter"
                },
                {
                    "function name": "testWrite_stringToOutputStream_Encoding",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding"
                },
                {
                    "function name": "testWrite_charArrayToOutputStream_Encoding",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.setUp"
                },
                {
                    "function name": "testWrite_stringToWriter",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter"
                },
                {
                    "function name": "testWrite_charArrayToOutputStream_Encoding_nullData",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding_nullData"
                },
                {
                    "function name": "testWrite_byteArrayToOutputStream",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream"
                },
                {
                    "function name": "testWrite_charArrayToWriter_Encoding_nullStream",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter_Encoding_nullStream"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.tearDown"
                },
                {
                    "function name": "IOUtilsWriteTestCase",
                    "function params": [
                        "testName"
                    ],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.IOUtilsWriteTestCase"
                },
                {
                    "function name": "testWrite_stringToOutputStream_Encoding_nullStream",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding_nullStream"
                },
                {
                    "function name": "testWrite_stringToOutputStream_nullData",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullData"
                },
                {
                    "function name": "testWrite_charArrayToOutputStream_nullData",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullData"
                },
                {
                    "function name": "testWrite_byteArrayToWriter",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter"
                },
                {
                    "function name": "testWrite_stringToOutputStream",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream"
                },
                {
                    "function name": "testWrite_byteArrayToOutputStream_nullStream",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream_nullStream"
                },
                {
                    "function name": "testWrite_byteArrayToWriter_Encoding_nullWriter",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullWriter"
                },
                {
                    "function name": "testWrite_byteArrayToWriter_nullData",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_nullData"
                },
                {
                    "function name": "testWrite_byteArrayToWriter_Encoding_nullEncoding",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullEncoding"
                },
                {
                    "function name": "testWrite_charArrayToOutputStream_nullStream",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullStream"
                },
                {
                    "function name": "testWrite_charArrayToOutputStream_nullEncoding",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullEncoding"
                },
                {
                    "function name": "testWrite_stringToOutputStream_nullEncoding",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullEncoding"
                },
                {
                    "function name": "testWrite_stringToOutputStream_Encoding_nullData",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding_nullData"
                },
                {
                    "function name": "testWrite_stringToWriter_Encoding_nullStream",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter_Encoding_nullStream"
                },
                {
                    "function name": "testWrite_stringToWriter_Encoding_nullData",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter_Encoding_nullData"
                },
                {
                    "function name": "testWrite_charArrayToOutputStream_Encoding_nullStream",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding_nullStream"
                },
                {
                    "function name": "testWrite_charArrayToWriter",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter"
                },
                {
                    "function name": "testWrite_charArrayToWriter_Encoding_nullData",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter_Encoding_nullData"
                },
                {
                    "function name": "testWrite_charArrayToOutputStream",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream"
                },
                {
                    "function name": "testWrite_byteArrayToWriter_Encoding_nullData",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullData"
                }
            ],
            "date": "2004-08-13"
        },
        {
            "commit_id": 193,
            "hash": "9ab01a7920c5b73c6b758cef8487feac552239eb",
            "commit_summary": "Add ability to turn yell off\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140597 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/testtools/YellOnFlushAndCloseOutputStream.java"
            ],
            "functions": [
                {
                    "function name": "off",
                    "function params": [],
                    "file name": "YellOnFlushAndCloseOutputStream.java",
                    "file old path": "src/test/org/apache/commons/io/testtools/YellOnFlushAndCloseOutputStream.java",
                    "file new path": "src/test/org/apache/commons/io/testtools/YellOnFlushAndCloseOutputStream.java",
                    "full name": "src.test.org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off"
                }
            ],
            "date": "2004-08-13"
        },
        {
            "commit_id": 194,
            "hash": "f0c9d8d08404ba2bad6c581bc76ecb1eef6c9bff",
            "commit_summary": "Deprecate CopyUtils (reverting to v1.0)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140598 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/CopyUtils.java",
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/test/org/apache/commons/io/CopyUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "copyFile",
                    "function params": [
                        "source",
                        "destination",
                        "preserveFileDate"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyFile"
                },
                {
                    "function name": "copyURLToFile",
                    "function params": [
                        "source",
                        "destination"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyURLToFile"
                }
            ],
            "date": "2004-08-13"
        },
        {
            "commit_id": 195,
            "hash": "0720518d0a128c823b93b8b8449e47921859098f",
            "commit_summary": "Add toCharArray()\nbug 28979, from Gareth Davis\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140600 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/IOUtils.java",
                "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java"
            ],
            "functions": [
                {
                    "function name": "toCharArray",
                    "function params": [
                        "is"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toCharArray"
                },
                {
                    "function name": "toCharArray",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toCharArray"
                },
                {
                    "function name": "toCharArray",
                    "function params": [
                        "is",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toCharArray"
                },
                {
                    "function name": "testReaderToCharArray",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testReaderToCharArray"
                },
                {
                    "function name": "testInputStreamToCharArray",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testInputStreamToCharArray"
                },
                {
                    "function name": "testInputStreamToCharArrayWithEncoding",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testInputStreamToCharArrayWithEncoding"
                },
                {
                    "function name": "assertEqualContent",
                    "function params": [
                        "c0",
                        "file"
                    ],
                    "file name": "FileBasedTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "full name": "src.test.org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent"
                }
            ],
            "date": "2004-08-24"
        },
        {
            "commit_id": 196,
            "hash": "4fbac940f62e0e5196498c3b7cb4ab909ce1a337",
            "commit_summary": "added finding subsystem to IO along with WildcardUtils\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140602 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "find",
                    "function params": [
                        "directory",
                        "options"
                    ],
                    "file name": "FileFinder.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FileFinder.java",
                    "full name": "src.java.org.apache.commons.io.find.FileFinder.find"
                },
                {
                    "function name": "toBoolean",
                    "function params": [
                        "obj"
                    ],
                    "file name": "FileFinder.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FileFinder.java",
                    "full name": "src.java.org.apache.commons.io.find.FileFinder.toBoolean"
                },
                {
                    "function name": "toInt",
                    "function params": [
                        "obj"
                    ],
                    "file name": "FileFinder.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FileFinder.java",
                    "full name": "src.java.org.apache.commons.io.find.FileFinder.toInt"
                },
                {
                    "function name": "notifyDirectoryStarted",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileFinder.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FileFinder.java",
                    "full name": "src.java.org.apache.commons.io.find.FileFinder.notifyDirectoryStarted"
                },
                {
                    "function name": "notifyDirectoryFinished",
                    "function params": [
                        "directory",
                        "files"
                    ],
                    "file name": "FileFinder.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FileFinder.java",
                    "full name": "src.java.org.apache.commons.io.find.FileFinder.notifyDirectoryFinished"
                },
                {
                    "function name": "removeFindListener",
                    "function params": [
                        "fl"
                    ],
                    "file name": "FileFinder.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FileFinder.java",
                    "full name": "src.java.org.apache.commons.io.find.FileFinder.removeFindListener"
                },
                {
                    "function name": "find",
                    "function params": [
                        "directory",
                        "filter",
                        "depthFirst"
                    ],
                    "file name": "FileFinder.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FileFinder.java",
                    "full name": "src.java.org.apache.commons.io.find.FileFinder.find"
                },
                {
                    "function name": "notifyFileFound",
                    "function params": [
                        "directory",
                        "file"
                    ],
                    "file name": "FileFinder.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FileFinder.java",
                    "full name": "src.java.org.apache.commons.io.find.FileFinder.notifyFileFound"
                },
                {
                    "function name": "addFindListener",
                    "function params": [
                        "fl"
                    ],
                    "file name": "FileFinder.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FileFinder.java",
                    "full name": "src.java.org.apache.commons.io.find.FileFinder.addFindListener"
                },
                {
                    "function name": "find",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileFinder.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FileFinder.java",
                    "full name": "src.java.org.apache.commons.io.find.FileFinder.find"
                },
                {
                    "function name": "FindEvent",
                    "function params": [
                        "finder",
                        "type",
                        "directory",
                        "files"
                    ],
                    "file name": "FindEvent.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FindEvent.java",
                    "full name": "src.java.org.apache.commons.io.find.FindEvent.FindEvent"
                },
                {
                    "function name": "FindEvent",
                    "function params": [
                        "finder",
                        "type",
                        "directory",
                        "file"
                    ],
                    "file name": "FindEvent.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FindEvent.java",
                    "full name": "src.java.org.apache.commons.io.find.FindEvent.FindEvent"
                },
                {
                    "function name": "getDirectory",
                    "function params": [],
                    "file name": "FindEvent.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FindEvent.java",
                    "full name": "src.java.org.apache.commons.io.find.FindEvent.getDirectory"
                },
                {
                    "function name": "FindEvent",
                    "function params": [
                        "finder",
                        "type",
                        "directory"
                    ],
                    "file name": "FindEvent.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FindEvent.java",
                    "full name": "src.java.org.apache.commons.io.find.FindEvent.FindEvent"
                },
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "FindEvent.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FindEvent.java",
                    "full name": "src.java.org.apache.commons.io.find.FindEvent.toString"
                },
                {
                    "function name": "getFile",
                    "function params": [],
                    "file name": "FindEvent.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FindEvent.java",
                    "full name": "src.java.org.apache.commons.io.find.FindEvent.getFile"
                },
                {
                    "function name": "getFinder",
                    "function params": [],
                    "file name": "FindEvent.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FindEvent.java",
                    "full name": "src.java.org.apache.commons.io.find.FindEvent.getFinder"
                },
                {
                    "function name": "getFiles",
                    "function params": [],
                    "file name": "FindEvent.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FindEvent.java",
                    "full name": "src.java.org.apache.commons.io.find.FindEvent.getFiles"
                },
                {
                    "function name": "getType",
                    "function params": [],
                    "file name": "FindEvent.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FindEvent.java",
                    "full name": "src.java.org.apache.commons.io.find.FindEvent.getType"
                },
                {
                    "function name": "FinderException",
                    "function params": [],
                    "file name": "FinderException.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FinderException.java",
                    "full name": "src.java.org.apache.commons.io.find.FinderException.FinderException"
                },
                {
                    "function name": "FinderException",
                    "function params": [
                        "msg",
                        "t"
                    ],
                    "file name": "FinderException.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FinderException.java",
                    "full name": "src.java.org.apache.commons.io.find.FinderException.FinderException"
                },
                {
                    "function name": "FinderException",
                    "function params": [
                        "t"
                    ],
                    "file name": "FinderException.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FinderException.java",
                    "full name": "src.java.org.apache.commons.io.find.FinderException.FinderException"
                },
                {
                    "function name": "FinderException",
                    "function params": [
                        "msg"
                    ],
                    "file name": "FinderException.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FinderException.java",
                    "full name": "src.java.org.apache.commons.io.find.FinderException.FinderException"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "FindingFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FindingFilter.java",
                    "full name": "src.java.org.apache.commons.io.find.FindingFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "FindingFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FindingFilter.java",
                    "full name": "src.java.org.apache.commons.io.find.FindingFilter.accept"
                },
                {
                    "function name": "TimeFilter",
                    "function params": [
                        "option",
                        "argument",
                        "invert",
                        "parent"
                    ],
                    "file name": "FindingFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FindingFilter.java",
                    "full name": "src.java.org.apache.commons.io.find.FindingFilter.TimeFilter"
                },
                {
                    "function name": "HiddenFilter",
                    "function params": [
                        "option",
                        "argument",
                        "invert"
                    ],
                    "file name": "FindingFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FindingFilter.java",
                    "full name": "src.java.org.apache.commons.io.find.FindingFilter.HiddenFilter"
                },
                {
                    "function name": "SizeFilter",
                    "function params": [
                        "option",
                        "argument",
                        "invert"
                    ],
                    "file name": "FindingFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FindingFilter.java",
                    "full name": "src.java.org.apache.commons.io.find.FindingFilter.SizeFilter"
                },
                {
                    "function name": "RegexFilter",
                    "function params": [
                        "option",
                        "argument",
                        "invert",
                        "ignoreCase"
                    ],
                    "file name": "FindingFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FindingFilter.java",
                    "full name": "src.java.org.apache.commons.io.find.FindingFilter.RegexFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "FindingFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FindingFilter.java",
                    "full name": "src.java.org.apache.commons.io.find.FindingFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "FindingFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FindingFilter.java",
                    "full name": "src.java.org.apache.commons.io.find.FindingFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "FindingFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FindingFilter.java",
                    "full name": "src.java.org.apache.commons.io.find.FindingFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "FindingFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FindingFilter.java",
                    "full name": "src.java.org.apache.commons.io.find.FindingFilter.accept"
                },
                {
                    "function name": "CanWriteFilter",
                    "function params": [
                        "option",
                        "argument",
                        "invert"
                    ],
                    "file name": "FindingFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FindingFilter.java",
                    "full name": "src.java.org.apache.commons.io.find.FindingFilter.CanWriteFilter"
                },
                {
                    "function name": "PathFilter",
                    "function params": [
                        "option",
                        "argument",
                        "invert",
                        "ignoreCase"
                    ],
                    "file name": "FindingFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FindingFilter.java",
                    "full name": "src.java.org.apache.commons.io.find.FindingFilter.PathFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "FindingFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FindingFilter.java",
                    "full name": "src.java.org.apache.commons.io.find.FindingFilter.accept"
                },
                {
                    "function name": "MinFilter",
                    "function params": [
                        "option",
                        "argument",
                        "invert",
                        "parent"
                    ],
                    "file name": "FindingFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FindingFilter.java",
                    "full name": "src.java.org.apache.commons.io.find.FindingFilter.MinFilter"
                },
                {
                    "function name": "invert",
                    "function params": [
                        "invert",
                        "answer"
                    ],
                    "file name": "FindingFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FindingFilter.java",
                    "full name": "src.java.org.apache.commons.io.find.FindingFilter.invert"
                },
                {
                    "function name": "NewerFilter",
                    "function params": [
                        "option",
                        "argument",
                        "invert"
                    ],
                    "file name": "FindingFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FindingFilter.java",
                    "full name": "src.java.org.apache.commons.io.find.FindingFilter.NewerFilter"
                },
                {
                    "function name": "CanReadFilter",
                    "function params": [
                        "option",
                        "argument",
                        "invert"
                    ],
                    "file name": "FindingFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FindingFilter.java",
                    "full name": "src.java.org.apache.commons.io.find.FindingFilter.CanReadFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "FindingFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FindingFilter.java",
                    "full name": "src.java.org.apache.commons.io.find.FindingFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "FindingFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FindingFilter.java",
                    "full name": "src.java.org.apache.commons.io.find.FindingFilter.accept"
                },
                {
                    "function name": "FindingFilter",
                    "function params": [
                        "options"
                    ],
                    "file name": "FindingFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FindingFilter.java",
                    "full name": "src.java.org.apache.commons.io.find.FindingFilter.FindingFilter"
                },
                {
                    "function name": "NameFilter",
                    "function params": [
                        "option",
                        "argument",
                        "invert",
                        "ignoreCase"
                    ],
                    "file name": "FindingFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FindingFilter.java",
                    "full name": "src.java.org.apache.commons.io.find.FindingFilter.NameFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "FindingFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FindingFilter.java",
                    "full name": "src.java.org.apache.commons.io.find.FindingFilter.accept"
                },
                {
                    "function name": "isDaystartConfigured",
                    "function params": [],
                    "file name": "FindingFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FindingFilter.java",
                    "full name": "src.java.org.apache.commons.io.find.FindingFilter.isDaystartConfigured"
                },
                {
                    "function name": "TypeFilter",
                    "function params": [
                        "option",
                        "argument",
                        "invert"
                    ],
                    "file name": "FindingFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FindingFilter.java",
                    "full name": "src.java.org.apache.commons.io.find.FindingFilter.TypeFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "FindingFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FindingFilter.java",
                    "full name": "src.java.org.apache.commons.io.find.FindingFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "FindingFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FindingFilter.java",
                    "full name": "src.java.org.apache.commons.io.find.FindingFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "FindingFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FindingFilter.java",
                    "full name": "src.java.org.apache.commons.io.find.FindingFilter.accept"
                },
                {
                    "function name": "createFilter",
                    "function params": [
                        "option",
                        "argument"
                    ],
                    "file name": "FindingFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FindingFilter.java",
                    "full name": "src.java.org.apache.commons.io.find.FindingFilter.createFilter"
                },
                {
                    "function name": "EmptyFilter",
                    "function params": [
                        "option",
                        "argument",
                        "invert"
                    ],
                    "file name": "FindingFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/FindingFilter.java",
                    "full name": "src.java.org.apache.commons.io.find.FindingFilter.EmptyFilter"
                },
                {
                    "function name": "match",
                    "function params": [
                        "text",
                        "wildcard"
                    ],
                    "file name": "WildcardUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/WildcardUtils.java",
                    "full name": "src.java.org.apache.commons.io.find.WildcardUtils.match"
                },
                {
                    "function name": "splitOnTokens",
                    "function params": [
                        "text"
                    ],
                    "file name": "WildcardUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/find/WildcardUtils.java",
                    "full name": "src.java.org.apache.commons.io.find.WildcardUtils.splitOnTokens"
                },
                {
                    "function name": "testFindSize",
                    "function params": [],
                    "file name": "FileFinderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/find/FileFinderTest.java",
                    "full name": "src.test.org.apache.commons.io.find.FileFinderTest.testFindSize"
                },
                {
                    "function name": "testCanWriteFalse",
                    "function params": [],
                    "file name": "FileFinderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/find/FileFinderTest.java",
                    "full name": "src.test.org.apache.commons.io.find.FileFinderTest.testCanWriteFalse"
                },
                {
                    "function name": "testCanReadTrue",
                    "function params": [],
                    "file name": "FileFinderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/find/FileFinderTest.java",
                    "full name": "src.test.org.apache.commons.io.find.FileFinderTest.testCanReadTrue"
                },
                {
                    "function name": "directoryStarted",
                    "function params": [
                        "fe"
                    ],
                    "file name": "FileFinderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/find/FileFinderTest.java",
                    "full name": "src.test.org.apache.commons.io.find.FileFinderTest.directoryStarted"
                },
                {
                    "function name": "directoryFinished",
                    "function params": [
                        "fe"
                    ],
                    "file name": "FileFinderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/find/FileFinderTest.java",
                    "full name": "src.test.org.apache.commons.io.find.FileFinderTest.directoryFinished"
                },
                {
                    "function name": "FileFinderTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "FileFinderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/find/FileFinderTest.java",
                    "full name": "src.test.org.apache.commons.io.find.FileFinderTest.FileFinderTest"
                },
                {
                    "function name": "testFindPath",
                    "function params": [],
                    "file name": "FileFinderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/find/FileFinderTest.java",
                    "full name": "src.test.org.apache.commons.io.find.FileFinderTest.testFindPath"
                },
                {
                    "function name": "testFindIName",
                    "function params": [],
                    "file name": "FileFinderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/find/FileFinderTest.java",
                    "full name": "src.test.org.apache.commons.io.find.FileFinderTest.testFindIName"
                },
                {
                    "function name": "testFindTypeF",
                    "function params": [],
                    "file name": "FileFinderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/find/FileFinderTest.java",
                    "full name": "src.test.org.apache.commons.io.find.FileFinderTest.testFindTypeF"
                },
                {
                    "function name": "testFindIPath",
                    "function params": [],
                    "file name": "FileFinderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/find/FileFinderTest.java",
                    "full name": "src.test.org.apache.commons.io.find.FileFinderTest.testFindIPath"
                },
                {
                    "function name": "testFindNotPath",
                    "function params": [],
                    "file name": "FileFinderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/find/FileFinderTest.java",
                    "full name": "src.test.org.apache.commons.io.find.FileFinderTest.testFindNotPath"
                },
                {
                    "function name": "testFindIRegex",
                    "function params": [],
                    "file name": "FileFinderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/find/FileFinderTest.java",
                    "full name": "src.test.org.apache.commons.io.find.FileFinderTest.testFindIRegex"
                },
                {
                    "function name": "testFindName",
                    "function params": [],
                    "file name": "FileFinderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/find/FileFinderTest.java",
                    "full name": "src.test.org.apache.commons.io.find.FileFinderTest.testFindName"
                },
                {
                    "function name": "testCanWriteTrue",
                    "function params": [],
                    "file name": "FileFinderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/find/FileFinderTest.java",
                    "full name": "src.test.org.apache.commons.io.find.FileFinderTest.testCanWriteTrue"
                },
                {
                    "function name": "testFindRegex",
                    "function params": [],
                    "file name": "FileFinderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/find/FileFinderTest.java",
                    "full name": "src.test.org.apache.commons.io.find.FileFinderTest.testFindRegex"
                },
                {
                    "function name": "testCanReadFalse",
                    "function params": [],
                    "file name": "FileFinderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/find/FileFinderTest.java",
                    "full name": "src.test.org.apache.commons.io.find.FileFinderTest.testCanReadFalse"
                },
                {
                    "function name": "fileFound",
                    "function params": [
                        "fe"
                    ],
                    "file name": "FileFinderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/find/FileFinderTest.java",
                    "full name": "src.test.org.apache.commons.io.find.FileFinderTest.fileFound"
                },
                {
                    "function name": "testFindEmpty",
                    "function params": [],
                    "file name": "FileFinderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/find/FileFinderTest.java",
                    "full name": "src.test.org.apache.commons.io.find.FileFinderTest.testFindEmpty"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "FileFinderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/find/FileFinderTest.java",
                    "full name": "src.test.org.apache.commons.io.find.FileFinderTest.setUp"
                },
                {
                    "function name": "testFindTypeD",
                    "function params": [],
                    "file name": "FileFinderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/find/FileFinderTest.java",
                    "full name": "src.test.org.apache.commons.io.find.FileFinderTest.testFindTypeD"
                },
                {
                    "function name": "WildcardUtilsTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "WildcardUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/find/WildcardUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.find.WildcardUtilsTest.WildcardUtilsTest"
                },
                {
                    "function name": "assertArrayEquals",
                    "function params": [
                        "a1",
                        "a2"
                    ],
                    "file name": "WildcardUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/find/WildcardUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.find.WildcardUtilsTest.assertArrayEquals"
                },
                {
                    "function name": "testSplitOnTokens",
                    "function params": [],
                    "file name": "WildcardUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/find/WildcardUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.find.WildcardUtilsTest.testSplitOnTokens"
                },
                {
                    "function name": "testMatch",
                    "function params": [],
                    "file name": "WildcardUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/find/WildcardUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.find.WildcardUtilsTest.testMatch"
                }
            ],
            "date": "2004-09-17"
        },
        {
            "commit_id": 197,
            "hash": "c7cb6d1831629a3b54b33fc949d3ccb816c727ce",
            "commit_summary": "still had old subversion tests in. switched to ignore CVS directory and to expect an extra file in the type test\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140603 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/find/FileFinderTest.java"
            ],
            "functions": [
                {
                    "function name": "testFindTypeF",
                    "function params": [],
                    "file name": "FileFinderTest.java",
                    "file old path": "src/test/org/apache/commons/io/find/FileFinderTest.java",
                    "file new path": "src/test/org/apache/commons/io/find/FileFinderTest.java",
                    "full name": "src.test.org.apache.commons.io.find.FileFinderTest.testFindTypeF"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "FileFinderTest.java",
                    "file old path": "src/test/org/apache/commons/io/find/FileFinderTest.java",
                    "file new path": "src/test/org/apache/commons/io/find/FileFinderTest.java",
                    "full name": "src.test.org.apache.commons.io.find.FileFinderTest.setUp"
                }
            ],
            "date": "2004-09-22"
        },
        {
            "commit_id": 198,
            "hash": "1d40fcea1b4b48076b0b880ad4db78e8a8d05fc5",
            "commit_summary": "WildcardFilter (Bugzilla #31115)\n\nSubmitted by:\tJason Anderson\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140604 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "accept",
                    "function params": [
                        "dir",
                        "name"
                    ],
                    "file name": "WildcardFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.WildcardFilter.accept"
                },
                {
                    "function name": "WildcardFilter",
                    "function params": [
                        "wildcards"
                    ],
                    "file name": "WildcardFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.WildcardFilter.WildcardFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "WildcardFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.WildcardFilter.accept"
                },
                {
                    "function name": "WildcardFilter",
                    "function params": [
                        "wildcards"
                    ],
                    "file name": "WildcardFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.WildcardFilter.WildcardFilter"
                },
                {
                    "function name": "WildcardFilter",
                    "function params": [
                        "wildcard"
                    ],
                    "file name": "WildcardFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.WildcardFilter.WildcardFilter"
                },
                {
                    "function name": "testPrefix",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix"
                },
                {
                    "function name": "assertFiltering",
                    "function params": [
                        "filter",
                        "file",
                        "expected"
                    ],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering"
                },
                {
                    "function name": "testSuffix",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix"
                },
                {
                    "function name": "testWildcard",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard"
                }
            ],
            "date": "2004-09-22"
        },
        {
            "commit_id": 199,
            "hash": "400e99de58edf0d46a2b22818c37384a3ec9d122",
            "commit_summary": "More tests for WildcardUtils.match and a new implementation of the match method.\nMostly the same as Bugzilla #31115, though the old tests were kept and they\nshowed a bug.\n\nSubmitted by:\tJason Anderson\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140606 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/find/WildcardUtils.java",
                "src/test/org/apache/commons/io/find/WildcardUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "match",
                    "function params": [
                        "text",
                        "wildcard"
                    ],
                    "file name": "WildcardUtils.java",
                    "file old path": "src/java/org/apache/commons/io/find/WildcardUtils.java",
                    "file new path": "src/java/org/apache/commons/io/find/WildcardUtils.java",
                    "full name": "src.java.org.apache.commons.io.find.WildcardUtils.match"
                },
                {
                    "function name": "assertMatch",
                    "function params": [
                        "text",
                        "wildcard",
                        "expected"
                    ],
                    "file name": "WildcardUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/find/WildcardUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/find/WildcardUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.find.WildcardUtilsTest.assertMatch"
                },
                {
                    "function name": "testMatch2",
                    "function params": [],
                    "file name": "WildcardUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/find/WildcardUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/find/WildcardUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.find.WildcardUtilsTest.testMatch2"
                }
            ],
            "date": "2004-09-22"
        },
        {
            "commit_id": 200,
            "hash": "bf190d699ef669c058ee62a8f7ab7220b6684b78",
            "commit_summary": "Use the Commons IO ByteArrayOutputStream instead of the java.io one, so\nthat we don't have to preallocate the entire memory size up front. This\nfixes bug #24306 filed against Commons FileUpload.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140607 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/output/DeferredFileOutputStream.java"
            ],
            "functions": [
                {
                    "function name": "DeferredFileOutputStream",
                    "function params": [
                        "threshold",
                        "outputFile"
                    ],
                    "file name": "DeferredFileOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream"
                }
            ],
            "date": "2004-10-11"
        },
        {
            "commit_id": 201,
            "hash": "41f13afe45c47b00aaf3709f0d5f0de11493275e",
            "commit_summary": "Directories should not be included when looking for empty files.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140608 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/find/FindingFilter.java"
            ],
            "functions": [
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "FindingFilter.java",
                    "file old path": "src/java/org/apache/commons/io/find/FindingFilter.java",
                    "file new path": "src/java/org/apache/commons/io/find/FindingFilter.java",
                    "full name": "src.java.org.apache.commons.io.find.FindingFilter.accept"
                }
            ],
            "date": "2004-10-24"
        },
        {
            "commit_id": 202,
            "hash": "5ed7321a99212eb47f1e6561826dd229b3cebbac",
            "commit_summary": "The tests were using explicit Unix-style path separators, whereas the utils\nthemselves were using File.separator, so the tests failed on Windows. Now\nthe tests also use File.separator, and work on Windows. The one tricky part\nis that paths for regex searches need to be escaped if the separator is a\nbackslash.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140609 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "src/test/org/apache/commons/io/find/FileFinderTest.java"
            ],
            "functions": [
                {
                    "function name": "testRemoveExtension",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testRemoveExtension"
                },
                {
                    "function name": "testGetExtension",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testGetExtension"
                },
                {
                    "function name": "testFindIRegex",
                    "function params": [],
                    "file name": "FileFinderTest.java",
                    "file old path": "src/test/org/apache/commons/io/find/FileFinderTest.java",
                    "file new path": "src/test/org/apache/commons/io/find/FileFinderTest.java",
                    "full name": "src.test.org.apache.commons.io.find.FileFinderTest.testFindIRegex"
                },
                {
                    "function name": "testFindIPath",
                    "function params": [],
                    "file name": "FileFinderTest.java",
                    "file old path": "src/test/org/apache/commons/io/find/FileFinderTest.java",
                    "file new path": "src/test/org/apache/commons/io/find/FileFinderTest.java",
                    "full name": "src.test.org.apache.commons.io.find.FileFinderTest.testFindIPath"
                },
                {
                    "function name": "testFindRegex",
                    "function params": [],
                    "file name": "FileFinderTest.java",
                    "file old path": "src/test/org/apache/commons/io/find/FileFinderTest.java",
                    "file new path": "src/test/org/apache/commons/io/find/FileFinderTest.java",
                    "full name": "src.test.org.apache.commons.io.find.FileFinderTest.testFindRegex"
                },
                {
                    "function name": "testFindPath",
                    "function params": [],
                    "file name": "FileFinderTest.java",
                    "file old path": "src/test/org/apache/commons/io/find/FileFinderTest.java",
                    "file new path": "src/test/org/apache/commons/io/find/FileFinderTest.java",
                    "full name": "src.test.org.apache.commons.io.find.FileFinderTest.testFindPath"
                },
                {
                    "function name": "escapePath",
                    "function params": [
                        "text"
                    ],
                    "file name": "FileFinderTest.java",
                    "file old path": "src/test/org/apache/commons/io/find/FileFinderTest.java",
                    "file new path": "src/test/org/apache/commons/io/find/FileFinderTest.java",
                    "full name": "src.test.org.apache.commons.io.find.FileFinderTest.escapePath"
                }
            ],
            "date": "2004-10-24"
        },
        {
            "commit_id": 203,
            "hash": "b3f1f4aabfec5634a364f4316c2bd6fd8c608d06",
            "commit_summary": "Re-enable testGetExtensionWithPaths() and testRemoveExtensionWithPaths(),\nmodifying them to use File.separator. Commented out the Windows paths for\nnow, until we can clarify the intent.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140611 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FilenameUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testGetExtensionWithPaths",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testGetExtensionWithPaths"
                },
                {
                    "function name": "testRemoveExtensionWithPaths",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testRemoveExtensionWithPaths"
                }
            ],
            "date": "2004-10-24"
        },
        {
            "commit_id": 204,
            "hash": "79f1aa2ebfe5af14e53771a12bf37bb1bda031c8",
            "commit_summary": "Fix Javadoc warnings.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140612 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/IOUtils.java"
            ],
            "functions": [],
            "date": "2004-10-24"
        },
        {
            "commit_id": 205,
            "hash": "e47d347ce4255b8964e384bf0df170281c78d070",
            "commit_summary": "Made a start on getting us Checkstyle clean. Fixed a few hundred gripes,\nbut there are still many, many more.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140614 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/CopyUtils.java",
                "src/java/org/apache/commons/io/EndianUtils.java",
                "src/java/org/apache/commons/io/FileCleaner.java",
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/java/org/apache/commons/io/FilenameUtils.java",
                "src/java/org/apache/commons/io/HexDump.java",
                "src/java/org/apache/commons/io/IOUtils.java"
            ],
            "functions": [
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "CopyUtils",
                    "function params": [],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.CopyUtils"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "CopyUtils.java",
                    "file old path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "file new path": "src/java/org/apache/commons/io/CopyUtils.java",
                    "full name": "src.java.org.apache.commons.io.CopyUtils.copy"
                },
                {
                    "function name": "writeSwappedFloat",
                    "function params": [
                        "data",
                        "offset",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedFloat"
                },
                {
                    "function name": "writeSwappedDouble",
                    "function params": [
                        "data",
                        "offset",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedDouble"
                },
                {
                    "function name": "readSwappedLong",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedLong"
                },
                {
                    "function name": "writeSwappedShort",
                    "function params": [
                        "data",
                        "offset",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedShort"
                },
                {
                    "function name": "read",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.read"
                },
                {
                    "function name": "swapLong",
                    "function params": [
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.swapLong"
                },
                {
                    "function name": "swapFloat",
                    "function params": [
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.swapFloat"
                },
                {
                    "function name": "readSwappedDouble",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedDouble"
                },
                {
                    "function name": "readSwappedInteger",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedInteger"
                },
                {
                    "function name": "writeSwappedLong",
                    "function params": [
                        "output",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedLong"
                },
                {
                    "function name": "readSwappedLong",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedLong"
                },
                {
                    "function name": "readSwappedUnsignedInteger",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger"
                },
                {
                    "function name": "writeSwappedInteger",
                    "function params": [
                        "output",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedInteger"
                },
                {
                    "function name": "writeSwappedDouble",
                    "function params": [
                        "output",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedDouble"
                },
                {
                    "function name": "swapShort",
                    "function params": [
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.swapShort"
                },
                {
                    "function name": "readSwappedFloat",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedFloat"
                },
                {
                    "function name": "readSwappedUnsignedInteger",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger"
                },
                {
                    "function name": "readSwappedShort",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedShort"
                },
                {
                    "function name": "writeSwappedShort",
                    "function params": [
                        "output",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedShort"
                },
                {
                    "function name": "writeSwappedLong",
                    "function params": [
                        "data",
                        "offset",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedLong"
                },
                {
                    "function name": "writeSwappedInteger",
                    "function params": [
                        "data",
                        "offset",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedInteger"
                },
                {
                    "function name": "readSwappedInteger",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedInteger"
                },
                {
                    "function name": "swapInteger",
                    "function params": [
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.swapInteger"
                },
                {
                    "function name": "readSwappedShort",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedShort"
                },
                {
                    "function name": "readSwappedUnsignedShort",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedUnsignedShort"
                },
                {
                    "function name": "readSwappedUnsignedShort",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedUnsignedShort"
                },
                {
                    "function name": "readSwappedFloat",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedFloat"
                },
                {
                    "function name": "swapDouble",
                    "function params": [
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.swapDouble"
                },
                {
                    "function name": "readSwappedDouble",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedDouble"
                },
                {
                    "function name": "writeSwappedFloat",
                    "function params": [
                        "output",
                        "value"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.writeSwappedFloat"
                },
                {
                    "function name": "Tracker",
                    "function params": [
                        "file",
                        "marker",
                        "q"
                    ],
                    "file name": "FileCleaner.java",
                    "file old path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "file new path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaner.Tracker"
                },
                {
                    "function name": "Tracker",
                    "function params": [
                        "path",
                        "marker",
                        "queue"
                    ],
                    "file name": "FileCleaner.java",
                    "file old path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "file new path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaner.Tracker"
                },
                {
                    "function name": "Tracker",
                    "function params": [
                        "file",
                        "marker",
                        "queue"
                    ],
                    "file name": "FileCleaner.java",
                    "file old path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "file new path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaner.Tracker"
                },
                {
                    "function name": "Tracker",
                    "function params": [
                        "path",
                        "marker",
                        "q"
                    ],
                    "file name": "FileCleaner.java",
                    "file old path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "file new path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaner.Tracker"
                },
                {
                    "function name": "Thread",
                    "function params": [],
                    "file name": "FileCleaner.java",
                    "file old path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "file new path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaner.Thread"
                },
                {
                    "function name": "isFileNewer",
                    "function params": [
                        "file",
                        "reference"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.isFileNewer"
                },
                {
                    "function name": "listFiles",
                    "function params": [
                        "directory",
                        "fileFilter",
                        "dirFilter"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.listFiles"
                },
                {
                    "function name": "writeStringToFile",
                    "function params": [
                        "file",
                        "data",
                        "encoding"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.writeStringToFile"
                },
                {
                    "function name": "innerListFiles",
                    "function params": [
                        "files",
                        "directory",
                        "filter"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.innerListFiles"
                },
                {
                    "function name": "copyFileToDirectory",
                    "function params": [
                        "source",
                        "destinationDirectory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyFileToDirectory"
                },
                {
                    "function name": "convertFileCollectionToFileArray",
                    "function params": [
                        "files"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.convertFileCollectionToFileArray"
                },
                {
                    "function name": "waitFor",
                    "function params": [
                        "file",
                        "seconds"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.waitFor"
                },
                {
                    "function name": "toFiles",
                    "function params": [
                        "urls"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.toFiles"
                },
                {
                    "function name": "listFiles",
                    "function params": [
                        "directory",
                        "extensions",
                        "recursive"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.listFiles"
                },
                {
                    "function name": "isFileNewer",
                    "function params": [
                        "file",
                        "timeMillis"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.isFileNewer"
                },
                {
                    "function name": "forceMkdir",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.forceMkdir"
                },
                {
                    "function name": "toFile",
                    "function params": [
                        "url"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.toFile"
                },
                {
                    "function name": "copyFile",
                    "function params": [
                        "source",
                        "destination",
                        "preserveFileDate"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyFile"
                },
                {
                    "function name": "catPath",
                    "function params": [
                        "lookupPath",
                        "path"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.catPath"
                },
                {
                    "function name": "removeExtension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.removeExtension"
                },
                {
                    "function name": "normalize",
                    "function params": [
                        "path"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.normalize"
                },
                {
                    "function name": "getExtension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.getExtension"
                },
                {
                    "function name": "getPath",
                    "function params": [
                        "filepath"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.getPath"
                },
                {
                    "function name": "resolveFile",
                    "function params": [
                        "baseFile",
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.resolveFile"
                },
                {
                    "function name": "removePath",
                    "function params": [
                        "filepath"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.removePath"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "contentEquals",
                    "function params": [
                        "input1",
                        "input2"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.contentEquals"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "toCharArray",
                    "function params": [
                        "is",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toCharArray"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "contentEquals",
                    "function params": [
                        "input1",
                        "input2"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.contentEquals"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toByteArray"
                }
            ],
            "date": "2004-10-24"
        },
        {
            "commit_id": 206,
            "hash": "ea4523f9a30c4bf19fc5a658ed0a95b7f2629358",
            "commit_summary": "Let java.io.File join the directory and the filename for us.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140615 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java"
            ],
            "functions": [
                {
                    "function name": "accept",
                    "function params": [
                        "dir",
                        "name"
                    ],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.accept"
                }
            ],
            "date": "2004-10-24"
        },
        {
            "commit_id": 207,
            "hash": "7a9d4bbfa43b602c62e5e4652e2e74da677c616e",
            "commit_summary": "Make getExtension() and hence removeExtension() work for both Windows and\n*nix paths. Enable (and fix) tests for both.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140616 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java",
                "src/test/org/apache/commons/io/FilenameUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "getExtension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.getExtension"
                },
                {
                    "function name": "internalize",
                    "function params": [
                        "path"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.internalize"
                },
                {
                    "function name": "externalize",
                    "function params": [
                        "path"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.externalize"
                },
                {
                    "function name": "testRemoveExtensionWithPaths",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testRemoveExtensionWithPaths"
                },
                {
                    "function name": "testGetExtensionWithPaths",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testGetExtensionWithPaths"
                }
            ],
            "date": "2004-10-24"
        },
        {
            "commit_id": 208,
            "hash": "7a58802587118f629b7f4a0025fef3380ac5ab89",
            "commit_summary": "Whoops - missed some tests that needed reinstating in their original form.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140617 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FilenameUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testRemoveExtension",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testRemoveExtension"
                },
                {
                    "function name": "testGetExtension",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testGetExtension"
                }
            ],
            "date": "2004-10-24"
        },
        {
            "commit_id": 209,
            "hash": "ba53c60b33b398532ae8d1a3bdad9c914b76b381",
            "commit_summary": "Bug #30705 - Add conditional file filters.\n\nI effectively merged these new filters into the existing And and Or\nfilters, rather than having multiple flavours of them. In practice, this\nmeans that I added the contructors from the original filters to these new\nones, and then replaced the old with the new. All of the pre-existing\ntests work with the resulting filters, along with all the new tests\nsupplied with the enhancement request. Thanks to Steven Caswell for the\ncode.\n\nI also had to exclude the abstract test cases in the Maven build file, so\nthat JUnit wouldn't try to instantiate and run them, and regenerate the\nAnt build file.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140618 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/OrFileFilter.java"
            ],
            "functions": [
                {
                    "function name": "setFileFilters",
                    "function params": [
                        "fileFilters"
                    ],
                    "file name": "AndFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AndFileFilter.setFileFilters"
                },
                {
                    "function name": "removeFileFilter",
                    "function params": [
                        "ioFileFilter"
                    ],
                    "file name": "AndFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AndFileFilter.removeFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "AndFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AndFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "AndFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AndFileFilter.accept"
                },
                {
                    "function name": "getFileFilters",
                    "function params": [],
                    "file name": "AndFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AndFileFilter.getFileFilters"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file",
                        "name"
                    ],
                    "file name": "AndFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AndFileFilter.accept"
                },
                {
                    "function name": "AndFileFilter",
                    "function params": [],
                    "file name": "AndFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter"
                },
                {
                    "function name": "AndFileFilter",
                    "function params": [
                        "filter1",
                        "filter2"
                    ],
                    "file name": "AndFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter"
                },
                {
                    "function name": "addFileFilter",
                    "function params": [
                        "ioFileFilter"
                    ],
                    "file name": "AndFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AndFileFilter.addFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file",
                        "name"
                    ],
                    "file name": "AndFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AndFileFilter.accept"
                },
                {
                    "function name": "AndFileFilter",
                    "function params": [
                        "fileFilters"
                    ],
                    "file name": "AndFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter"
                },
                {
                    "function name": "OrFileFilter",
                    "function params": [
                        "filter1",
                        "filter2"
                    ],
                    "file name": "OrFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter"
                },
                {
                    "function name": "OrFileFilter",
                    "function params": [],
                    "file name": "OrFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file",
                        "name"
                    ],
                    "file name": "OrFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.OrFileFilter.accept"
                },
                {
                    "function name": "setFileFilters",
                    "function params": [
                        "fileFilters"
                    ],
                    "file name": "OrFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.OrFileFilter.setFileFilters"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file",
                        "name"
                    ],
                    "file name": "OrFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.OrFileFilter.accept"
                },
                {
                    "function name": "getFileFilters",
                    "function params": [],
                    "file name": "OrFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.OrFileFilter.getFileFilters"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "OrFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.OrFileFilter.accept"
                },
                {
                    "function name": "removeFileFilter",
                    "function params": [
                        "ioFileFilter"
                    ],
                    "file name": "OrFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.OrFileFilter.removeFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "OrFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.OrFileFilter.accept"
                },
                {
                    "function name": "OrFileFilter",
                    "function params": [
                        "fileFilters"
                    ],
                    "file name": "OrFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter"
                },
                {
                    "function name": "addFileFilter",
                    "function params": [
                        "ioFileFilter"
                    ],
                    "file name": "OrFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.OrFileFilter.addFileFilter"
                },
                {
                    "function name": "getTestFilters",
                    "function params": [],
                    "file name": "AndFileFilterTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.AndFileFilterTestCase.getTestFilters"
                },
                {
                    "function name": "buildFilterUsingConstructor",
                    "function params": [
                        "filters"
                    ],
                    "file name": "AndFileFilterTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.AndFileFilterTestCase.buildFilterUsingConstructor"
                },
                {
                    "function name": "getFalseResults",
                    "function params": [],
                    "file name": "AndFileFilterTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.AndFileFilterTestCase.getFalseResults"
                },
                {
                    "function name": "getFileResults",
                    "function params": [],
                    "file name": "AndFileFilterTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.AndFileFilterTestCase.getFileResults"
                },
                {
                    "function name": "setUpTestFilters",
                    "function params": [],
                    "file name": "AndFileFilterTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.AndFileFilterTestCase.setUpTestFilters"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "AndFileFilterTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.AndFileFilterTestCase.suite"
                },
                {
                    "function name": "getDefaultWorkingPath",
                    "function params": [],
                    "file name": "AndFileFilterTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.AndFileFilterTestCase.getDefaultWorkingPath"
                },
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "AndFileFilterTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.AndFileFilterTestCase.main"
                },
                {
                    "function name": "AndFileFilterTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "AndFileFilterTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.AndFileFilterTestCase.AndFileFilterTestCase"
                },
                {
                    "function name": "getConditionalFileFilter",
                    "function params": [],
                    "file name": "AndFileFilterTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.AndFileFilterTestCase.getConditionalFileFilter"
                },
                {
                    "function name": "getTrueResults",
                    "function params": [],
                    "file name": "AndFileFilterTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.AndFileFilterTestCase.getTrueResults"
                },
                {
                    "function name": "getFilenameResults",
                    "function params": [],
                    "file name": "AndFileFilterTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.AndFileFilterTestCase.getFilenameResults"
                },
                {
                    "function name": "buildFilterUsingAdd",
                    "function params": [
                        "filters"
                    ],
                    "file name": "AndFileFilterTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.AndFileFilterTestCase.buildFilterUsingAdd"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "AndFileFilterTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.AndFileFilterTestCase.setUp"
                },
                {
                    "function name": "getWorkingPathNamePropertyKey",
                    "function params": [],
                    "file name": "AndFileFilterTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.AndFileFilterTestCase.getWorkingPathNamePropertyKey"
                },
                {
                    "function name": "testAdd",
                    "function params": [],
                    "file name": "ConditionalFileFilterAbstractTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testAdd"
                },
                {
                    "function name": "testNoFilters",
                    "function params": [],
                    "file name": "ConditionalFileFilterAbstractTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testNoFilters"
                },
                {
                    "function name": "testFilterBuiltUsingConstructor",
                    "function params": [],
                    "file name": "ConditionalFileFilterAbstractTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingConstructor"
                },
                {
                    "function name": "ConditionalFileFilterAbstractTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "ConditionalFileFilterAbstractTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.ConditionalFileFilterAbstractTestCase"
                },
                {
                    "function name": "testRemove",
                    "function params": [],
                    "file name": "ConditionalFileFilterAbstractTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testRemove"
                },
                {
                    "function name": "testFilterBuiltUsingAdd",
                    "function params": [],
                    "file name": "ConditionalFileFilterAbstractTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingAdd"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "ConditionalFileFilterAbstractTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.setUp"
                },
                {
                    "function name": "assertFilenameFiltering",
                    "function params": [
                        "testNumber",
                        "filter",
                        "file",
                        "expected"
                    ],
                    "file name": "IOFileFilterAbstractTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFilenameFiltering"
                },
                {
                    "function name": "resetTrueFilters",
                    "function params": [
                        "filters"
                    ],
                    "file name": "IOFileFilterAbstractTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.resetTrueFilters"
                },
                {
                    "function name": "assertTrueFiltersInvoked",
                    "function params": [
                        "testNumber",
                        "filters",
                        "invoked"
                    ],
                    "file name": "IOFileFilterAbstractTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertTrueFiltersInvoked"
                },
                {
                    "function name": "TesterFalseFileFilter",
                    "function params": [
                        "file",
                        "str"
                    ],
                    "file name": "IOFileFilterAbstractTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter"
                },
                {
                    "function name": "determineWorkingDirectoryPath",
                    "function params": [
                        "key",
                        "defaultPath"
                    ],
                    "file name": "IOFileFilterAbstractTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.determineWorkingDirectoryPath"
                },
                {
                    "function name": "TesterTrueFileFilter",
                    "function params": [
                        "file",
                        "str"
                    ],
                    "file name": "IOFileFilterAbstractTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter"
                },
                {
                    "function name": "TesterFalseFileFilter",
                    "function params": [],
                    "file name": "IOFileFilterAbstractTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter"
                },
                {
                    "function name": "assertFalseFiltersInvoked",
                    "function params": [
                        "testNumber",
                        "filters",
                        "invoked"
                    ],
                    "file name": "IOFileFilterAbstractTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFalseFiltersInvoked"
                },
                {
                    "function name": "assertFileFiltering",
                    "function params": [
                        "testNumber",
                        "filter",
                        "file",
                        "expected"
                    ],
                    "file name": "IOFileFilterAbstractTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFileFiltering"
                },
                {
                    "function name": "TesterFalseFileFilter",
                    "function params": [
                        "invoked"
                    ],
                    "file name": "IOFileFilterAbstractTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter"
                },
                {
                    "function name": "resetFalseFilters",
                    "function params": [
                        "filters"
                    ],
                    "file name": "IOFileFilterAbstractTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.resetFalseFilters"
                },
                {
                    "function name": "TesterTrueFileFilter",
                    "function params": [],
                    "file name": "IOFileFilterAbstractTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter"
                },
                {
                    "function name": "TesterTrueFileFilter",
                    "function params": [
                        "file"
                    ],
                    "file name": "IOFileFilterAbstractTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter"
                },
                {
                    "function name": "IOFileFilterAbstractTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "IOFileFilterAbstractTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.IOFileFilterAbstractTestCase"
                },
                {
                    "function name": "TesterTrueFileFilter",
                    "function params": [],
                    "file name": "IOFileFilterAbstractTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter"
                },
                {
                    "function name": "TesterFalseFileFilter",
                    "function params": [],
                    "file name": "IOFileFilterAbstractTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter"
                },
                {
                    "function name": "assertFiltering",
                    "function params": [
                        "testNumber",
                        "filter",
                        "file",
                        "expected"
                    ],
                    "file name": "IOFileFilterAbstractTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFiltering"
                },
                {
                    "function name": "TesterFalseFileFilter",
                    "function params": [
                        "file"
                    ],
                    "file name": "IOFileFilterAbstractTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter"
                },
                {
                    "function name": "TesterTrueFileFilter",
                    "function params": [
                        "invoked"
                    ],
                    "file name": "IOFileFilterAbstractTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter"
                },
                {
                    "function name": "OrFileFilterTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "OrFileFilterTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.OrFileFilterTestCase.OrFileFilterTestCase"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "OrFileFilterTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.OrFileFilterTestCase.setUp"
                },
                {
                    "function name": "buildFilterUsingAdd",
                    "function params": [
                        "filters"
                    ],
                    "file name": "OrFileFilterTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.OrFileFilterTestCase.buildFilterUsingAdd"
                },
                {
                    "function name": "setUpTestFilters",
                    "function params": [],
                    "file name": "OrFileFilterTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.OrFileFilterTestCase.setUpTestFilters"
                },
                {
                    "function name": "getConditionalFileFilter",
                    "function params": [],
                    "file name": "OrFileFilterTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.OrFileFilterTestCase.getConditionalFileFilter"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "OrFileFilterTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.OrFileFilterTestCase.suite"
                },
                {
                    "function name": "getFalseResults",
                    "function params": [],
                    "file name": "OrFileFilterTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.OrFileFilterTestCase.getFalseResults"
                },
                {
                    "function name": "getFileResults",
                    "function params": [],
                    "file name": "OrFileFilterTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.OrFileFilterTestCase.getFileResults"
                },
                {
                    "function name": "getFilenameResults",
                    "function params": [],
                    "file name": "OrFileFilterTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.OrFileFilterTestCase.getFilenameResults"
                },
                {
                    "function name": "getDefaultWorkingPath",
                    "function params": [],
                    "file name": "OrFileFilterTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.OrFileFilterTestCase.getDefaultWorkingPath"
                },
                {
                    "function name": "getWorkingPathNamePropertyKey",
                    "function params": [],
                    "file name": "OrFileFilterTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.OrFileFilterTestCase.getWorkingPathNamePropertyKey"
                },
                {
                    "function name": "getTestFilters",
                    "function params": [],
                    "file name": "OrFileFilterTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.OrFileFilterTestCase.getTestFilters"
                },
                {
                    "function name": "buildFilterUsingConstructor",
                    "function params": [
                        "filters"
                    ],
                    "file name": "OrFileFilterTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.OrFileFilterTestCase.buildFilterUsingConstructor"
                },
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "OrFileFilterTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.OrFileFilterTestCase.main"
                },
                {
                    "function name": "getTrueResults",
                    "function params": [],
                    "file name": "OrFileFilterTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.OrFileFilterTestCase.getTrueResults"
                }
            ],
            "date": "2004-10-24"
        },
        {
            "commit_id": 210,
            "hash": "dfb79b3263d2a1f2c77e4d307e7af4e4341e604a",
            "commit_summary": "Fix formatting to four spaces\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140619 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/ConditionalFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/WildcardFilter.java"
            ],
            "functions": [
                {
                    "function name": "accept",
                    "function params": [
                        "file",
                        "name"
                    ],
                    "file name": "AndFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AndFileFilter.accept"
                },
                {
                    "function name": "addFileFilter",
                    "function params": [
                        "ioFileFilter"
                    ],
                    "file name": "AndFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AndFileFilter.addFileFilter"
                },
                {
                    "function name": "AndFileFilter",
                    "function params": [
                        "fileFilters"
                    ],
                    "file name": "AndFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter"
                },
                {
                    "function name": "AndFileFilter",
                    "function params": [],
                    "file name": "AndFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter"
                },
                {
                    "function name": "AndFileFilter",
                    "function params": [
                        "filter1",
                        "filter2"
                    ],
                    "file name": "AndFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter"
                },
                {
                    "function name": "removeFileFilter",
                    "function params": [
                        "ioFileFilter"
                    ],
                    "file name": "AndFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AndFileFilter.removeFileFilter"
                },
                {
                    "function name": "setFileFilters",
                    "function params": [
                        "fileFilters"
                    ],
                    "file name": "AndFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AndFileFilter.setFileFilters"
                },
                {
                    "function name": "getFileFilters",
                    "function params": [],
                    "file name": "AndFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AndFileFilter.getFileFilters"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "AndFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AndFileFilter.accept"
                },
                {
                    "function name": "OrFileFilter",
                    "function params": [
                        "fileFilters"
                    ],
                    "file name": "OrFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter"
                },
                {
                    "function name": "addFileFilter",
                    "function params": [
                        "ioFileFilter"
                    ],
                    "file name": "OrFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.OrFileFilter.addFileFilter"
                },
                {
                    "function name": "OrFileFilter",
                    "function params": [
                        "filter1",
                        "filter2"
                    ],
                    "file name": "OrFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter"
                },
                {
                    "function name": "OrFileFilter",
                    "function params": [],
                    "file name": "OrFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file",
                        "name"
                    ],
                    "file name": "OrFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.OrFileFilter.accept"
                },
                {
                    "function name": "setFileFilters",
                    "function params": [
                        "fileFilters"
                    ],
                    "file name": "OrFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.OrFileFilter.setFileFilters"
                },
                {
                    "function name": "getFileFilters",
                    "function params": [],
                    "file name": "OrFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.OrFileFilter.getFileFilters"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "OrFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.OrFileFilter.accept"
                },
                {
                    "function name": "removeFileFilter",
                    "function params": [
                        "ioFileFilter"
                    ],
                    "file name": "OrFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.OrFileFilter.removeFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "WildcardFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.WildcardFilter.accept"
                },
                {
                    "function name": "WildcardFilter",
                    "function params": [
                        "wildcard"
                    ],
                    "file name": "WildcardFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.WildcardFilter.WildcardFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "dir",
                        "name"
                    ],
                    "file name": "WildcardFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.WildcardFilter.accept"
                },
                {
                    "function name": "WildcardFilter",
                    "function params": [
                        "wildcards"
                    ],
                    "file name": "WildcardFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.WildcardFilter.WildcardFilter"
                },
                {
                    "function name": "WildcardFilter",
                    "function params": [
                        "wildcards"
                    ],
                    "file name": "WildcardFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.WildcardFilter.WildcardFilter"
                }
            ],
            "date": "2004-10-25"
        },
        {
            "commit_id": 211,
            "hash": "fe44f3401d6d2b6c66eca32058de5bcd1f6facb9",
            "commit_summary": "moved WildcardUtils up a directory as it is used in two sub-packages of IO\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140620 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "src/java/org/apache/commons/io/find/FindingFilter.java"
            ],
            "functions": [],
            "date": "2004-10-25"
        },
        {
            "commit_id": 212,
            "hash": "b2de2a9f320926ef72b008b4752cbae18ac0ecee",
            "commit_summary": "Remove deprecated method for first release\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140621 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java"
            ],
            "functions": [],
            "date": "2004-10-25"
        },
        {
            "commit_id": 213,
            "hash": "f49469ccebb1cb80aa5506e7f358ced50e55f07b",
            "commit_summary": "Add since tags\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140622 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/WildcardUtils.java",
                "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/ConditionalFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/WildcardFilter.java"
            ],
            "functions": [],
            "date": "2004-10-25"
        },
        {
            "commit_id": 214,
            "hash": "639e10e9ffc1450f2aece01130aa4a97509710fe",
            "commit_summary": "Organize imports\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140623 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/WildcardUtilsTest.java"
            ],
            "functions": [],
            "date": "2004-10-25"
        },
        {
            "commit_id": 215,
            "hash": "733da2627eb668607a476d712259b5a798814ec2",
            "commit_summary": "Rename IOTestSuite to PackageTestSuite, include all tests\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140624 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "PackageTestSuite.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.PackageTestSuite.suite"
                },
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "PackageTestSuite.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.PackageTestSuite.main"
                }
            ],
            "date": "2004-10-25"
        },
        {
            "commit_id": 216,
            "hash": "1e23e4f80985edbf7ce2de16bbeb26af90eab3ec",
            "commit_summary": "Add package test suites\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140625 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "PackageTestSuite.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.PackageTestSuite.suite"
                },
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "PackageTestSuite.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.PackageTestSuite.main"
                },
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "PackageTestSuite.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.input.PackageTestSuite.main"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "PackageTestSuite.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.input.PackageTestSuite.suite"
                },
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "PackageTestSuite.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.output.PackageTestSuite.main"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "PackageTestSuite.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.output.PackageTestSuite.suite"
                }
            ],
            "date": "2004-10-25"
        },
        {
            "commit_id": 217,
            "hash": "2f34ae95a1a26bdb1bf1f930b376b8034dfd3e12",
            "commit_summary": "promoted comments to TODOs\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140626 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/find/FindingFilter.java"
            ],
            "functions": [],
            "date": "2004-10-29"
        },
        {
            "commit_id": 218,
            "hash": "10f68adb112f0c533ce71b2af8dfa0c624204d37",
            "commit_summary": "promoted comment to a TODO\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140627 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/find/FileFinder.java"
            ],
            "functions": [
                {
                    "function name": "find",
                    "function params": [
                        "directory",
                        "options"
                    ],
                    "file name": "FileFinder.java",
                    "file old path": "src/java/org/apache/commons/io/find/FileFinder.java",
                    "file new path": "src/java/org/apache/commons/io/find/FileFinder.java",
                    "full name": "src.java.org.apache.commons.io.find.FileFinder.find"
                }
            ],
            "date": "2004-10-29"
        },
        {
            "commit_id": 219,
            "hash": "69b2ab185014e1a54fb44718543c0b8ea1ba9f30",
            "commit_summary": "not a style we use\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140628 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java"
            ],
            "functions": [
                {
                    "function name": "getExtension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.getExtension"
                },
                {
                    "function name": "removeExtension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.removeExtension"
                },
                {
                    "function name": "removeExtension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.removeExtension"
                },
                {
                    "function name": "getExtension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.getExtension"
                }
            ],
            "date": "2004-10-29"
        },
        {
            "commit_id": 220,
            "hash": "9c330708ba46721214e2670a93c8fbf845b6ea78",
            "commit_summary": "added an initial set of TODOs\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140629 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java"
            ],
            "functions": [],
            "date": "2004-10-29"
        },
        {
            "commit_id": 221,
            "hash": "f434567e049e902b8a18254201ba3ea382ab05a7",
            "commit_summary": "switched TODO to @todo\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140630 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/java/org/apache/commons/io/FilenameUtils.java",
                "src/java/org/apache/commons/io/find/FileFinder.java",
                "src/java/org/apache/commons/io/find/FindingFilter.java"
            ],
            "functions": [],
            "date": "2004-10-29"
        },
        {
            "commit_id": 222,
            "hash": "07f1929dc5594e606bd333e2c768a15a5419638b",
            "commit_summary": "updated the KILL notes\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140631 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java"
            ],
            "functions": [
                {
                    "function name": "getPath",
                    "function params": [
                        "filepath",
                        "fileSeparatorChar"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.getPath"
                },
                {
                    "function name": "removePath",
                    "function params": [
                        "filepath",
                        "fileSeparatorChar"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.removePath"
                }
            ],
            "date": "2004-10-29"
        },
        {
            "commit_id": 223,
            "hash": "68f11e15de3b70c84c440fd861c69a3a5f15d644",
            "commit_summary": "Add separatorsToXxx methods to FilenameUtils\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140632 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java",
                "src/test/org/apache/commons/io/FilenameUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "separatorsToWindows",
                    "function params": [
                        "path"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.separatorsToWindows"
                },
                {
                    "function name": "separatorsToSystem",
                    "function params": [
                        "path"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.separatorsToSystem"
                },
                {
                    "function name": "separatorsToUnix",
                    "function params": [
                        "path"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.separatorsToUnix"
                },
                {
                    "function name": "testSeparatorsToSystem",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToSystem"
                },
                {
                    "function name": "testSeparatorsToUnix",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToUnix"
                },
                {
                    "function name": "testSeparatorsToWindows",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToWindows"
                }
            ],
            "date": "2004-10-30"
        },
        {
            "commit_id": 224,
            "hash": "9628bca96999535c33adad8a0a3a5afa4c755340",
            "commit_summary": "Add indexOfXxx methods to FilenameUtils\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140633 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java",
                "src/test/org/apache/commons/io/FilenameUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "indexOfExtension",
                    "function params": [
                        "path"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.indexOfExtension"
                },
                {
                    "function name": "separatorsToSystem",
                    "function params": [
                        "path"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.separatorsToSystem"
                },
                {
                    "function name": "indexOfLastSeparator",
                    "function params": [
                        "path"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.indexOfLastSeparator"
                },
                {
                    "function name": "catPath",
                    "function params": [
                        "lookupPath",
                        "path"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.catPath"
                },
                {
                    "function name": "testIndexOfLastSeparator",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testIndexOfLastSeparator"
                },
                {
                    "function name": "testIndexOfExtension",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testIndexOfExtension"
                }
            ],
            "date": "2004-10-30"
        },
        {
            "commit_id": 225,
            "hash": "e8cb32f461a2720c642f7cb3feb94c776f015be7",
            "commit_summary": "Remove File based methods as this is a Filename class\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140634 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java",
                "src/test/org/apache/commons/io/FilenameUtilsTestCase.java"
            ],
            "functions": [],
            "date": "2004-10-30"
        },
        {
            "commit_id": 226,
            "hash": "799a5e8e5b1b07ea056512494219bf3e4d6893e7",
            "commit_summary": "Refactor getXxx methods in FilenameUtils\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140635 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java",
                "src/test/org/apache/commons/io/FilenameUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "indexOfLastSeparator",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.indexOfLastSeparator"
                },
                {
                    "function name": "getPath",
                    "function params": [
                        "filepath",
                        "fileSeparatorChar"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.getPath"
                },
                {
                    "function name": "indexOfExtension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.indexOfExtension"
                },
                {
                    "function name": "getPath",
                    "function params": [
                        "filepath"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.getPath"
                },
                {
                    "function name": "indexOfLastSeparator",
                    "function params": [
                        "path"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.indexOfLastSeparator"
                },
                {
                    "function name": "indexOfExtension",
                    "function params": [
                        "path"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.indexOfExtension"
                },
                {
                    "function name": "getPath",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.getPath"
                },
                {
                    "function name": "getName",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.getName"
                },
                {
                    "function name": "getExtension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.getExtension"
                },
                {
                    "function name": "testRemovePath",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testRemovePath"
                },
                {
                    "function name": "testGetPath",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testGetPath"
                },
                {
                    "function name": "testGetExtension",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testGetExtension"
                }
            ],
            "date": "2004-10-30"
        },
        {
            "commit_id": 227,
            "hash": "977e83dbfe903e712143ce281dd9a303fa8e9a7d",
            "commit_summary": "Update removeExtension method and remove unused code from FilenameUtils\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140636 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java",
                "src/test/org/apache/commons/io/FilenameUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "removeExtension",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.removeExtension"
                },
                {
                    "function name": "testGetName",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testGetName"
                },
                {
                    "function name": "testRemoveExtension",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testRemoveExtension"
                }
            ],
            "date": "2004-10-30"
        },
        {
            "commit_id": 228,
            "hash": "301acde5436a1396a56e3b3b223d5960d1ce2a1f",
            "commit_summary": "Add isExtension methods to test for matching extensions in FilenameUtils\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140637 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java",
                "src/test/org/apache/commons/io/FilenameUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "isExtension",
                    "function params": [
                        "filename",
                        "extension"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.isExtension"
                },
                {
                    "function name": "isExtension",
                    "function params": [
                        "filename",
                        "extensions"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.isExtension"
                },
                {
                    "function name": "isExtension",
                    "function params": [
                        "filename",
                        "extensions"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.isExtension"
                },
                {
                    "function name": "testIsExtensionCollection",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionCollection"
                },
                {
                    "function name": "testIsExtensionArray",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionArray"
                },
                {
                    "function name": "testIsExtension",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testIsExtension"
                },
                {
                    "function name": "testSeparatorsToSystem",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToSystem"
                }
            ],
            "date": "2004-10-30"
        },
        {
            "commit_id": 229,
            "hash": "4a61d8cf150c561fe24477350eb6de2bb41ef750",
            "commit_summary": "More tests\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140638 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FilenameUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testIsExtension",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testIsExtension"
                },
                {
                    "function name": "testIsExtensionArray",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionArray"
                },
                {
                    "function name": "testIsExtensionCollection",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionCollection"
                }
            ],
            "date": "2004-10-31"
        },
        {
            "commit_id": 230,
            "hash": "4694d5a982413a12bce4ce0e5570404b8cc7b1f7",
            "commit_summary": "merged WildcardUtils into FilenameUtils; thought the test case is still a separate file\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140639 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java",
                "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "src/java/org/apache/commons/io/find/FileFinder.java",
                "src/java/org/apache/commons/io/find/FindingFilter.java",
                "src/test/org/apache/commons/io/PackageTestSuite.java"
            ],
            "functions": [
                {
                    "function name": "wildcardMatch",
                    "function params": [
                        "text",
                        "wildcard"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.wildcardMatch"
                },
                {
                    "function name": "splitOnTokens",
                    "function params": [
                        "text"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.splitOnTokens"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "dir",
                        "name"
                    ],
                    "file name": "WildcardFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.WildcardFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "WildcardFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.WildcardFilter.accept"
                },
                {
                    "function name": "find",
                    "function params": [
                        "directory",
                        "options"
                    ],
                    "file name": "FileFinder.java",
                    "file old path": "src/java/org/apache/commons/io/find/FileFinder.java",
                    "file new path": "src/java/org/apache/commons/io/find/FileFinder.java",
                    "full name": "src.java.org.apache.commons.io.find.FileFinder.find"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "FindingFilter.java",
                    "file old path": "src/java/org/apache/commons/io/find/FindingFilter.java",
                    "file new path": "src/java/org/apache/commons/io/find/FindingFilter.java",
                    "full name": "src.java.org.apache.commons.io.find.FindingFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "FindingFilter.java",
                    "file old path": "src/java/org/apache/commons/io/find/FindingFilter.java",
                    "file new path": "src/java/org/apache/commons/io/find/FindingFilter.java",
                    "full name": "src.java.org.apache.commons.io.find.FindingFilter.accept"
                },
                {
                    "function name": "testMatch",
                    "function params": [],
                    "file name": "FilenameUtilsWildcardTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/WildcardUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch"
                },
                {
                    "function name": "assertMatch",
                    "function params": [
                        "text",
                        "wildcard",
                        "expected"
                    ],
                    "file name": "FilenameUtilsWildcardTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/WildcardUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch"
                },
                {
                    "function name": "FilenameUtilsWildcardTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "FilenameUtilsWildcardTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/WildcardUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsWildcardTestCase.FilenameUtilsWildcardTestCase"
                },
                {
                    "function name": "testSplitOnTokens",
                    "function params": [],
                    "file name": "FilenameUtilsWildcardTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/WildcardUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsWildcardTestCase.testSplitOnTokens"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "PackageTestSuite.java",
                    "file old path": "src/test/org/apache/commons/io/PackageTestSuite.java",
                    "file new path": "src/test/org/apache/commons/io/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.PackageTestSuite.suite"
                }
            ],
            "date": "2004-10-31"
        },
        {
            "commit_id": 231,
            "hash": "f93f8bebb4fc714a6b60e1d2a4452d6ff6d3df5c",
            "commit_summary": "Add commented out implementations of prefix handling, Javadoc\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140640 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java"
            ],
            "functions": [
                {
                    "function name": "wildcardMatch",
                    "function params": [
                        "text",
                        "wildcard"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.wildcardMatch"
                },
                {
                    "function name": "splitOnTokens",
                    "function params": [
                        "text"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.splitOnTokens"
                },
                {
                    "function name": "wildcardMatch",
                    "function params": [
                        "filename",
                        "wildcard"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.wildcardMatch"
                }
            ],
            "date": "2004-11-22"
        },
        {
            "commit_id": 232,
            "hash": "5964ce6decf3d7ab3efb7e1a9852b2f85a03ec6d",
            "commit_summary": "Add methods to handle filename prefixes\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140641 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java",
                "src/test/org/apache/commons/io/FilenameUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "if",
                    "function params": [
                        "SYSTEM_SEPARATOR"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.if"
                },
                {
                    "function name": "isSeparator",
                    "function params": [
                        "ch"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.isSeparator"
                },
                {
                    "function name": "normalize",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.normalize"
                },
                {
                    "function name": "getPath",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.getPath"
                },
                {
                    "function name": "getFullPath",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.getFullPath"
                },
                {
                    "function name": "normalize",
                    "function params": [
                        "path"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.normalize"
                },
                {
                    "function name": "getBaseName",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.getBaseName"
                },
                {
                    "function name": "getPrefixLength",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.getPrefixLength"
                },
                {
                    "function name": "getPrefix",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.getPrefix"
                },
                {
                    "function name": "testGetPrefix",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testGetPrefix"
                },
                {
                    "function name": "testGetFullPath",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testGetFullPath"
                },
                {
                    "function name": "testNormalize",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testNormalize"
                },
                {
                    "function name": "testGetBaseName",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testGetBaseName"
                },
                {
                    "function name": "testGetPath",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testGetPath"
                },
                {
                    "function name": "testGetPrefixLength",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testGetPrefixLength"
                }
            ],
            "date": "2004-11-23"
        },
        {
            "commit_id": 233,
            "hash": "2e16d85893141e996eef35892ddabc3c2bf19ccc",
            "commit_summary": "Fix breakage when getPrefixLength() is fed a string of length one.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140642 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java"
            ],
            "functions": [
                {
                    "function name": "getPrefixLength",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.getPrefixLength"
                }
            ],
            "date": "2004-11-26"
        },
        {
            "commit_id": 234,
            "hash": "a68c2dc0de5f21c07d5787242ad0154dbef7afc6",
            "commit_summary": "Compound test suite\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140643 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "AllIOTestSuite.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/AllIOTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.AllIOTestSuite.main"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "AllIOTestSuite.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/AllIOTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.AllIOTestSuite.suite"
                }
            ],
            "date": "2004-11-27"
        },
        {
            "commit_id": 235,
            "hash": "3323d0a8d6167f47aac9b30c36979cd4daf610c8",
            "commit_summary": "Refactor normalize method, and simplify getPrefixLength\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140644 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java",
                "src/test/org/apache/commons/io/FilenameUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "getPrefixLength",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.getPrefixLength"
                },
                {
                    "function name": "normalize",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.normalize"
                },
                {
                    "function name": "testGetFullPath",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testGetFullPath"
                },
                {
                    "function name": "testNormalize",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testNormalize"
                },
                {
                    "function name": "testGetPrefixLength",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testGetPrefixLength"
                },
                {
                    "function name": "testGetPrefix",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testGetPrefix"
                },
                {
                    "function name": "testGetPath",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testGetPath"
                }
            ],
            "date": "2004-11-27"
        },
        {
            "commit_id": 236,
            "hash": "289a56cf5d5c89ad3d85389b9651b0e227ded057",
            "commit_summary": "Rewrite catPath, renaming to concat\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140645 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java",
                "src/test/org/apache/commons/io/FilenameUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "FilenameUtils",
                    "function params": [],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.FilenameUtils"
                },
                {
                    "function name": "concat",
                    "function params": [
                        "basePath",
                        "pathToAdd"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.concat"
                },
                {
                    "function name": "getPrefixLength",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.getPrefixLength"
                },
                {
                    "function name": "testConcat",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testConcat"
                }
            ],
            "date": "2004-11-27"
        },
        {
            "commit_id": 237,
            "hash": "a09ebfc6c0f84a0aa9a05da04801461d99509ec5",
            "commit_summary": "Add equals methods, document Unix/Windows behaviour\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140646 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java",
                "src/test/org/apache/commons/io/FilenameUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "wildcardMatch",
                    "function params": [
                        "filename",
                        "wildcardMatcher"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.wildcardMatch"
                },
                {
                    "function name": "wildcardMatch",
                    "function params": [
                        "filename",
                        "wildcard"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.wildcardMatch"
                },
                {
                    "function name": "concat",
                    "function params": [
                        "basePath",
                        "pathToAdd"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.concat"
                },
                {
                    "function name": "equalsNormalized",
                    "function params": [
                        "filename1",
                        "filename2"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.equalsNormalized"
                },
                {
                    "function name": "concat",
                    "function params": [
                        "basePath",
                        "fullFilenameToAdd"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.concat"
                },
                {
                    "function name": "equals",
                    "function params": [
                        "filename1",
                        "filename2"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.equals"
                },
                {
                    "function name": "testEquals",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testEquals"
                },
                {
                    "function name": "testEqualsNormalized",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalized"
                }
            ],
            "date": "2004-12-04"
        },
        {
            "commit_id": 238,
            "hash": "84b251bf545c9df52c9c750835a86d5af4bf0387",
            "commit_summary": "Convert wildcard method to match based on OS case sensitivity\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140647 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java",
                "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java"
            ],
            "functions": [
                {
                    "function name": "splitOnTokens",
                    "function params": [
                        "text"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.splitOnTokens"
                },
                {
                    "function name": "wildcardMatch",
                    "function params": [
                        "filename",
                        "wildcardMatcher"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.wildcardMatch"
                },
                {
                    "function name": "testMatch",
                    "function params": [],
                    "file name": "FilenameUtilsWildcardTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch"
                }
            ],
            "date": "2004-12-10"
        },
        {
            "commit_id": 239,
            "hash": "e3962ee60f0a2e4db4b23c7563eb3b12fa5fba50",
            "commit_summary": "Remove synchronized from methods, general tidy\nbug 33481\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@153621 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/output/NullOutputStream.java"
            ],
            "functions": [
                {
                    "function name": "write",
                    "function params": [
                        "b",
                        "off",
                        "len"
                    ],
                    "file name": "NullOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/NullOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/NullOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.NullOutputStream.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "b"
                    ],
                    "file name": "NullOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/NullOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/NullOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.NullOutputStream.write"
                }
            ],
            "date": "2005-02-13"
        },
        {
            "commit_id": 240,
            "hash": "7a009ea80932204d693c2f80fb89bb43df3907f0",
            "commit_summary": "Removed TAB characters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@153622 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java"
            ],
            "functions": [
                {
                    "function name": "splitOnTokens",
                    "function params": [
                        "text"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.splitOnTokens"
                }
            ],
            "date": "2005-02-13"
        },
        {
            "commit_id": 241,
            "hash": "5affae5074e97e34d0ac1627f7600ff5f4909da8",
            "commit_summary": "Fix bug in makeCVSAware that rendered the method useless\nbug 33023, from Masato Tezuka\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@153623 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "makeCVSAware",
                    "function params": [
                        "filter"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.makeCVSAware"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.setUp"
                },
                {
                    "function name": "testMakeCVSAware",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testMakeCVSAware"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.tearDown"
                }
            ],
            "date": "2005-02-13"
        },
        {
            "commit_id": 242,
            "hash": "1ccd298020da797829b9558814cd55bd75300485",
            "commit_summary": "Formatting and Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@154513 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/CountingInputStream.java"
            ],
            "functions": [
                {
                    "function name": "CountingInputStream",
                    "function params": [
                        "in"
                    ],
                    "file name": "CountingInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.CountingInputStream.CountingInputStream"
                }
            ],
            "date": "2005-02-20"
        },
        {
            "commit_id": 243,
            "hash": "a9aa579061aeda71e18217fc80acee6ce9fe0467",
            "commit_summary": "Fix bug where count inaccurate after End of File\nbug 33336, from Marcelo Liberato\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@154514 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/CountingInputStream.java",
                "src/test/org/apache/commons/io/input/CountingInputStreamTest.java"
            ],
            "functions": [
                {
                    "function name": "read",
                    "function params": [],
                    "file name": "CountingInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.CountingInputStream.read"
                },
                {
                    "function name": "read",
                    "function params": [
                        "b",
                        "off",
                        "len"
                    ],
                    "file name": "CountingInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.CountingInputStream.read"
                },
                {
                    "function name": "read",
                    "function params": [
                        "b"
                    ],
                    "file name": "CountingInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.CountingInputStream.read"
                },
                {
                    "function name": "testZeroLength2",
                    "function params": [],
                    "file name": "CountingInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/CountingInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/CountingInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.CountingInputStreamTest.testZeroLength2"
                },
                {
                    "function name": "testEOF2",
                    "function params": [],
                    "file name": "CountingInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/CountingInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/CountingInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.CountingInputStreamTest.testEOF2"
                },
                {
                    "function name": "testZeroLength3",
                    "function params": [],
                    "file name": "CountingInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/CountingInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/CountingInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.CountingInputStreamTest.testZeroLength3"
                },
                {
                    "function name": "testZeroLength1",
                    "function params": [],
                    "file name": "CountingInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/CountingInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/CountingInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.CountingInputStreamTest.testZeroLength1"
                },
                {
                    "function name": "testEOF3",
                    "function params": [],
                    "file name": "CountingInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/CountingInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/CountingInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.CountingInputStreamTest.testEOF3"
                },
                {
                    "function name": "testEOF1",
                    "function params": [],
                    "file name": "CountingInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/CountingInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/CountingInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.CountingInputStreamTest.testEOF1"
                }
            ],
            "date": "2005-02-20"
        },
        {
            "commit_id": 244,
            "hash": "d7ab0e88337d961f47be82db20718dd7e1d1a06e",
            "commit_summary": "Handle encodings in URL to File conversion\nbug 32575, from Jason Madden\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@154517 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "toFile",
                    "function params": [
                        "url"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.toFile"
                },
                {
                    "function name": "testToFile1",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testToFile1"
                },
                {
                    "function name": "testToFile3",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testToFile3"
                },
                {
                    "function name": "testToFile4",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testToFile4"
                },
                {
                    "function name": "testToFile2",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testToFile2"
                }
            ],
            "date": "2005-02-20"
        },
        {
            "commit_id": 245,
            "hash": "64320f1c02f6173874ffcd7d5261a0f193c206a0",
            "commit_summary": "Add copyDirectory, and refactor copyFile\nbug 32944, from Ian Springer\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@154553 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "copyFile",
                    "function params": [
                        "srcFile",
                        "destFile",
                        "preserveFileDate"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyFile"
                },
                {
                    "function name": "doCopyDirectory",
                    "function params": [
                        "srcDir",
                        "destDir",
                        "preserveFileDate"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.doCopyDirectory"
                },
                {
                    "function name": "copyDirectory",
                    "function params": [
                        "srcDir",
                        "destDir",
                        "preserveFileDate"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyDirectory"
                },
                {
                    "function name": "copyFileToDirectory",
                    "function params": [
                        "srcFile",
                        "destDir"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyFileToDirectory"
                },
                {
                    "function name": "copyDirectory",
                    "function params": [
                        "srcDir",
                        "destDir"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyDirectory"
                },
                {
                    "function name": "copyFile",
                    "function params": [
                        "source",
                        "destination",
                        "preserveFileDate"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyFile"
                },
                {
                    "function name": "doCopyFile",
                    "function params": [
                        "srcFile",
                        "destFile",
                        "preserveFileDate"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.doCopyFile"
                },
                {
                    "function name": "copyFileToDirectory",
                    "function params": [
                        "source",
                        "destinationDirectory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyFileToDirectory"
                },
                {
                    "function name": "copyFile",
                    "function params": [
                        "source",
                        "destination"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyFile"
                },
                {
                    "function name": "copyFile",
                    "function params": [
                        "srcFile",
                        "destFile"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyFile"
                },
                {
                    "function name": "testCopyDirectoryToNonExistingDest",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToNonExistingDest"
                },
                {
                    "function name": "testCopyDirectoryErrors",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryErrors"
                },
                {
                    "function name": "testCopyDirectoryToExistingDest",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToExistingDest"
                }
            ],
            "date": "2005-02-20"
        },
        {
            "commit_id": 246,
            "hash": "4a92373a2418adac401cc25e1316a059e9c3233b",
            "commit_summary": "Optimize implementation by using the superclass instance variable\nbug 28977, from Lars Beuster\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@154556 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                "src/java/org/apache/commons/io/input/ProxyReader.java",
                "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                "src/java/org/apache/commons/io/output/ProxyWriter.java"
            ],
            "functions": [
                {
                    "function name": "read",
                    "function params": [
                        "bts"
                    ],
                    "file name": "ProxyInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyInputStream.read"
                },
                {
                    "function name": "skip",
                    "function params": [
                        "ln"
                    ],
                    "file name": "ProxyInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyInputStream.skip"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "ProxyInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyInputStream.close"
                },
                {
                    "function name": "read",
                    "function params": [],
                    "file name": "ProxyInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyInputStream.read"
                },
                {
                    "function name": "markSupported",
                    "function params": [],
                    "file name": "ProxyInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyInputStream.markSupported"
                },
                {
                    "function name": "ProxyInputStream",
                    "function params": [
                        "proxy"
                    ],
                    "file name": "ProxyInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyInputStream.ProxyInputStream"
                },
                {
                    "function name": "mark",
                    "function params": [
                        "idx"
                    ],
                    "file name": "ProxyInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyInputStream.mark"
                },
                {
                    "function name": "read",
                    "function params": [
                        "bts",
                        "st",
                        "end"
                    ],
                    "file name": "ProxyInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyInputStream.read"
                },
                {
                    "function name": "available",
                    "function params": [],
                    "file name": "ProxyInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyInputStream.available"
                },
                {
                    "function name": "reset",
                    "function params": [],
                    "file name": "ProxyInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyInputStream.reset"
                },
                {
                    "function name": "read",
                    "function params": [
                        "chr",
                        "st",
                        "end"
                    ],
                    "file name": "ProxyReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyReader.read"
                },
                {
                    "function name": "read",
                    "function params": [
                        "chr"
                    ],
                    "file name": "ProxyReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyReader.read"
                },
                {
                    "function name": "ProxyReader",
                    "function params": [
                        "proxy"
                    ],
                    "file name": "ProxyReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyReader.ProxyReader"
                },
                {
                    "function name": "reset",
                    "function params": [],
                    "file name": "ProxyReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyReader.reset"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "ProxyReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyReader.close"
                },
                {
                    "function name": "mark",
                    "function params": [
                        "idx"
                    ],
                    "file name": "ProxyReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyReader.mark"
                },
                {
                    "function name": "skip",
                    "function params": [
                        "ln"
                    ],
                    "file name": "ProxyReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyReader.skip"
                },
                {
                    "function name": "read",
                    "function params": [],
                    "file name": "ProxyReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyReader.read"
                },
                {
                    "function name": "markSupported",
                    "function params": [],
                    "file name": "ProxyReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyReader.markSupported"
                },
                {
                    "function name": "ready",
                    "function params": [],
                    "file name": "ProxyReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyReader.ready"
                },
                {
                    "function name": "flush",
                    "function params": [],
                    "file name": "ProxyOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyOutputStream.flush"
                },
                {
                    "function name": "write",
                    "function params": [
                        "bts",
                        "st",
                        "end"
                    ],
                    "file name": "ProxyOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyOutputStream.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "idx"
                    ],
                    "file name": "ProxyOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyOutputStream.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "bts"
                    ],
                    "file name": "ProxyOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyOutputStream.write"
                },
                {
                    "function name": "ProxyOutputStream",
                    "function params": [
                        "proxy"
                    ],
                    "file name": "ProxyOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyOutputStream.ProxyOutputStream"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "ProxyOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyOutputStream.close"
                },
                {
                    "function name": "write",
                    "function params": [
                        "chr"
                    ],
                    "file name": "ProxyWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.write"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "ProxyWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.close"
                },
                {
                    "function name": "ProxyWriter",
                    "function params": [
                        "proxy"
                    ],
                    "file name": "ProxyWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.ProxyWriter"
                },
                {
                    "function name": "write",
                    "function params": [
                        "idx"
                    ],
                    "file name": "ProxyWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "str"
                    ],
                    "file name": "ProxyWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "str",
                        "st",
                        "end"
                    ],
                    "file name": "ProxyWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.write"
                },
                {
                    "function name": "flush",
                    "function params": [],
                    "file name": "ProxyWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.flush"
                },
                {
                    "function name": "write",
                    "function params": [
                        "chr",
                        "st",
                        "end"
                    ],
                    "file name": "ProxyWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.write"
                }
            ],
            "date": "2005-02-20"
        },
        {
            "commit_id": 247,
            "hash": "dcb61e575021a61d9e1694ccdf300f5d028f5b1f",
            "commit_summary": "Add FileSystemUtils to allow access to information about the filing system\nbug 32982, from Frank W. Zammetti\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@154561 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "getFreeSpaceUnix",
                    "function params": [
                        "path"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.getFreeSpaceUnix"
                },
                {
                    "function name": "getFreeSpaceWindows",
                    "function params": [
                        "path"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.getFreeSpaceWindows"
                },
                {
                    "function name": "getFreeSpace",
                    "function params": [
                        "path"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.getFreeSpace"
                },
                {
                    "function name": "FileSystemUtils",
                    "function params": [],
                    "file name": "FileSystemUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.FileSystemUtils"
                },
                {
                    "function name": "if",
                    "function params": [
                        "1"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.if"
                },
                {
                    "function name": "if",
                    "function params": [
                        "1"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.if"
                },
                {
                    "function name": "catch",
                    "function params": [
                        "ex"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.catch"
                },
                {
                    "function name": "if",
                    "function params": [
                        "osName"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.if"
                },
                {
                    "function name": "outputFreeSpaceUnix",
                    "function params": [],
                    "file name": "FileSystemUtilsChecker.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsChecker.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsChecker.outputFreeSpaceUnix"
                },
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "FileSystemUtilsChecker.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsChecker.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsChecker.main"
                },
                {
                    "function name": "outputFreeSpaceCDrive",
                    "function params": [],
                    "file name": "FileSystemUtilsChecker.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsChecker.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsChecker.outputFreeSpaceCDrive"
                }
            ],
            "date": "2005-02-20"
        },
        {
            "commit_id": 248,
            "hash": "050f1d12e7b9225edd74a86c6781ded7b09ba336",
            "commit_summary": "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@155419 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/CopyUtils.java",
                "src/java/org/apache/commons/io/EndianUtils.java",
                "src/java/org/apache/commons/io/FileCleaner.java",
                "src/java/org/apache/commons/io/HexDump.java",
                "src/java/org/apache/commons/io/IOUtils.java",
                "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/ConditionalFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/IOFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "src/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                "src/java/org/apache/commons/io/input/DemuxInputStream.java",
                "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "src/java/org/apache/commons/io/output/CountingOutputStream.java",
                "src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "src/java/org/apache/commons/io/output/DemuxOutputStream.java",
                "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                "src/java/org/apache/commons/io/output/TeeOutputStream.java",
                "src/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                "src/test/org/apache/commons/io/CopyUtilsTest.java",
                "src/test/org/apache/commons/io/EndianUtilsTest.java",
                "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "src/test/org/apache/commons/io/HexDumpTest.java",
                "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                "src/test/org/apache/commons/io/output/CountingOutputStreamTest.java",
                "src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                "src/test/org/apache/commons/io/output/NullOutputStreamTest.java",
                "src/test/org/apache/commons/io/output/TeeOutputStreamTest.java"
            ],
            "functions": [],
            "date": "2005-02-26"
        },
        {
            "commit_id": 249,
            "hash": "1ead1cc51d537700eb72e3fa991e1d68162029d5",
            "commit_summary": "Fix bug in wildcard search for advanced repetitive matches\nbug 33303, from Danival Taffarel Calegari\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@156217 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java",
                "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java"
            ],
            "functions": [
                {
                    "function name": "wildcardMatch",
                    "function params": [
                        "filename",
                        "wildcardMatcher"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.wildcardMatch"
                },
                {
                    "function name": "splitOnTokens",
                    "function params": [
                        "text"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.splitOnTokens"
                },
                {
                    "function name": "testMatch2",
                    "function params": [],
                    "file name": "FilenameUtilsWildcardTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch2"
                },
                {
                    "function name": "testSplitOnTokens",
                    "function params": [],
                    "file name": "FilenameUtilsWildcardTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsWildcardTestCase.testSplitOnTokens"
                }
            ],
            "date": "2005-03-05"
        },
        {
            "commit_id": 250,
            "hash": "05abaabb2b968b487c0059a83565a72df38774a8",
            "commit_summary": "Patch from Stefan as IO tests have been breaking since the migration to subversion\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@158022 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/find/FileFinderTest.java"
            ],
            "functions": [
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "FileFinderTest.java",
                    "file old path": "src/test/org/apache/commons/io/find/FileFinderTest.java",
                    "file new path": "src/test/org/apache/commons/io/find/FileFinderTest.java",
                    "full name": "src.test.org.apache.commons.io.find.FileFinderTest.setUp"
                }
            ],
            "date": "2005-03-18"
        },
        {
            "commit_id": 251,
            "hash": "022d817508d62f983b40686cdfb04a5bbc49fe5f",
            "commit_summary": "Bugzilla #34142: use writeTo() instead of toByteArray in DeferredFileOutputStream.thresholdReached().\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@158731 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/output/DeferredFileOutputStream.java"
            ],
            "functions": [
                {
                    "function name": "thresholdReached",
                    "function params": [],
                    "file name": "DeferredFileOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.DeferredFileOutputStream.thresholdReached"
                }
            ],
            "date": "2005-03-23"
        },
        {
            "commit_id": 252,
            "hash": "d1080684022a6b33b775d2e963218921af6a5826",
            "commit_summary": "CountingInputStream now implements skip(long) method.\nPR: 34311\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@160202 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/CountingInputStream.java",
                "src/test/org/apache/commons/io/input/CountingInputStreamTest.java"
            ],
            "functions": [
                {
                    "function name": "skip",
                    "function params": [
                        "length"
                    ],
                    "file name": "CountingInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.CountingInputStream.skip"
                },
                {
                    "function name": "testSkipping",
                    "function params": [],
                    "file name": "CountingInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/CountingInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/CountingInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.CountingInputStreamTest.testSkipping"
                }
            ],
            "date": "2005-04-05"
        },
        {
            "commit_id": 253,
            "hash": "745375d22e427574f1ef1301c8378cd81e85a1fc",
            "commit_summary": "Make FilenameUtils equals methods case-sensitive, with some optional system case matching\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@160343 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java",
                "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java"
            ],
            "functions": [
                {
                    "function name": "equalsNormalized",
                    "function params": [
                        "filename1",
                        "filename2"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.equalsNormalized"
                },
                {
                    "function name": "equals",
                    "function params": [
                        "filename1",
                        "filename2"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.equals"
                },
                {
                    "function name": "equalsOnSystem",
                    "function params": [
                        "filename1",
                        "filename2"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.equalsOnSystem"
                },
                {
                    "function name": "isExtension",
                    "function params": [
                        "filename",
                        "extensions"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.isExtension"
                },
                {
                    "function name": "isExtension",
                    "function params": [
                        "filename",
                        "extension"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.isExtension"
                },
                {
                    "function name": "isExtension",
                    "function params": [
                        "filename",
                        "extensions"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.isExtension"
                },
                {
                    "function name": "equalsNormalizedOnSystem",
                    "function params": [
                        "filename1",
                        "filename2"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.equalsNormalizedOnSystem"
                },
                {
                    "function name": "equals",
                    "function params": [
                        "filename1",
                        "filename2",
                        "system",
                        "normalized"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.equals"
                },
                {
                    "function name": "wildcardMatchOnSystem",
                    "function params": [
                        "filename",
                        "wildcardMatcher"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem"
                },
                {
                    "function name": "wildcardMatch",
                    "function params": [
                        "filename",
                        "wildcardMatcher",
                        "system"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.wildcardMatch"
                },
                {
                    "function name": "wildcardMatch",
                    "function params": [
                        "filename",
                        "wildcardMatcher"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.wildcardMatch"
                },
                {
                    "function name": "testIsExtensionArray",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionArray"
                },
                {
                    "function name": "testIsExtension",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testIsExtension"
                },
                {
                    "function name": "testEquals",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testEquals"
                },
                {
                    "function name": "testEqualsNormalized",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalized"
                },
                {
                    "function name": "testEqualsOnSystem",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testEqualsOnSystem"
                },
                {
                    "function name": "testIsExtensionCollection",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionCollection"
                },
                {
                    "function name": "testEqualsNormalizedOnSystem",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalizedOnSystem"
                },
                {
                    "function name": "testMatchOnSystem",
                    "function params": [],
                    "file name": "FilenameUtilsWildcardTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatchOnSystem"
                },
                {
                    "function name": "testMatch",
                    "function params": [],
                    "file name": "FilenameUtilsWildcardTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch"
                }
            ],
            "date": "2005-04-06"
        },
        {
            "commit_id": 254,
            "hash": "ad4841a819b6282d0dbca5119887236dfbdb1a8c",
            "commit_summary": "Add toInputStream(String) methods\nbug 32958, from Ian Springer \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@160345 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/IOUtils.java",
                "src/test/org/apache/commons/io/IOUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "toInputStream",
                    "function params": [
                        "input",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toInputStream"
                },
                {
                    "function name": "toInputStream",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toInputStream"
                },
                {
                    "function name": "testStringToInputStream",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testStringToInputStream"
                }
            ],
            "date": "2005-04-06"
        },
        {
            "commit_id": 255,
            "hash": "4e1a5df32b5ac63f335fceebeee70a5d0a7c5232",
            "commit_summary": "Moved finder package away based on the discussions on the mailing list.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@201604 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [],
            "date": "2005-06-24"
        },
        {
            "commit_id": 256,
            "hash": "ae2354aacca2fea5b4294807cc8cc97d252a9f58",
            "commit_summary": "Added a FileFilterUtils.makeSVNAware() taking the makeCVSAware() as a template.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@201606 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "makeSVNAware",
                    "function params": [
                        "filter"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.makeSVNAware"
                },
                {
                    "function name": "testMakeSVNAware",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testMakeSVNAware"
                }
            ],
            "date": "2005-06-24"
        },
        {
            "commit_id": 257,
            "hash": "f1d5bd46189049da24493a971e0e420a1345191c",
            "commit_summary": "Fix a little style problem.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@201611 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java"
            ],
            "functions": [
                {
                    "function name": "concat",
                    "function params": [
                        "basePath",
                        "fullFilenameToAdd"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.concat"
                }
            ],
            "date": "2005-06-24"
        },
        {
            "commit_id": 258,
            "hash": "0c09b3e32bc72161507ded87ab433359875aead0",
            "commit_summary": "Javadoc fixes only.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@201613 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/OrFileFilter.java"
            ],
            "functions": [],
            "date": "2005-06-24"
        },
        {
            "commit_id": 259,
            "hash": "0a88c9a56e8057a75db718c7f289054957b5f6fc",
            "commit_summary": "A simple test case for ClassLoaderObjectInputStream that\nsimply tests the expected behavior of an ObjectInputStream.\nTo test the functionality of CLOIS, we will probably need to \nfigure out how to create a transient class loader in the\ntest case.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@201762 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "ClassLoaderObjectInputStreamTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "ClassLoaderObjectInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.ClassLoaderObjectInputStreamTest"
                },
                {
                    "function name": "testExpected",
                    "function params": [],
                    "file name": "ClassLoaderObjectInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testExpected"
                }
            ],
            "date": "2005-06-25"
        },
        {
            "commit_id": 260,
            "hash": "ae49ca86b44eab92cf12eaadc9609d88f3c762bb",
            "commit_summary": "Added validation of List constructor argument.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@201763 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/AndFileFilter.java"
            ],
            "functions": [
                {
                    "function name": "AndFileFilter",
                    "function params": [
                        "fileFilters"
                    ],
                    "file name": "AndFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter"
                }
            ],
            "date": "2005-06-25"
        },
        {
            "commit_id": 261,
            "hash": "2c88ec5304d1a7687c98e65778618c3b38397a02",
            "commit_summary": "Increased test coverage for file filter tests, and also fixed some nits in CountingInputStreamTest.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@201764 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "src/test/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                "src/test/org/apache/commons/io/input/CountingInputStreamTest.java",
                "src/test/org/apache/commons/io/input/PackageTestSuite.java"
            ],
            "functions": [
                {
                    "function name": "testWrite_charArrayToOutputStream_nullData",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullData"
                },
                {
                    "function name": "testWrite_stringToOutputStream_nullData",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullData"
                },
                {
                    "function name": "testWrite_charArrayToWriter_Encoding_nullData",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter_Encoding_nullData"
                },
                {
                    "function name": "testWrite_stringToWriter_Encoding_nullData",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter_Encoding_nullData"
                },
                {
                    "function name": "testWrite_stringToOutputStream_Encoding_nullData",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding_nullData"
                },
                {
                    "function name": "testSuffix",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix"
                },
                {
                    "function name": "testAnd",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testAnd"
                },
                {
                    "function name": "testWildcard",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard"
                },
                {
                    "function name": "testNameFilterNullArrayArgument",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullArrayArgument"
                },
                {
                    "function name": "testNameFilterNullArgument",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullArgument"
                },
                {
                    "function name": "testDelegateFileFilter",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testDelegateFileFilter"
                },
                {
                    "function name": "testPrefix",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix"
                },
                {
                    "function name": "testNameFilterNullListArgument",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullListArgument"
                },
                {
                    "function name": "testOr",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testOr"
                },
                {
                    "function name": "testResetting",
                    "function params": [],
                    "file name": "CountingInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/CountingInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/CountingInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.CountingInputStreamTest.testResetting"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "PackageTestSuite.java",
                    "file old path": "src/test/org/apache/commons/io/input/PackageTestSuite.java",
                    "file new path": "src/test/org/apache/commons/io/input/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.input.PackageTestSuite.suite"
                }
            ],
            "date": "2005-06-25"
        },
        {
            "commit_id": 262,
            "hash": "c061ccfa0bc29ade5005b91c23b1a8107dc27643",
            "commit_summary": "Handle null List constructor more gracefully\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@232900 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "AndFileFilter",
                    "function params": [
                        "fileFilters"
                    ],
                    "file name": "AndFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter"
                },
                {
                    "function name": "OrFileFilter",
                    "function params": [
                        "fileFilters"
                    ],
                    "file name": "OrFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter"
                },
                {
                    "function name": "testAnd",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testAnd"
                },
                {
                    "function name": "testNameFilterNullArgument",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullArgument"
                },
                {
                    "function name": "testNameFilterNullArrayArgument",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullArrayArgument"
                },
                {
                    "function name": "testOr",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testOr"
                },
                {
                    "function name": "testNameFilterNullListArgument",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullListArgument"
                }
            ],
            "date": "2005-08-15"
        },
        {
            "commit_id": 263,
            "hash": "48860dcdd0de779102e734cc103a3e4f778f45e5",
            "commit_summary": "Remove unused field\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@233063 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/output/DeferredFileOutputStream.java"
            ],
            "functions": [
                {
                    "function name": "thresholdReached",
                    "function params": [],
                    "file name": "DeferredFileOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.DeferredFileOutputStream.thresholdReached"
                }
            ],
            "date": "2005-08-16"
        },
        {
            "commit_id": 264,
            "hash": "8ef9d20723428b490245502fb442b9abc97fbdbf",
            "commit_summary": "Add methods to read a FIle/Stream/Reader by lines\nrfe 36214\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@233069 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/java/org/apache/commons/io/IOUtils.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java"
            ],
            "functions": [
                {
                    "function name": "readLines",
                    "function params": [
                        "file",
                        "encoding"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.readLines"
                },
                {
                    "function name": "readLines",
                    "function params": [
                        "input",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.readLines"
                },
                {
                    "function name": "readLines",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.readLines"
                },
                {
                    "function name": "readLines",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.readLines"
                },
                {
                    "function name": "testReadLines_Reader",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testReadLines_Reader"
                },
                {
                    "function name": "testReadLines_Reader",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testReadLines_Reader"
                },
                {
                    "function name": "testReadLines_InputStream_String",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream_String"
                },
                {
                    "function name": "testReadLines_InputStream",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream"
                },
                {
                    "function name": "createLineBasedFile",
                    "function params": [
                        "file",
                        "data"
                    ],
                    "file name": "FileBasedTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "full name": "src.test.org.apache.commons.io.testtools.FileBasedTestCase.createLineBasedFile"
                }
            ],
            "date": "2005-08-16"
        },
        {
            "commit_id": 265,
            "hash": "ebff63ed975da3af3fa3718072565cde7f919bce",
            "commit_summary": "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@239226 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/CopyUtils.java"
            ],
            "functions": [],
            "date": "2005-08-22"
        },
        {
            "commit_id": 266,
            "hash": "3183ecd1d570e50df8508a48e9d508d0daebdea0",
            "commit_summary": "Checkstyle\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@239228 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/EndianUtils.java"
            ],
            "functions": [
                {
                    "function name": "EndianUtils",
                    "function params": [],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.EndianUtils"
                }
            ],
            "date": "2005-08-22"
        },
        {
            "commit_id": 267,
            "hash": "4522992603c70de79278259cce3a38983ae3f34f",
            "commit_summary": "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@239229 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java"
            ],
            "functions": [
                {
                    "function name": "FilenameUtils",
                    "function params": [],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.FilenameUtils"
                },
                {
                    "function name": "splitOnTokens",
                    "function params": [
                        "text"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.splitOnTokens"
                }
            ],
            "date": "2005-08-22"
        },
        {
            "commit_id": 268,
            "hash": "28bf06cfd8c1f438c428546f526ed06ffd58c399",
            "commit_summary": "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@239230 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [
                {
                    "function name": "FileUtils",
                    "function params": [],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.FileUtils"
                }
            ],
            "date": "2005-08-22"
        },
        {
            "commit_id": 269,
            "hash": "5c23ecb957035a75505973c72c48049e130e44f8",
            "commit_summary": "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@239232 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/HexDump.java"
            ],
            "functions": [
                {
                    "function name": "dump",
                    "function params": [
                        "data",
                        "offset",
                        "stream",
                        "index"
                    ],
                    "file name": "HexDump.java",
                    "file old path": "src/java/org/apache/commons/io/HexDump.java",
                    "file new path": "src/java/org/apache/commons/io/HexDump.java",
                    "full name": "src.java.org.apache.commons.io.HexDump.dump"
                },
                {
                    "function name": "HexDump",
                    "function params": [],
                    "file name": "HexDump.java",
                    "file old path": "src/java/org/apache/commons/io/HexDump.java",
                    "file new path": "src/java/org/apache/commons/io/HexDump.java",
                    "full name": "src.java.org.apache.commons.io.HexDump.HexDump"
                }
            ],
            "date": "2005-08-22"
        },
        {
            "commit_id": 270,
            "hash": "fa794e8b1f45c6e888b4a09a16554dd23d48171b",
            "commit_summary": "Javadoc\nbug 35675, from Nathan Beyer\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@239265 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [],
            "date": "2005-08-22"
        },
        {
            "commit_id": 271,
            "hash": "56104312831c73e13d7ebcd12cbfe50aadb05902",
            "commit_summary": "Handle Windows drive relative paths like C:a\\b\\c\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@240438 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java",
                "src/test/org/apache/commons/io/FilenameUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "getPrefixLength",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.getPrefixLength"
                },
                {
                    "function name": "testGetPrefixLength",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testGetPrefixLength"
                }
            ],
            "date": "2005-08-27"
        },
        {
            "commit_id": 272,
            "hash": "4cd33ce31d4245281432320a7f4f4cf6b541c690",
            "commit_summary": "Fix FileSystemUtils and add tests\nfrom Frank W. Zammetti\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@240439 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileSystemUtils.java",
                "src/test/org/apache/commons/io/PackageTestSuite.java"
            ],
            "functions": [
                {
                    "function name": "getFreeSpaceWindows",
                    "function params": [
                        "path"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.getFreeSpaceWindows"
                },
                {
                    "function name": "getFreeSpaceOS",
                    "function params": [
                        "path",
                        "os"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.getFreeSpaceOS"
                },
                {
                    "function name": "getFreeSpaceUnix",
                    "function params": [
                        "path"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.getFreeSpaceUnix"
                },
                {
                    "function name": "openProcessStream",
                    "function params": [
                        "params"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.openProcessStream"
                },
                {
                    "function name": "getFreeSpace",
                    "function params": [
                        "path"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.getFreeSpace"
                },
                {
                    "function name": "FileSystemUtils",
                    "function params": [],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.FileSystemUtils"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_NormalResponse",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponse"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_InvalidResponse3",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse3"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.tearDown"
                },
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.main"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.setUp"
                },
                {
                    "function name": "testGetFreeSpace_String",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_EmptyResponse",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_EmptyResponse"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_InvalidResponse4",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse4"
                },
                {
                    "function name": "testGetFreeSpaceWindows_String_EmptyResponse",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyResponse"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_InvalidResponse2",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse2"
                },
                {
                    "function name": "testGetFreeSpaceOS_String_Other",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Other"
                },
                {
                    "function name": "testGetFreeSpaceOS_String_Windows",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Windows"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.suite"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_EmptyPath",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_EmptyPath"
                },
                {
                    "function name": "testGetFreeSpaceOS_String_InitError",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_InitError"
                },
                {
                    "function name": "testGetFreeSpaceWindows_String_NormalResponse",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_NormalResponse"
                },
                {
                    "function name": "testGetFreeSpaceWindows_String_EmptyPath",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyPath"
                },
                {
                    "function name": "testGetFreeSpaceOS_String_Unix",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Unix"
                },
                {
                    "function name": "FileSystemUtilsTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.FileSystemUtilsTestCase"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_InvalidResponse1",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse1"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_LongResponse",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_LongResponse"
                },
                {
                    "function name": "testGetFreeSpaceOS_String_NullPath",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_NullPath"
                },
                {
                    "function name": "testGetFreeSpaceWindows_String_StripDrive",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_StripDrive"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "PackageTestSuite.java",
                    "file old path": "src/test/org/apache/commons/io/PackageTestSuite.java",
                    "file new path": "src/test/org/apache/commons/io/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.PackageTestSuite.suite"
                }
            ],
            "date": "2005-08-27"
        },
        {
            "commit_id": 273,
            "hash": "d41fb95c9832e084c1aceb81140892de9379f711",
            "commit_summary": "Add javadoc\nbug 36317, from Martin Burger\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@240440 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [],
            "date": "2005-08-27"
        },
        {
            "commit_id": 274,
            "hash": "81a86e4d7c8a3d8718a8d560ec8b5902dafdb390",
            "commit_summary": "Since tags and minor style changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@240470 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileSystemUtils.java",
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/java/org/apache/commons/io/IOUtils.java"
            ],
            "functions": [
                {
                    "function name": "listFiles",
                    "function params": [
                        "directory",
                        "extensions",
                        "recursive"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.listFiles"
                },
                {
                    "function name": "IOUtils",
                    "function params": [],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.IOUtils"
                }
            ],
            "date": "2005-08-27"
        },
        {
            "commit_id": 275,
            "hash": "c9bb17ed66ba5e95e44eeab8ae68b97994052328",
            "commit_summary": "Fix since tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@241816 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/IOUtils.java"
            ],
            "functions": [],
            "date": "2005-08-27"
        },
        {
            "commit_id": 276,
            "hash": "49cbd0bcc73ac7cba6f008e9040bb1cb2fe470d7",
            "commit_summary": "Format class to IO coding standards for first release\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@241817 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java"
            ],
            "functions": [
                {
                    "function name": "resolveClass",
                    "function params": [
                        "objectStreamClass"
                    ],
                    "file name": "ClassLoaderObjectInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ClassLoaderObjectInputStream.resolveClass"
                },
                {
                    "function name": "ClassLoaderObjectInputStream",
                    "function params": [
                        "classLoader",
                        "inputStream"
                    ],
                    "file name": "ClassLoaderObjectInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ClassLoaderObjectInputStream.ClassLoaderObjectInputStream"
                }
            ],
            "date": "2005-08-27"
        },
        {
            "commit_id": 277,
            "hash": "c908f8f8e63ac7fe093dae09041373b2c922792a",
            "commit_summary": "Handle tests being run on Unix\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@263865 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testGetFreeSpace_String",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String"
                }
            ],
            "date": "2005-08-28"
        },
        {
            "commit_id": 278,
            "hash": "15aebb582ea14708144e27263de0a6fdcc402af9",
            "commit_summary": "Add comment\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@264867 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileSystemUtils.java"
            ],
            "functions": [
                {
                    "function name": "getFreeSpaceWindows",
                    "function params": [
                        "path"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.getFreeSpaceWindows"
                }
            ],
            "date": "2005-08-30"
        },
        {
            "commit_id": 279,
            "hash": "1bff1d39fe1d9b6be5d7e6c6c821849eeb3391fe",
            "commit_summary": "Fix to handle short prefixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@264868 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java",
                "src/test/org/apache/commons/io/FilenameUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "getPrefixLength",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.getPrefixLength"
                },
                {
                    "function name": "getFullPath",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.getFullPath"
                },
                {
                    "function name": "getPath",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.getPath"
                },
                {
                    "function name": "testGetPrefixLength",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testGetPrefixLength"
                },
                {
                    "function name": "testGetPrefix",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testGetPrefix"
                },
                {
                    "function name": "testGetPath",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testGetPath"
                },
                {
                    "function name": "testGetFullPath",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testGetFullPath"
                },
                {
                    "function name": "testNormalize",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testNormalize"
                }
            ],
            "date": "2005-08-30"
        },
        {
            "commit_id": 280,
            "hash": "0b5e8f634cf2787089efb868699cebe486484dc6",
            "commit_summary": "Change test to try and make it pass Gump\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@267448 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.main"
                },
                {
                    "function name": "testGetFreeSpace_String",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String"
                }
            ],
            "date": "2005-09-03"
        },
        {
            "commit_id": 281,
            "hash": "b39e430b27a666ec6195d9f77b09b3ae2c21f011",
            "commit_summary": "Treat separator at end of filename as sign of directory\nAdjust other methods to this new definition\nAdjust absolute prefix calculation to always end in separator\nAdd new methods that omit the end separator\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@279094 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java",
                "src/test/org/apache/commons/io/FilenameUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "getPrefix",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.getPrefix"
                },
                {
                    "function name": "getFullPathNoEndSeparator",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator"
                },
                {
                    "function name": "doGetPath",
                    "function params": [
                        "filename",
                        "separatorAdd"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.doGetPath"
                },
                {
                    "function name": "getPathNoEndSeparator",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.getPathNoEndSeparator"
                },
                {
                    "function name": "getFullPath",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.getFullPath"
                },
                {
                    "function name": "normalize",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.normalize"
                },
                {
                    "function name": "normalizeNoEndSeparator",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator"
                },
                {
                    "function name": "getPath",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.getPath"
                },
                {
                    "function name": "doNormalize",
                    "function params": [
                        "filename",
                        "keepSeparator"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.doNormalize"
                },
                {
                    "function name": "doGetFullPath",
                    "function params": [
                        "filename",
                        "includeSeparator"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.doGetFullPath"
                },
                {
                    "function name": "getPrefixLength",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.getPrefixLength"
                },
                {
                    "function name": "testGetPath",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testGetPath"
                },
                {
                    "function name": "testEqualsNormalizedOnSystem",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalizedOnSystem"
                },
                {
                    "function name": "testGetPathNoEndSeparator",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testGetPathNoEndSeparator"
                },
                {
                    "function name": "testGetPrefixLength",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testGetPrefixLength"
                },
                {
                    "function name": "testGetPrefix",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testGetPrefix"
                },
                {
                    "function name": "testNormalizeNoEndSeparator",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator"
                },
                {
                    "function name": "testGetFullPath",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testGetFullPath"
                },
                {
                    "function name": "testGetFullPathNoEndSeparator",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator"
                },
                {
                    "function name": "testNormalize",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testNormalize"
                },
                {
                    "function name": "testConcat",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testConcat"
                },
                {
                    "function name": "testEqualsNormalized",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalized"
                }
            ],
            "date": "2005-09-06"
        },
        {
            "commit_id": 282,
            "hash": "b69e4cb8ad85d7bfaa3a2b3824049d830a124a7c",
            "commit_summary": "Add IOUtils.writeLines\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@279170 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/IOUtils.java",
                "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java"
            ],
            "functions": [
                {
                    "function name": "writeLines",
                    "function params": [
                        "lines",
                        "lineEnding",
                        "writer"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.writeLines"
                },
                {
                    "function name": "writeLines",
                    "function params": [
                        "lines",
                        "lineEnding",
                        "output",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.writeLines"
                },
                {
                    "function name": "writeLines",
                    "function params": [
                        "lines",
                        "lineEnding",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.writeLines"
                },
                {
                    "function name": "testConstants",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testConstants"
                },
                {
                    "function name": "testWriteLines_OutputStream",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream"
                },
                {
                    "function name": "testWriteLines_OutputStream_nullSeparator",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullSeparator"
                },
                {
                    "function name": "testWriteLines_OutputStream_Encoding_nullEncoding",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullEncoding"
                },
                {
                    "function name": "testWriteLines_OutputStream_nullStream",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullStream"
                },
                {
                    "function name": "testWriteLines_Writer_nullSeparator",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullSeparator"
                },
                {
                    "function name": "testWrite_charArrayToOutputStream_Encoding_nullData",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding_nullData"
                },
                {
                    "function name": "testWriteLines_OutputStream_nullData",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullData"
                },
                {
                    "function name": "testWriteLines_OutputStream_Encoding_nullData",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullData"
                },
                {
                    "function name": "testWriteLines_OutputStream_Encoding",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding"
                },
                {
                    "function name": "testWriteLines_Writer",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer"
                },
                {
                    "function name": "testWriteLines_Writer_nullData",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullData"
                },
                {
                    "function name": "testWriteLines_Writer_nullStream",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullStream"
                },
                {
                    "function name": "testWriteLines_OutputStream_Encoding_nullStream",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullStream"
                },
                {
                    "function name": "testWriteLines_OutputStream_Encoding_nullSeparator",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullSeparator"
                }
            ],
            "date": "2005-09-06"
        },
        {
            "commit_id": 283,
            "hash": "cc6559373e6ff4340778ea4b2f376e706cc56564",
            "commit_summary": "DeferredFileOutputStream.writeTo to allow current contents to be written to a stream\nrfe 34173, from gaxzerow\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@280004 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java"
            ],
            "functions": [
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "DeferredFileOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.DeferredFileOutputStream.close"
                },
                {
                    "function name": "writeTo",
                    "function params": [
                        "out"
                    ],
                    "file name": "DeferredFileOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.DeferredFileOutputStream.writeTo"
                },
                {
                    "function name": "testWriteToSmall",
                    "function params": [],
                    "file name": "DeferredFileOutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall"
                },
                {
                    "function name": "testWriteToLarge",
                    "function params": [],
                    "file name": "DeferredFileOutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToLarge"
                }
            ],
            "date": "2005-09-10"
        },
        {
            "commit_id": 284,
            "hash": "990ea5d016b6ebc1961be059ba9aab0f5079683b",
            "commit_summary": "Improve javadoc for v1.1\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@289999 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/CopyUtils.java",
                "src/java/org/apache/commons/io/EndianUtils.java",
                "src/java/org/apache/commons/io/FileCleaner.java",
                "src/java/org/apache/commons/io/FileSystemUtils.java",
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/java/org/apache/commons/io/FilenameUtils.java",
                "src/java/org/apache/commons/io/HexDump.java",
                "src/java/org/apache/commons/io/IOUtils.java"
            ],
            "functions": [],
            "date": "2005-09-18"
        },
        {
            "commit_id": 285,
            "hash": "9004f534a046b5b8a6f87edf2426f24a291fd2ab",
            "commit_summary": "Rename the free space method to be commons-io like\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@291741 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileSystemUtils.java",
                "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "freeSpaceUnix",
                    "function params": [
                        "path"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.freeSpaceUnix"
                },
                {
                    "function name": "freeSpaceOS",
                    "function params": [
                        "path",
                        "os"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.freeSpaceOS"
                },
                {
                    "function name": "freeSpace",
                    "function params": [
                        "path"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.freeSpace"
                },
                {
                    "function name": "openProcessStream",
                    "function params": [
                        "params"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.openProcessStream"
                },
                {
                    "function name": "freeSpaceWindows",
                    "function params": [
                        "path"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.freeSpaceWindows"
                },
                {
                    "function name": "testGetFreeSpaceWindows_String_EmptyPath",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyPath"
                },
                {
                    "function name": "testGetFreeSpaceOS_String_Unix",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Unix"
                },
                {
                    "function name": "testGetFreeSpaceWindows_String_NormalResponse",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_NormalResponse"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_InvalidResponse1",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse1"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_LongResponse",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_LongResponse"
                },
                {
                    "function name": "testGetFreeSpaceWindows_String_StripDrive",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_StripDrive"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_InvalidResponse3",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse3"
                },
                {
                    "function name": "testGetFreeSpaceOS_String_NullPath",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_NullPath"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_NormalResponse",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponse"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_EmptyResponse",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_EmptyResponse"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_InvalidResponse4",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse4"
                },
                {
                    "function name": "testGetFreeSpace_String",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String"
                },
                {
                    "function name": "testGetFreeSpaceWindows_String_EmptyResponse",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyResponse"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_InvalidResponse2",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse2"
                },
                {
                    "function name": "testGetFreeSpaceOS_String_Other",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Other"
                },
                {
                    "function name": "testGetFreeSpaceOS_String_Windows",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Windows"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_EmptyPath",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_EmptyPath"
                },
                {
                    "function name": "testGetFreeSpaceOS_String_InitError",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_InitError"
                }
            ],
            "date": "2005-09-26"
        },
        {
            "commit_id": 286,
            "hash": "756d64a9eef6dc604db947597040c0b24965c52b",
            "commit_summary": "Javadoc for v1.1\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@291742 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/EndianUtils.java"
            ],
            "functions": [],
            "date": "2005-09-26"
        },
        {
            "commit_id": 287,
            "hash": "361dd615a081d3292b24e109d6db0786b85a070d",
            "commit_summary": "Handle security restricted directories\nbug 36801, from Chris Eldredge\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@291765 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/test/org/apache/commons/io/PackageTestSuite.java"
            ],
            "functions": [
                {
                    "function name": "cleanDirectoryOnExit",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.cleanDirectoryOnExit"
                },
                {
                    "function name": "sizeOfDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.sizeOfDirectory"
                },
                {
                    "function name": "doCopyDirectory",
                    "function params": [
                        "srcDir",
                        "destDir",
                        "preserveFileDate"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.doCopyDirectory"
                },
                {
                    "function name": "cleanDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.cleanDirectory"
                },
                {
                    "function name": "testCleanEmpty",
                    "function params": [],
                    "file name": "FileUtilsCleanDirectoryTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testCleanEmpty"
                },
                {
                    "function name": "testDeletesRegular",
                    "function params": [],
                    "file name": "FileUtilsCleanDirectoryTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testDeletesRegular"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "FileUtilsCleanDirectoryTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsCleanDirectoryTestCase.setUp"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "FileUtilsCleanDirectoryTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsCleanDirectoryTestCase.tearDown"
                },
                {
                    "function name": "testThrowsOnCannotDeleteFile",
                    "function params": [],
                    "file name": "FileUtilsCleanDirectoryTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testThrowsOnCannotDeleteFile"
                },
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "FileUtilsCleanDirectoryTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsCleanDirectoryTestCase.main"
                },
                {
                    "function name": "FileUtilsCleanDirectoryTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "FileUtilsCleanDirectoryTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsCleanDirectoryTestCase.FileUtilsCleanDirectoryTestCase"
                },
                {
                    "function name": "testThrowsOnNullList",
                    "function params": [],
                    "file name": "FileUtilsCleanDirectoryTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testThrowsOnNullList"
                },
                {
                    "function name": "getLocalTestDirectory",
                    "function params": [],
                    "file name": "FileUtilsCleanDirectoryTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsCleanDirectoryTestCase.getLocalTestDirectory"
                },
                {
                    "function name": "chmod",
                    "function params": [
                        "file",
                        "mode",
                        "recurse"
                    ],
                    "file name": "FileUtilsCleanDirectoryTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsCleanDirectoryTestCase.chmod"
                },
                {
                    "function name": "testDeletesNested",
                    "function params": [],
                    "file name": "FileUtilsCleanDirectoryTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testDeletesNested"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "FileUtilsCleanDirectoryTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsCleanDirectoryTestCase.suite"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "PackageTestSuite.java",
                    "file old path": "src/test/org/apache/commons/io/PackageTestSuite.java",
                    "file new path": "src/test/org/apache/commons/io/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.PackageTestSuite.suite"
                }
            ],
            "date": "2005-09-26"
        },
        {
            "commit_id": 288,
            "hash": "d7b5fba725ef1ae21f7ba09ae815358e04488dca",
            "commit_summary": "Add FileUtils.writeLines\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@292293 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "writeLines",
                    "function params": [
                        "file",
                        "encoding",
                        "lines"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.writeLines"
                },
                {
                    "function name": "writeLines",
                    "function params": [
                        "file",
                        "encoding",
                        "lines",
                        "lineEnding"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.writeLines"
                },
                {
                    "function name": "testReadLines",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testReadLines"
                },
                {
                    "function name": "testWriteLines_3arg_nullSeparator",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testWriteLines_3arg_nullSeparator"
                },
                {
                    "function name": "testWriteLines_4arg_Writer_nullData",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_Writer_nullData"
                },
                {
                    "function name": "testWriteLines_4arg",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg"
                },
                {
                    "function name": "testWriteLines_4arg_nullSeparator",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_nullSeparator"
                },
                {
                    "function name": "testWriteStringToFile1",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile1"
                },
                {
                    "function name": "testWriteStringToFile2",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile2"
                }
            ],
            "date": "2005-09-28"
        },
        {
            "commit_id": 289,
            "hash": "2c240054888a2a932c2afcd83d6b80c84751d171",
            "commit_summary": "FileUtils.writeStringToFile() - Null encoding now uses the platform default\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@292296 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [
                {
                    "function name": "writeStringToFile",
                    "function params": [
                        "file",
                        "data",
                        "encoding"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.writeStringToFile"
                }
            ],
            "date": "2005-09-28"
        },
        {
            "commit_id": 290,
            "hash": "0e8346cbda4c4f3f041ef47715366f81631617b1",
            "commit_summary": "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@292298 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/output/LockableFileWriter.java"
            ],
            "functions": [
                {
                    "function name": "LockableFileWriter",
                    "function params": [
                        "file",
                        "append"
                    ],
                    "file name": "LockableFileWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.LockableFileWriter.LockableFileWriter"
                },
                {
                    "function name": "flush",
                    "function params": [],
                    "file name": "LockableFileWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.LockableFileWriter.flush"
                },
                {
                    "function name": "createLock",
                    "function params": [],
                    "file name": "LockableFileWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.LockableFileWriter.createLock"
                },
                {
                    "function name": "LockableFileWriter",
                    "function params": [
                        "fileName"
                    ],
                    "file name": "LockableFileWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.LockableFileWriter.LockableFileWriter"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "LockableFileWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.LockableFileWriter.close"
                },
                {
                    "function name": "testLockDir",
                    "function params": [
                        "lockDir"
                    ],
                    "file name": "LockableFileWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.LockableFileWriter.testLockDir"
                },
                {
                    "function name": "LockableFileWriter",
                    "function params": [
                        "file",
                        "append",
                        "lockDir"
                    ],
                    "file name": "LockableFileWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.LockableFileWriter.LockableFileWriter"
                },
                {
                    "function name": "LockableFileWriter",
                    "function params": [
                        "file"
                    ],
                    "file name": "LockableFileWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.LockableFileWriter.LockableFileWriter"
                },
                {
                    "function name": "LockableFileWriter",
                    "function params": [
                        "fileName",
                        "append"
                    ],
                    "file name": "LockableFileWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.LockableFileWriter.LockableFileWriter"
                },
                {
                    "function name": "write",
                    "function params": [
                        "cbuf",
                        "off",
                        "len"
                    ],
                    "file name": "LockableFileWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.LockableFileWriter.write"
                },
                {
                    "function name": "LockableFileWriter",
                    "function params": [
                        "fileName",
                        "append",
                        "lockDir"
                    ],
                    "file name": "LockableFileWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.LockableFileWriter.LockableFileWriter"
                }
            ],
            "date": "2005-09-28"
        },
        {
            "commit_id": 291,
            "hash": "747c12c3d2d414f590895fdf5024308c860a5060",
            "commit_summary": "Remove unused local variable\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@292300 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/output/LockableFileWriterTest.java"
            ],
            "functions": [
                {
                    "function name": "testFileLocked",
                    "function params": [],
                    "file name": "LockableFileWriterTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.LockableFileWriterTest.testFileLocked"
                }
            ],
            "date": "2005-09-28"
        },
        {
            "commit_id": 292,
            "hash": "e5cc89dec2c72e8af821a0536c768af316cb9b55",
            "commit_summary": "LockableFileWriter, add encoding support, and general tidy\nbug 36825, from Andy Lehane\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@292340 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                "src/test/org/apache/commons/io/output/LockableFileWriterTest.java"
            ],
            "functions": [
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "LockableFileWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.LockableFileWriter.close"
                },
                {
                    "function name": "write",
                    "function params": [
                        "str",
                        "st",
                        "end"
                    ],
                    "file name": "LockableFileWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.LockableFileWriter.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "str"
                    ],
                    "file name": "LockableFileWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.LockableFileWriter.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "chr",
                        "st",
                        "end"
                    ],
                    "file name": "LockableFileWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.LockableFileWriter.write"
                },
                {
                    "function name": "LockableFileWriter",
                    "function params": [
                        "file",
                        "append",
                        "lockDir"
                    ],
                    "file name": "LockableFileWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.LockableFileWriter.LockableFileWriter"
                },
                {
                    "function name": "write",
                    "function params": [
                        "chr"
                    ],
                    "file name": "LockableFileWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.LockableFileWriter.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "idx"
                    ],
                    "file name": "LockableFileWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.LockableFileWriter.write"
                },
                {
                    "function name": "flush",
                    "function params": [],
                    "file name": "LockableFileWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.LockableFileWriter.flush"
                },
                {
                    "function name": "LockableFileWriter",
                    "function params": [
                        "file",
                        "encoding"
                    ],
                    "file name": "LockableFileWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.LockableFileWriter.LockableFileWriter"
                },
                {
                    "function name": "write",
                    "function params": [
                        "cbuf",
                        "off",
                        "len"
                    ],
                    "file name": "LockableFileWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.LockableFileWriter.write"
                },
                {
                    "function name": "LockableFileWriter",
                    "function params": [
                        "file",
                        "encoding",
                        "append",
                        "lockDir"
                    ],
                    "file name": "LockableFileWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.LockableFileWriter.LockableFileWriter"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "LockableFileWriterTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.LockableFileWriterTest.tearDown"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "LockableFileWriterTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.LockableFileWriterTest.setUp"
                },
                {
                    "function name": "testFileLocked",
                    "function params": [],
                    "file name": "LockableFileWriterTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.LockableFileWriterTest.testFileLocked"
                },
                {
                    "function name": "testFileNotLocked",
                    "function params": [],
                    "file name": "LockableFileWriterTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.LockableFileWriterTest.testFileNotLocked"
                },
                {
                    "function name": "testConstructor_File_encoding_badEncoding",
                    "function params": [],
                    "file name": "LockableFileWriterTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_encoding_badEncoding"
                },
                {
                    "function name": "testConstructor_File_nullFile",
                    "function params": [],
                    "file name": "LockableFileWriterTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_nullFile"
                },
                {
                    "function name": "testConstructor_fileName_nullFile",
                    "function params": [],
                    "file name": "LockableFileWriterTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.LockableFileWriterTest.testConstructor_fileName_nullFile"
                }
            ],
            "date": "2005-09-28"
        },
        {
            "commit_id": 293,
            "hash": "d21fa007b1130c7169c8dee72ac5b8e4d5938bc9",
            "commit_summary": "Improve validation and directory creation in LockableFileWriter\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@292959 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/output/LockableFileWriter.java"
            ],
            "functions": [
                {
                    "function name": "LockableFileWriter",
                    "function params": [
                        "file",
                        "encoding",
                        "append",
                        "lockDir"
                    ],
                    "file name": "LockableFileWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.LockableFileWriter.LockableFileWriter"
                }
            ],
            "date": "2005-10-01"
        },
        {
            "commit_id": 294,
            "hash": "f113005bc0470d1608fa836f484097278940ff9c",
            "commit_summary": "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@293019 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [],
            "date": "2005-10-01"
        },
        {
            "commit_id": 295,
            "hash": "00d13c428343b50e46bf00b32427b3a172c7831d",
            "commit_summary": "Javadoc fixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@293039 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/EndianUtils.java",
                "src/java/org/apache/commons/io/FileSystemUtils.java",
                "src/java/org/apache/commons/io/input/DemuxInputStream.java",
                "src/java/org/apache/commons/io/output/DemuxOutputStream.java"
            ],
            "functions": [],
            "date": "2005-10-01"
        },
        {
            "commit_id": 296,
            "hash": "960ed15a59586ae84b8b515397f72c6fd19da839",
            "commit_summary": "FileUtils.contentEquals(File,File)\nPerformance improved by adding length and file location checking\nfrom discussion at The Server Side\nhttp://www.theserverside.com/news/thread.tss?thread_id=37035\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@321245 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "contentEquals",
                    "function params": [
                        "file1",
                        "file2"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.contentEquals"
                },
                {
                    "function name": "testContentEquals",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testContentEquals"
                }
            ],
            "date": "2005-10-14"
        },
        {
            "commit_id": 297,
            "hash": "9a91b208cd1c02d4faf782655109bb6fba96465e",
            "commit_summary": "Switch to using dir /-c in FileSystemUtils.freeSpace for French locale\nbug 37027, from Thomas Ledoux\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@321346 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileSystemUtils.java",
                "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "freeSpaceWindows",
                    "function params": [
                        "path"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.freeSpaceWindows"
                },
                {
                    "function name": "testGetFreeSpaceWindows_String_EmptyPath",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyPath"
                },
                {
                    "function name": "testGetFreeSpaceWindows_String_StripDrive",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_StripDrive"
                },
                {
                    "function name": "testGetFreeSpaceWindows_String_ParseCommaFormatBytes",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_ParseCommaFormatBytes"
                },
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.main"
                },
                {
                    "function name": "testGetFreeSpaceWindows_String_NormalResponse",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_NormalResponse"
                }
            ],
            "date": "2005-10-15"
        },
        {
            "commit_id": 298,
            "hash": "683de12f873049d4ac17c2d823f4900618098374",
            "commit_summary": "FileUtils methods to provide iterators over directory contents\nrfe 38083, from Jim Harrington\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@360495 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "iterateFiles",
                    "function params": [
                        "directory",
                        "extensions",
                        "recursive"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.iterateFiles"
                },
                {
                    "function name": "iterateFiles",
                    "function params": [
                        "directory",
                        "fileFilter",
                        "dirFilter"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.iterateFiles"
                },
                {
                    "function name": "testListFiles",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testListFiles"
                },
                {
                    "function name": "testIterateFiles",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testIterateFiles"
                }
            ],
            "date": "2006-01-01"
        },
        {
            "commit_id": 299,
            "hash": "67df9ff06991afe80f90b40a35169a982f905535",
            "commit_summary": "Stylistic change only to make the whole file have one style\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@360497 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [
                {
                    "function name": "convertFileCollectionToFileArray",
                    "function params": [
                        "files"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.convertFileCollectionToFileArray"
                },
                {
                    "function name": "isFileNewer",
                    "function params": [
                        "file",
                        "reference"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.isFileNewer"
                },
                {
                    "function name": "listFiles",
                    "function params": [
                        "directory",
                        "fileFilter",
                        "dirFilter"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.listFiles"
                },
                {
                    "function name": "copyURLToFile",
                    "function params": [
                        "source",
                        "destination"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyURLToFile"
                },
                {
                    "function name": "deleteDirectoryOnExit",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.deleteDirectoryOnExit"
                },
                {
                    "function name": "isFileNewer",
                    "function params": [
                        "file",
                        "timeMillis"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.isFileNewer"
                },
                {
                    "function name": "isFileNewer",
                    "function params": [
                        "file",
                        "date"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.isFileNewer"
                },
                {
                    "function name": "contentEquals",
                    "function params": [
                        "file1",
                        "file2"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.contentEquals"
                },
                {
                    "function name": "byteCountToDisplaySize",
                    "function params": [
                        "size"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.byteCountToDisplaySize"
                }
            ],
            "date": "2006-01-01"
        },
        {
            "commit_id": 300,
            "hash": "b2793d852dab28c38cb34dd6389e63cf83074c03",
            "commit_summary": "Update to 2006\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@360503 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [],
            "date": "2006-01-01"
        },
        {
            "commit_id": 301,
            "hash": "fe6e1d9709829709adbf0a2a720dc30ccd807da9",
            "commit_summary": "Add AgeFileFilter and SizeFileFilter\nrfe 36824, from Rahul Akolkar\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@360504 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "AgeFileFilter",
                    "function params": [
                        "cutoffReference",
                        "acceptOlder"
                    ],
                    "file name": "AgeFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter"
                },
                {
                    "function name": "AgeFileFilter",
                    "function params": [
                        "cutoffDate",
                        "acceptOlder"
                    ],
                    "file name": "AgeFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter"
                },
                {
                    "function name": "AgeFileFilter",
                    "function params": [
                        "cutoff"
                    ],
                    "file name": "AgeFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "AgeFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AgeFileFilter.accept"
                },
                {
                    "function name": "AgeFileFilter",
                    "function params": [
                        "cutoffReference"
                    ],
                    "file name": "AgeFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter"
                },
                {
                    "function name": "AgeFileFilter",
                    "function params": [
                        "cutoff",
                        "acceptOlder"
                    ],
                    "file name": "AgeFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter"
                },
                {
                    "function name": "AgeFileFilter",
                    "function params": [
                        "cutoffDate"
                    ],
                    "file name": "AgeFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter"
                },
                {
                    "function name": "ageFileFilter",
                    "function params": [
                        "cutoffDate",
                        "acceptOlder"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter"
                },
                {
                    "function name": "sizeFileFilter",
                    "function params": [
                        "threshold"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.sizeFileFilter"
                },
                {
                    "function name": "ageFileFilter",
                    "function params": [
                        "cutoff",
                        "acceptOlder"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter"
                },
                {
                    "function name": "sizeFileFilter",
                    "function params": [
                        "threshold",
                        "acceptLarger"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.sizeFileFilter"
                },
                {
                    "function name": "ageFileFilter",
                    "function params": [
                        "cutoffDate"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter"
                },
                {
                    "function name": "ageFileFilter",
                    "function params": [
                        "cutoffReference"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter"
                },
                {
                    "function name": "ageFileFilter",
                    "function params": [
                        "cutoffReference",
                        "acceptOlder"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter"
                },
                {
                    "function name": "ageFileFilter",
                    "function params": [
                        "cutoff"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter"
                },
                {
                    "function name": "SizeFileFilter",
                    "function params": [
                        "size"
                    ],
                    "file name": "SizeFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/SizeFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.SizeFileFilter.SizeFileFilter"
                },
                {
                    "function name": "SizeFileFilter",
                    "function params": [
                        "size",
                        "acceptLarger"
                    ],
                    "file name": "SizeFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/SizeFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.SizeFileFilter.SizeFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "SizeFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/SizeFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.SizeFileFilter.accept"
                },
                {
                    "function name": "testSizeFilter",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter"
                },
                {
                    "function name": "testAgeFilter",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter"
                },
                {
                    "function name": "spin",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.spin"
                }
            ],
            "date": "2006-01-01"
        },
        {
            "commit_id": 302,
            "hash": "da49a1fd0671c578344a8785f7e04868b13c6199",
            "commit_summary": "Increase certainty that files are closed in case of error\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@366357 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [
                {
                    "function name": "readFileToString",
                    "function params": [
                        "file",
                        "encoding"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.readFileToString"
                },
                {
                    "function name": "readFileToByteArray",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.readFileToByteArray"
                },
                {
                    "function name": "readLines",
                    "function params": [
                        "file",
                        "encoding"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.readLines"
                }
            ],
            "date": "2006-01-06"
        },
        {
            "commit_id": 303,
            "hash": "22db7febb9fedfd8e8a92c6def23e0fc3d7da0ed",
            "commit_summary": "Implement a LineIterator over the lines in a file or reader\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@366364 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/java/org/apache/commons/io/IOUtils.java",
                "src/test/org/apache/commons/io/PackageTestSuite.java"
            ],
            "functions": [
                {
                    "function name": "lineIterator",
                    "function params": [
                        "file",
                        "encoding"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.lineIterator"
                },
                {
                    "function name": "lineIterator",
                    "function params": [
                        "input",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.lineIterator"
                },
                {
                    "function name": "lineIterator",
                    "function params": [
                        "reader"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.lineIterator"
                },
                {
                    "function name": "hasNext",
                    "function params": [],
                    "file name": "LineIterator.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/LineIterator.java",
                    "full name": "src.java.org.apache.commons.io.LineIterator.hasNext"
                },
                {
                    "function name": "nextLine",
                    "function params": [],
                    "file name": "LineIterator.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/LineIterator.java",
                    "full name": "src.java.org.apache.commons.io.LineIterator.nextLine"
                },
                {
                    "function name": "LineIterator",
                    "function params": [
                        "reader"
                    ],
                    "file name": "LineIterator.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/LineIterator.java",
                    "full name": "src.java.org.apache.commons.io.LineIterator.LineIterator"
                },
                {
                    "function name": "remove",
                    "function params": [],
                    "file name": "LineIterator.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/LineIterator.java",
                    "full name": "src.java.org.apache.commons.io.LineIterator.remove"
                },
                {
                    "function name": "next",
                    "function params": [],
                    "file name": "LineIterator.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/LineIterator.java",
                    "full name": "src.java.org.apache.commons.io.LineIterator.next"
                },
                {
                    "function name": "closeQuietly",
                    "function params": [
                        "iterator"
                    ],
                    "file name": "LineIterator.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/LineIterator.java",
                    "full name": "src.java.org.apache.commons.io.LineIterator.closeQuietly"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "LineIterator.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/LineIterator.java",
                    "full name": "src.java.org.apache.commons.io.LineIterator.close"
                },
                {
                    "function name": "testOneLines",
                    "function params": [],
                    "file name": "LineIteratorTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.LineIteratorTestCase.testOneLines"
                },
                {
                    "function name": "testInvalidEncoding",
                    "function params": [],
                    "file name": "LineIteratorTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.LineIteratorTestCase.testInvalidEncoding"
                },
                {
                    "function name": "testCloseEarly",
                    "function params": [],
                    "file name": "LineIteratorTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.LineIteratorTestCase.testCloseEarly"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "LineIteratorTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.LineIteratorTestCase.tearDown"
                },
                {
                    "function name": "testNextLineOnly",
                    "function params": [],
                    "file name": "LineIteratorTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.LineIteratorTestCase.testNextLineOnly"
                },
                {
                    "function name": "testConstructor",
                    "function params": [],
                    "file name": "LineIteratorTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.LineIteratorTestCase.testConstructor"
                },
                {
                    "function name": "testTwoLines",
                    "function params": [],
                    "file name": "LineIteratorTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.LineIteratorTestCase.testTwoLines"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "LineIteratorTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.LineIteratorTestCase.suite"
                },
                {
                    "function name": "doTestFileWithSpecifiedLines",
                    "function params": [
                        "lineCount"
                    ],
                    "file name": "LineIteratorTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines"
                },
                {
                    "function name": "testNextOnly",
                    "function params": [],
                    "file name": "LineIteratorTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.LineIteratorTestCase.testNextOnly"
                },
                {
                    "function name": "createFile",
                    "function params": [
                        "file",
                        "encoding",
                        "lineCount"
                    ],
                    "file name": "LineIteratorTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.LineIteratorTestCase.createFile"
                },
                {
                    "function name": "testZeroLines",
                    "function params": [],
                    "file name": "LineIteratorTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.LineIteratorTestCase.testZeroLines"
                },
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "LineIteratorTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.LineIteratorTestCase.main"
                },
                {
                    "function name": "testThreeLines",
                    "function params": [],
                    "file name": "LineIteratorTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.LineIteratorTestCase.testThreeLines"
                },
                {
                    "function name": "testMissingFile",
                    "function params": [],
                    "file name": "LineIteratorTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.LineIteratorTestCase.testMissingFile"
                },
                {
                    "function name": "LineIteratorTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "LineIteratorTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.LineIteratorTestCase.LineIteratorTestCase"
                },
                {
                    "function name": "testValidEncoding",
                    "function params": [],
                    "file name": "LineIteratorTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.LineIteratorTestCase.testValidEncoding"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "LineIteratorTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.LineIteratorTestCase.setUp"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "PackageTestSuite.java",
                    "file old path": "src/test/org/apache/commons/io/PackageTestSuite.java",
                    "file new path": "src/test/org/apache/commons/io/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.PackageTestSuite.suite"
                }
            ],
            "date": "2006-01-06"
        },
        {
            "commit_id": 304,
            "hash": "8290adf40fa6b2dc7b16f50d841c44aece902cef",
            "commit_summary": "Fix tests to handle last modified date behaviour on Win2k\nbug 38130, from Niall Pemberton\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@369049 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testIsFileNewer",
                    "function params": [],
                    "file name": "FileUtilsFileNewerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer"
                },
                {
                    "function name": "testIsFileNewer",
                    "function params": [
                        "description",
                        "file",
                        "time",
                        "wantedResult"
                    ],
                    "file name": "FileUtilsFileNewerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer"
                },
                {
                    "function name": "testIsFileNewerImaginaryFile",
                    "function params": [],
                    "file name": "FileUtilsFileNewerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerImaginaryFile"
                },
                {
                    "function name": "spin",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.spin"
                },
                {
                    "function name": "spin",
                    "function params": [
                        "now"
                    ],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.spin"
                },
                {
                    "function name": "testAgeFilter",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter"
                }
            ],
            "date": "2006-01-14"
        },
        {
            "commit_id": 305,
            "hash": "71a72d8cd2418a420b661c45e1f676e89c7ce053",
            "commit_summary": "New FileUtils method to copy a directory to within another directory\nrfe 36315\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@369070 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "copyDirectoryToDirectory",
                    "function params": [
                        "srcDir",
                        "destDir"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyDirectoryToDirectory"
                },
                {
                    "function name": "testCopyDirectoryToDirectory_NonExistingDest",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToDirectory_NonExistingDest"
                }
            ],
            "date": "2006-01-14"
        },
        {
            "commit_id": 306,
            "hash": "64b5ec2aa8e02859c1a1cc7fa3c986aa20f45b4b",
            "commit_summary": "Fix checkstyle errors\nbug 38145, from Niall Pemberton\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@369075 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/HexDump.java",
                "src/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "src/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java"
            ],
            "functions": [],
            "date": "2006-01-14"
        },
        {
            "commit_id": 307,
            "hash": "0875f4bddeaae2c8d4b44280f54151d0ed5eeee1",
            "commit_summary": "FileSystemUtils.freeSpaceKb to normalize free space to kb\nbug 38574\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@383179 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileSystemUtils.java",
                "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "freeSpaceOS",
                    "function params": [
                        "path",
                        "os",
                        "kb"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.freeSpaceOS"
                },
                {
                    "function name": "freeSpace",
                    "function params": [
                        "path"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.freeSpace"
                },
                {
                    "function name": "freeSpaceKb",
                    "function params": [
                        "path"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.freeSpaceKb"
                },
                {
                    "function name": "freeSpaceOS",
                    "function params": [
                        "path",
                        "os"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.freeSpaceOS"
                },
                {
                    "function name": "freeSpaceUnix",
                    "function params": [
                        "path",
                        "kb"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.freeSpaceUnix"
                },
                {
                    "function name": "freeSpaceUnix",
                    "function params": [
                        "path"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.freeSpaceUnix"
                },
                {
                    "function name": "testGetFreeSpaceOS_String_InitError",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_InitError"
                },
                {
                    "function name": "testGetFreeSpaceOS_String_Unix",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Unix"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_InvalidResponse1",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse1"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_LongResponse",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_LongResponse"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_InvalidResponse3",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse3"
                },
                {
                    "function name": "testGetFreeSpaceOS_String_NullPath",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_NullPath"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_NormalResponse",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponse"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_EmptyResponse",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_EmptyResponse"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_InvalidResponse4",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse4"
                },
                {
                    "function name": "testGetFreeSpace_String",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_NormalResponseKb",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKb"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_InvalidResponse2",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse2"
                },
                {
                    "function name": "testGetFreeSpaceOS_String_Other",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Other"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_LongResponseKb",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_LongResponseKb"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_EmptyPath",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_EmptyPath"
                },
                {
                    "function name": "testGetFreeSpaceOS_String_Windows",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Windows"
                }
            ],
            "date": "2006-03-04"
        },
        {
            "commit_id": 308,
            "hash": "b46f3414284a7e3933e006061d0d9e644adba9d1",
            "commit_summary": "FileSystemUtils.freeSpaceKb javadoc fix\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@383201 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileSystemUtils.java"
            ],
            "functions": [],
            "date": "2006-03-04"
        },
        {
            "commit_id": 309,
            "hash": "69faa8fc52bf4a8125e882d48208355a8a5ebeb8",
            "commit_summary": "Fix javadoc and method return type\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@383206 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/IOUtils.java"
            ],
            "functions": [
                {
                    "function name": "lineIterator",
                    "function params": [
                        "reader"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.lineIterator"
                }
            ],
            "date": "2006-03-04"
        },
        {
            "commit_id": 310,
            "hash": "4e99e549f6c3011ff9d78d867753b20294656585",
            "commit_summary": "Add finalize method\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@383220 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/LineIterator.java"
            ],
            "functions": [
                {
                    "function name": "finalize",
                    "function params": [],
                    "file name": "LineIterator.java",
                    "file old path": "src/java/org/apache/commons/io/LineIterator.java",
                    "file new path": "src/java/org/apache/commons/io/LineIterator.java",
                    "full name": "src.java.org.apache.commons.io.LineIterator.finalize"
                }
            ],
            "date": "2006-03-04"
        },
        {
            "commit_id": 311,
            "hash": "41461b85a7aa58e3a392b0824cbdd2a76e9b843c",
            "commit_summary": "Improve javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@383221 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/java/org/apache/commons/io/IOUtils.java"
            ],
            "functions": [],
            "date": "2006-03-04"
        },
        {
            "commit_id": 312,
            "hash": "2f1f824c7821b12bf88fb9d16d3f7e011dcda6f4",
            "commit_summary": "Allow one second to avoid test failures\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@383224 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "spin",
                    "function params": [
                        "now"
                    ],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.spin"
                }
            ],
            "date": "2006-03-04"
        },
        {
            "commit_id": 313,
            "hash": "4fb9946cf2af3076f2a8f17682cbb16752dc1446",
            "commit_summary": "Remove finalize method\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@383391 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/LineIterator.java"
            ],
            "functions": [],
            "date": "2006-03-05"
        },
        {
            "commit_id": 314,
            "hash": "0fd8fefa6cb8d93cd455e22beca6d0606396574e",
            "commit_summary": "spin(long) with a Thread.sleep to idle the cpu\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@383450 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "spin",
                    "function params": [
                        "now"
                    ],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.spin"
                }
            ],
            "date": "2006-03-06"
        },
        {
            "commit_id": 315,
            "hash": "2f2390483ed5168b07266dde083210c390611182",
            "commit_summary": "Comment on the expected working dir for a test.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@383452 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testDirectory",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testDirectory"
                }
            ],
            "date": "2006-03-06"
        },
        {
            "commit_id": 316,
            "hash": "62ae9ca81916868ea2408c335b6585d3c384fa76",
            "commit_summary": "Cleaned up LineIterator changes include:\n* Removed the IOIterator interface, it can be added back later when there is more than one\nIterator implementations with a close method.\n* Doesn't automatically close the Reader at EOF.\n* made LineIterator final because the hasNext method isn't implemented in a subclassable way.\n* constructor throws an IllegaArgumentException, not a NPE when the argument is bogus.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@383730 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/java/org/apache/commons/io/IOUtils.java",
                "src/java/org/apache/commons/io/LineIterator.java",
                "src/test/org/apache/commons/io/LineIteratorTestCase.java"
            ],
            "functions": [
                {
                    "function name": "lineIterator",
                    "function params": [
                        "input",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.lineIterator"
                },
                {
                    "function name": "LineIterator",
                    "function params": [
                        "reader"
                    ],
                    "file name": "LineIterator.java",
                    "file old path": "src/java/org/apache/commons/io/LineIterator.java",
                    "file new path": "src/java/org/apache/commons/io/LineIterator.java",
                    "full name": "src.java.org.apache.commons.io.LineIterator.LineIterator"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "LineIterator.java",
                    "file old path": "src/java/org/apache/commons/io/LineIterator.java",
                    "file new path": "src/java/org/apache/commons/io/LineIterator.java",
                    "full name": "src.java.org.apache.commons.io.LineIterator.close"
                },
                {
                    "function name": "LineIterator",
                    "function params": [
                        "reader"
                    ],
                    "file name": "LineIterator.java",
                    "file old path": "src/java/org/apache/commons/io/LineIterator.java",
                    "file new path": "src/java/org/apache/commons/io/LineIterator.java",
                    "full name": "src.java.org.apache.commons.io.LineIterator.LineIterator"
                },
                {
                    "function name": "hasNext",
                    "function params": [],
                    "file name": "LineIterator.java",
                    "file old path": "src/java/org/apache/commons/io/LineIterator.java",
                    "file new path": "src/java/org/apache/commons/io/LineIterator.java",
                    "full name": "src.java.org.apache.commons.io.LineIterator.hasNext"
                },
                {
                    "function name": "doTestFileWithSpecifiedLines",
                    "function params": [
                        "lineCount"
                    ],
                    "file name": "LineIteratorTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines"
                },
                {
                    "function name": "testNextOnly",
                    "function params": [],
                    "file name": "LineIteratorTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.LineIteratorTestCase.testNextOnly"
                },
                {
                    "function name": "testMissingFile",
                    "function params": [],
                    "file name": "LineIteratorTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.LineIteratorTestCase.testMissingFile"
                },
                {
                    "function name": "testInvalidEncoding",
                    "function params": [],
                    "file name": "LineIteratorTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.LineIteratorTestCase.testInvalidEncoding"
                },
                {
                    "function name": "testCloseEarly",
                    "function params": [],
                    "file name": "LineIteratorTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.LineIteratorTestCase.testCloseEarly"
                },
                {
                    "function name": "testNextLineOnly",
                    "function params": [],
                    "file name": "LineIteratorTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.LineIteratorTestCase.testNextLineOnly"
                },
                {
                    "function name": "testConstructor",
                    "function params": [],
                    "file name": "LineIteratorTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.LineIteratorTestCase.testConstructor"
                },
                {
                    "function name": "testValidEncoding",
                    "function params": [],
                    "file name": "LineIteratorTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.LineIteratorTestCase.testValidEncoding"
                }
            ],
            "date": "2006-03-07"
        },
        {
            "commit_id": 317,
            "hash": "c752b56687e6621a7d5390060504f3550a7f52ea",
            "commit_summary": "Further adjustments to javadoc/implementation of LineIterator\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@384037 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/java/org/apache/commons/io/IOUtils.java",
                "src/java/org/apache/commons/io/LineIterator.java",
                "src/test/org/apache/commons/io/LineIteratorTestCase.java"
            ],
            "functions": [
                {
                    "function name": "LineIterator",
                    "function params": [
                        "reader"
                    ],
                    "file name": "LineIterator.java",
                    "file old path": "src/java/org/apache/commons/io/LineIterator.java",
                    "file new path": "src/java/org/apache/commons/io/LineIterator.java",
                    "full name": "src.java.org.apache.commons.io.LineIterator.LineIterator"
                },
                {
                    "function name": "hasNext",
                    "function params": [],
                    "file name": "LineIterator.java",
                    "file old path": "src/java/org/apache/commons/io/LineIterator.java",
                    "file new path": "src/java/org/apache/commons/io/LineIterator.java",
                    "full name": "src.java.org.apache.commons.io.LineIterator.hasNext"
                },
                {
                    "function name": "isValidLine",
                    "function params": [
                        "line"
                    ],
                    "file name": "LineIterator.java",
                    "file old path": "src/java/org/apache/commons/io/LineIterator.java",
                    "file new path": "src/java/org/apache/commons/io/LineIterator.java",
                    "full name": "src.java.org.apache.commons.io.LineIterator.isValidLine"
                },
                {
                    "function name": "testValidEncoding",
                    "function params": [],
                    "file name": "LineIteratorTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.LineIteratorTestCase.testValidEncoding"
                },
                {
                    "function name": "testNextLineOnly",
                    "function params": [],
                    "file name": "LineIteratorTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.LineIteratorTestCase.testNextLineOnly"
                },
                {
                    "function name": "testCloseEarly",
                    "function params": [],
                    "file name": "LineIteratorTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.LineIteratorTestCase.testCloseEarly"
                },
                {
                    "function name": "testNextOnly",
                    "function params": [],
                    "file name": "LineIteratorTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.LineIteratorTestCase.testNextOnly"
                },
                {
                    "function name": "testFiltering",
                    "function params": [],
                    "file name": "LineIteratorTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.LineIteratorTestCase.testFiltering"
                },
                {
                    "function name": "doTestFileWithSpecifiedLines",
                    "function params": [
                        "lineCount"
                    ],
                    "file name": "LineIteratorTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines"
                },
                {
                    "function name": "testMissingFile",
                    "function params": [],
                    "file name": "LineIteratorTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.LineIteratorTestCase.testMissingFile"
                },
                {
                    "function name": "testInvalidEncoding",
                    "function params": [],
                    "file name": "LineIteratorTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.LineIteratorTestCase.testInvalidEncoding"
                }
            ],
            "date": "2006-03-07"
        },
        {
            "commit_id": 318,
            "hash": "1ffd2e0a0de6b82e3c68e2ceeb6b69e091628401",
            "commit_summary": "Fix javadoc warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@385117 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/IOUtils.java"
            ],
            "functions": [],
            "date": "2006-03-11"
        },
        {
            "commit_id": 319,
            "hash": "f38ef9b7478354cbecaa57fa9282e968e7ab8aee",
            "commit_summary": "Fix tests for v1.2\nBug 38927\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@385118 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testForceDeleteDir",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testForceDeleteDir"
                },
                {
                    "function name": "testFileUtils",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testFileUtils"
                },
                {
                    "function name": "testCopyFile2",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyFile2"
                },
                {
                    "function name": "getTestDirectory",
                    "function params": [],
                    "file name": "FileBasedTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "full name": "src.test.org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory"
                }
            ],
            "date": "2006-03-11"
        },
        {
            "commit_id": 320,
            "hash": "819f49d6b89c447afa144abaaecd6a6416106b55",
            "commit_summary": "LockableFileWriter locking mechanism was broken and only provided limited protection\nFile deletion and locking in case of constructor error was broken\nbug 38942\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@385293 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                "src/test/org/apache/commons/io/output/LockableFileWriterTest.java"
            ],
            "functions": [
                {
                    "function name": "initWriter",
                    "function params": [
                        "file",
                        "encoding",
                        "append"
                    ],
                    "file name": "LockableFileWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.LockableFileWriter.initWriter"
                },
                {
                    "function name": "LockableFileWriter",
                    "function params": [
                        "file",
                        "encoding",
                        "append",
                        "lockDir"
                    ],
                    "file name": "LockableFileWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.LockableFileWriter.LockableFileWriter"
                },
                {
                    "function name": "testConstructor_File_nullFile",
                    "function params": [],
                    "file name": "LockableFileWriterTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_nullFile"
                },
                {
                    "function name": "testAlternateLockDir",
                    "function params": [],
                    "file name": "LockableFileWriterTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.LockableFileWriterTest.testAlternateLockDir"
                },
                {
                    "function name": "testConstructor_File_directory",
                    "function params": [],
                    "file name": "LockableFileWriterTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_directory"
                },
                {
                    "function name": "testConstructor_fileName_nullFile",
                    "function params": [],
                    "file name": "LockableFileWriterTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.LockableFileWriterTest.testConstructor_fileName_nullFile"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "LockableFileWriterTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.LockableFileWriterTest.setUp"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "LockableFileWriterTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.LockableFileWriterTest.tearDown"
                },
                {
                    "function name": "testFileLocked",
                    "function params": [],
                    "file name": "LockableFileWriterTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.LockableFileWriterTest.testFileLocked"
                },
                {
                    "function name": "testFileNotLocked",
                    "function params": [],
                    "file name": "LockableFileWriterTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.LockableFileWriterTest.testFileNotLocked"
                },
                {
                    "function name": "testConstructor_File_encoding_badEncoding",
                    "function params": [],
                    "file name": "LockableFileWriterTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_encoding_badEncoding"
                }
            ],
            "date": "2006-03-12"
        },
        {
            "commit_id": 321,
            "hash": "521dd575eb0f484f5f23d449c49d69e7e14c8475",
            "commit_summary": "Break out waitFor test for Windows2000 reasons\nbug 38927, from Niall Pemberton\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@385294 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "src/test/org/apache/commons/io/PackageTestSuite.java"
            ],
            "functions": [
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "FileUtilsWaitForTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsWaitForTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsWaitForTestCase.suite"
                },
                {
                    "function name": "testWaitFor",
                    "function params": [],
                    "file name": "FileUtilsWaitForTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsWaitForTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsWaitForTestCase.testWaitFor"
                },
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "FileUtilsWaitForTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsWaitForTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsWaitForTestCase.main"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "FileUtilsWaitForTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsWaitForTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsWaitForTestCase.setUp"
                },
                {
                    "function name": "FileUtilsWaitForTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "FileUtilsWaitForTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsWaitForTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsWaitForTestCase.FileUtilsWaitForTestCase"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "FileUtilsWaitForTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsWaitForTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsWaitForTestCase.tearDown"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "PackageTestSuite.java",
                    "file old path": "src/test/org/apache/commons/io/PackageTestSuite.java",
                    "file new path": "src/test/org/apache/commons/io/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.PackageTestSuite.suite"
                }
            ],
            "date": "2006-03-12"
        },
        {
            "commit_id": 322,
            "hash": "c6be22ae2e58300f05cb713a4dde18c67dafa0a3",
            "commit_summary": "Handle 512byte blocks such as on OS X\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@385680 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileSystemUtils.java",
                "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testGetFreeSpace_String",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String"
                }
            ],
            "date": "2006-03-13"
        },
        {
            "commit_id": 323,
            "hash": "1cd1bbf035513dec715b4f4938545ab278ed33af",
            "commit_summary": "If chmod fails don't fail the test\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@385685 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java"
            ],
            "functions": [
                {
                    "function name": "chmod",
                    "function params": [
                        "file",
                        "mode",
                        "recurse"
                    ],
                    "file name": "FileUtilsCleanDirectoryTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsCleanDirectoryTestCase.chmod"
                }
            ],
            "date": "2006-03-13"
        },
        {
            "commit_id": 324,
            "hash": "b828e78a5068201a96a23f3f9fc8f511d0f3e124",
            "commit_summary": "Remove unnecessary semicolon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@387337 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [
                {
                    "function name": "waitFor",
                    "function params": [
                        "file",
                        "seconds"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.waitFor"
                }
            ],
            "date": "2006-03-20"
        },
        {
            "commit_id": 325,
            "hash": "1d776e8b9a3a62510cf51ebad46e6e54fe62d4d8",
            "commit_summary": "Remove unnecessary casts from int to int.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@387353 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/EndianUtils.java"
            ],
            "functions": [
                {
                    "function name": "readSwappedInteger",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedInteger"
                },
                {
                    "function name": "readSwappedUnsignedShort",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedUnsignedShort"
                },
                {
                    "function name": "readSwappedUnsignedShort",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedUnsignedShort"
                },
                {
                    "function name": "readSwappedInteger",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedInteger"
                }
            ],
            "date": "2006-03-21"
        },
        {
            "commit_id": 326,
            "hash": "607bcbedac4e86cef2ec435584bf83da02148a9d",
            "commit_summary": "Javadoc exceptions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@387355 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java"
            ],
            "functions": [],
            "date": "2006-03-21"
        },
        {
            "commit_id": 327,
            "hash": "b2136f4ebce6131b7d0a2222b4ad912770568548",
            "commit_summary": "Remove unnecessary casts from int to long.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@387356 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/EndianUtils.java"
            ],
            "functions": [
                {
                    "function name": "readSwappedLong",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedLong"
                },
                {
                    "function name": "readSwappedUnsignedInteger",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger"
                },
                {
                    "function name": "readSwappedInteger",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedInteger"
                },
                {
                    "function name": "readSwappedUnsignedInteger",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger"
                }
            ],
            "date": "2006-03-21"
        },
        {
            "commit_id": 328,
            "hash": "cda54d4bfb3eb2150ae75d32f02bde40098d141f",
            "commit_summary": "IO-80 - Make LineIterator implement Iterator\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@412592 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/LineIterator.java"
            ],
            "functions": [],
            "date": "2006-06-07"
        },
        {
            "commit_id": 329,
            "hash": "49ca3a4241c1847e08921ead7b582419fa53537c",
            "commit_summary": "Refactor windows identification to a method\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@417086 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java"
            ],
            "functions": [
                {
                    "function name": "if",
                    "function params": [
                        "SYSTEM_SEPARATOR"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.if"
                },
                {
                    "function name": "equals",
                    "function params": [
                        "filename1",
                        "filename2",
                        "system",
                        "normalized"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.equals"
                },
                {
                    "function name": "if",
                    "function params": [
                        "isSystemWindows"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.if"
                },
                {
                    "function name": "isSystemWindows",
                    "function params": [],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.isSystemWindows"
                },
                {
                    "function name": "wildcardMatch",
                    "function params": [
                        "filename",
                        "wildcardMatcher",
                        "system"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.wildcardMatch"
                },
                {
                    "function name": "separatorsToSystem",
                    "function params": [
                        "path"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.separatorsToSystem"
                }
            ],
            "date": "2006-06-25"
        },
        {
            "commit_id": 330,
            "hash": "9af996d4c44c7c4f317d0cbd094d5eb9c19efc97",
            "commit_summary": "Add IOCase to handle case-sensitivity\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@417090 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/PackageTestSuite.java"
            ],
            "functions": [
                {
                    "function name": "getName",
                    "function params": [],
                    "file name": "IOCase.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOCase.java",
                    "full name": "src.java.org.apache.commons.io.IOCase.getName"
                },
                {
                    "function name": "checkStartsWith",
                    "function params": [
                        "str",
                        "start"
                    ],
                    "file name": "IOCase.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOCase.java",
                    "full name": "src.java.org.apache.commons.io.IOCase.checkStartsWith"
                },
                {
                    "function name": "isCaseSensitive",
                    "function params": [],
                    "file name": "IOCase.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOCase.java",
                    "full name": "src.java.org.apache.commons.io.IOCase.isCaseSensitive"
                },
                {
                    "function name": "checkRegionMatches",
                    "function params": [
                        "str",
                        "strStartIndex",
                        "search"
                    ],
                    "file name": "IOCase.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOCase.java",
                    "full name": "src.java.org.apache.commons.io.IOCase.checkRegionMatches"
                },
                {
                    "function name": "IOCase",
                    "function params": [
                        "name",
                        "sensitive"
                    ],
                    "file name": "IOCase.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOCase.java",
                    "full name": "src.java.org.apache.commons.io.IOCase.IOCase"
                },
                {
                    "function name": "checkEndsWith",
                    "function params": [
                        "str",
                        "end"
                    ],
                    "file name": "IOCase.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOCase.java",
                    "full name": "src.java.org.apache.commons.io.IOCase.checkEndsWith"
                },
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "IOCase.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOCase.java",
                    "full name": "src.java.org.apache.commons.io.IOCase.toString"
                },
                {
                    "function name": "checkEquals",
                    "function params": [
                        "str1",
                        "str2"
                    ],
                    "file name": "IOCase.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOCase.java",
                    "full name": "src.java.org.apache.commons.io.IOCase.checkEquals"
                },
                {
                    "function name": "forName",
                    "function params": [
                        "name"
                    ],
                    "file name": "IOCase.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOCase.java",
                    "full name": "src.java.org.apache.commons.io.IOCase.forName"
                },
                {
                    "function name": "readResolve",
                    "function params": [],
                    "file name": "IOCase.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/IOCase.java",
                    "full name": "src.java.org.apache.commons.io.IOCase.readResolve"
                },
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "IOCaseTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOCaseTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOCaseTestCase.main"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "IOCaseTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOCaseTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOCaseTestCase.setUp"
                },
                {
                    "function name": "test_checkEndsWith_functionality",
                    "function params": [],
                    "file name": "IOCaseTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOCaseTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOCaseTestCase.test_checkEndsWith_functionality"
                },
                {
                    "function name": "test_checkStartsWith_functionality",
                    "function params": [],
                    "file name": "IOCaseTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOCaseTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOCaseTestCase.test_checkStartsWith_functionality"
                },
                {
                    "function name": "IOCaseTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "IOCaseTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOCaseTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOCaseTestCase.IOCaseTestCase"
                },
                {
                    "function name": "test_checkRegionMatches_case",
                    "function params": [],
                    "file name": "IOCaseTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOCaseTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOCaseTestCase.test_checkRegionMatches_case"
                },
                {
                    "function name": "serialize",
                    "function params": [
                        "value"
                    ],
                    "file name": "IOCaseTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOCaseTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOCaseTestCase.serialize"
                },
                {
                    "function name": "test_forName",
                    "function params": [],
                    "file name": "IOCaseTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOCaseTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOCaseTestCase.test_forName"
                },
                {
                    "function name": "test_getName",
                    "function params": [],
                    "file name": "IOCaseTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOCaseTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOCaseTestCase.test_getName"
                },
                {
                    "function name": "test_checkEquals_case",
                    "function params": [],
                    "file name": "IOCaseTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOCaseTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOCaseTestCase.test_checkEquals_case"
                },
                {
                    "function name": "test_toString",
                    "function params": [],
                    "file name": "IOCaseTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOCaseTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOCaseTestCase.test_toString"
                },
                {
                    "function name": "test_checkRegionMatches_functionality",
                    "function params": [],
                    "file name": "IOCaseTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOCaseTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOCaseTestCase.test_checkRegionMatches_functionality"
                },
                {
                    "function name": "test_checkEquals_functionality",
                    "function params": [],
                    "file name": "IOCaseTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOCaseTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOCaseTestCase.test_checkEquals_functionality"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "IOCaseTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOCaseTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOCaseTestCase.suite"
                },
                {
                    "function name": "test_serialization",
                    "function params": [],
                    "file name": "IOCaseTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOCaseTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOCaseTestCase.test_serialization"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "IOCaseTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOCaseTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOCaseTestCase.tearDown"
                },
                {
                    "function name": "test_checkStartsWith_case",
                    "function params": [],
                    "file name": "IOCaseTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOCaseTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOCaseTestCase.test_checkStartsWith_case"
                },
                {
                    "function name": "test_checkEndsWith_case",
                    "function params": [],
                    "file name": "IOCaseTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOCaseTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOCaseTestCase.test_checkEndsWith_case"
                },
                {
                    "function name": "test_isCaseSensitive",
                    "function params": [],
                    "file name": "IOCaseTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/IOCaseTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOCaseTestCase.test_isCaseSensitive"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "PackageTestSuite.java",
                    "file old path": "src/test/org/apache/commons/io/PackageTestSuite.java",
                    "file new path": "src/test/org/apache/commons/io/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.PackageTestSuite.suite"
                }
            ],
            "date": "2006-06-25"
        },
        {
            "commit_id": 331,
            "hash": "07751ea95c575cb95a310a23a78dc8cbe85b27a9",
            "commit_summary": "Add methods to use IOCase case-sensitivity\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@417091 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java",
                "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java"
            ],
            "functions": [
                {
                    "function name": "wildcardMatchOnSystem",
                    "function params": [
                        "filename",
                        "wildcardMatcher"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem"
                },
                {
                    "function name": "wildcardMatch",
                    "function params": [
                        "filename",
                        "wildcardMatcher",
                        "caseSensitivity"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.wildcardMatch"
                },
                {
                    "function name": "wildcardMatch",
                    "function params": [
                        "filename",
                        "wildcardMatcher",
                        "system"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.wildcardMatch"
                },
                {
                    "function name": "wildcardMatch",
                    "function params": [
                        "filename",
                        "wildcardMatcher"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.wildcardMatch"
                },
                {
                    "function name": "equalsNormalized",
                    "function params": [
                        "filename1",
                        "filename2"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.equalsNormalized"
                },
                {
                    "function name": "equals",
                    "function params": [
                        "filename1",
                        "filename2"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.equals"
                },
                {
                    "function name": "equalsOnSystem",
                    "function params": [
                        "filename1",
                        "filename2"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.equalsOnSystem"
                },
                {
                    "function name": "equals",
                    "function params": [
                        "filename1",
                        "filename2",
                        "normalized",
                        "caseSensitivity"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.equals"
                },
                {
                    "function name": "equalsNormalizedOnSystem",
                    "function params": [
                        "filename1",
                        "filename2"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.equalsNormalizedOnSystem"
                },
                {
                    "function name": "equals",
                    "function params": [
                        "filename1",
                        "filename2",
                        "system",
                        "normalized"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.equals"
                },
                {
                    "function name": "testEquals_fullControl",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testEquals_fullControl"
                },
                {
                    "function name": "testMatchCaseSpecified",
                    "function params": [],
                    "file name": "FilenameUtilsWildcardTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatchCaseSpecified"
                }
            ],
            "date": "2006-06-25"
        },
        {
            "commit_id": 332,
            "hash": "4fe355979f38b486f9d9be307720ac3cf64f2f5b",
            "commit_summary": "Add WildcardFileFilter deprecating WildcardFilter\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@417092 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/WildcardFilter.java"
            ],
            "functions": [
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "WildcardFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.WildcardFileFilter.accept"
                },
                {
                    "function name": "WildcardFileFilter",
                    "function params": [
                        "wildcard"
                    ],
                    "file name": "WildcardFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "dir",
                        "name"
                    ],
                    "file name": "WildcardFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.WildcardFileFilter.accept"
                },
                {
                    "function name": "WildcardFileFilter",
                    "function params": [
                        "wildcards",
                        "caseSensitivity"
                    ],
                    "file name": "WildcardFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter"
                },
                {
                    "function name": "WildcardFileFilter",
                    "function params": [
                        "wildcards"
                    ],
                    "file name": "WildcardFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter"
                },
                {
                    "function name": "WildcardFileFilter",
                    "function params": [
                        "wildcard",
                        "caseSensitivity"
                    ],
                    "file name": "WildcardFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter"
                },
                {
                    "function name": "WildcardFileFilter",
                    "function params": [
                        "wildcards"
                    ],
                    "file name": "WildcardFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter"
                },
                {
                    "function name": "WildcardFileFilter",
                    "function params": [
                        "wildcards",
                        "caseSensitivity"
                    ],
                    "file name": "WildcardFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter"
                },
                {
                    "function name": "WildcardFilter",
                    "function params": [
                        "wildcards"
                    ],
                    "file name": "WildcardFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.WildcardFilter.WildcardFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "WildcardFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.WildcardFilter.accept"
                },
                {
                    "function name": "WildcardFilter",
                    "function params": [
                        "wildcard"
                    ],
                    "file name": "WildcardFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.WildcardFilter.WildcardFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "dir",
                        "name"
                    ],
                    "file name": "WildcardFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.WildcardFilter.accept"
                },
                {
                    "function name": "WildcardFilter",
                    "function params": [
                        "wildcards"
                    ],
                    "file name": "WildcardFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.WildcardFilter.WildcardFilter"
                }
            ],
            "date": "2006-06-25"
        },
        {
            "commit_id": 333,
            "hash": "9b70114c7394deb1923984a30c11acaeaf6ebec7",
            "commit_summary": "Ensure that file filter package tests arent run twice\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@418640 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/PackageTestSuite.java"
            ],
            "functions": [
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "PackageTestSuite.java",
                    "file old path": "src/test/org/apache/commons/io/PackageTestSuite.java",
                    "file new path": "src/test/org/apache/commons/io/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.PackageTestSuite.suite"
                }
            ],
            "date": "2006-07-02"
        },
        {
            "commit_id": 334,
            "hash": "eff391033a01a092d943db90513412b08bb01525",
            "commit_summary": "Test and fix case sensitive wildcard filter\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@418641 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java",
                "src/java/org/apache/commons/io/IOCase.java",
                "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "wildcardMatch",
                    "function params": [
                        "filename",
                        "wildcardMatcher",
                        "caseSensitivity"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.wildcardMatch"
                },
                {
                    "function name": "convertCase",
                    "function params": [
                        "str"
                    ],
                    "file name": "IOCase.java",
                    "file old path": "src/java/org/apache/commons/io/IOCase.java",
                    "file new path": "src/java/org/apache/commons/io/IOCase.java",
                    "full name": "src.java.org.apache.commons.io.IOCase.convertCase"
                },
                {
                    "function name": "testMatchCaseSpecified",
                    "function params": [],
                    "file name": "FilenameUtilsWildcardTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatchCaseSpecified"
                },
                {
                    "function name": "testMatchOnSystem",
                    "function params": [],
                    "file name": "FilenameUtilsWildcardTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatchOnSystem"
                },
                {
                    "function name": "testMatch",
                    "function params": [],
                    "file name": "FilenameUtilsWildcardTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch"
                },
                {
                    "function name": "testWildcard",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard"
                },
                {
                    "function name": "testDeprecatedWildcard",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard"
                }
            ],
            "date": "2006-07-02"
        },
        {
            "commit_id": 335,
            "hash": "30bf8b4fd4f4435a3cb475ab9c415b8d9fef6ea8",
            "commit_summary": "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@418642 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java"
            ],
            "functions": [],
            "date": "2006-07-02"
        },
        {
            "commit_id": 336,
            "hash": "c0368c858af413d6ab217b0f2a860a8f7e3ac702",
            "commit_summary": "Add case sensitivity support to NameFileFilter\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@418643 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "NameFileFilter",
                    "function params": [
                        "name"
                    ],
                    "file name": "NameFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter"
                },
                {
                    "function name": "NameFileFilter",
                    "function params": [
                        "name",
                        "caseSensitivity"
                    ],
                    "file name": "NameFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "NameFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NameFileFilter.accept"
                },
                {
                    "function name": "NameFileFilter",
                    "function params": [
                        "names"
                    ],
                    "file name": "NameFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file",
                        "name"
                    ],
                    "file name": "NameFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NameFileFilter.accept"
                },
                {
                    "function name": "NameFileFilter",
                    "function params": [
                        "names",
                        "caseSensitivity"
                    ],
                    "file name": "NameFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter"
                },
                {
                    "function name": "NameFileFilter",
                    "function params": [
                        "names"
                    ],
                    "file name": "NameFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter"
                },
                {
                    "function name": "NameFileFilter",
                    "function params": [
                        "names",
                        "caseSensitivity"
                    ],
                    "file name": "NameFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter"
                },
                {
                    "function name": "testNameFilter",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilter"
                }
            ],
            "date": "2006-07-02"
        },
        {
            "commit_id": 337,
            "hash": "180e6c3087d177ee0d10c677cd462bf55edf5e51",
            "commit_summary": "now deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@421532 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/CountingInputStream.java",
                "src/java/org/apache/commons/io/output/CountingOutputStream.java"
            ],
            "functions": [],
            "date": "2006-07-13"
        },
        {
            "commit_id": 338,
            "hash": "1f8990a4200055e2acaf654367cdece4f25302a3",
            "commit_summary": "IO-85  IOFileFilter implementations for File.canRead(), File.canWrite(), File.isHidden() and empty files/directories\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@424601 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "CanReadFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/CanReadFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.CanReadFileFilter.accept"
                },
                {
                    "function name": "CanReadFileFilter",
                    "function params": [],
                    "file name": "CanReadFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/CanReadFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.CanReadFileFilter.CanReadFileFilter"
                },
                {
                    "function name": "CanWriteFileFilter",
                    "function params": [],
                    "file name": "CanWriteFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/CanWriteFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.CanWriteFileFilter.CanWriteFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "CanWriteFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/CanWriteFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.CanWriteFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "EmptyFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/EmptyFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.EmptyFileFilter.accept"
                },
                {
                    "function name": "EmptyFileFilter",
                    "function params": [],
                    "file name": "EmptyFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/EmptyFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.EmptyFileFilter.EmptyFileFilter"
                },
                {
                    "function name": "HiddenFileFilter",
                    "function params": [],
                    "file name": "HiddenFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/HiddenFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.HiddenFileFilter.HiddenFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "HiddenFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/HiddenFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.HiddenFileFilter.accept"
                },
                {
                    "function name": "testCanRead",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testCanRead"
                },
                {
                    "function name": "testCanWrite",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testCanWrite"
                },
                {
                    "function name": "testEmpty",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testEmpty"
                },
                {
                    "function name": "testHidden",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testHidden"
                }
            ],
            "date": "2006-07-22"
        },
        {
            "commit_id": 339,
            "hash": "8a87b167d3eeb8af40e932116aee00532e6a9495",
            "commit_summary": "Correct mail-archive links and a couple of minor javadoc/checkstyle corrections\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@424607 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "src/java/org/apache/commons/io/output/LockableFileWriter.java"
            ],
            "functions": [],
            "date": "2006-07-22"
        },
        {
            "commit_id": 340,
            "hash": "e656ba3ab9c24c6ff639834f513094ed97740704",
            "commit_summary": "IO-86 - Add FileFinder back into Commons IO\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@424673 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "FileFinder",
                    "function params": [
                        "filter"
                    ],
                    "file name": "FileFinder.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileFinder.java",
                    "full name": "src.java.org.apache.commons.io.FileFinder.FileFinder"
                },
                {
                    "function name": "handleDirectoryStart",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "FileFinder.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileFinder.java",
                    "full name": "src.java.org.apache.commons.io.FileFinder.handleDirectoryStart"
                },
                {
                    "function name": "find",
                    "function params": [
                        "startDirectory"
                    ],
                    "file name": "FileFinder.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileFinder.java",
                    "full name": "src.java.org.apache.commons.io.FileFinder.find"
                },
                {
                    "function name": "handleDirectory",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "FileFinder.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileFinder.java",
                    "full name": "src.java.org.apache.commons.io.FileFinder.handleDirectory"
                },
                {
                    "function name": "FileFinder",
                    "function params": [],
                    "file name": "FileFinder.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileFinder.java",
                    "full name": "src.java.org.apache.commons.io.FileFinder.FileFinder"
                },
                {
                    "function name": "handleRestricted",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileFinder.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileFinder.java",
                    "full name": "src.java.org.apache.commons.io.FileFinder.handleRestricted"
                },
                {
                    "function name": "FileFinder",
                    "function params": [
                        "filter",
                        "depthLimit"
                    ],
                    "file name": "FileFinder.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileFinder.java",
                    "full name": "src.java.org.apache.commons.io.FileFinder.FileFinder"
                },
                {
                    "function name": "find",
                    "function params": [],
                    "file name": "FileFinder.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileFinder.java",
                    "full name": "src.java.org.apache.commons.io.FileFinder.find"
                },
                {
                    "function name": "handleFile",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "FileFinder.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileFinder.java",
                    "full name": "src.java.org.apache.commons.io.FileFinder.handleFile"
                },
                {
                    "function name": "handleDirectoryEnd",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "FileFinder.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileFinder.java",
                    "full name": "src.java.org.apache.commons.io.FileFinder.handleDirectoryEnd"
                },
                {
                    "function name": "FileFinder",
                    "function params": [
                        "depthLimit"
                    ],
                    "file name": "FileFinder.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileFinder.java",
                    "full name": "src.java.org.apache.commons.io.FileFinder.FileFinder"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "FileFinderTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileFinderTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileFinderTestCase.suite"
                },
                {
                    "function name": "checkContainsFiles",
                    "function params": [
                        "prefix",
                        "files",
                        "results"
                    ],
                    "file name": "FileFinderTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileFinderTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileFinderTestCase.checkContainsFiles"
                },
                {
                    "function name": "FileFinderTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "FileFinderTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileFinderTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileFinderTestCase.FileFinderTestCase"
                },
                {
                    "function name": "testFilter",
                    "function params": [],
                    "file name": "FileFinderTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileFinderTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileFinderTestCase.testFilter"
                },
                {
                    "function name": "testFilterAndLimitC",
                    "function params": [],
                    "file name": "FileFinderTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileFinderTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileFinderTestCase.testFilterAndLimitC"
                },
                {
                    "function name": "testFilterAndLimitB",
                    "function params": [],
                    "file name": "FileFinderTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileFinderTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileFinderTestCase.testFilterAndLimitB"
                },
                {
                    "function name": "testMissingStartDirectory",
                    "function params": [],
                    "file name": "FileFinderTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileFinderTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileFinderTestCase.testMissingStartDirectory"
                },
                {
                    "function name": "createNameFilter",
                    "function params": [
                        "files"
                    ],
                    "file name": "FileFinderTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileFinderTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileFinderTestCase.createNameFilter"
                },
                {
                    "function name": "testLimitToCurrent",
                    "function params": [],
                    "file name": "FileFinderTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileFinderTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileFinderTestCase.testLimitToCurrent"
                },
                {
                    "function name": "testFilterAndLimitA",
                    "function params": [],
                    "file name": "FileFinderTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileFinderTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileFinderTestCase.testFilterAndLimitA"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "FileFinderTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileFinderTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileFinderTestCase.setUp"
                },
                {
                    "function name": "testFilterAndLimitD",
                    "function params": [],
                    "file name": "FileFinderTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileFinderTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileFinderTestCase.testFilterAndLimitD"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "FileFinderTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileFinderTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileFinderTestCase.tearDown"
                }
            ],
            "date": "2006-07-23"
        },
        {
            "commit_id": 341,
            "hash": "9286d357ac99a3a3cd0171bed3c32f8967ad5aa5",
            "commit_summary": "Add FileFileFilter that accepts files and not directories\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@424742 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFileFilter.accept"
                },
                {
                    "function name": "FileFileFilter",
                    "function params": [],
                    "file name": "FileFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFileFilter.FileFileFilter"
                },
                {
                    "function name": "fileFileFilter",
                    "function params": [],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.fileFileFilter"
                },
                {
                    "function name": "testFiles",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testFiles"
                }
            ],
            "date": "2006-07-23"
        },
        {
            "commit_id": 342,
            "hash": "b3e812386927743ad9b68486a7270fb3d677d6e8",
            "commit_summary": "TrueFileFilter/FalseFileFilter/DirectoryFileFilter new constants\n  - New singleton instance constants (TRUE/FALSE/DIRECTORY)\n  - The new constants are more JDK 1.5 friendly with regards to static imports\n    (whereas if everything uses INSTANCE, then they just clash)\n  - The old INSTANCE constants are still present and have not been deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@424745 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "src/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "directoryFileFilter",
                    "function params": [],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.directoryFileFilter"
                },
                {
                    "function name": "trueFileFilter",
                    "function params": [],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.trueFileFilter"
                },
                {
                    "function name": "falseFileFilter",
                    "function params": [],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.falseFileFilter"
                },
                {
                    "function name": "testFalse",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testFalse"
                },
                {
                    "function name": "testDirectory",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testDirectory"
                },
                {
                    "function name": "testTrue",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testTrue"
                }
            ],
            "date": "2006-07-23"
        },
        {
            "commit_id": 343,
            "hash": "c112e3b950937cb0d7dd755ab84966eb42ab6b0e",
            "commit_summary": "Javadoc - unify paragraph tags to code readable style\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@424747 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/CopyUtils.java",
                "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                "src/java/org/apache/commons/io/output/DeferredFileOutputStream.java"
            ],
            "functions": [],
            "date": "2006-07-23"
        },
        {
            "commit_id": 344,
            "hash": "1d4766b9f16ed6b33a26d44c3f0531ae85f0f370",
            "commit_summary": "Allow subclasses to block skip directory processing\nAdd start and end callback methods\nImprove documentation\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@424748 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileFinder.java"
            ],
            "functions": [
                {
                    "function name": "handleRestricted",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileFinder.java",
                    "file old path": "src/java/org/apache/commons/io/FileFinder.java",
                    "file new path": "src/java/org/apache/commons/io/FileFinder.java",
                    "full name": "src.java.org.apache.commons.io.FileFinder.handleRestricted"
                },
                {
                    "function name": "handleEnd",
                    "function params": [
                        "results"
                    ],
                    "file name": "FileFinder.java",
                    "file old path": "src/java/org/apache/commons/io/FileFinder.java",
                    "file new path": "src/java/org/apache/commons/io/FileFinder.java",
                    "full name": "src.java.org.apache.commons.io.FileFinder.handleEnd"
                },
                {
                    "function name": "handleFile",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "FileFinder.java",
                    "file old path": "src/java/org/apache/commons/io/FileFinder.java",
                    "file new path": "src/java/org/apache/commons/io/FileFinder.java",
                    "full name": "src.java.org.apache.commons.io.FileFinder.handleFile"
                },
                {
                    "function name": "examine",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "FileFinder.java",
                    "file old path": "src/java/org/apache/commons/io/FileFinder.java",
                    "file new path": "src/java/org/apache/commons/io/FileFinder.java",
                    "full name": "src.java.org.apache.commons.io.FileFinder.examine"
                },
                {
                    "function name": "handleDirectoryEnd",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "FileFinder.java",
                    "file old path": "src/java/org/apache/commons/io/FileFinder.java",
                    "file new path": "src/java/org/apache/commons/io/FileFinder.java",
                    "full name": "src.java.org.apache.commons.io.FileFinder.handleDirectoryEnd"
                },
                {
                    "function name": "examine",
                    "function params": [
                        "startDirectory"
                    ],
                    "file name": "FileFinder.java",
                    "file old path": "src/java/org/apache/commons/io/FileFinder.java",
                    "file new path": "src/java/org/apache/commons/io/FileFinder.java",
                    "full name": "src.java.org.apache.commons.io.FileFinder.examine"
                },
                {
                    "function name": "handleDirectoryStart",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "FileFinder.java",
                    "file old path": "src/java/org/apache/commons/io/FileFinder.java",
                    "file new path": "src/java/org/apache/commons/io/FileFinder.java",
                    "full name": "src.java.org.apache.commons.io.FileFinder.handleDirectoryStart"
                },
                {
                    "function name": "find",
                    "function params": [
                        "startDirectory"
                    ],
                    "file name": "FileFinder.java",
                    "file old path": "src/java/org/apache/commons/io/FileFinder.java",
                    "file new path": "src/java/org/apache/commons/io/FileFinder.java",
                    "full name": "src.java.org.apache.commons.io.FileFinder.find"
                },
                {
                    "function name": "handleStart",
                    "function params": [
                        "startDirectory",
                        "results"
                    ],
                    "file name": "FileFinder.java",
                    "file old path": "src/java/org/apache/commons/io/FileFinder.java",
                    "file new path": "src/java/org/apache/commons/io/FileFinder.java",
                    "full name": "src.java.org.apache.commons.io.FileFinder.handleStart"
                }
            ],
            "date": "2006-07-23"
        },
        {
            "commit_id": 345,
            "hash": "8fc87cae153493e041856c83d253d9f418dc7b15",
            "commit_summary": "Create DirectoryWalker by extracting from FileFinder\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@424750 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileFinder.java"
            ],
            "functions": [
                {
                    "function name": "handleRestricted",
                    "function params": [
                        "directory"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleRestricted"
                },
                {
                    "function name": "handleDirectoryEnd",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleDirectoryEnd"
                },
                {
                    "function name": "DirectoryWalker",
                    "function params": [
                        "filter",
                        "depthLimit"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.DirectoryWalker"
                },
                {
                    "function name": "handleDirectoryStart",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleDirectoryStart"
                },
                {
                    "function name": "handleStart",
                    "function params": [
                        "startDirectory",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleStart"
                },
                {
                    "function name": "walk",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.walk"
                },
                {
                    "function name": "handleFile",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleFile"
                },
                {
                    "function name": "walk",
                    "function params": [
                        "startDirectory"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.walk"
                },
                {
                    "function name": "handleEnd",
                    "function params": [
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleEnd"
                },
                {
                    "function name": "FileFinder",
                    "function params": [
                        "filter",
                        "depthLimit"
                    ],
                    "file name": "FileFinder.java",
                    "file old path": "src/java/org/apache/commons/io/FileFinder.java",
                    "file new path": "src/java/org/apache/commons/io/FileFinder.java",
                    "full name": "src.java.org.apache.commons.io.FileFinder.FileFinder"
                },
                {
                    "function name": "FileFinder",
                    "function params": [
                        "depthLimit"
                    ],
                    "file name": "FileFinder.java",
                    "file old path": "src/java/org/apache/commons/io/FileFinder.java",
                    "file new path": "src/java/org/apache/commons/io/FileFinder.java",
                    "full name": "src.java.org.apache.commons.io.FileFinder.FileFinder"
                },
                {
                    "function name": "FileFinder",
                    "function params": [
                        "filter"
                    ],
                    "file name": "FileFinder.java",
                    "file old path": "src/java/org/apache/commons/io/FileFinder.java",
                    "file new path": "src/java/org/apache/commons/io/FileFinder.java",
                    "full name": "src.java.org.apache.commons.io.FileFinder.FileFinder"
                },
                {
                    "function name": "find",
                    "function params": [
                        "startDirectory"
                    ],
                    "file name": "FileFinder.java",
                    "file old path": "src/java/org/apache/commons/io/FileFinder.java",
                    "file new path": "src/java/org/apache/commons/io/FileFinder.java",
                    "full name": "src.java.org.apache.commons.io.FileFinder.find"
                },
                {
                    "function name": "FileFinder",
                    "function params": [],
                    "file name": "FileFinder.java",
                    "file old path": "src/java/org/apache/commons/io/FileFinder.java",
                    "file new path": "src/java/org/apache/commons/io/FileFinder.java",
                    "full name": "src.java.org.apache.commons.io.FileFinder.FileFinder"
                }
            ],
            "date": "2006-07-23"
        },
        {
            "commit_id": 346,
            "hash": "be20099e8436405e7f8e408c9d3fdc5e4d7b1cd4",
            "commit_summary": "IO-87 - Provide a convenience mehod in FileFilterUtils to create a Size Range filter\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@424885 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "sizeFileFilter",
                    "function params": [
                        "minimumSize",
                        "maximumSize"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.sizeFileFilter"
                },
                {
                    "function name": "testSizeFilter",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter"
                }
            ],
            "date": "2006-07-24"
        },
        {
            "commit_id": 347,
            "hash": "dd2b704089381397898bdc51ca2cf22e36982d16",
            "commit_summary": "IO-88 Add isFileOlder() methods to FileUtils (counterparts to existing isFileNewer() methods)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@425111 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "isFileOlder",
                    "function params": [
                        "file",
                        "date"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.isFileOlder"
                },
                {
                    "function name": "isFileOlder",
                    "function params": [
                        "file",
                        "timeMillis"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.isFileOlder"
                },
                {
                    "function name": "isFileOlder",
                    "function params": [
                        "file",
                        "reference"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.isFileOlder"
                },
                {
                    "function name": "spin",
                    "function params": [
                        "now"
                    ],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.spin"
                },
                {
                    "function name": "testIsFileNewerOlder",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder"
                }
            ],
            "date": "2006-07-24"
        },
        {
            "commit_id": 348,
            "hash": "a840001204a39da7d1307bbe6fdc91b23ba7d4b5",
            "commit_summary": "IO-86 DirectoryWalker modifications, delete FileFinder and rename FileFinderTestCase to DirectoryWalkerTestCase:\n- Change DirectoryWalker methods to use a Collection rather than List\n- Move the handleDirectoryEnd() method within the \"process\" check\n- Change walk() method signature to take a Collection and not return anything\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@425158 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/DirectoryWalker.java"
            ],
            "functions": [
                {
                    "function name": "handleStart",
                    "function params": [
                        "startDirectory",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleStart"
                },
                {
                    "function name": "walk",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.walk"
                },
                {
                    "function name": "handleFile",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleFile"
                },
                {
                    "function name": "handleEnd",
                    "function params": [
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleEnd"
                },
                {
                    "function name": "handleDirectoryEnd",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleDirectoryEnd"
                },
                {
                    "function name": "handleEnd",
                    "function params": [
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleEnd"
                },
                {
                    "function name": "walk",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.walk"
                },
                {
                    "function name": "handleFile",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleFile"
                },
                {
                    "function name": "handleDirectoryEnd",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleDirectoryEnd"
                },
                {
                    "function name": "handleDirectoryStart",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleDirectoryStart"
                },
                {
                    "function name": "handleDirectoryStart",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleDirectoryStart"
                },
                {
                    "function name": "walk",
                    "function params": [
                        "startDirectory"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.walk"
                },
                {
                    "function name": "walk",
                    "function params": [
                        "startDirectory",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.walk"
                },
                {
                    "function name": "handleStart",
                    "function params": [
                        "startDirectory",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleStart"
                },
                {
                    "function name": "TestFileFinder",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileFinderTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder"
                },
                {
                    "function name": "TestFalseFileFinder",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileFinderTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestFalseFileFinder"
                },
                {
                    "function name": "testFilterAndLimitB",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileFinderTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitB"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileFinderTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.suite"
                },
                {
                    "function name": "testFilterAndLimitA",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileFinderTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitA"
                },
                {
                    "function name": "testFilterAndLimitD",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileFinderTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitD"
                },
                {
                    "function name": "checkContainsFiles",
                    "function params": [
                        "prefix",
                        "files",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileFinderTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles"
                },
                {
                    "function name": "testLimitToCurrent",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileFinderTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.testLimitToCurrent"
                },
                {
                    "function name": "TestFileFinder",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileFinderTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder"
                },
                {
                    "function name": "testHandleStartDirectoryFalse",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileFinderTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.testHandleStartDirectoryFalse"
                },
                {
                    "function name": "TestFalseFileFinder",
                    "function params": [
                        "filter",
                        "depthLimit"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileFinderTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestFalseFileFinder"
                },
                {
                    "function name": "testMissingStartDirectory",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileFinderTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.testMissingStartDirectory"
                },
                {
                    "function name": "DirectoryWalkerTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileFinderTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.DirectoryWalkerTestCase"
                },
                {
                    "function name": "testFilter",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileFinderTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.testFilter"
                },
                {
                    "function name": "testFilterAndLimitC",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileFinderTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitC"
                },
                {
                    "function name": "TestFileFinder",
                    "function params": [
                        "filter",
                        "depthLimit"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileFinderTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder"
                },
                {
                    "function name": "TestFileFinder",
                    "function params": [
                        "startDirectory"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileFinderTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder"
                }
            ],
            "date": "2006-07-24"
        },
        {
            "commit_id": 349,
            "hash": "69a1e7e014d4ddf5e52f9940ff42efb57d1640a3",
            "commit_summary": "IO-87 - change parameter names and javadoc to make it more explicit that the maximum/minimum values are inclusive. Also rename method to indicate its a \"range\" filter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@425240 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "sizeRangeFileFilter",
                    "function params": [
                        "minSizeInclusive",
                        "maxSizeInclusive"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.sizeRangeFileFilter"
                },
                {
                    "function name": "sizeFileFilter",
                    "function params": [
                        "minimumSize",
                        "maximumSize"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.sizeFileFilter"
                },
                {
                    "function name": "testSizeFilter",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter"
                }
            ],
            "date": "2006-07-25"
        },
        {
            "commit_id": 350,
            "hash": "8847edc67390b817f611b22f9c211c423983d3d4",
            "commit_summary": "Fixing the failed tests on the vmbuild machine. Rather than trying to pause for a second and hoping that means the file's will have different timestamps - the new code just sits and creates the new file repeatedly until it has a different timestamp. A pause of a second means that repeatedly should usually be a very small number of times - such as one. Also changed the code so the long millisecond variable is the date's getTime method and not a different time all together. The previous one irritated my sense of aesthetics :)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@433162 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testIsFileNewerOlder",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder"
                },
                {
                    "function name": "testAgeFilter",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter"
                }
            ],
            "date": "2006-08-21"
        },
        {
            "commit_id": 351,
            "hash": "eaa8e0c698f694b7e5fdded5dbb9024c8cf15c4e",
            "commit_summary": "IO-83 - Fix freeSpace for AIX and HP-UX\ncode from Magnus Grimsell, also from James Urie\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@436964 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileSystemUtils.java",
                "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "if",
                    "function params": [
                        "1"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.if"
                },
                {
                    "function name": "freeSpaceOS",
                    "function params": [
                        "path",
                        "os",
                        "kb"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.freeSpaceOS"
                },
                {
                    "function name": "if",
                    "function params": [
                        "1"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.if"
                },
                {
                    "function name": "freeSpaceUnix",
                    "function params": [
                        "path",
                        "kb",
                        "posix"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.freeSpaceUnix"
                },
                {
                    "function name": "if",
                    "function params": [
                        "1"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.if"
                },
                {
                    "function name": "freeSpaceUnix",
                    "function params": [
                        "path",
                        "kb"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.freeSpaceUnix"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_InvalidResponse2",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse2"
                },
                {
                    "function name": "testGetFreeSpace_String",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_LongResponseKb",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_LongResponseKb"
                },
                {
                    "function name": "testGetFreeSpaceOS_String_Unix",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Unix"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_EmptyPath",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_EmptyPath"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_InvalidResponse1",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse1"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_LongResponse",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_LongResponse"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_EmptyResponse",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_EmptyResponse"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_InvalidResponse3",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse3"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_NormalResponse",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponse"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_NormalResponseKb",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKb"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_InvalidResponse4",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse4"
                }
            ],
            "date": "2006-08-25"
        },
        {
            "commit_id": 352,
            "hash": "0a03609ddc6380dd7c9053eb8cb04072baa476a1",
            "commit_summary": "IO-90 - Fix freeSpace to avoid infinite loops and other errors\nincludes some code from Thomas Ledoux\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437031 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileSystemUtils.java",
                "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "freeSpaceWindows",
                    "function params": [
                        "path"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.freeSpaceWindows"
                },
                {
                    "function name": "openProcessStream",
                    "function params": [
                        "proc"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.openProcessStream"
                },
                {
                    "function name": "openProcessStream",
                    "function params": [
                        "params"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.openProcessStream"
                },
                {
                    "function name": "freeSpaceUnix",
                    "function params": [
                        "path",
                        "kb",
                        "posix"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.freeSpaceUnix"
                },
                {
                    "function name": "parseBytes",
                    "function params": [
                        "freeSpace",
                        "path"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.parseBytes"
                },
                {
                    "function name": "performCommand",
                    "function params": [
                        "cmdAttribs",
                        "max"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.performCommand"
                },
                {
                    "function name": "parseDir",
                    "function params": [
                        "line",
                        "path"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.parseDir"
                },
                {
                    "function name": "openProcess",
                    "function params": [
                        "cmdAttribs"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.openProcess"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_NormalResponseKb",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKb"
                },
                {
                    "function name": "testGetFreeSpaceWindows_String_EmptyResponse",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyResponse"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_InvalidResponse2",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse2"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_LongResponseKb",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_LongResponseKb"
                },
                {
                    "function name": "testGetFreeSpaceWindows_String_EmptyMultiLineResponse",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyMultiLineResponse"
                },
                {
                    "function name": "MockFileSystemUtils",
                    "function params": [
                        "exitCode",
                        "lines",
                        "cmd"
                    ],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils"
                },
                {
                    "function name": "testGetFreeSpaceWindows_String_ParseCommaFormatBytes",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_ParseCommaFormatBytes"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_EmptyPath",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_EmptyPath"
                },
                {
                    "function name": "testGetFreeSpaceWindows_String_NormalResponse",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_NormalResponse"
                },
                {
                    "function name": "MockFileSystemUtils",
                    "function params": [
                        "exitCode",
                        "lines"
                    ],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils"
                },
                {
                    "function name": "testGetFreeSpaceWindows_String_EmptyPath",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyPath"
                },
                {
                    "function name": "MockFileSystemUtils",
                    "function params": [
                        "params"
                    ],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_InvalidResponse1",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse1"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_LongResponse",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_LongResponse"
                },
                {
                    "function name": "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_NoSuchDirectoryResponse"
                },
                {
                    "function name": "testGetFreeSpaceWindows_String_StripDrive",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_StripDrive"
                },
                {
                    "function name": "MockFileSystemUtils",
                    "function params": [
                        "p"
                    ],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_NormalResponse",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponse"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_InvalidResponse3",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse3"
                },
                {
                    "function name": "testGetFreeSpaceWindows_String_InvalidTextResponse",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_InvalidTextResponse"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_EmptyResponse",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_EmptyResponse"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_InvalidResponse4",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse4"
                }
            ],
            "date": "2006-08-26"
        },
        {
            "commit_id": 353,
            "hash": "4b1b80c2cc232fb6e70a4a6fe7058180e9ab2728",
            "commit_summary": "Fixing the ASF copyright and placing it in the NOTICE file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437567 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/CopyUtils.java",
                "src/java/org/apache/commons/io/DirectoryWalker.java",
                "src/java/org/apache/commons/io/EndianUtils.java",
                "src/java/org/apache/commons/io/FileCleaner.java",
                "src/java/org/apache/commons/io/FileSystemUtils.java",
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/java/org/apache/commons/io/FilenameUtils.java",
                "src/java/org/apache/commons/io/HexDump.java",
                "src/java/org/apache/commons/io/IOCase.java",
                "src/java/org/apache/commons/io/IOUtils.java",
                "src/java/org/apache/commons/io/LineIterator.java",
                "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/CanReadFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/CanWriteFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/ConditionalFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/EmptyFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/FileFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "src/java/org/apache/commons/io/filefilter/HiddenFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/IOFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/SizeFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "src/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                "src/java/org/apache/commons/io/input/CountingInputStream.java",
                "src/java/org/apache/commons/io/input/DemuxInputStream.java",
                "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                "src/java/org/apache/commons/io/input/ProxyReader.java",
                "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "src/java/org/apache/commons/io/output/CountingOutputStream.java",
                "src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "src/java/org/apache/commons/io/output/DemuxOutputStream.java",
                "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                "src/java/org/apache/commons/io/output/NullOutputStream.java",
                "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                "src/java/org/apache/commons/io/output/ProxyWriter.java",
                "src/java/org/apache/commons/io/output/TeeOutputStream.java",
                "src/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                "src/test/org/apache/commons/io/AllIOTestSuite.java",
                "src/test/org/apache/commons/io/CopyUtilsTest.java",
                "src/test/org/apache/commons/io/DemuxTestCase.java",
                "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                "src/test/org/apache/commons/io/EndianUtilsTest.java",
                "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "src/test/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                "src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                "src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "src/test/org/apache/commons/io/FileUtilsWaitForTestCase.java",
                "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                "src/test/org/apache/commons/io/HexDumpTest.java",
                "src/test/org/apache/commons/io/IOCaseTestCase.java",
                "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                "src/test/org/apache/commons/io/PackageTestSuite.java",
                "src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                "src/test/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java",
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "src/test/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                "src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                "src/test/org/apache/commons/io/filefilter/PackageTestSuite.java",
                "src/test/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java",
                "src/test/org/apache/commons/io/input/CountingInputStreamTest.java",
                "src/test/org/apache/commons/io/input/PackageTestSuite.java",
                "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                "src/test/org/apache/commons/io/output/CountingOutputStreamTest.java",
                "src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                "src/test/org/apache/commons/io/output/NullOutputStreamTest.java",
                "src/test/org/apache/commons/io/output/PackageTestSuite.java",
                "src/test/org/apache/commons/io/output/TeeOutputStreamTest.java",
                "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                "src/test/org/apache/commons/io/testtools/YellOnCloseInputStream.java",
                "src/test/org/apache/commons/io/testtools/YellOnFlushAndCloseOutputStream.java"
            ],
            "functions": [],
            "date": "2006-08-28"
        },
        {
            "commit_id": 354,
            "hash": "93910e80b41dfbecca566bda13da7601262f3730",
            "commit_summary": "Apply single license layout to all java files\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@437680 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/CopyUtils.java",
                "src/java/org/apache/commons/io/EndianUtils.java",
                "src/java/org/apache/commons/io/FileCleaner.java",
                "src/java/org/apache/commons/io/FileSystemUtils.java",
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/java/org/apache/commons/io/FilenameUtils.java",
                "src/java/org/apache/commons/io/HexDump.java",
                "src/java/org/apache/commons/io/IOCase.java",
                "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "src/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                "src/test/org/apache/commons/io/DemuxTestCase.java",
                "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                "src/test/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                "src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                "src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                "src/test/org/apache/commons/io/PackageTestSuite.java",
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "src/test/org/apache/commons/io/filefilter/PackageTestSuite.java",
                "src/test/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java",
                "src/test/org/apache/commons/io/input/CountingInputStreamTest.java",
                "src/test/org/apache/commons/io/input/PackageTestSuite.java",
                "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                "src/test/org/apache/commons/io/output/CountingOutputStreamTest.java",
                "src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                "src/test/org/apache/commons/io/output/NullOutputStreamTest.java",
                "src/test/org/apache/commons/io/output/PackageTestSuite.java",
                "src/test/org/apache/commons/io/output/TeeOutputStreamTest.java",
                "src/test/org/apache/commons/io/testtools/YellOnCloseInputStream.java",
                "src/test/org/apache/commons/io/testtools/YellOnFlushAndCloseOutputStream.java"
            ],
            "functions": [],
            "date": "2006-08-28"
        },
        {
            "commit_id": 355,
            "hash": "01caaa9ac072f932a83ff894e63dade9df97c465",
            "commit_summary": "IO-91 - FileSystemUtils.freeSpace deprecated, replaced by freeSpaceKb\nDocument freeSpace not working with SunOS 5\ninfo from Magnus Grimsell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@438209 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileSystemUtils.java",
                "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_NormalResponseLinux",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseLinux"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_NormalResponseKbLinux",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKbLinux"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_NormalResponseFreeBSD",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseFreeBSD"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_NormalResponseKbSolaris",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKbSolaris"
                }
            ],
            "date": "2006-08-29"
        },
        {
            "commit_id": 356,
            "hash": "4565a3c49d005a72d91e91fb837d51eaa72d1c02",
            "commit_summary": "Separate handleDirectory from handleDirectoryStart\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@438218 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/DirectoryWalker.java",
                "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java"
            ],
            "functions": [
                {
                    "function name": "handleRestricted",
                    "function params": [
                        "directory"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleRestricted"
                },
                {
                    "function name": "walk",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.walk"
                },
                {
                    "function name": "handleDirectory",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleDirectory"
                },
                {
                    "function name": "handleDirectoryStart",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleDirectoryStart"
                },
                {
                    "function name": "handleRestricted",
                    "function params": [
                        "directory",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleRestricted"
                },
                {
                    "function name": "TestFalseFileFinder",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestFalseFileFinder"
                }
            ],
            "date": "2006-08-29"
        },
        {
            "commit_id": 357,
            "hash": "100f2a5f78a8292e3cce83771c12bd0de47573b1",
            "commit_summary": "IO-54 - Add FileUtils.checksum / FileUtils.checksumCRC32 to simplify calculating checksums\nfrom Emmanuel Bourg\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@438281 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "checksumCRC32",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.checksumCRC32"
                },
                {
                    "function name": "checksum",
                    "function params": [
                        "file",
                        "checksum"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.checksum"
                },
                {
                    "function name": "testChecksum",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testChecksum"
                },
                {
                    "function name": "testChecksumDouble",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testChecksumDouble"
                },
                {
                    "function name": "testChecksumCRC32",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testChecksumCRC32"
                },
                {
                    "function name": "testChecksumOnNullFile",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testChecksumOnNullFile"
                },
                {
                    "function name": "testChecksumOnNullChecksum",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testChecksumOnNullChecksum"
                },
                {
                    "function name": "testChecksumOnDirectory",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testChecksumOnDirectory"
                }
            ],
            "date": "2006-08-29"
        },
        {
            "commit_id": 358,
            "hash": "dc5bb1187f027d3b9cdc70d3517c442d7b4c45ef",
            "commit_summary": "IO-56,IO-70 - FileDeleteStrategy / FileCleaner\n- FileDeleteStrategy is a strategy for handling file deletion and can be used as a calback in FileCleaner\n- Together these allow FileCleaner to do a forceDelete to kill directories and provide hooks for secure delete\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@439102 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileCleaner.java",
                "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                "src/test/org/apache/commons/io/PackageTestSuite.java"
            ],
            "functions": [
                {
                    "function name": "Tracker",
                    "function params": [
                        "path",
                        "marker",
                        "queue"
                    ],
                    "file name": "FileCleaner.java",
                    "file old path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "file new path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaner.Tracker"
                },
                {
                    "function name": "track",
                    "function params": [
                        "file",
                        "marker",
                        "deleteStrategy"
                    ],
                    "file name": "FileCleaner.java",
                    "file old path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "file new path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaner.track"
                },
                {
                    "function name": "track",
                    "function params": [
                        "file",
                        "marker"
                    ],
                    "file name": "FileCleaner.java",
                    "file old path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "file new path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaner.track"
                },
                {
                    "function name": "Tracker",
                    "function params": [],
                    "file name": "FileCleaner.java",
                    "file old path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "file new path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaner.Tracker"
                },
                {
                    "function name": "track",
                    "function params": [
                        "path",
                        "marker"
                    ],
                    "file name": "FileCleaner.java",
                    "file old path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "file new path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaner.track"
                },
                {
                    "function name": "Tracker",
                    "function params": [
                        "path",
                        "deleteStrategy",
                        "marker",
                        "queue"
                    ],
                    "file name": "FileCleaner.java",
                    "file old path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "file new path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaner.Tracker"
                },
                {
                    "function name": "Tracker",
                    "function params": [
                        "file",
                        "marker",
                        "queue"
                    ],
                    "file name": "FileCleaner.java",
                    "file old path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "file new path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaner.Tracker"
                },
                {
                    "function name": "track",
                    "function params": [
                        "path",
                        "marker",
                        "deleteStrategy"
                    ],
                    "file name": "FileCleaner.java",
                    "file old path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "file new path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaner.track"
                },
                {
                    "function name": "ForceFileDeleteStrategy",
                    "function params": [
                        "fileToDelete"
                    ],
                    "file name": "FileDeleteStrategy.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileDeleteStrategy.java",
                    "full name": "src.java.org.apache.commons.io.FileDeleteStrategy.ForceFileDeleteStrategy"
                },
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "FileDeleteStrategy.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileDeleteStrategy.java",
                    "full name": "src.java.org.apache.commons.io.FileDeleteStrategy.toString"
                },
                {
                    "function name": "delete",
                    "function params": [
                        "fileToDelete"
                    ],
                    "file name": "FileDeleteStrategy.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileDeleteStrategy.java",
                    "full name": "src.java.org.apache.commons.io.FileDeleteStrategy.delete"
                },
                {
                    "function name": "deleteQuietly",
                    "function params": [
                        "fileToDelete"
                    ],
                    "file name": "FileDeleteStrategy.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileDeleteStrategy.java",
                    "full name": "src.java.org.apache.commons.io.FileDeleteStrategy.deleteQuietly"
                },
                {
                    "function name": "ForceFileDeleteStrategy",
                    "function params": [],
                    "file name": "FileDeleteStrategy.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileDeleteStrategy.java",
                    "full name": "src.java.org.apache.commons.io.FileDeleteStrategy.ForceFileDeleteStrategy"
                },
                {
                    "function name": "doDelete",
                    "function params": [
                        "fileToDelete"
                    ],
                    "file name": "FileDeleteStrategy.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileDeleteStrategy.java",
                    "full name": "src.java.org.apache.commons.io.FileDeleteStrategy.doDelete"
                },
                {
                    "function name": "FileDeleteStrategy",
                    "function params": [
                        "name"
                    ],
                    "file name": "FileDeleteStrategy.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileDeleteStrategy.java",
                    "full name": "src.java.org.apache.commons.io.FileDeleteStrategy.FileDeleteStrategy"
                },
                {
                    "function name": "testFileCleanerDirectory_NullStrategy",
                    "function params": [],
                    "file name": "FileCleanerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleanerTestCase.testFileCleanerDirectory_NullStrategy"
                },
                {
                    "function name": "testFileCleanerNull",
                    "function params": [],
                    "file name": "FileCleanerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleanerTestCase.testFileCleanerNull"
                },
                {
                    "function name": "testFileCleanerDirectory_ForceStrategy",
                    "function params": [],
                    "file name": "FileCleanerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleanerTestCase.testFileCleanerDirectory_ForceStrategy"
                },
                {
                    "function name": "testFileCleanerFile",
                    "function params": [],
                    "file name": "FileCleanerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleanerTestCase.testFileCleanerFile"
                },
                {
                    "function name": "testFileCleanerDirectory",
                    "function params": [],
                    "file name": "FileCleanerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleanerTestCase.testFileCleanerDirectory"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "PackageTestSuite.java",
                    "file old path": "src/test/org/apache/commons/io/PackageTestSuite.java",
                    "file new path": "src/test/org/apache/commons/io/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.PackageTestSuite.suite"
                }
            ],
            "date": "2006-08-31"
        },
        {
            "commit_id": 359,
            "hash": "cd338efe415aefde918981259317e4fc572c8805",
            "commit_summary": "Correct example in the javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@441487 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/DirectoryWalker.java"
            ],
            "functions": [],
            "date": "2006-09-08"
        },
        {
            "commit_id": 360,
            "hash": "aa415ec21d7ea24e7c18f18f567ec0ed7d95187e",
            "commit_summary": "javadoc changes - mostly checkstyle\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@448799 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/DirectoryWalker.java",
                "src/java/org/apache/commons/io/FileDeleteStrategy.java",
                "src/java/org/apache/commons/io/FileSystemUtils.java",
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [],
            "date": "2006-09-22"
        },
        {
            "commit_id": 361,
            "hash": "b4b470096a39bfa51d33782f442505383ecc5e79",
            "commit_summary": "IO-93 - FileSystemUtils - Fixed resource leak leading to 'Too many open files' error\n- Previously did not destroy Process instances (as JDK Javadoc is so poor)\n- http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4801027\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@453889 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileSystemUtils.java",
                "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "performCommand",
                    "function params": [
                        "cmdAttribs",
                        "max"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.performCommand"
                },
                {
                    "function name": "MockFileSystemUtils",
                    "function params": [
                        "params"
                    ],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils"
                },
                {
                    "function name": "MockFileSystemUtils",
                    "function params": [
                        "exitCode",
                        "lines",
                        "cmd"
                    ],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils"
                }
            ],
            "date": "2006-10-07"
        },
        {
            "commit_id": 362,
            "hash": "83af1cb1fe4a4a8f6af79fe8c44258d95e061e31",
            "commit_summary": "IO-84 - IOUtils.copy - Comment about result byte/char count being limited to an int, thus being inacurate for large streams\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@453893 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/IOUtils.java"
            ],
            "functions": [],
            "date": "2006-10-07"
        },
        {
            "commit_id": 363,
            "hash": "216adbe7980b6c40a73c2840d632f1d31b577a8b",
            "commit_summary": "Fix id tag\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@453895 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileDeleteStrategy.java"
            ],
            "functions": [],
            "date": "2006-10-07"
        },
        {
            "commit_id": 364,
            "hash": "0ca6597108100533af2f83c84f6a2f20a0fc9e23",
            "commit_summary": "Fix id tag\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@453896 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileDeleteStrategy.java"
            ],
            "functions": [],
            "date": "2006-10-07"
        },
        {
            "commit_id": 365,
            "hash": "b359eb3ecaee360a987fa089c44214dbfd4ba4e1",
            "commit_summary": "Add tests for FileDeleteStrategy\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@453903 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileDeleteStrategy.java",
                "src/test/org/apache/commons/io/PackageTestSuite.java"
            ],
            "functions": [
                {
                    "function name": "delete",
                    "function params": [
                        "fileToDelete"
                    ],
                    "file name": "FileDeleteStrategy.java",
                    "file old path": "src/java/org/apache/commons/io/FileDeleteStrategy.java",
                    "file new path": "src/java/org/apache/commons/io/FileDeleteStrategy.java",
                    "full name": "src.java.org.apache.commons.io.FileDeleteStrategy.delete"
                },
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "FileDeleteStrategy.java",
                    "file old path": "src/java/org/apache/commons/io/FileDeleteStrategy.java",
                    "file new path": "src/java/org/apache/commons/io/FileDeleteStrategy.java",
                    "full name": "src.java.org.apache.commons.io.FileDeleteStrategy.toString"
                },
                {
                    "function name": "deleteQuietly",
                    "function params": [
                        "fileToDelete"
                    ],
                    "file name": "FileDeleteStrategy.java",
                    "file old path": "src/java/org/apache/commons/io/FileDeleteStrategy.java",
                    "file new path": "src/java/org/apache/commons/io/FileDeleteStrategy.java",
                    "full name": "src.java.org.apache.commons.io.FileDeleteStrategy.deleteQuietly"
                },
                {
                    "function name": "ForceFileDeleteStrategy",
                    "function params": [
                        "fileToDelete"
                    ],
                    "file name": "FileDeleteStrategy.java",
                    "file old path": "src/java/org/apache/commons/io/FileDeleteStrategy.java",
                    "file new path": "src/java/org/apache/commons/io/FileDeleteStrategy.java",
                    "full name": "src.java.org.apache.commons.io.FileDeleteStrategy.ForceFileDeleteStrategy"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "PackageTestSuite.java",
                    "file old path": "src/test/org/apache/commons/io/PackageTestSuite.java",
                    "file new path": "src/test/org/apache/commons/io/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.PackageTestSuite.suite"
                }
            ],
            "date": "2006-10-07"
        },
        {
            "commit_id": 366,
            "hash": "e3ca03eab197beec8072c3bc728206320369b3bc",
            "commit_summary": "Add tests for FileDeleteStrategy\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@453906 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "FileDeleteStrategyTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileDeleteStrategyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileDeleteStrategyTestCase.setUp"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "FileDeleteStrategyTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileDeleteStrategyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileDeleteStrategyTestCase.suite"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "FileDeleteStrategyTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileDeleteStrategyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileDeleteStrategyTestCase.tearDown"
                },
                {
                    "function name": "testDeleteQuietlyNormal",
                    "function params": [],
                    "file name": "FileDeleteStrategyTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileDeleteStrategyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteQuietlyNormal"
                },
                {
                    "function name": "testDeleteNull",
                    "function params": [],
                    "file name": "FileDeleteStrategyTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileDeleteStrategyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteNull"
                },
                {
                    "function name": "FileDeleteStrategyTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "FileDeleteStrategyTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileDeleteStrategyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileDeleteStrategyTestCase.FileDeleteStrategyTestCase"
                },
                {
                    "function name": "testToString",
                    "function params": [],
                    "file name": "FileDeleteStrategyTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileDeleteStrategyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileDeleteStrategyTestCase.testToString"
                },
                {
                    "function name": "testDeleteNormal",
                    "function params": [],
                    "file name": "FileDeleteStrategyTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileDeleteStrategyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteNormal"
                },
                {
                    "function name": "testDeleteForce",
                    "function params": [],
                    "file name": "FileDeleteStrategyTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileDeleteStrategyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteForce"
                }
            ],
            "date": "2006-10-07"
        },
        {
            "commit_id": 367,
            "hash": "d4aa877eb38d603ab3656a012c156edabb1be1f3",
            "commit_summary": "Add cancellation support to DirectoryWalker\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@453928 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/DirectoryWalker.java",
                "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                "src/test/org/apache/commons/io/PackageTestSuite.java"
            ],
            "functions": [
                {
                    "function name": "handleDirectory",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleDirectory"
                },
                {
                    "function name": "walk",
                    "function params": [
                        "startDirectory",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.walk"
                },
                {
                    "function name": "walk",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.walk"
                },
                {
                    "function name": "handleRestricted",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleRestricted"
                },
                {
                    "function name": "handleCancelled",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleCancelled"
                },
                {
                    "function name": "isCancelled",
                    "function params": [],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.isCancelled"
                },
                {
                    "function name": "DirectoryWalker",
                    "function params": [],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.DirectoryWalker"
                },
                {
                    "function name": "handleRestricted",
                    "function params": [
                        "directory",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleRestricted"
                },
                {
                    "function name": "TestCancelWalker",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker"
                },
                {
                    "function name": "TestCancelWalker",
                    "function params": [
                        "count",
                        "accept"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker"
                },
                {
                    "function name": "testMissingStartDirectory",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.testMissingStartDirectory"
                },
                {
                    "function name": "TestCancelWalker",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker"
                },
                {
                    "function name": "TestCancelWalker",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker"
                },
                {
                    "function name": "testFilterAndLimitC",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitC"
                },
                {
                    "function name": "TestFileFinder",
                    "function params": [
                        "startDirectory"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder"
                },
                {
                    "function name": "TestCancelWalker",
                    "function params": [
                        "startDirectory"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker"
                },
                {
                    "function name": "TestCancelWalker",
                    "function params": [
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker"
                },
                {
                    "function name": "testCancel",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.testCancel"
                },
                {
                    "function name": "TestCancelWalker",
                    "function params": [
                        "directory",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker"
                },
                {
                    "function name": "TestCancelWalker",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker"
                },
                {
                    "function name": "TestCancelWalker",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "PackageTestSuite.java",
                    "file old path": "src/test/org/apache/commons/io/PackageTestSuite.java",
                    "file new path": "src/test/org/apache/commons/io/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.PackageTestSuite.suite"
                }
            ],
            "date": "2006-10-07"
        },
        {
            "commit_id": 368,
            "hash": "f63be2b6e74a8e8e6e7f721bd563850ec292aad3",
            "commit_summary": "Undeprecating - I deprecated these classes by mistake and not the ones in the source library that they came from\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@454182 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/CountingInputStream.java",
                "src/java/org/apache/commons/io/output/CountingOutputStream.java"
            ],
            "functions": [],
            "date": "2006-10-08"
        },
        {
            "commit_id": 369,
            "hash": "1cd7e93ab1fbd610a3b552d8295d8e565adeecb2",
            "commit_summary": "Fix for IO-84 - Files over 2GB will result in an incorrect count being returned by the getCount() and resetCount() methods (as they return an integer). These methods have been deprecated and new getByteCount() and resetByteCount() methods have been added which return a long.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@454217 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/CountingInputStream.java",
                "src/java/org/apache/commons/io/output/CountingOutputStream.java"
            ],
            "functions": [
                {
                    "function name": "resetCount",
                    "function params": [],
                    "file name": "CountingInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.CountingInputStream.resetCount"
                },
                {
                    "function name": "getCount",
                    "function params": [],
                    "file name": "CountingInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.CountingInputStream.getCount"
                },
                {
                    "function name": "resetByteCount",
                    "function params": [],
                    "file name": "CountingInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.CountingInputStream.resetByteCount"
                },
                {
                    "function name": "getByteCount",
                    "function params": [],
                    "file name": "CountingInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.CountingInputStream.getByteCount"
                },
                {
                    "function name": "getCount",
                    "function params": [],
                    "file name": "CountingOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/CountingOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/CountingOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.CountingOutputStream.getCount"
                },
                {
                    "function name": "resetCount",
                    "function params": [],
                    "file name": "CountingOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/CountingOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/CountingOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.CountingOutputStream.resetCount"
                },
                {
                    "function name": "resetByteCount",
                    "function params": [],
                    "file name": "CountingOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/CountingOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/CountingOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.CountingOutputStream.resetByteCount"
                },
                {
                    "function name": "getByteCount",
                    "function params": [],
                    "file name": "CountingOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/CountingOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/CountingOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.CountingOutputStream.getByteCount"
                }
            ],
            "date": "2006-10-08"
        },
        {
            "commit_id": 370,
            "hash": "95d3fa1bcd249c4d8058e37198f55bdaaf3e8e0e",
            "commit_summary": "IO-94 - add new MockInputStream\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@454222 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "getSize",
                    "function params": [],
                    "file name": "MockInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/MockInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.MockInputStream.getSize"
                },
                {
                    "function name": "skip",
                    "function params": [
                        "numberOfBytes"
                    ],
                    "file name": "MockInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/MockInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.MockInputStream.skip"
                },
                {
                    "function name": "reset",
                    "function params": [],
                    "file name": "MockInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/MockInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.MockInputStream.reset"
                },
                {
                    "function name": "MockInputStream",
                    "function params": [
                        "size"
                    ],
                    "file name": "MockInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/MockInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.MockInputStream.MockInputStream"
                },
                {
                    "function name": "doEndOfFile",
                    "function params": [],
                    "file name": "MockInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/MockInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.MockInputStream.doEndOfFile"
                },
                {
                    "function name": "processBytes",
                    "function params": [
                        "bytes",
                        "offset",
                        "length"
                    ],
                    "file name": "MockInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/MockInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.MockInputStream.processBytes"
                },
                {
                    "function name": "MockInputStream",
                    "function params": [
                        "size",
                        "markSupported",
                        "throwEofException"
                    ],
                    "file name": "MockInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/MockInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.MockInputStream.MockInputStream"
                },
                {
                    "function name": "read",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "MockInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/MockInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.MockInputStream.read"
                },
                {
                    "function name": "read",
                    "function params": [],
                    "file name": "MockInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/MockInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.MockInputStream.read"
                },
                {
                    "function name": "mark",
                    "function params": [
                        "readlimit"
                    ],
                    "file name": "MockInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/MockInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.MockInputStream.mark"
                },
                {
                    "function name": "available",
                    "function params": [],
                    "file name": "MockInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/MockInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.MockInputStream.available"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "MockInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/MockInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.MockInputStream.close"
                },
                {
                    "function name": "read",
                    "function params": [
                        "bytes",
                        "offset",
                        "length"
                    ],
                    "file name": "MockInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/MockInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.MockInputStream.read"
                },
                {
                    "function name": "getPosition",
                    "function params": [],
                    "file name": "MockInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/MockInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.MockInputStream.getPosition"
                },
                {
                    "function name": "markSupported",
                    "function params": [],
                    "file name": "MockInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/MockInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.MockInputStream.markSupported"
                },
                {
                    "function name": "processByte",
                    "function params": [],
                    "file name": "MockInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/MockInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.MockInputStream.processByte"
                },
                {
                    "function name": "testMarkAndReset",
                    "function params": [],
                    "file name": "MockInputStreamTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/MockInputStreamTestCase.java",
                    "full name": "src.test.org.apache.commons.io.input.MockInputStreamTestCase.testMarkAndReset"
                },
                {
                    "function name": "testMarkNotSupported",
                    "function params": [],
                    "file name": "MockInputStreamTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/MockInputStreamTestCase.java",
                    "full name": "src.test.org.apache.commons.io.input.MockInputStreamTestCase.testMarkNotSupported"
                },
                {
                    "function name": "TestMockInputStream",
                    "function params": [
                        "size"
                    ],
                    "file name": "MockInputStreamTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/MockInputStreamTestCase.java",
                    "full name": "src.test.org.apache.commons.io.input.MockInputStreamTestCase.TestMockInputStream"
                },
                {
                    "function name": "TestMockInputStream",
                    "function params": [],
                    "file name": "MockInputStreamTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/MockInputStreamTestCase.java",
                    "full name": "src.test.org.apache.commons.io.input.MockInputStreamTestCase.TestMockInputStream"
                },
                {
                    "function name": "MockInputStreamTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "MockInputStreamTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/MockInputStreamTestCase.java",
                    "full name": "src.test.org.apache.commons.io.input.MockInputStreamTestCase.MockInputStreamTestCase"
                },
                {
                    "function name": "testReadByteArray",
                    "function params": [],
                    "file name": "MockInputStreamTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/MockInputStreamTestCase.java",
                    "full name": "src.test.org.apache.commons.io.input.MockInputStreamTestCase.testReadByteArray"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "MockInputStreamTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/MockInputStreamTestCase.java",
                    "full name": "src.test.org.apache.commons.io.input.MockInputStreamTestCase.tearDown"
                },
                {
                    "function name": "testSkip",
                    "function params": [],
                    "file name": "MockInputStreamTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/MockInputStreamTestCase.java",
                    "full name": "src.test.org.apache.commons.io.input.MockInputStreamTestCase.testSkip"
                },
                {
                    "function name": "TestMockInputStream",
                    "function params": [
                        "bytes",
                        "offset",
                        "length"
                    ],
                    "file name": "MockInputStreamTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/MockInputStreamTestCase.java",
                    "full name": "src.test.org.apache.commons.io.input.MockInputStreamTestCase.TestMockInputStream"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "MockInputStreamTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/MockInputStreamTestCase.java",
                    "full name": "src.test.org.apache.commons.io.input.MockInputStreamTestCase.setUp"
                },
                {
                    "function name": "testEOFException",
                    "function params": [],
                    "file name": "MockInputStreamTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/MockInputStreamTestCase.java",
                    "full name": "src.test.org.apache.commons.io.input.MockInputStreamTestCase.testEOFException"
                },
                {
                    "function name": "testRead",
                    "function params": [],
                    "file name": "MockInputStreamTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/MockInputStreamTestCase.java",
                    "full name": "src.test.org.apache.commons.io.input.MockInputStreamTestCase.testRead"
                },
                {
                    "function name": "TestMockInputStream",
                    "function params": [
                        "size",
                        "markSupported",
                        "throwEofException"
                    ],
                    "file name": "MockInputStreamTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/MockInputStreamTestCase.java",
                    "full name": "src.test.org.apache.commons.io.input.MockInputStreamTestCase.TestMockInputStream"
                }
            ],
            "date": "2006-10-08"
        },
        {
            "commit_id": 371,
            "hash": "166fc85e84adc7b6d390563f922a37aff595a121",
            "commit_summary": "IO-95 Add NullWriter implementation\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@454247 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "write",
                    "function params": [
                        "chr"
                    ],
                    "file name": "NullWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/NullWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.NullWriter.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "chr",
                        "st",
                        "end"
                    ],
                    "file name": "NullWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/NullWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.NullWriter.write"
                },
                {
                    "function name": "NullWriter",
                    "function params": [],
                    "file name": "NullWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/NullWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.NullWriter.NullWriter"
                },
                {
                    "function name": "flush",
                    "function params": [],
                    "file name": "NullWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/NullWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.NullWriter.flush"
                },
                {
                    "function name": "write",
                    "function params": [
                        "idx"
                    ],
                    "file name": "NullWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/NullWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.NullWriter.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "str",
                        "st",
                        "end"
                    ],
                    "file name": "NullWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/NullWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.NullWriter.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "str"
                    ],
                    "file name": "NullWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/NullWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.NullWriter.write"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "NullWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/NullWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.NullWriter.close"
                },
                {
                    "function name": "NullWriterTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "NullWriterTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/NullWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.NullWriterTest.NullWriterTest"
                },
                {
                    "function name": "testNull",
                    "function params": [],
                    "file name": "NullWriterTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/NullWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.NullWriterTest.testNull"
                }
            ],
            "date": "2006-10-09"
        },
        {
            "commit_id": 372,
            "hash": "8ff5b796fa64a480a92ff2cade76d72ac0beabe4",
            "commit_summary": "IO-94 - New MockReader implementation\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@454248 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "skip",
                    "function params": [
                        "numberOfChars"
                    ],
                    "file name": "MockReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/MockReader.java",
                    "full name": "src.java.org.apache.commons.io.input.MockReader.skip"
                },
                {
                    "function name": "read",
                    "function params": [],
                    "file name": "MockReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/MockReader.java",
                    "full name": "src.java.org.apache.commons.io.input.MockReader.read"
                },
                {
                    "function name": "MockReader",
                    "function params": [
                        "size",
                        "markSupported",
                        "throwEofException"
                    ],
                    "file name": "MockReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/MockReader.java",
                    "full name": "src.java.org.apache.commons.io.input.MockReader.MockReader"
                },
                {
                    "function name": "mark",
                    "function params": [
                        "readlimit"
                    ],
                    "file name": "MockReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/MockReader.java",
                    "full name": "src.java.org.apache.commons.io.input.MockReader.mark"
                },
                {
                    "function name": "reset",
                    "function params": [],
                    "file name": "MockReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/MockReader.java",
                    "full name": "src.java.org.apache.commons.io.input.MockReader.reset"
                },
                {
                    "function name": "doEndOfFile",
                    "function params": [],
                    "file name": "MockReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/MockReader.java",
                    "full name": "src.java.org.apache.commons.io.input.MockReader.doEndOfFile"
                },
                {
                    "function name": "processChar",
                    "function params": [],
                    "file name": "MockReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/MockReader.java",
                    "full name": "src.java.org.apache.commons.io.input.MockReader.processChar"
                },
                {
                    "function name": "getSize",
                    "function params": [],
                    "file name": "MockReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/MockReader.java",
                    "full name": "src.java.org.apache.commons.io.input.MockReader.getSize"
                },
                {
                    "function name": "read",
                    "function params": [
                        "chars",
                        "offset",
                        "length"
                    ],
                    "file name": "MockReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/MockReader.java",
                    "full name": "src.java.org.apache.commons.io.input.MockReader.read"
                },
                {
                    "function name": "processChars",
                    "function params": [
                        "chars",
                        "offset",
                        "length"
                    ],
                    "file name": "MockReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/MockReader.java",
                    "full name": "src.java.org.apache.commons.io.input.MockReader.processChars"
                },
                {
                    "function name": "MockReader",
                    "function params": [
                        "size"
                    ],
                    "file name": "MockReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/MockReader.java",
                    "full name": "src.java.org.apache.commons.io.input.MockReader.MockReader"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "MockReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/MockReader.java",
                    "full name": "src.java.org.apache.commons.io.input.MockReader.close"
                },
                {
                    "function name": "markSupported",
                    "function params": [],
                    "file name": "MockReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/MockReader.java",
                    "full name": "src.java.org.apache.commons.io.input.MockReader.markSupported"
                },
                {
                    "function name": "getPosition",
                    "function params": [],
                    "file name": "MockReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/MockReader.java",
                    "full name": "src.java.org.apache.commons.io.input.MockReader.getPosition"
                },
                {
                    "function name": "read",
                    "function params": [
                        "chars"
                    ],
                    "file name": "MockReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/MockReader.java",
                    "full name": "src.java.org.apache.commons.io.input.MockReader.read"
                },
                {
                    "function name": "testMarkAndReset",
                    "function params": [],
                    "file name": "MockReaderTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/MockReaderTestCase.java",
                    "full name": "src.test.org.apache.commons.io.input.MockReaderTestCase.testMarkAndReset"
                },
                {
                    "function name": "testReadCharArray",
                    "function params": [],
                    "file name": "MockReaderTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/MockReaderTestCase.java",
                    "full name": "src.test.org.apache.commons.io.input.MockReaderTestCase.testReadCharArray"
                },
                {
                    "function name": "TestMockReader",
                    "function params": [
                        "size"
                    ],
                    "file name": "MockReaderTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/MockReaderTestCase.java",
                    "full name": "src.test.org.apache.commons.io.input.MockReaderTestCase.TestMockReader"
                },
                {
                    "function name": "TestMockReader",
                    "function params": [],
                    "file name": "MockReaderTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/MockReaderTestCase.java",
                    "full name": "src.test.org.apache.commons.io.input.MockReaderTestCase.TestMockReader"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "MockReaderTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/MockReaderTestCase.java",
                    "full name": "src.test.org.apache.commons.io.input.MockReaderTestCase.setUp"
                },
                {
                    "function name": "TestMockReader",
                    "function params": [
                        "size",
                        "markSupported",
                        "throwEofException"
                    ],
                    "file name": "MockReaderTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/MockReaderTestCase.java",
                    "full name": "src.test.org.apache.commons.io.input.MockReaderTestCase.TestMockReader"
                },
                {
                    "function name": "testEOFException",
                    "function params": [],
                    "file name": "MockReaderTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/MockReaderTestCase.java",
                    "full name": "src.test.org.apache.commons.io.input.MockReaderTestCase.testEOFException"
                },
                {
                    "function name": "testSkip",
                    "function params": [],
                    "file name": "MockReaderTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/MockReaderTestCase.java",
                    "full name": "src.test.org.apache.commons.io.input.MockReaderTestCase.testSkip"
                },
                {
                    "function name": "testRead",
                    "function params": [],
                    "file name": "MockReaderTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/MockReaderTestCase.java",
                    "full name": "src.test.org.apache.commons.io.input.MockReaderTestCase.testRead"
                },
                {
                    "function name": "MockReaderTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "MockReaderTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/MockReaderTestCase.java",
                    "full name": "src.test.org.apache.commons.io.input.MockReaderTestCase.MockReaderTestCase"
                },
                {
                    "function name": "testMarkNotSupported",
                    "function params": [],
                    "file name": "MockReaderTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/MockReaderTestCase.java",
                    "full name": "src.test.org.apache.commons.io.input.MockReaderTestCase.testMarkNotSupported"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "MockReaderTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/MockReaderTestCase.java",
                    "full name": "src.test.org.apache.commons.io.input.MockReaderTestCase.tearDown"
                },
                {
                    "function name": "TestMockReader",
                    "function params": [
                        "chars",
                        "offset",
                        "length"
                    ],
                    "file name": "MockReaderTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/MockReaderTestCase.java",
                    "full name": "src.test.org.apache.commons.io.input.MockReaderTestCase.TestMockReader"
                }
            ],
            "date": "2006-10-09"
        },
        {
            "commit_id": 373,
            "hash": "a30a4867b9d9aab72d74e885fa00103cb47d5a01",
            "commit_summary": "javadoc correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@454249 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/MockInputStream.java"
            ],
            "functions": [],
            "date": "2006-10-09"
        },
        {
            "commit_id": 374,
            "hash": "7eab804379a3d419e196b8f47b80abd0ac8efcd1",
            "commit_summary": "Remove unused import of UnsupportedEncodingException and modify javadoc references to that class to use fully qualified name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@462772 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [],
            "date": "2006-10-11"
        },
        {
            "commit_id": 375,
            "hash": "e855f3bfe178ced9fa7875208eeb5641a517bfbb",
            "commit_summary": "javadoc changes only\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@462773 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java"
            ],
            "functions": [],
            "date": "2006-10-11"
        },
        {
            "commit_id": 376,
            "hash": "b793c1946012f6f0a8e83a364967722a931a4a75",
            "commit_summary": "Javadoc style (less loud) and Checkstyle spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@462795 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/CountingInputStream.java"
            ],
            "functions": [
                {
                    "function name": "resetCount",
                    "function params": [],
                    "file name": "CountingInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.CountingInputStream.resetCount"
                },
                {
                    "function name": "getCount",
                    "function params": [],
                    "file name": "CountingInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.CountingInputStream.getCount"
                }
            ],
            "date": "2006-10-11"
        },
        {
            "commit_id": 377,
            "hash": "d25ed53a78193ec031635f71f29b1f9217c793ef",
            "commit_summary": "Javadoc, checkstyle and since tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@462807 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/CountingInputStream.java",
                "src/java/org/apache/commons/io/output/CountingOutputStream.java"
            ],
            "functions": [
                {
                    "function name": "resetCount",
                    "function params": [],
                    "file name": "CountingOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/CountingOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/CountingOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.CountingOutputStream.resetCount"
                },
                {
                    "function name": "getCount",
                    "function params": [],
                    "file name": "CountingOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/CountingOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/CountingOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.CountingOutputStream.getCount"
                }
            ],
            "date": "2006-10-11"
        },
        {
            "commit_id": 378,
            "hash": "e03d721bb4dfd2e4ba7719f76ce17e860890dd2e",
            "commit_summary": "IO-84 - Change int methods from deprecated to exception throwng\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@462818 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/CountingInputStream.java",
                "src/java/org/apache/commons/io/output/CountingOutputStream.java"
            ],
            "functions": [
                {
                    "function name": "resetCount",
                    "function params": [],
                    "file name": "CountingInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.CountingInputStream.resetCount"
                },
                {
                    "function name": "getCount",
                    "function params": [],
                    "file name": "CountingInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.CountingInputStream.getCount"
                },
                {
                    "function name": "getByteCount",
                    "function params": [],
                    "file name": "CountingInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.CountingInputStream.getByteCount"
                },
                {
                    "function name": "getByteCount",
                    "function params": [],
                    "file name": "CountingOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/CountingOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/CountingOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.CountingOutputStream.getByteCount"
                },
                {
                    "function name": "resetCount",
                    "function params": [],
                    "file name": "CountingOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/CountingOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/CountingOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.CountingOutputStream.resetCount"
                },
                {
                    "function name": "getCount",
                    "function params": [],
                    "file name": "CountingOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/CountingOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/CountingOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.CountingOutputStream.getCount"
                }
            ],
            "date": "2006-10-11"
        },
        {
            "commit_id": 379,
            "hash": "15cdfdb631c1b0892cab218710b7b59ad3dd35f4",
            "commit_summary": "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@462824 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java"
            ],
            "functions": [
                {
                    "function name": "toByteArray",
                    "function params": [],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.toByteArray"
                }
            ],
            "date": "2006-10-11"
        },
        {
            "commit_id": 380,
            "hash": "c6f8977ee31ff4bfd45f5f03968ced153a95738e",
            "commit_summary": "IO-95 - Remove throws IOException from methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@462832 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/output/NullWriter.java",
                "src/test/org/apache/commons/io/output/NullWriterTest.java"
            ],
            "functions": [
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "NullWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/NullWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/NullWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.NullWriter.close"
                },
                {
                    "function name": "write",
                    "function params": [
                        "chr"
                    ],
                    "file name": "NullWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/NullWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/NullWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.NullWriter.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "str"
                    ],
                    "file name": "NullWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/NullWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/NullWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.NullWriter.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "str",
                        "st",
                        "end"
                    ],
                    "file name": "NullWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/NullWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/NullWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.NullWriter.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "chr",
                        "st",
                        "end"
                    ],
                    "file name": "NullWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/NullWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/NullWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.NullWriter.write"
                },
                {
                    "function name": "flush",
                    "function params": [],
                    "file name": "NullWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/NullWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/NullWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.NullWriter.flush"
                },
                {
                    "function name": "write",
                    "function params": [
                        "idx"
                    ],
                    "file name": "NullWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/NullWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/NullWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.NullWriter.write"
                },
                {
                    "function name": "testNull",
                    "function params": [],
                    "file name": "NullWriterTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/NullWriterTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/NullWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.NullWriterTest.testNull"
                }
            ],
            "date": "2006-10-11"
        },
        {
            "commit_id": 381,
            "hash": "464ebe809781e60e7bd56017bcbd3c0aaa2ecd1f",
            "commit_summary": "IO-95 - Add NullWriter\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@462833 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/output/PackageTestSuite.java"
            ],
            "functions": [
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "PackageTestSuite.java",
                    "file old path": "src/test/org/apache/commons/io/output/PackageTestSuite.java",
                    "file new path": "src/test/org/apache/commons/io/output/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.output.PackageTestSuite.suite"
                }
            ],
            "date": "2006-10-11"
        },
        {
            "commit_id": 382,
            "hash": "45a0b1fdfa0dec0ba60dc941e768a4898b8f070a",
            "commit_summary": "IO-96 - FileBasedTestCase - Fixed bug in compare content methods identified by GNU classpath\nbased on patch from Anthony Green\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@462842 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java"
            ],
            "functions": [
                {
                    "function name": "assertEqualContent",
                    "function params": [
                        "b0",
                        "file"
                    ],
                    "file name": "FileBasedTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "full name": "src.test.org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent"
                },
                {
                    "function name": "assertEqualContent",
                    "function params": [
                        "c0",
                        "file"
                    ],
                    "file name": "FileBasedTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "full name": "src.test.org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent"
                }
            ],
            "date": "2006-10-11"
        },
        {
            "commit_id": 383,
            "hash": "46c56e67b6c10b1e5f4813f372f19bf1da7ffd38",
            "commit_summary": "IO-94 - MockInputStream/MockReader\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@462847 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/MockInputStream.java",
                "src/java/org/apache/commons/io/input/MockReader.java",
                "src/test/org/apache/commons/io/input/MockInputStreamTestCase.java",
                "src/test/org/apache/commons/io/input/MockReaderTestCase.java",
                "src/test/org/apache/commons/io/input/PackageTestSuite.java"
            ],
            "functions": [
                {
                    "function name": "processBytes",
                    "function params": [
                        "bytes",
                        "offset",
                        "length"
                    ],
                    "file name": "MockInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/MockInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/MockInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.MockInputStream.processBytes"
                },
                {
                    "function name": "processByte",
                    "function params": [],
                    "file name": "MockInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/MockInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/MockInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.MockInputStream.processByte"
                },
                {
                    "function name": "processChar",
                    "function params": [],
                    "file name": "MockReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/MockReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/MockReader.java",
                    "full name": "src.java.org.apache.commons.io.input.MockReader.processChar"
                },
                {
                    "function name": "processChars",
                    "function params": [
                        "chars",
                        "offset",
                        "length"
                    ],
                    "file name": "MockReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/MockReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/MockReader.java",
                    "full name": "src.java.org.apache.commons.io.input.MockReader.processChars"
                },
                {
                    "function name": "testSkip",
                    "function params": [],
                    "file name": "MockInputStreamTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/input/MockInputStreamTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/input/MockInputStreamTestCase.java",
                    "full name": "src.test.org.apache.commons.io.input.MockInputStreamTestCase.testSkip"
                },
                {
                    "function name": "testSkip",
                    "function params": [],
                    "file name": "MockReaderTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/input/MockReaderTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/input/MockReaderTestCase.java",
                    "full name": "src.test.org.apache.commons.io.input.MockReaderTestCase.testSkip"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "PackageTestSuite.java",
                    "file old path": "src/test/org/apache/commons/io/input/PackageTestSuite.java",
                    "file new path": "src/test/org/apache/commons/io/input/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.input.PackageTestSuite.suite"
                }
            ],
            "date": "2006-10-11"
        },
        {
            "commit_id": 384,
            "hash": "4147a50bae4e937d0bd41c397b13009b56a8cf2a",
            "commit_summary": "IO-84 Modify copy() methods that return an int to throw an ArithmeticException if the returned size is too large for an int to handle. Add two new equivalent copyLarge() methods that return a long for large files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@463154 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/IOUtils.java"
            ],
            "functions": [
                {
                    "function name": "copyLarge",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copyLarge"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "copyLarge",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copyLarge"
                }
            ],
            "date": "2006-10-12"
        },
        {
            "commit_id": 385,
            "hash": "7df4f8c850e512ec7de15ecbf5df78d7f9d44449",
            "commit_summary": "Fixing #IO-82, in JDK 1.6 the gc call does not seem to be giving us the garbage collection, so Stephen came up with this to force that to happen. Speed seems good in JDK 1.4->1.6 and happily this isn't an issue with the underlying source, just the test. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@463310 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FileCleanerTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testFileCleanerDirectory",
                    "function params": [],
                    "file name": "FileCleanerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleanerTestCase.testFileCleanerDirectory"
                },
                {
                    "function name": "testFileCleanerFile",
                    "function params": [],
                    "file name": "FileCleanerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleanerTestCase.testFileCleanerFile"
                },
                {
                    "function name": "testFileCleanerDirectory_ForceStrategy",
                    "function params": [],
                    "file name": "FileCleanerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleanerTestCase.testFileCleanerDirectory_ForceStrategy"
                },
                {
                    "function name": "testFileCleanerDirectory_NullStrategy",
                    "function params": [],
                    "file name": "FileCleanerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleanerTestCase.testFileCleanerDirectory_NullStrategy"
                },
                {
                    "function name": "waitUntilTrackCount",
                    "function params": [],
                    "file name": "FileCleanerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleanerTestCase.waitUntilTrackCount"
                }
            ],
            "date": "2006-10-12"
        },
        {
            "commit_id": 386,
            "hash": "d330a6819d27f86340f6ff0fa264d6516c2ab96f",
            "commit_summary": "IO-94 - Re-name MockInputStream/MockReader to NullInputStream/NullReader\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@463529 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/input/PackageTestSuite.java"
            ],
            "functions": [
                {
                    "function name": "NullInputStream",
                    "function params": [
                        "size",
                        "markSupported",
                        "throwEofException"
                    ],
                    "file name": "NullInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/MockInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/NullInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.NullInputStream.NullInputStream"
                },
                {
                    "function name": "NullInputStream",
                    "function params": [
                        "size"
                    ],
                    "file name": "NullInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/MockInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/NullInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.NullInputStream.NullInputStream"
                },
                {
                    "function name": "NullReader",
                    "function params": [
                        "size",
                        "markSupported",
                        "throwEofException"
                    ],
                    "file name": "NullReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/MockReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/NullReader.java",
                    "full name": "src.java.org.apache.commons.io.input.NullReader.NullReader"
                },
                {
                    "function name": "NullReader",
                    "function params": [
                        "size"
                    ],
                    "file name": "NullReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/MockReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/NullReader.java",
                    "full name": "src.java.org.apache.commons.io.input.NullReader.NullReader"
                },
                {
                    "function name": "testRead",
                    "function params": [],
                    "file name": "NullInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/MockInputStreamTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/input/NullInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.NullInputStreamTest.testRead"
                },
                {
                    "function name": "TestNullInputStream",
                    "function params": [
                        "size"
                    ],
                    "file name": "NullInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/MockInputStreamTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/input/NullInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.NullInputStreamTest.TestNullInputStream"
                },
                {
                    "function name": "testEOFException",
                    "function params": [],
                    "file name": "NullInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/MockInputStreamTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/input/NullInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.NullInputStreamTest.testEOFException"
                },
                {
                    "function name": "testReadByteArray",
                    "function params": [],
                    "file name": "NullInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/MockInputStreamTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/input/NullInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.NullInputStreamTest.testReadByteArray"
                },
                {
                    "function name": "TestNullInputStream",
                    "function params": [
                        "size",
                        "markSupported",
                        "throwEofException"
                    ],
                    "file name": "NullInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/MockInputStreamTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/input/NullInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.NullInputStreamTest.TestNullInputStream"
                },
                {
                    "function name": "NullInputStreamTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "NullInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/MockInputStreamTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/input/NullInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.NullInputStreamTest.NullInputStreamTest"
                },
                {
                    "function name": "testMarkAndReset",
                    "function params": [],
                    "file name": "NullInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/MockInputStreamTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/input/NullInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.NullInputStreamTest.testMarkAndReset"
                },
                {
                    "function name": "testMarkNotSupported",
                    "function params": [],
                    "file name": "NullInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/MockInputStreamTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/input/NullInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.NullInputStreamTest.testMarkNotSupported"
                },
                {
                    "function name": "testSkip",
                    "function params": [],
                    "file name": "NullInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/MockInputStreamTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/input/NullInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.NullInputStreamTest.testSkip"
                },
                {
                    "function name": "testReadCharArray",
                    "function params": [],
                    "file name": "NullReaderTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/MockReaderTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/input/NullReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.NullReaderTest.testReadCharArray"
                },
                {
                    "function name": "testMarkNotSupported",
                    "function params": [],
                    "file name": "NullReaderTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/MockReaderTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/input/NullReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.NullReaderTest.testMarkNotSupported"
                },
                {
                    "function name": "testEOFException",
                    "function params": [],
                    "file name": "NullReaderTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/MockReaderTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/input/NullReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.NullReaderTest.testEOFException"
                },
                {
                    "function name": "NullReaderTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "NullReaderTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/MockReaderTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/input/NullReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.NullReaderTest.NullReaderTest"
                },
                {
                    "function name": "testRead",
                    "function params": [],
                    "file name": "NullReaderTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/MockReaderTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/input/NullReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.NullReaderTest.testRead"
                },
                {
                    "function name": "testMarkAndReset",
                    "function params": [],
                    "file name": "NullReaderTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/MockReaderTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/input/NullReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.NullReaderTest.testMarkAndReset"
                },
                {
                    "function name": "TestNullReader",
                    "function params": [
                        "size",
                        "markSupported",
                        "throwEofException"
                    ],
                    "file name": "NullReaderTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/MockReaderTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/input/NullReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.NullReaderTest.TestNullReader"
                },
                {
                    "function name": "testSkip",
                    "function params": [],
                    "file name": "NullReaderTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/MockReaderTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/input/NullReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.NullReaderTest.testSkip"
                },
                {
                    "function name": "TestNullReader",
                    "function params": [
                        "size"
                    ],
                    "file name": "NullReaderTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/MockReaderTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/input/NullReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.NullReaderTest.TestNullReader"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "PackageTestSuite.java",
                    "file old path": "src/test/org/apache/commons/io/input/PackageTestSuite.java",
                    "file new path": "src/test/org/apache/commons/io/input/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.input.PackageTestSuite.suite"
                }
            ],
            "date": "2006-10-13"
        },
        {
            "commit_id": 387,
            "hash": "1815c8b4ce117826c614023e5d8897a590174362",
            "commit_summary": "javadoc only\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@463536 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/output/CountingOutputStream.java"
            ],
            "functions": [],
            "date": "2006-10-13"
        },
        {
            "commit_id": 388,
            "hash": "a9d448fbed45bed36941cb06dce0fc6139c1e525",
            "commit_summary": "IO-84 - add tests for files > 2GB to IOUtils.copy(), CountingInputStream and CountingOutputStream\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@463537 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "src/test/org/apache/commons/io/input/CountingInputStreamTest.java",
                "src/test/org/apache/commons/io/output/CountingOutputStreamTest.java"
            ],
            "functions": [
                {
                    "function name": "testCopy_inputStreamToOutputStream_IO84",
                    "function params": [],
                    "file name": "IOUtilsCopyTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_IO84"
                },
                {
                    "function name": "testCopy_readerToWriter_IO84",
                    "function params": [],
                    "file name": "IOUtilsCopyTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_IO84"
                },
                {
                    "function name": "testLargeFiles_IO84",
                    "function params": [],
                    "file name": "CountingInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/CountingInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/CountingInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.CountingInputStreamTest.testLargeFiles_IO84"
                },
                {
                    "function name": "testLargeFiles_IO84",
                    "function params": [],
                    "file name": "CountingOutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/CountingOutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/CountingOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84"
                }
            ],
            "date": "2006-10-13"
        },
        {
            "commit_id": 389,
            "hash": "a56cc14c2dd316cf6439e94444530b3ab4894949",
            "commit_summary": "IO-86 - Update cancellation behaviour in DirectoryWalker to use a new CancelException, also add IOException to \"lifecycle\" method definitions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@463560 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/DirectoryWalker.java",
                "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java"
            ],
            "functions": [
                {
                    "function name": "CancelException",
                    "function params": [],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.CancelException"
                },
                {
                    "function name": "CancelException",
                    "function params": [
                        "file",
                        "depth"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.CancelException"
                },
                {
                    "function name": "walk",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.walk"
                },
                {
                    "function name": "handleFile",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleFile"
                },
                {
                    "function name": "handleEnd",
                    "function params": [
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleEnd"
                },
                {
                    "function name": "handleCancelled",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleCancelled"
                },
                {
                    "function name": "handleDirectory",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleDirectory"
                },
                {
                    "function name": "CancelException",
                    "function params": [
                        "message",
                        "file",
                        "depth"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.CancelException"
                },
                {
                    "function name": "handleStart",
                    "function params": [
                        "startDirectory",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleStart"
                },
                {
                    "function name": "handleRestricted",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleRestricted"
                },
                {
                    "function name": "handleDirectoryEnd",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleDirectoryEnd"
                },
                {
                    "function name": "handleDirectoryStart",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleDirectoryStart"
                },
                {
                    "function name": "handleCancelled",
                    "function params": [
                        "startDirectory",
                        "results",
                        "cancel"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleCancelled"
                },
                {
                    "function name": "CancelException",
                    "function params": [],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.CancelException"
                },
                {
                    "function name": "walk",
                    "function params": [
                        "startDirectory",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.walk"
                },
                {
                    "function name": "TestCancelWalker",
                    "function params": [
                        "count",
                        "accept"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker"
                },
                {
                    "function name": "TestCancelWalker",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker"
                },
                {
                    "function name": "TestCancelWalker",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker"
                },
                {
                    "function name": "TestCancelWalker",
                    "function params": [
                        "cancelFileName",
                        "suppressCancel"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker"
                },
                {
                    "function name": "TestCancelWalker",
                    "function params": [
                        "startDirectory"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker"
                },
                {
                    "function name": "testCancel",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.testCancel"
                },
                {
                    "function name": "TestCancelWalker",
                    "function params": [
                        "startDirectory",
                        "results",
                        "cancel"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker"
                },
                {
                    "function name": "TestCancelWalker",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker"
                },
                {
                    "function name": "TestFileFinder",
                    "function params": [
                        "startDirectory"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder"
                }
            ],
            "date": "2006-10-13"
        },
        {
            "commit_id": 390,
            "hash": "5284ceacdf2b198f17788c967a8f6862a5c1b325",
            "commit_summary": "IO-89 - Correct AgeFileFilter Javadocs to reflect that it filters either newer files or files equal to or older than the cutoff. Correct SizeFileFilter Javadocs to reflect that it filters either smaller files or files equal to or larger than the threshold.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@463570 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/SizeFileFilter.java"
            ],
            "functions": [],
            "date": "2006-10-13"
        },
        {
            "commit_id": 391,
            "hash": "7fd35523e815206e5bcd481e53ab2a9f70185911",
            "commit_summary": "Add serial version id and unify javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@463909 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/DirectoryWalker.java"
            ],
            "functions": [],
            "date": "2006-10-14"
        },
        {
            "commit_id": 392,
            "hash": "207ff339fb4400ed6837ceb67fffc8f3981d3250",
            "commit_summary": "Spelling, javadoc, variable names\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@463913 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/DirectoryWalker.java"
            ],
            "functions": [
                {
                    "function name": "walk",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.walk"
                }
            ],
            "date": "2006-10-14"
        },
        {
            "commit_id": 393,
            "hash": "b9872e62c121061197af9d6de775d101e815151b",
            "commit_summary": "FileFilterUtils.makeDirectoryOnly/makeFileOnly\n- two new methods that decorate a file filter to make it apply to directories only or files only\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@463940 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "makeDirectoryOnly",
                    "function params": [
                        "filter"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.makeDirectoryOnly"
                },
                {
                    "function name": "makeFileOnly",
                    "function params": [
                        "filter"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.makeFileOnly"
                },
                {
                    "function name": "testMakeFileOnly",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testMakeFileOnly"
                },
                {
                    "function name": "testMakeDirectoryOnly",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testMakeDirectoryOnly"
                }
            ],
            "date": "2006-10-14"
        },
        {
            "commit_id": 394,
            "hash": "6332f98c1dc7fd45440c2b233e115ceec7ecf85d",
            "commit_summary": "Javadoc and Group filter decoration methods together in the source file\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@463941 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java"
            ],
            "functions": [
                {
                    "function name": "makeSVNAware",
                    "function params": [
                        "filter"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.makeSVNAware"
                },
                {
                    "function name": "makeCVSAware",
                    "function params": [
                        "filter"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.makeCVSAware"
                }
            ],
            "date": "2006-10-14"
        },
        {
            "commit_id": 395,
            "hash": "25a080279d01e0556091d64eef5908bdf66b5811",
            "commit_summary": "Add constructor to take directory and file filters separately\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@463942 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/DirectoryWalker.java",
                "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java"
            ],
            "functions": [
                {
                    "function name": "DirectoryWalker",
                    "function params": [
                        "directoryFilter",
                        "fileFilter",
                        "depthLimit"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.DirectoryWalker"
                },
                {
                    "function name": "testFilterDirAndFile2",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile2"
                },
                {
                    "function name": "testFilterDirAndFile3",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile3"
                },
                {
                    "function name": "testFilterDirAndFile4",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile4"
                },
                {
                    "function name": "TestFileFinder",
                    "function params": [
                        "dirFilter",
                        "fileFilter",
                        "depthLimit"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder"
                },
                {
                    "function name": "filesOnly",
                    "function params": [
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.filesOnly"
                },
                {
                    "function name": "testFilterDirAndFile1",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile1"
                },
                {
                    "function name": "directoriesOnly",
                    "function params": [
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.directoriesOnly"
                }
            ],
            "date": "2006-10-14"
        },
        {
            "commit_id": 396,
            "hash": "1cc205fa9e75361aadf6c9408946089843a61450",
            "commit_summary": "Removing my @author tag\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@471628 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "src/java/org/apache/commons/io/filefilter/IOFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "src/java/org/apache/commons/io/input/CountingInputStream.java",
                "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                "src/java/org/apache/commons/io/input/ProxyReader.java",
                "src/java/org/apache/commons/io/output/CountingOutputStream.java",
                "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                "src/java/org/apache/commons/io/output/ProxyWriter.java",
                "src/java/org/apache/commons/io/output/TeeOutputStream.java",
                "src/test/org/apache/commons/io/EndianUtilsTest.java",
                "src/test/org/apache/commons/io/input/CountingInputStreamTest.java",
                "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                "src/test/org/apache/commons/io/output/CountingOutputStreamTest.java",
                "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                "src/test/org/apache/commons/io/output/NullOutputStreamTest.java",
                "src/test/org/apache/commons/io/output/TeeOutputStreamTest.java"
            ],
            "functions": [],
            "date": "2006-11-06"
        },
        {
            "commit_id": 397,
            "hash": "05208fdd80886e244d9504c7ea6dcd31f37693a6",
            "commit_summary": "Missing / in HTML\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@472344 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/DirectoryWalker.java"
            ],
            "functions": [],
            "date": "2006-11-08"
        },
        {
            "commit_id": 398,
            "hash": "7abbdd16ebee8cf4dc3d44e11f3a0f5b530c84ad",
            "commit_summary": "Add additional cancellation support, including checkIsCancelled() and handleIsCancelled()\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@481847 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/DirectoryWalker.java",
                "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java"
            ],
            "functions": [
                {
                    "function name": "handleCancelled",
                    "function params": [
                        "startDirectory",
                        "results",
                        "cancel"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleCancelled"
                },
                {
                    "function name": "walk",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.walk"
                },
                {
                    "function name": "checkIfCancelled",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.checkIfCancelled"
                },
                {
                    "function name": "walk",
                    "function params": [
                        "startDirectory",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.walk"
                },
                {
                    "function name": "handleIsCancelled",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleIsCancelled"
                },
                {
                    "function name": "TestMultiThreadCancelWalker",
                    "function params": [
                        "cancelFileName",
                        "suppressCancel"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker"
                },
                {
                    "function name": "TestMultiThreadCancelWalker",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker"
                },
                {
                    "function name": "testCancel",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.testCancel"
                },
                {
                    "function name": "TestMultiThreadCancelWalker",
                    "function params": [
                        "startDirectory"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker"
                },
                {
                    "function name": "TestMultiThreadCancelWalker",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker"
                },
                {
                    "function name": "TestMultiThreadCancelWalker",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker"
                },
                {
                    "function name": "testMultiThreadCancel",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.testMultiThreadCancel"
                },
                {
                    "function name": "TestMultiThreadCancelWalker",
                    "function params": [
                        "startDirectory",
                        "results",
                        "cancel"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker"
                }
            ],
            "date": "2006-12-03"
        },
        {
            "commit_id": 399,
            "hash": "1d0c2d0ba1ddc78070e415d05b2bd26cb288cecb",
            "commit_summary": "IO-84 - Make IOUtils.copy return -1 not an exception for large files, as more backwards compatible\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@481854 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/IOUtils.java",
                "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java"
            ],
            "functions": [
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "testCopy_inputStreamToOutputStream_IO84",
                    "function params": [],
                    "file name": "IOUtilsCopyTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_IO84"
                },
                {
                    "function name": "testCopy_readerToWriter_IO84",
                    "function params": [],
                    "file name": "IOUtilsCopyTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_IO84"
                }
            ],
            "date": "2006-12-03"
        },
        {
            "commit_id": 400,
            "hash": "bf78bafa9586d847996d6d8e426d765026641645",
            "commit_summary": "Applied the fix suggested by Mirko Friedenhagen in #IO-100. This isn't something that it's easy to write a unit test for, but it is very easy to write a platform dependent test and show that the new code correctly throws an exception for '/etc/passwd'\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@482411 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [
                {
                    "function name": "touch",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.touch"
                }
            ],
            "date": "2006-12-04"
        },
        {
            "commit_id": 401,
            "hash": "f732c9a50cbaf0675e8b1846c8d3480c06f297a2",
            "commit_summary": "IO-100 - FileUtils.touch now throws an exception if it fails\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@482423 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [
                {
                    "function name": "touch",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.touch"
                }
            ],
            "date": "2006-12-05"
        },
        {
            "commit_id": 402,
            "hash": "9c18390762527fe8d1bf7af8ded586566cdbb59c",
            "commit_summary": "IO-99 - FileCleaner.exitWhenFinished, to allow the thread to be terminated\nincludes some code from Jochen Wiedmann\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@482437 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileCleaner.java",
                "src/test/org/apache/commons/io/FileCleanerTestCase.java"
            ],
            "functions": [
                {
                    "function name": "track",
                    "function params": [
                        "file",
                        "marker",
                        "deleteStrategy"
                    ],
                    "file name": "FileCleaner.java",
                    "file old path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "file new path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaner.track"
                },
                {
                    "function name": "addTracker",
                    "function params": [
                        "path",
                        "marker",
                        "deleteStrategy"
                    ],
                    "file name": "FileCleaner.java",
                    "file old path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "file new path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaner.addTracker"
                },
                {
                    "function name": "exitWhenFinished",
                    "function params": [],
                    "file name": "FileCleaner.java",
                    "file old path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "file new path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaner.exitWhenFinished"
                },
                {
                    "function name": "Reaper",
                    "function params": [],
                    "file name": "FileCleaner.java",
                    "file old path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "file new path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaner.Reaper"
                },
                {
                    "function name": "track",
                    "function params": [
                        "path",
                        "marker",
                        "deleteStrategy"
                    ],
                    "file name": "FileCleaner.java",
                    "file old path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "file new path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaner.track"
                },
                {
                    "function name": "Reaper",
                    "function params": [],
                    "file name": "FileCleaner.java",
                    "file old path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "file new path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaner.Reaper"
                },
                {
                    "function name": "testFileCleanerExitWhenFinished2",
                    "function params": [],
                    "file name": "FileCleanerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleanerTestCase.testFileCleanerExitWhenFinished2"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "FileCleanerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleanerTestCase.tearDown"
                },
                {
                    "function name": "testFileCleanerExitWhenFinishedFirst",
                    "function params": [],
                    "file name": "FileCleanerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleanerTestCase.testFileCleanerExitWhenFinishedFirst"
                },
                {
                    "function name": "testFileCleanerExitWhenFinished1",
                    "function params": [],
                    "file name": "FileCleanerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleanerTestCase.testFileCleanerExitWhenFinished1"
                },
                {
                    "function name": "testFileCleanerExitWhenFinished_NoTrackAfter",
                    "function params": [],
                    "file name": "FileCleanerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleanerTestCase.testFileCleanerExitWhenFinished_NoTrackAfter"
                }
            ],
            "date": "2006-12-05"
        },
        {
            "commit_id": 403,
            "hash": "bd9fa4b496e3dbb6074e33b04e4c78ba153d3835",
            "commit_summary": "Removed @return javadoc. It's a void method. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@482774 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/DirectoryWalker.java"
            ],
            "functions": [],
            "date": "2006-12-05"
        },
        {
            "commit_id": 404,
            "hash": "82c471f355b50381d775b806047756306c8f6823",
            "commit_summary": "Removed duplicated {@link. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@482777 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileCleaner.java"
            ],
            "functions": [],
            "date": "2006-12-05"
        },
        {
            "commit_id": 405,
            "hash": "97028915e2d3a4538f6409a577441bd3d6a9894a",
            "commit_summary": "Fixing the tag reference in the javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@482780 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/DirectoryWalker.java"
            ],
            "functions": [],
            "date": "2006-12-05"
        },
        {
            "commit_id": 406,
            "hash": "6ca31cd68b732df0ffe5b7734252a71f9f7e7ab0",
            "commit_summary": "Adding missing @param for results. I'm assuming that the results 'may be updated'\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@482781 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/DirectoryWalker.java"
            ],
            "functions": [],
            "date": "2006-12-05"
        },
        {
            "commit_id": 407,
            "hash": "a354d0a5ebbb00a9758f93e72d51078177576918",
            "commit_summary": "Applying my patch from #IO-102 - fixes readSwappedLong(InputStream) for the possibility that not all 8 bytes would be read by input.read(bytes)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@482840 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/EndianUtils.java"
            ],
            "functions": [
                {
                    "function name": "readSwappedLong",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedLong"
                }
            ],
            "date": "2006-12-06"
        },
        {
            "commit_id": 408,
            "hash": "740afb04f70a27cee28eb8ade5d1b819be71c502",
            "commit_summary": "Committing my patch from #IO-101, fixing an <int> overrun in readSwappedLong. Many thanks to Jose Pinto for finding this\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@482841 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/EndianUtils.java",
                "src/test/org/apache/commons/io/EndianUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "readSwappedLong",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedLong"
                },
                {
                    "function name": "testSymmetryOfLong",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testSymmetryOfLong"
                }
            ],
            "date": "2006-12-06"
        },
        {
            "commit_id": 409,
            "hash": "a6ddf9c05634fb7dc93ebf4b424a74033c978abb",
            "commit_summary": "For some reason, the directory \".svn\" is NOT hidden on my machine. Makes hidden filter tests take this into account.\n(Microsoft Windows XP [Version 5.1.2600] SP2 + current patches)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@484839 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testMakeSVNAware",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testMakeSVNAware"
                },
                {
                    "function name": "testHidden",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testHidden"
                }
            ],
            "date": "2006-12-08"
        },
        {
            "commit_id": 410,
            "hash": "808b5eb9c2139b828e513efd0fa4c86f6ae1666f",
            "commit_summary": "2 Javadoc fixes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@484844 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/IOCase.java"
            ],
            "functions": [],
            "date": "2006-12-08"
        },
        {
            "commit_id": 411,
            "hash": "e590959d94f63ec375f6fbdd4ea145846025c6ed",
            "commit_summary": "Added a copyFileToDirectory(File, File, boolean) variant. No unit test as the lastModified checking part of the current tests is not being tested currently (it wasn't reliable). This is mentioned in #IO-104\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@484861 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [
                {
                    "function name": "copyFileToDirectory",
                    "function params": [
                        "srcFile",
                        "destDir"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyFileToDirectory"
                },
                {
                    "function name": "copyFileToDirectory",
                    "function params": [
                        "srcFile",
                        "destDir",
                        "preserveFileDate"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyFileToDirectory"
                }
            ],
            "date": "2006-12-09"
        },
        {
            "commit_id": 412,
            "hash": "d577e3d97166c4ffa12d67c33532a76cec9aa5d0",
            "commit_summary": "Applying Robert Michel's more correct patch for #IO-101. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@484864 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/EndianUtils.java"
            ],
            "functions": [
                {
                    "function name": "readSwappedLong",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedLong"
                }
            ],
            "date": "2006-12-09"
        },
        {
            "commit_id": 413,
            "hash": "4109764d5ce4c99d965300e47b09695f721768c7",
            "commit_summary": "Minor javadoc change\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@488667 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileCleaner.java"
            ],
            "functions": [],
            "date": "2006-12-19"
        },
        {
            "commit_id": 414,
            "hash": "09a6cbfe4abf8693528dbc6588b4c3ba0a2836da",
            "commit_summary": "Added findbugs optimisation: 'http://findbugs.sourceforge.net/bugDescriptions.html#ITA_INEFFICIENT_TO_ARRAY'. Pass in a correctly sized array to list.toArray\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@490424 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java"
            ],
            "functions": [
                {
                    "function name": "splitOnTokens",
                    "function params": [
                        "text"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.splitOnTokens"
                }
            ],
            "date": "2006-12-27"
        },
        {
            "commit_id": 415,
            "hash": "d6f6b4edfd2f23592abc95d07c38007b8215af14",
            "commit_summary": "Removing IOFilter from the implements for OrFileFilter and AndFileFilter - it's already in AbstractFileFilter. Thanks to FindBugs. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@490425 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/OrFileFilter.java"
            ],
            "functions": [],
            "date": "2006-12-27"
        },
        {
            "commit_id": 416,
            "hash": "6295f654839d88b6c7a41f2c6a50f4f218575e7d",
            "commit_summary": "IO-104 - Add release notes for copyFileToDirectory(File, File, boolean)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@490831 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [],
            "date": "2006-12-28"
        },
        {
            "commit_id": 417,
            "hash": "0f77ce2f3f6440a19178fa32aab3d5c9a012bb05",
            "commit_summary": "IO-107 - Add FileUtils.openOutputStream, creating parent directories if required\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@490858 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "openOutputStream",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.openOutputStream"
                },
                {
                    "function name": "test_openOutputStream_exists",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_exists"
                },
                {
                    "function name": "test_openOutputStream_notExists",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_notExists"
                },
                {
                    "function name": "test_openOutputStream_existsButIsDirectory",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_existsButIsDirectory"
                },
                {
                    "function name": "test_openOutputStream_notExistsCannotCreate",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_notExistsCannotCreate"
                }
            ],
            "date": "2006-12-28"
        },
        {
            "commit_id": 418,
            "hash": "53ff5a5b15f8b6fccdf163e66d10bdd85bb12715",
            "commit_summary": "IO-107 - Use FileUtils.openOutputStream, thus creating parent directories if required\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@490867 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [
                {
                    "function name": "copyURLToFile",
                    "function params": [
                        "source",
                        "destination"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyURLToFile"
                },
                {
                    "function name": "writeLines",
                    "function params": [
                        "file",
                        "encoding",
                        "lines",
                        "lineEnding"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.writeLines"
                },
                {
                    "function name": "writeStringToFile",
                    "function params": [
                        "file",
                        "data",
                        "encoding"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.writeStringToFile"
                },
                {
                    "function name": "openOutputStream",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.openOutputStream"
                },
                {
                    "function name": "deleteDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.deleteDirectory"
                },
                {
                    "function name": "touch",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.touch"
                },
                {
                    "function name": "writeByteArrayToFile",
                    "function params": [
                        "file",
                        "data"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.writeByteArrayToFile"
                }
            ],
            "date": "2006-12-28"
        },
        {
            "commit_id": 419,
            "hash": "4bc539ca1a037912681b7879d16b05af636b4657",
            "commit_summary": "Document synchronization\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@490987 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileCleaner.java"
            ],
            "functions": [
                {
                    "function name": "addTracker",
                    "function params": [
                        "path",
                        "marker",
                        "deleteStrategy"
                    ],
                    "file name": "FileCleaner.java",
                    "file old path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "file new path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaner.addTracker"
                },
                {
                    "function name": "exitWhenFinished",
                    "function params": [],
                    "file name": "FileCleaner.java",
                    "file old path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "file new path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaner.exitWhenFinished"
                }
            ],
            "date": "2006-12-29"
        },
        {
            "commit_id": 420,
            "hash": "a809c5d991abc12f4e0f7ab66c45724aa07d18f4",
            "commit_summary": "IO-107 - Increase test robustness for openOutputStream\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@490988 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "test_openOutputStream_existsButIsDirectory",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_existsButIsDirectory"
                },
                {
                    "function name": "test_openOutputStream_notExistsCannotCreate",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_notExistsCannotCreate"
                }
            ],
            "date": "2006-12-29"
        },
        {
            "commit_id": 421,
            "hash": "4ba80d2eacf6e2071899bcb9349f1d874b3e2259",
            "commit_summary": "Add since tag\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@490992 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [],
            "date": "2006-12-29"
        },
        {
            "commit_id": 422,
            "hash": "283bc423a6aa3b1ab580054373b2314e02a6285a",
            "commit_summary": "IO-107 - Add FileUtils.openInputStream, with better error messages than the JDK\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@490997 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "openInputStream",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.openInputStream"
                },
                {
                    "function name": "writeLines",
                    "function params": [
                        "file",
                        "encoding",
                        "lines",
                        "lineEnding"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.writeLines"
                },
                {
                    "function name": "writeStringToFile",
                    "function params": [
                        "file",
                        "data",
                        "encoding"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.writeStringToFile"
                },
                {
                    "function name": "lineIterator",
                    "function params": [
                        "file",
                        "encoding"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.lineIterator"
                },
                {
                    "function name": "readLines",
                    "function params": [
                        "file",
                        "encoding"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.readLines"
                },
                {
                    "function name": "writeByteArrayToFile",
                    "function params": [
                        "file",
                        "data"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.writeByteArrayToFile"
                },
                {
                    "function name": "readFileToString",
                    "function params": [
                        "file",
                        "encoding"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.readFileToString"
                },
                {
                    "function name": "readFileToByteArray",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.readFileToByteArray"
                },
                {
                    "function name": "test_openInputStream_notExists",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.test_openInputStream_notExists"
                },
                {
                    "function name": "test_openInputStream_exists",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.test_openInputStream_exists"
                },
                {
                    "function name": "test_openInputStream_existsButIsDirectory",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.test_openInputStream_existsButIsDirectory"
                }
            ],
            "date": "2006-12-29"
        },
        {
            "commit_id": 423,
            "hash": "f43c85acca857f7557de29bc7cc614bd1bead8a7",
            "commit_summary": "IO-107 - Add FileUtils.openInputStream, with better error messages than the JDK\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@491001 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [
                {
                    "function name": "openInputStream",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.openInputStream"
                }
            ],
            "date": "2006-12-29"
        },
        {
            "commit_id": 424,
            "hash": "6eca4c05986bac88d1b65af83348a754efa36559",
            "commit_summary": "IO-97 - ByteArrayOutputStream performance enhancements, from Holger Hoffstatte\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@491007 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java"
            ],
            "functions": [
                {
                    "function name": "write",
                    "function params": [
                        "b",
                        "off",
                        "len"
                    ],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.write"
                },
                {
                    "function name": "getBuffer",
                    "function params": [
                        "index"
                    ],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.getBuffer"
                },
                {
                    "function name": "toByteArray",
                    "function params": [],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.toByteArray"
                },
                {
                    "function name": "write",
                    "function params": [
                        "b"
                    ],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.write"
                },
                {
                    "function name": "size",
                    "function params": [],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.size"
                },
                {
                    "function name": "testStream",
                    "function params": [],
                    "file name": "ByteArrayOutputStreamTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                    "full name": "src.test.org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream"
                }
            ],
            "date": "2006-12-29"
        },
        {
            "commit_id": 425,
            "hash": "3e300278eca4c60bc35f9784e20e1bdb0bc8f0e7",
            "commit_summary": "Added default encoding variants for 6 methods in FileUtils. See: #IO-108\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@491112 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [
                {
                    "function name": "readLines",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.readLines"
                },
                {
                    "function name": "writeLines",
                    "function params": [
                        "file",
                        "lines"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.writeLines"
                },
                {
                    "function name": "lineIterator",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.lineIterator"
                },
                {
                    "function name": "readFileToString",
                    "function params": [
                        "f"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.readFileToString"
                },
                {
                    "function name": "writeLines",
                    "function params": [
                        "file",
                        "lines",
                        "lineEnding"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.writeLines"
                },
                {
                    "function name": "writeStringToFile",
                    "function params": [
                        "file",
                        "data"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.writeStringToFile"
                }
            ],
            "date": "2006-12-29"
        },
        {
            "commit_id": 426,
            "hash": "8f4a512c3daa74f8c716234afa6f03b5ba9e2e5f",
            "commit_summary": "Remove unnecessary cast from long to long.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@491359 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/EndianUtils.java"
            ],
            "functions": [
                {
                    "function name": "readSwappedLong",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedLong"
                }
            ],
            "date": "2006-12-31"
        },
        {
            "commit_id": 427,
            "hash": "6ca93e4c6043f4d285132792e29847fd8df59816",
            "commit_summary": "Fix Javadoc warning - Tag @see: missing #: \"lineIterator(File, String)\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@491360 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [],
            "date": "2006-12-31"
        },
        {
            "commit_id": 428,
            "hash": "6040c8542dee335267d8a3f76c92d3a8a0b57d43",
            "commit_summary": "Fix Javadoc warning - @param argument \"file\" is not a parameter name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@491361 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [
                {
                    "function name": "readFileToString",
                    "function params": [
                        "f"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.readFileToString"
                },
                {
                    "function name": "readFileToString",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.readFileToString"
                }
            ],
            "date": "2006-12-31"
        },
        {
            "commit_id": 429,
            "hash": "f90391e0cc9d090ccf925e58799ef6240f6efd91",
            "commit_summary": "Javadoc: Fix ambiguous method references.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@491660 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [],
            "date": "2007-01-01"
        },
        {
            "commit_id": 430,
            "hash": "21c7e1350dc9246b8978f703c7a477ef83df4502",
            "commit_summary": "Add missing Javadoc tags. Use \"null\" is code format (<code>null</code>)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@491668 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [],
            "date": "2007-01-01"
        },
        {
            "commit_id": 431,
            "hash": "9fa8d7ae0380e4dd162bd7c96b987e950d76888a",
            "commit_summary": "Use LICENSE.txt instead of STATUS.html in file/directory filter tests (STATUS.html isn't in the source distro created by the ant build)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@493980 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testDirectory",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testDirectory"
                },
                {
                    "function name": "testFiles",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testFiles"
                }
            ],
            "date": "2007-01-08"
        },
        {
            "commit_id": 432,
            "hash": "403949d8075f3aca227825b69de2de21342071e9",
            "commit_summary": "[IO-112] NPE in FileUtils.openOutputStream(File) when file has no parent in path.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@503497 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java"
            ],
            "functions": [
                {
                    "function name": "openOutputStream",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.openOutputStream"
                },
                {
                    "function name": "test_openOutputStream_noParentNoFile",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_noParentNoFile"
                },
                {
                    "function name": "test_openOutputStream_noParentCreateFile",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_noParentCreateFile"
                },
                {
                    "function name": "openOutputStream_noParent",
                    "function params": [
                        "createFile"
                    ],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.openOutputStream_noParent"
                },
                {
                    "function name": "createLineBasedFile",
                    "function params": [
                        "file",
                        "data"
                    ],
                    "file name": "FileBasedTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java",
                    "full name": "src.test.org.apache.commons.io.testtools.FileBasedTestCase.createLineBasedFile"
                }
            ],
            "date": "2007-02-04"
        },
        {
            "commit_id": 433,
            "hash": "82912208ea8e27cbb8265e1622e74ee3f655c918",
            "commit_summary": "IO-113 points out that readFileToString(File) was not static. *hits self*\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@504659 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [
                {
                    "function name": "readFileToString",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.readFileToString"
                }
            ],
            "date": "2007-02-07"
        },
        {
            "commit_id": 434,
            "hash": "aa1ba1e649a6b9afa5393b0a1599db0fe1df3a57",
            "commit_summary": "Fixing the @since to be 1.3.1 for the static readFileToString(File)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@507684 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [],
            "date": "2007-02-14"
        },
        {
            "commit_id": 435,
            "hash": "431c428c4df6a7197a8703ad50f9dc5d3501130b",
            "commit_summary": "Created the FileCleaningTracker, basically a non-static\nversion of the FileCleaner, which can be controlled by\nthe user.\nPR: IO-116\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@518041 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileCleaner.java",
                "src/test/org/apache/commons/io/FileCleanerTestCase.java"
            ],
            "functions": [
                {
                    "function name": "track",
                    "function params": [
                        "file",
                        "marker",
                        "deleteStrategy"
                    ],
                    "file name": "FileCleaner.java",
                    "file old path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "file new path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaner.track"
                },
                {
                    "function name": "track",
                    "function params": [
                        "file",
                        "marker"
                    ],
                    "file name": "FileCleaner.java",
                    "file old path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "file new path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaner.track"
                },
                {
                    "function name": "track",
                    "function params": [
                        "path",
                        "marker"
                    ],
                    "file name": "FileCleaner.java",
                    "file old path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "file new path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaner.track"
                },
                {
                    "function name": "getTrackCount",
                    "function params": [],
                    "file name": "FileCleaner.java",
                    "file old path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "file new path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaner.getTrackCount"
                },
                {
                    "function name": "exitWhenFinished",
                    "function params": [],
                    "file name": "FileCleaner.java",
                    "file old path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "file new path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaner.exitWhenFinished"
                },
                {
                    "function name": "track",
                    "function params": [
                        "path",
                        "marker",
                        "deleteStrategy"
                    ],
                    "file name": "FileCleaner.java",
                    "file old path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "file new path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaner.track"
                },
                {
                    "function name": "getInstance",
                    "function params": [],
                    "file name": "FileCleaner.java",
                    "file old path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "file new path": "src/java/org/apache/commons/io/FileCleaner.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaner.getInstance"
                },
                {
                    "function name": "track",
                    "function params": [
                        "file",
                        "marker"
                    ],
                    "file name": "FileCleaningTracker.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileCleaningTracker.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaningTracker.track"
                },
                {
                    "function name": "track",
                    "function params": [
                        "path",
                        "marker"
                    ],
                    "file name": "FileCleaningTracker.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileCleaningTracker.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaningTracker.track"
                },
                {
                    "function name": "track",
                    "function params": [
                        "path",
                        "marker",
                        "deleteStrategy"
                    ],
                    "file name": "FileCleaningTracker.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileCleaningTracker.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaningTracker.track"
                },
                {
                    "function name": "Tracker",
                    "function params": [],
                    "file name": "FileCleaningTracker.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileCleaningTracker.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaningTracker.Tracker"
                },
                {
                    "function name": "Reaper",
                    "function params": [],
                    "file name": "FileCleaningTracker.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileCleaningTracker.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaningTracker.Reaper"
                },
                {
                    "function name": "Tracker",
                    "function params": [
                        "path",
                        "deleteStrategy",
                        "marker",
                        "queue"
                    ],
                    "file name": "FileCleaningTracker.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileCleaningTracker.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaningTracker.Tracker"
                },
                {
                    "function name": "addTracker",
                    "function params": [
                        "path",
                        "marker",
                        "deleteStrategy"
                    ],
                    "file name": "FileCleaningTracker.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileCleaningTracker.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaningTracker.addTracker"
                },
                {
                    "function name": "Reaper",
                    "function params": [],
                    "file name": "FileCleaningTracker.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileCleaningTracker.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaningTracker.Reaper"
                },
                {
                    "function name": "track",
                    "function params": [
                        "file",
                        "marker",
                        "deleteStrategy"
                    ],
                    "file name": "FileCleaningTracker.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileCleaningTracker.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaningTracker.track"
                },
                {
                    "function name": "exitWhenFinished",
                    "function params": [],
                    "file name": "FileCleaningTracker.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileCleaningTracker.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaningTracker.exitWhenFinished"
                },
                {
                    "function name": "getTrackCount",
                    "function params": [],
                    "file name": "FileCleaningTracker.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileCleaningTracker.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaningTracker.getTrackCount"
                },
                {
                    "function name": "newInstance",
                    "function params": [],
                    "file name": "FileCleanerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleanerTestCase.newInstance"
                },
                {
                    "function name": "FileCleanerTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "FileCleanerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleanerTestCase.FileCleanerTestCase"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleaningTrackerTestCase.tearDown"
                },
                {
                    "function name": "testFileCleanerFile",
                    "function params": [],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerFile"
                },
                {
                    "function name": "testFileCleanerExitWhenFinished_NoTrackAfter",
                    "function params": [],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished_NoTrackAfter"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleaningTrackerTestCase.setUp"
                },
                {
                    "function name": "newInstance",
                    "function params": [],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleaningTrackerTestCase.newInstance"
                },
                {
                    "function name": "testFileCleanerExitWhenFinished1",
                    "function params": [],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished1"
                },
                {
                    "function name": "testFileCleanerExitWhenFinishedFirst",
                    "function params": [],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinishedFirst"
                },
                {
                    "function name": "FileCleaningTrackerTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleaningTrackerTestCase.FileCleaningTrackerTestCase"
                },
                {
                    "function name": "testFileCleanerDirectory",
                    "function params": [],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleaningTrackerTestCase.suite"
                },
                {
                    "function name": "waitUntilTrackCount",
                    "function params": [],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleaningTrackerTestCase.waitUntilTrackCount"
                },
                {
                    "function name": "testFileCleanerDirectory_NullStrategy",
                    "function params": [],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_NullStrategy"
                },
                {
                    "function name": "testFileCleanerExitWhenFinished2",
                    "function params": [],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished2"
                },
                {
                    "function name": "testFileCleanerDirectory_ForceStrategy",
                    "function params": [],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_ForceStrategy"
                },
                {
                    "function name": "testFileCleanerNull",
                    "function params": [],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerNull"
                },
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleaningTrackerTestCase.main"
                }
            ],
            "date": "2007-03-14"
        },
        {
            "commit_id": 436,
            "hash": "b85271ae3c09f1dbfda7f6613afc5f1e318d8a2a",
            "commit_summary": "Made the FileCleaningTracker serializable.\nThis is required by commons-fileupload, because the\nDiskFileItem's may be part of the HTTP session while\nstill carrying a reference to the tracker.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@518770 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileCleaningTracker.java",
                "src/test/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java"
            ],
            "functions": [
                {
                    "function name": "readResolve",
                    "function params": [],
                    "file name": "FileCleaningTracker.java",
                    "file old path": "src/java/org/apache/commons/io/FileCleaningTracker.java",
                    "file new path": "src/java/org/apache/commons/io/FileCleaningTracker.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaningTracker.readResolve"
                },
                {
                    "function name": "testThrowsOnNullList",
                    "function params": [],
                    "file name": "FileUtilsCleanDirectoryTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testThrowsOnNullList"
                },
                {
                    "function name": "testThrowsOnCannotDeleteFile",
                    "function params": [],
                    "file name": "FileUtilsCleanDirectoryTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testThrowsOnCannotDeleteFile"
                }
            ],
            "date": "2007-03-15"
        },
        {
            "commit_id": 437,
            "hash": "663372845b665ea4895be4b09ccd896c2616cfdd",
            "commit_summary": "IO-120 Improve file filter toString() methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@539231 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/SizeFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java"
            ],
            "functions": [
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.toString"
                },
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "AgeFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AgeFileFilter.toString"
                },
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "AndFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AndFileFilter.toString"
                },
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.toString"
                },
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "NameFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NameFileFilter.toString"
                },
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "NotFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NotFileFilter.toString"
                },
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "OrFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.OrFileFilter.toString"
                },
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "PrefixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.PrefixFileFilter.toString"
                },
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "SizeFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/SizeFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/SizeFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.SizeFileFilter.toString"
                },
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "SuffixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.SuffixFileFilter.toString"
                },
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "WildcardFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.WildcardFileFilter.toString"
                }
            ],
            "date": "2007-05-18"
        },
        {
            "commit_id": 438,
            "hash": "6bc05de06fffc5a2f2a67e4e8526bc6d7d0939b4",
            "commit_summary": "Applying Hiroshi's test from IO-117 with my fix. Fixes negative number possibilities in EndianUtils.readSwappedUnsignedInteger()\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@539632 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/EndianUtils.java",
                "src/test/org/apache/commons/io/EndianUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "readSwappedUnsignedInteger",
                    "function params": [
                        "input"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger"
                },
                {
                    "function name": "readSwappedUnsignedInteger",
                    "function params": [
                        "data",
                        "offset"
                    ],
                    "file name": "EndianUtils.java",
                    "file old path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "file new path": "src/java/org/apache/commons/io/EndianUtils.java",
                    "full name": "src.java.org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger"
                },
                {
                    "function name": "testUnsignedOverrun",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testUnsignedOverrun"
                }
            ],
            "date": "2007-05-18"
        },
        {
            "commit_id": 439,
            "hash": "7461d3dba020ab4904aac0d4bbc03db8eb78d059",
            "commit_summary": "IO-121 - Add a reset() method to ThresholdingOutputStream which sets the count of the bytes written back to zero - thanks to Tom Nichols for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@540644 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/output/ThresholdingOutputStream.java"
            ],
            "functions": [
                {
                    "function name": "checkThreshold",
                    "function params": [
                        "count"
                    ],
                    "file name": "ThresholdingOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ThresholdingOutputStream.checkThreshold"
                },
                {
                    "function name": "reset",
                    "function params": [],
                    "file name": "ThresholdingOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ThresholdingOutputStream.reset"
                }
            ],
            "date": "2007-05-22"
        },
        {
            "commit_id": 440,
            "hash": "c6b82c0d77466f62370b6b31d58f7bb1eb6a5285",
            "commit_summary": "IO-121 - change the new method name from reset() to resetByteCount() to make it more obvious what its function is\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@540714 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/output/ThresholdingOutputStream.java"
            ],
            "functions": [
                {
                    "function name": "resetByteCount",
                    "function params": [],
                    "file name": "ThresholdingOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ThresholdingOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ThresholdingOutputStream.resetByteCount"
                }
            ],
            "date": "2007-05-22"
        },
        {
            "commit_id": 441,
            "hash": "186225b7d611ab2252024d4a38d8fb1091b7ebab",
            "commit_summary": "Merged in changes from 1.3 branch.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@552590 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileCleaningTracker.java"
            ],
            "functions": [],
            "date": "2007-07-02"
        },
        {
            "commit_id": 442,
            "hash": "4d5c7d78b4b43639a9a215ffa48c9cbf03645dd5",
            "commit_summary": "Javadoc: Missing tag for return type.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@553012 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileCleaner.java"
            ],
            "functions": [],
            "date": "2007-07-03"
        },
        {
            "commit_id": 443,
            "hash": "742c51feeaf75542ab9db6782ad3d2ad506fb871",
            "commit_summary": "Fixing the mailing list addresses\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@560804 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FileDeleteStrategyTestCase.java"
            ],
            "functions": [],
            "date": "2007-07-29"
        },
        {
            "commit_id": 444,
            "hash": "9666d74ab32fb942ecdce00cdbf94be374a7bb31",
            "commit_summary": "IO-126 Add facility to specify case sensitivity for prefix and suffix file filters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@584162 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "PrefixFileFilter",
                    "function params": [
                        "prefixes",
                        "caseSensitivity"
                    ],
                    "file name": "PrefixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter"
                },
                {
                    "function name": "PrefixFileFilter",
                    "function params": [
                        "prefixes",
                        "caseSensitivity"
                    ],
                    "file name": "PrefixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file",
                        "name"
                    ],
                    "file name": "PrefixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.PrefixFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "PrefixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.PrefixFileFilter.accept"
                },
                {
                    "function name": "PrefixFileFilter",
                    "function params": [
                        "prefix",
                        "caseSensitivity"
                    ],
                    "file name": "PrefixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter"
                },
                {
                    "function name": "SuffixFileFilter",
                    "function params": [
                        "suffixes",
                        "caseSensitivity"
                    ],
                    "file name": "SuffixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "SuffixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.SuffixFileFilter.accept"
                },
                {
                    "function name": "SuffixFileFilter",
                    "function params": [
                        "suffix",
                        "caseSensitivity"
                    ],
                    "file name": "SuffixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file",
                        "name"
                    ],
                    "file name": "SuffixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.SuffixFileFilter.accept"
                },
                {
                    "function name": "SuffixFileFilter",
                    "function params": [
                        "suffixes",
                        "caseSensitivity"
                    ],
                    "file name": "SuffixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter"
                },
                {
                    "function name": "testSuffixCaseInsensitive",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testSuffixCaseInsensitive"
                },
                {
                    "function name": "testPrefixCaseInsensitive",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive"
                }
            ],
            "date": "2007-10-12"
        },
        {
            "commit_id": 445,
            "hash": "2aaaa2a2582e8a6f14a85c0e49164583e0fa6b1e",
            "commit_summary": "IO-74 - add new Regular Expression file IOFileFilter implementation - thanks to Oliver Siegmar for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@584263 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "RegexFilter",
                    "function params": [
                        "pattern"
                    ],
                    "file name": "RegexFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/RegexFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.RegexFilter.RegexFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "RegexFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/RegexFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.RegexFilter.accept"
                },
                {
                    "function name": "RegexFilter",
                    "function params": [
                        "pattern"
                    ],
                    "file name": "RegexFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/RegexFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.RegexFilter.RegexFilter"
                },
                {
                    "function name": "RegexFilter",
                    "function params": [
                        "patterns"
                    ],
                    "file name": "RegexFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/RegexFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.RegexFilter.RegexFilter"
                },
                {
                    "function name": "RegexFilter",
                    "function params": [
                        "patterns"
                    ],
                    "file name": "RegexFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/RegexFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.RegexFilter.RegexFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "dir",
                        "name"
                    ],
                    "file name": "RegexFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/RegexFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.RegexFilter.accept"
                },
                {
                    "function name": "RegexFilter",
                    "function params": [
                        "patterns"
                    ],
                    "file name": "RegexFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/RegexFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.RegexFilter.RegexFilter"
                },
                {
                    "function name": "testRegex",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testRegex"
                }
            ],
            "date": "2007-10-12"
        },
        {
            "commit_id": 446,
            "hash": "17929c2789dfa7e6fd4404c2806ff3b12ba88efe",
            "commit_summary": "IO-74 Refactor RegexFilter - add ability to construct instances with either pattern flags or case sensitivity. Also simplify by removing the array/list of String patterns constructors since adding all variants with flags/case sensitivity would be cumbersome and also the logic is limited to \"OR\" and some users may want \"AND\" - AND/OR logic can be achieved by combining RegexFilter instances using the AndFileFilter and OrFileFilter implementations.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@584278 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "src/java/org/apache/commons/io/filefilter/RegexFilter.java",
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "regex",
                    "function params": [
                        "pattern"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.regex"
                },
                {
                    "function name": "regex",
                    "function params": [
                        "pattern",
                        "flags"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.regex"
                },
                {
                    "function name": "regex",
                    "function params": [
                        "pattern",
                        "caseSensitivity"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.regex"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "dir",
                        "name"
                    ],
                    "file name": "RegexFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/RegexFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/RegexFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.RegexFilter.accept"
                },
                {
                    "function name": "RegexFilter",
                    "function params": [
                        "patterns"
                    ],
                    "file name": "RegexFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/RegexFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/RegexFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.RegexFilter.RegexFilter"
                },
                {
                    "function name": "RegexFilter",
                    "function params": [
                        "pattern",
                        "flags"
                    ],
                    "file name": "RegexFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/RegexFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/RegexFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.RegexFilter.RegexFilter"
                },
                {
                    "function name": "RegexFilter",
                    "function params": [
                        "pattern",
                        "caseSensitivity"
                    ],
                    "file name": "RegexFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/RegexFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/RegexFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.RegexFilter.RegexFilter"
                },
                {
                    "function name": "RegexFilter",
                    "function params": [
                        "patterns"
                    ],
                    "file name": "RegexFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/RegexFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/RegexFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.RegexFilter.RegexFilter"
                },
                {
                    "function name": "RegexFilter",
                    "function params": [
                        "pattern"
                    ],
                    "file name": "RegexFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/RegexFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/RegexFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.RegexFilter.RegexFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "RegexFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/RegexFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/RegexFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.RegexFilter.accept"
                },
                {
                    "function name": "RegexFilter",
                    "function params": [
                        "pattern"
                    ],
                    "file name": "RegexFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/RegexFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/RegexFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.RegexFilter.RegexFilter"
                },
                {
                    "function name": "RegexFilter",
                    "function params": [
                        "patterns"
                    ],
                    "file name": "RegexFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/RegexFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/RegexFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.RegexFilter.RegexFilter"
                },
                {
                    "function name": "testRegex",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testRegex"
                }
            ],
            "date": "2007-10-12"
        },
        {
            "commit_id": 447,
            "hash": "ea3781d3e141599cb3a36f8a236366927a9d10fe",
            "commit_summary": "Add messages to IllegalArgumentExceptions, add tests for thrown expections\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@584302 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/RegexFilter.java",
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "RegexFilter",
                    "function params": [
                        "pattern",
                        "caseSensitivity"
                    ],
                    "file name": "RegexFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/RegexFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/RegexFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.RegexFilter.RegexFilter"
                },
                {
                    "function name": "RegexFilter",
                    "function params": [
                        "pattern"
                    ],
                    "file name": "RegexFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/RegexFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/RegexFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.RegexFilter.RegexFilter"
                },
                {
                    "function name": "RegexFilter",
                    "function params": [
                        "pattern"
                    ],
                    "file name": "RegexFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/RegexFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/RegexFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.RegexFilter.RegexFilter"
                },
                {
                    "function name": "RegexFilter",
                    "function params": [
                        "pattern",
                        "flags"
                    ],
                    "file name": "RegexFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/RegexFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/RegexFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.RegexFilter.RegexFilter"
                },
                {
                    "function name": "testRegex",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testRegex"
                }
            ],
            "date": "2007-10-12"
        },
        {
            "commit_id": 448,
            "hash": "4a02524aef7f78af52cc7c7beedfa1eb83f8ccb5",
            "commit_summary": "IO-128 - currently file name \"normalization\" errors in the equals method causes a mis-leading NullPointerException. Adding a check for this and throwing an IllegalArgumentException with a better message should improve the user experience.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@584325 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java",
                "src/test/org/apache/commons/io/FilenameUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "equals",
                    "function params": [
                        "filename1",
                        "filename2",
                        "normalized",
                        "caseSensitivity"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.equals"
                },
                {
                    "function name": "testEqualsNormalizedError_IO_128",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalizedError_IO_128"
                }
            ],
            "date": "2007-10-12"
        },
        {
            "commit_id": 449,
            "hash": "d82a2bac09321150fc38e342ccf572e6561f9a23",
            "commit_summary": "IO-122 add Helper classes for controlling closing of streams - thanks to Jukka Zitting\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@584357 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/input/PackageTestSuite.java",
                "src/test/org/apache/commons/io/output/PackageTestSuite.java"
            ],
            "functions": [
                {
                    "function name": "read",
                    "function params": [],
                    "file name": "AutoCloseInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/AutoCloseInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.AutoCloseInputStream.read"
                },
                {
                    "function name": "AutoCloseInputStream",
                    "function params": [
                        "in"
                    ],
                    "file name": "AutoCloseInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/AutoCloseInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.AutoCloseInputStream.AutoCloseInputStream"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "AutoCloseInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/AutoCloseInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.AutoCloseInputStream.close"
                },
                {
                    "function name": "read",
                    "function params": [
                        "b"
                    ],
                    "file name": "AutoCloseInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/AutoCloseInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.AutoCloseInputStream.read"
                },
                {
                    "function name": "read",
                    "function params": [
                        "b",
                        "off",
                        "len"
                    ],
                    "file name": "AutoCloseInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/AutoCloseInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.AutoCloseInputStream.read"
                },
                {
                    "function name": "CloseShieldInputStream",
                    "function params": [
                        "in"
                    ],
                    "file name": "CloseShieldInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/CloseShieldInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.CloseShieldInputStream.CloseShieldInputStream"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "CloseShieldInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/CloseShieldInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.CloseShieldInputStream.close"
                },
                {
                    "function name": "read",
                    "function params": [],
                    "file name": "ClosedInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/ClosedInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ClosedInputStream.read"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "CloseShieldOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/CloseShieldOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.CloseShieldOutputStream.close"
                },
                {
                    "function name": "CloseShieldOutputStream",
                    "function params": [
                        "out"
                    ],
                    "file name": "CloseShieldOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/CloseShieldOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.CloseShieldOutputStream.CloseShieldOutputStream"
                },
                {
                    "function name": "write",
                    "function params": [
                        "b"
                    ],
                    "file name": "ClosedOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/ClosedOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ClosedOutputStream.write"
                },
                {
                    "function name": "testReadBuffer",
                    "function params": [],
                    "file name": "AutoCloseInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/AutoCloseInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.AutoCloseInputStreamTest.testReadBuffer"
                },
                {
                    "function name": "testRead",
                    "function params": [],
                    "file name": "AutoCloseInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/AutoCloseInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.AutoCloseInputStreamTest.testRead"
                },
                {
                    "function name": "testClose",
                    "function params": [],
                    "file name": "AutoCloseInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/AutoCloseInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.AutoCloseInputStreamTest.testClose"
                },
                {
                    "function name": "testReadBufferOffsetLength",
                    "function params": [],
                    "file name": "AutoCloseInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/AutoCloseInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.AutoCloseInputStreamTest.testReadBufferOffsetLength"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "AutoCloseInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/AutoCloseInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.AutoCloseInputStreamTest.setUp"
                },
                {
                    "function name": "testClose",
                    "function params": [],
                    "file name": "CloseShieldInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/CloseShieldInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.CloseShieldInputStreamTest.testClose"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "CloseShieldInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/CloseShieldInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.CloseShieldInputStreamTest.setUp"
                },
                {
                    "function name": "testRead",
                    "function params": [],
                    "file name": "ClosedInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/ClosedInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.ClosedInputStreamTest.testRead"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "PackageTestSuite.java",
                    "file old path": "src/test/org/apache/commons/io/input/PackageTestSuite.java",
                    "file new path": "src/test/org/apache/commons/io/input/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.input.PackageTestSuite.suite"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "CloseShieldOutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/CloseShieldOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.CloseShieldOutputStreamTest.setUp"
                },
                {
                    "function name": "testClose",
                    "function params": [],
                    "file name": "CloseShieldOutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/CloseShieldOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.CloseShieldOutputStreamTest.testClose"
                },
                {
                    "function name": "testRead",
                    "function params": [],
                    "file name": "ClosedOutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/ClosedOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.ClosedOutputStreamTest.testRead"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "PackageTestSuite.java",
                    "file old path": "src/test/org/apache/commons/io/output/PackageTestSuite.java",
                    "file new path": "src/test/org/apache/commons/io/output/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.output.PackageTestSuite.suite"
                }
            ],
            "date": "2007-10-13"
        },
        {
            "commit_id": 450,
            "hash": "1b4e77faebd6a9c43fc57a6aeefb605c9188acfe",
            "commit_summary": "IO-74 Rename RegexFilter to RegexFileFilter to conform to the naming convention of other implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@584359 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "regex",
                    "function params": [
                        "pattern",
                        "caseSensitivity"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.regex"
                },
                {
                    "function name": "regex",
                    "function params": [
                        "pattern",
                        "flags"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.regex"
                },
                {
                    "function name": "regex",
                    "function params": [
                        "pattern"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.regex"
                },
                {
                    "function name": "RegexFileFilter",
                    "function params": [
                        "pattern"
                    ],
                    "file name": "RegexFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/RegexFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/RegexFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.RegexFileFilter.RegexFileFilter"
                },
                {
                    "function name": "RegexFileFilter",
                    "function params": [
                        "pattern"
                    ],
                    "file name": "RegexFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/RegexFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/RegexFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.RegexFileFilter.RegexFileFilter"
                },
                {
                    "function name": "RegexFileFilter",
                    "function params": [
                        "pattern",
                        "caseSensitivity"
                    ],
                    "file name": "RegexFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/RegexFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/RegexFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.RegexFileFilter.RegexFileFilter"
                },
                {
                    "function name": "RegexFileFilter",
                    "function params": [
                        "pattern",
                        "flags"
                    ],
                    "file name": "RegexFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/RegexFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/RegexFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.RegexFileFilter.RegexFileFilter"
                },
                {
                    "function name": "testRegex",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testRegex"
                }
            ],
            "date": "2007-10-13"
        },
        {
            "commit_id": 451,
            "hash": "422ce6fa23b426ab71f271d4643ce9163cf707d3",
            "commit_summary": "IO-129 add new TeeInputStream implementation - thanks to Jukka Zitting\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@584407 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "read",
                    "function params": [],
                    "file name": "TeeInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/TeeInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.TeeInputStream.read"
                },
                {
                    "function name": "read",
                    "function params": [
                        "bts",
                        "st",
                        "end"
                    ],
                    "file name": "TeeInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/TeeInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.TeeInputStream.read"
                },
                {
                    "function name": "TeeInputStream",
                    "function params": [
                        "input",
                        "branch"
                    ],
                    "file name": "TeeInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/TeeInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.TeeInputStream.TeeInputStream"
                },
                {
                    "function name": "read",
                    "function params": [
                        "bts"
                    ],
                    "file name": "TeeInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/TeeInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.TeeInputStream.read"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "TeeInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/TeeInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.TeeInputStreamTest.setUp"
                },
                {
                    "function name": "testSkip",
                    "function params": [],
                    "file name": "TeeInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/TeeInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.TeeInputStreamTest.testSkip"
                },
                {
                    "function name": "testReadToArrayWithOffset",
                    "function params": [],
                    "file name": "TeeInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/TeeInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.TeeInputStreamTest.testReadToArrayWithOffset"
                },
                {
                    "function name": "testMarkReset",
                    "function params": [],
                    "file name": "TeeInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/TeeInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.TeeInputStreamTest.testMarkReset"
                },
                {
                    "function name": "testReadNothing",
                    "function params": [],
                    "file name": "TeeInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/TeeInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.TeeInputStreamTest.testReadNothing"
                },
                {
                    "function name": "testReadEverything",
                    "function params": [],
                    "file name": "TeeInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/TeeInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.TeeInputStreamTest.testReadEverything"
                },
                {
                    "function name": "testReadOneByte",
                    "function params": [],
                    "file name": "TeeInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/TeeInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.TeeInputStreamTest.testReadOneByte"
                },
                {
                    "function name": "testReadToArray",
                    "function params": [],
                    "file name": "TeeInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/TeeInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.TeeInputStreamTest.testReadToArray"
                }
            ],
            "date": "2007-10-13"
        },
        {
            "commit_id": 452,
            "hash": "91e47f76a97d4e549a92f0a01137529e9bee257f",
            "commit_summary": "IO-129 Add a configurable option to close the OutputStream - patch from Jukka Zitting\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@584746 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/TeeInputStream.java"
            ],
            "functions": [
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "TeeInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/TeeInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/TeeInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.TeeInputStream.close"
                },
                {
                    "function name": "TeeInputStream",
                    "function params": [
                        "input",
                        "branch",
                        "closeBranch"
                    ],
                    "file name": "TeeInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/TeeInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/TeeInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.TeeInputStream.TeeInputStream"
                },
                {
                    "function name": "TeeInputStream",
                    "function params": [
                        "input",
                        "branch"
                    ],
                    "file name": "TeeInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/TeeInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/TeeInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.TeeInputStream.TeeInputStream"
                }
            ],
            "date": "2007-10-15"
        },
        {
            "commit_id": 453,
            "hash": "d2bd4422c37efd98bcf11009d5eba0d91f891118",
            "commit_summary": "IO-127 - add ant build script to check JDK 1.3 compatibility and remove references to JDK 1.4 dependant class from FileFilterUtils\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@584823 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testRegex",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testRegex"
                }
            ],
            "date": "2007-10-15"
        },
        {
            "commit_id": 454,
            "hash": "fb24a474dee4ca92f28d5d589f38d11d635b543b",
            "commit_summary": "IO-130 Add support for temporary files to DeferredFileOutputStream\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@586668 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java"
            ],
            "functions": [
                {
                    "function name": "DeferredFileOutputStream",
                    "function params": [
                        "threshold",
                        "prefix",
                        "suffix",
                        "directory"
                    ],
                    "file name": "DeferredFileOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream"
                },
                {
                    "function name": "thresholdReached",
                    "function params": [],
                    "file name": "DeferredFileOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.DeferredFileOutputStream.thresholdReached"
                },
                {
                    "function name": "testTempFileAboveThresholdPrefixOnly",
                    "function params": [],
                    "file name": "DeferredFileOutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThresholdPrefixOnly"
                },
                {
                    "function name": "testTempFileBelowThreshold",
                    "function params": [],
                    "file name": "DeferredFileOutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileBelowThreshold"
                },
                {
                    "function name": "testTempFileAboveThreshold",
                    "function params": [],
                    "file name": "DeferredFileOutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThreshold"
                },
                {
                    "function name": "testTempFileError",
                    "function params": [],
                    "file name": "DeferredFileOutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileError"
                }
            ],
            "date": "2007-10-20"
        },
        {
            "commit_id": 455,
            "hash": "c9348861506b7fa79c3b89107adb574613b3abc6",
            "commit_summary": "Add @version to javadocs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@587913 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/AutoCloseInputStream.java",
                "src/java/org/apache/commons/io/input/CloseShieldInputStream.java",
                "src/java/org/apache/commons/io/input/ClosedInputStream.java",
                "src/java/org/apache/commons/io/input/TeeInputStream.java",
                "src/java/org/apache/commons/io/output/CloseShieldOutputStream.java",
                "src/java/org/apache/commons/io/output/ClosedOutputStream.java"
            ],
            "functions": [],
            "date": "2007-10-24"
        },
        {
            "commit_id": 456,
            "hash": "d7b27cca78f9a945e164af19fa7f49585958d60f",
            "commit_summary": "IO-131 Implement java.io.Serializable in IOFileFilter implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@587916 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/CanReadFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/CanWriteFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/EmptyFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/FileFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/HiddenFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/RegexFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/SizeFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/WildcardFilter.java"
            ],
            "functions": [],
            "date": "2007-10-24"
        },
        {
            "commit_id": 457,
            "hash": "7a10ec81f45313bae94971c51b3bdb3b93b6c44e",
            "commit_summary": "Doh! doesn't even compile! My bad - thanks to Sebb\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@587978 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/TrueFileFilter.java"
            ],
            "functions": [],
            "date": "2007-10-24"
        },
        {
            "commit_id": 458,
            "hash": "6d38af68ae92c67e1c788d8a4607a85e668a3df6",
            "commit_summary": "Remove unused import org.apache.commons.io.IOCase\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@590151 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java"
            ],
            "functions": [],
            "date": "2007-10-30"
        },
        {
            "commit_id": 459,
            "hash": "fe3554cc2c0ab534e90742d03d5663c30a173973",
            "commit_summary": "IO-133 - Make fields final so classes are immutable/threadsafe - thanks to Sebb for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@591058 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/RegexFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/SizeFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/WildcardFilter.java"
            ],
            "functions": [
                {
                    "function name": "DelegateFileFilter",
                    "function params": [
                        "filter"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.DelegateFileFilter"
                },
                {
                    "function name": "DelegateFileFilter",
                    "function params": [
                        "filter"
                    ],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.DelegateFileFilter"
                },
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "DelegateFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.DelegateFileFilter.toString"
                },
                {
                    "function name": "PrefixFileFilter",
                    "function params": [
                        "prefixes",
                        "caseSensitivity"
                    ],
                    "file name": "PrefixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter"
                },
                {
                    "function name": "PrefixFileFilter",
                    "function params": [
                        "prefixes"
                    ],
                    "file name": "PrefixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter"
                },
                {
                    "function name": "PrefixFileFilter",
                    "function params": [
                        "prefixes",
                        "caseSensitivity"
                    ],
                    "file name": "PrefixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter"
                },
                {
                    "function name": "PrefixFileFilter",
                    "function params": [
                        "prefixes"
                    ],
                    "file name": "PrefixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter"
                },
                {
                    "function name": "PrefixFileFilter",
                    "function params": [
                        "prefix",
                        "caseSensitivity"
                    ],
                    "file name": "PrefixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter"
                },
                {
                    "function name": "PrefixFileFilter",
                    "function params": [
                        "prefix"
                    ],
                    "file name": "PrefixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter"
                },
                {
                    "function name": "SuffixFileFilter",
                    "function params": [
                        "suffixes"
                    ],
                    "file name": "SuffixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter"
                },
                {
                    "function name": "SuffixFileFilter",
                    "function params": [
                        "suffixes",
                        "caseSensitivity"
                    ],
                    "file name": "SuffixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter"
                },
                {
                    "function name": "SuffixFileFilter",
                    "function params": [
                        "suffix",
                        "caseSensitivity"
                    ],
                    "file name": "SuffixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter"
                },
                {
                    "function name": "SuffixFileFilter",
                    "function params": [
                        "suffix"
                    ],
                    "file name": "SuffixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter"
                },
                {
                    "function name": "SuffixFileFilter",
                    "function params": [
                        "suffixes",
                        "caseSensitivity"
                    ],
                    "file name": "SuffixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter"
                },
                {
                    "function name": "SuffixFileFilter",
                    "function params": [
                        "suffixes"
                    ],
                    "file name": "SuffixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter"
                }
            ],
            "date": "2007-11-01"
        },
        {
            "commit_id": 460,
            "hash": "5ef9722809594f9e087a5be77c098057ef42969a",
            "commit_summary": "IO-128 Change to NullPointerException so that behaviour is unchanged from before - just better error message\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@592606 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java",
                "src/test/org/apache/commons/io/FilenameUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "equals",
                    "function params": [
                        "filename1",
                        "filename2",
                        "normalized",
                        "caseSensitivity"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.equals"
                },
                {
                    "function name": "testEqualsNormalizedError_IO_128",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalizedError_IO_128"
                }
            ],
            "date": "2007-11-07"
        },
        {
            "commit_id": 461,
            "hash": "f6e765472ee65bf856ebc53a6c5c03762d4e5cf2",
            "commit_summary": "Replace the use of deprecated classes (in un-related tests) with non-deprecated versions\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@596583 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testListFiles",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testListFiles"
                },
                {
                    "function name": "testIterateFiles",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testIterateFiles"
                }
            ],
            "date": "2007-11-20"
        },
        {
            "commit_id": 462,
            "hash": "4576857e33fc0aa9682ba77a6e464213ec15b829",
            "commit_summary": "IO-136 HexDump's use of static StringBuffers isn't thread-safe\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@596642 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/HexDump.java"
            ],
            "functions": [
                {
                    "function name": "dump",
                    "function params": [
                        "data",
                        "offset",
                        "stream",
                        "index"
                    ],
                    "file name": "HexDump.java",
                    "file old path": "src/java/org/apache/commons/io/HexDump.java",
                    "file new path": "src/java/org/apache/commons/io/HexDump.java",
                    "full name": "src.java.org.apache.commons.io.HexDump.dump"
                },
                {
                    "function name": "dump",
                    "function params": [
                        "value"
                    ],
                    "file name": "HexDump.java",
                    "file old path": "src/java/org/apache/commons/io/HexDump.java",
                    "file new path": "src/java/org/apache/commons/io/HexDump.java",
                    "full name": "src.java.org.apache.commons.io.HexDump.dump"
                },
                {
                    "function name": "dump",
                    "function params": [
                        "_lbuffer",
                        "value"
                    ],
                    "file name": "HexDump.java",
                    "file old path": "src/java/org/apache/commons/io/HexDump.java",
                    "file new path": "src/java/org/apache/commons/io/HexDump.java",
                    "full name": "src.java.org.apache.commons.io.HexDump.dump"
                },
                {
                    "function name": "dump",
                    "function params": [
                        "_cbuffer",
                        "value"
                    ],
                    "file name": "HexDump.java",
                    "file old path": "src/java/org/apache/commons/io/HexDump.java",
                    "file new path": "src/java/org/apache/commons/io/HexDump.java",
                    "full name": "src.java.org.apache.commons.io.HexDump.dump"
                },
                {
                    "function name": "dump",
                    "function params": [
                        "value"
                    ],
                    "file name": "HexDump.java",
                    "file old path": "src/java/org/apache/commons/io/HexDump.java",
                    "file new path": "src/java/org/apache/commons/io/HexDump.java",
                    "full name": "src.java.org.apache.commons.io.HexDump.dump"
                }
            ],
            "date": "2007-11-20"
        },
        {
            "commit_id": 463,
            "hash": "8a8ec3362a591fe4f419bbede7fd62546a3d46a8",
            "commit_summary": "Javadoc only\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@596667 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/HexDump.java"
            ],
            "functions": [],
            "date": "2007-11-20"
        },
        {
            "commit_id": 464,
            "hash": "68a55d56ae853fc2fdce829a6042163bdc02deb4",
            "commit_summary": "IO-143 Added Singleton Constants in several stream classes - thanks to Nikunj Trivedi for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@601751 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/ClosedInputStream.java",
                "src/java/org/apache/commons/io/output/ClosedOutputStream.java",
                "src/java/org/apache/commons/io/output/NullOutputStream.java",
                "src/java/org/apache/commons/io/output/NullWriter.java"
            ],
            "functions": [],
            "date": "2007-12-06"
        },
        {
            "commit_id": 465,
            "hash": "db3e834e135ede835ce4ab59429ab90afd059e67",
            "commit_summary": "IO-144 Add a compare method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@601797 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/IOCase.java",
                "src/test/org/apache/commons/io/IOCaseTestCase.java"
            ],
            "functions": [
                {
                    "function name": "checkCompareTo",
                    "function params": [
                        "str1",
                        "str2"
                    ],
                    "file name": "IOCase.java",
                    "file old path": "src/java/org/apache/commons/io/IOCase.java",
                    "file new path": "src/java/org/apache/commons/io/IOCase.java",
                    "full name": "src.java.org.apache.commons.io.IOCase.checkCompareTo"
                },
                {
                    "function name": "test_checkCompare_functionality",
                    "function params": [],
                    "file name": "IOCaseTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOCaseTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOCaseTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOCaseTestCase.test_checkCompare_functionality"
                },
                {
                    "function name": "test_checkCompare_case",
                    "function params": [],
                    "file name": "IOCaseTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOCaseTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOCaseTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOCaseTestCase.test_checkCompare_case"
                }
            ],
            "date": "2007-12-06"
        },
        {
            "commit_id": 466,
            "hash": "46dd580e99113726b2e2743ce50865d2d1cbc44f",
            "commit_summary": "A first cut on [IO-148] IOException with constructors which take a cause. Only one constructor implemented. Class name up for discussion. Copied from Apache Tika implementation by Jukka Zitting (see http://svn.apache.org/viewvc?view=rev&revision=606139)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@606340 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/PackageTestSuite.java"
            ],
            "functions": [
                {
                    "function name": "CausedIOException",
                    "function params": [
                        "message",
                        "cause"
                    ],
                    "file name": "CausedIOException.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/CausedIOException.java",
                    "full name": "src.java.org.apache.commons.io.CausedIOException.CausedIOException"
                },
                {
                    "function name": "testIOExceptionStringThrowable",
                    "function params": [],
                    "file name": "CausedIOExceptionTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/CausedIOExceptionTestCase.java",
                    "full name": "src.test.org.apache.commons.io.CausedIOExceptionTestCase.testIOExceptionStringThrowable"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "PackageTestSuite.java",
                    "file old path": "src/test/org/apache/commons/io/PackageTestSuite.java",
                    "file new path": "src/test/org/apache/commons/io/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.PackageTestSuite.suite"
                }
            ],
            "date": "2007-12-21"
        },
        {
            "commit_id": 467,
            "hash": "fecdc39c81375bc34e34d0fe72dccd6dce84bfa7",
            "commit_summary": "A couple of missing EOLs to pretty things up.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@606345 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/IOCase.java"
            ],
            "functions": [],
            "date": "2007-12-21"
        },
        {
            "commit_id": 468,
            "hash": "bf8f5bcec1d5c6221f73e0d82879c18d2d7fc88c",
            "commit_summary": "A second cut on [IO-148]: IOException with constructors which take a cause. New Throwable constructor. New Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@606371 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/CausedIOException.java",
                "src/test/org/apache/commons/io/CausedIOExceptionTestCase.java"
            ],
            "functions": [
                {
                    "function name": "CausedIOException",
                    "function params": [
                        "cause"
                    ],
                    "file name": "CausedIOException.java",
                    "file old path": "src/java/org/apache/commons/io/CausedIOException.java",
                    "file new path": "src/java/org/apache/commons/io/CausedIOException.java",
                    "full name": "src.java.org.apache.commons.io.CausedIOException.CausedIOException"
                },
                {
                    "function name": "testIOExceptionStringThrowable",
                    "function params": [],
                    "file name": "CausedIOExceptionTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/CausedIOExceptionTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/CausedIOExceptionTestCase.java",
                    "full name": "src.test.org.apache.commons.io.CausedIOExceptionTestCase.testIOExceptionStringThrowable"
                },
                {
                    "function name": "validate",
                    "function params": [
                        "throwable",
                        "expectedCause",
                        "expectedMessage"
                    ],
                    "file name": "CausedIOExceptionTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/CausedIOExceptionTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/CausedIOExceptionTestCase.java",
                    "full name": "src.test.org.apache.commons.io.CausedIOExceptionTestCase.validate"
                },
                {
                    "function name": "testIOExceptionThrowable",
                    "function params": [],
                    "file name": "CausedIOExceptionTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/CausedIOExceptionTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/CausedIOExceptionTestCase.java",
                    "full name": "src.test.org.apache.commons.io.CausedIOExceptionTestCase.testIOExceptionThrowable"
                }
            ],
            "date": "2007-12-22"
        },
        {
            "commit_id": 469,
            "hash": "a094516c1b360f830527dd0b7811dd928495447a",
            "commit_summary": "Remove unnecessary casts.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@606380 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "src/test/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java",
                "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java"
            ],
            "functions": [
                {
                    "function name": "testGetFreeSpace_String",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String"
                },
                {
                    "function name": "testRemove",
                    "function params": [],
                    "file name": "ConditionalFileFilterAbstractTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testRemove"
                },
                {
                    "function name": "testSkipBytes",
                    "function params": [],
                    "file name": "SwappedDataInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.SwappedDataInputStreamTest.testSkipBytes"
                },
                {
                    "function name": "testReadInt",
                    "function params": [],
                    "file name": "SwappedDataInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.SwappedDataInputStreamTest.testReadInt"
                }
            ],
            "date": "2007-12-22"
        },
        {
            "commit_id": 470,
            "hash": "98a3fa2f36d5f8a99885728be7934703c1574f25",
            "commit_summary": "Remove unused imports and organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@606381 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/RegexFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                "src/java/org/apache/commons/io/output/ProxyWriter.java",
                "src/test/org/apache/commons/io/CopyUtilsTest.java",
                "src/test/org/apache/commons/io/DemuxTestCase.java",
                "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                "src/test/org/apache/commons/io/EndianUtilsTest.java",
                "src/test/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                "src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                "src/test/org/apache/commons/io/HexDumpTest.java",
                "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                "src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                "src/test/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                "src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                "src/test/org/apache/commons/io/input/CountingInputStreamTest.java",
                "src/test/org/apache/commons/io/output/CountingOutputStreamTest.java",
                "src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java"
            ],
            "functions": [],
            "date": "2007-12-22"
        },
        {
            "commit_id": 471,
            "hash": "33ab3ce04a4a7e358d33a178631ae467cbf55f17",
            "commit_summary": "Javadoc: follow Niall's suggestion to make the Javadoc not so close to the Sun version.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@606435 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/CausedIOException.java"
            ],
            "functions": [],
            "date": "2007-12-22"
        },
        {
            "commit_id": 472,
            "hash": "50f9c9370c1286039fb6750e08e0fcbc20c6adc0",
            "commit_summary": "IO-147 - Deletion of orphaned Softlinks does not work - reported by Stefan Lischke, patch from Sebb\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@608338 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "forceDelete",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.forceDelete"
                },
                {
                    "function name": "testForceDeleteAFile3",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile3"
                }
            ],
            "date": "2008-01-03"
        },
        {
            "commit_id": 473,
            "hash": "7b8f4719e708c3a853ed69b70d00e957e1b02ee2",
            "commit_summary": "IO-122 - Helper classes for controlling closing of streams\n    - Added a finalizer to AutoCloseInputStream\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@608744 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/AutoCloseInputStream.java"
            ],
            "functions": [
                {
                    "function name": "finalize",
                    "function params": [],
                    "file name": "AutoCloseInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/AutoCloseInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/AutoCloseInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.AutoCloseInputStream.finalize"
                }
            ],
            "date": "2008-01-04"
        },
        {
            "commit_id": 474,
            "hash": "2f8d0922c8c7d1be2c12fba6264f08acdbae47d1",
            "commit_summary": "IO-141 - Infinite loop on FileUtils.copyDirectory when the destination directory is within the source directory - reported by Mark Bryan Yu\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609147 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "doCopyDirectory",
                    "function params": [
                        "srcDir",
                        "destDir",
                        "preserveFileDate"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.doCopyDirectory"
                },
                {
                    "function name": "copyDirectory",
                    "function params": [
                        "srcDir",
                        "destDir",
                        "preserveFileDate"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyDirectory"
                },
                {
                    "function name": "doCopyDirectory",
                    "function params": [
                        "srcDir",
                        "destDir",
                        "preserveFileDate",
                        "exclusionList"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.doCopyDirectory"
                },
                {
                    "function name": "ListDirectoryWalker",
                    "function params": [
                        "startDirectory"
                    ],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.ListDirectoryWalker"
                },
                {
                    "function name": "ListDirectoryWalker",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.ListDirectoryWalker"
                },
                {
                    "function name": "ListDirectoryWalker",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.ListDirectoryWalker"
                },
                {
                    "function name": "ListDirectoryWalker",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.ListDirectoryWalker"
                },
                {
                    "function name": "createFilesForTestCopyDirectory",
                    "function params": [
                        "grandParentDir",
                        "parentDir",
                        "childDir"
                    ],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.createFilesForTestCopyDirectory"
                },
                {
                    "function name": "testCopyDirectoryToGrandChild",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToGrandChild"
                },
                {
                    "function name": "testCopyDirectoryToChild",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToChild"
                }
            ],
            "date": "2008-01-05"
        },
        {
            "commit_id": 475,
            "hash": "4bf0a19e60a464e3f551f01cddbad8464f44b4ad",
            "commit_summary": "IO-138 new Reader implementation that handles any CharSequence (String, StringBuffer, StringBuilder or CharBuffer)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609152 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "CharSequenceReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/CharSequenceReader.java",
                    "full name": "src.java.org.apache.commons.io.input.CharSequenceReader.toString"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "CharSequenceReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/CharSequenceReader.java",
                    "full name": "src.java.org.apache.commons.io.input.CharSequenceReader.close"
                },
                {
                    "function name": "CharSequenceReader",
                    "function params": [
                        "charSequence"
                    ],
                    "file name": "CharSequenceReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/CharSequenceReader.java",
                    "full name": "src.java.org.apache.commons.io.input.CharSequenceReader.CharSequenceReader"
                },
                {
                    "function name": "mark",
                    "function params": [
                        "readAheadLimit"
                    ],
                    "file name": "CharSequenceReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/CharSequenceReader.java",
                    "full name": "src.java.org.apache.commons.io.input.CharSequenceReader.mark"
                },
                {
                    "function name": "read",
                    "function params": [
                        "array",
                        "offset",
                        "length"
                    ],
                    "file name": "CharSequenceReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/CharSequenceReader.java",
                    "full name": "src.java.org.apache.commons.io.input.CharSequenceReader.read"
                },
                {
                    "function name": "reset",
                    "function params": [],
                    "file name": "CharSequenceReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/CharSequenceReader.java",
                    "full name": "src.java.org.apache.commons.io.input.CharSequenceReader.reset"
                },
                {
                    "function name": "read",
                    "function params": [],
                    "file name": "CharSequenceReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/CharSequenceReader.java",
                    "full name": "src.java.org.apache.commons.io.input.CharSequenceReader.read"
                },
                {
                    "function name": "markSupported",
                    "function params": [],
                    "file name": "CharSequenceReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/CharSequenceReader.java",
                    "full name": "src.java.org.apache.commons.io.input.CharSequenceReader.markSupported"
                },
                {
                    "function name": "skip",
                    "function params": [
                        "n"
                    ],
                    "file name": "CharSequenceReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/CharSequenceReader.java",
                    "full name": "src.java.org.apache.commons.io.input.CharSequenceReader.skip"
                },
                {
                    "function name": "testReadCharArray",
                    "function params": [],
                    "file name": "CharSequenceReaderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/CharSequenceReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArray"
                },
                {
                    "function name": "testClose",
                    "function params": [],
                    "file name": "CharSequenceReaderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/CharSequenceReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.CharSequenceReaderTest.testClose"
                },
                {
                    "function name": "checkArray",
                    "function params": [
                        "expected",
                        "actual"
                    ],
                    "file name": "CharSequenceReaderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/CharSequenceReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.CharSequenceReaderTest.checkArray"
                },
                {
                    "function name": "testRead",
                    "function params": [],
                    "file name": "CharSequenceReaderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/CharSequenceReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.CharSequenceReaderTest.testRead"
                },
                {
                    "function name": "testMarkSupported",
                    "function params": [],
                    "file name": "CharSequenceReaderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/CharSequenceReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.CharSequenceReaderTest.testMarkSupported"
                },
                {
                    "function name": "testReadCharArrayPortion",
                    "function params": [],
                    "file name": "CharSequenceReaderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/CharSequenceReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArrayPortion"
                },
                {
                    "function name": "checkRead",
                    "function params": [
                        "reader",
                        "expected"
                    ],
                    "file name": "CharSequenceReaderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/CharSequenceReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.CharSequenceReaderTest.checkRead"
                },
                {
                    "function name": "testMark",
                    "function params": [],
                    "file name": "CharSequenceReaderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/CharSequenceReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.CharSequenceReaderTest.testMark"
                },
                {
                    "function name": "CharSequenceReaderTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "CharSequenceReaderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/CharSequenceReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.CharSequenceReaderTest.CharSequenceReaderTest"
                },
                {
                    "function name": "testSkip",
                    "function params": [],
                    "file name": "CharSequenceReaderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/CharSequenceReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.CharSequenceReaderTest.testSkip"
                }
            ],
            "date": "2008-01-05"
        },
        {
            "commit_id": 476,
            "hash": "24c740b1831dab01b0f40dae2f1a02c6dbbcf7a1",
            "commit_summary": "Add missing tests to suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609154 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/input/PackageTestSuite.java"
            ],
            "functions": [
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "PackageTestSuite.java",
                    "file old path": "src/test/org/apache/commons/io/input/PackageTestSuite.java",
                    "file new path": "src/test/org/apache/commons/io/input/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.input.PackageTestSuite.suite"
                }
            ],
            "date": "2008-01-05"
        },
        {
            "commit_id": 477,
            "hash": "518d735394c82d67288de50e9a557e1c4b5afee3",
            "commit_summary": "IO-148 rename CausedIOException to IOExceptionWithCause\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609159 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/PackageTestSuite.java"
            ],
            "functions": [
                {
                    "function name": "IOExceptionWithCause",
                    "function params": [
                        "message",
                        "cause"
                    ],
                    "file name": "IOExceptionWithCause.java",
                    "file old path": "src/java/org/apache/commons/io/CausedIOException.java",
                    "file new path": "src/java/org/apache/commons/io/IOExceptionWithCause.java",
                    "full name": "src.java.org.apache.commons.io.IOExceptionWithCause.IOExceptionWithCause"
                },
                {
                    "function name": "IOExceptionWithCause",
                    "function params": [
                        "cause"
                    ],
                    "file name": "IOExceptionWithCause.java",
                    "file old path": "src/java/org/apache/commons/io/CausedIOException.java",
                    "file new path": "src/java/org/apache/commons/io/IOExceptionWithCause.java",
                    "full name": "src.java.org.apache.commons.io.IOExceptionWithCause.IOExceptionWithCause"
                },
                {
                    "function name": "testIOExceptionThrowable",
                    "function params": [],
                    "file name": "IOExceptionWithCauseTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/CausedIOExceptionTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOExceptionWithCauseTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOExceptionWithCauseTestCase.testIOExceptionThrowable"
                },
                {
                    "function name": "testIOExceptionStringThrowable",
                    "function params": [],
                    "file name": "IOExceptionWithCauseTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/CausedIOExceptionTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOExceptionWithCauseTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOExceptionWithCauseTestCase.testIOExceptionStringThrowable"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "PackageTestSuite.java",
                    "file old path": "src/test/org/apache/commons/io/PackageTestSuite.java",
                    "file new path": "src/test/org/apache/commons/io/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.PackageTestSuite.suite"
                }
            ],
            "date": "2008-01-05"
        },
        {
            "commit_id": 478,
            "hash": "e1dc23052f4005c59cec7fe5cee31daa19d00a7d",
            "commit_summary": "Woops - remove JDK 1.5 StringBuilder\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609171 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/CharSequenceReader.java"
            ],
            "functions": [
                {
                    "function name": "CharSequenceReader",
                    "function params": [
                        "charSequence"
                    ],
                    "file name": "CharSequenceReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/CharSequenceReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/CharSequenceReader.java",
                    "full name": "src.java.org.apache.commons.io.input.CharSequenceReader.CharSequenceReader"
                }
            ],
            "date": "2008-01-05"
        },
        {
            "commit_id": 479,
            "hash": "55dfa6eb4b3f1666a0a281e40657252054f0e6b7",
            "commit_summary": "IO-145 - add new package of  File Comparator implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609243 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "compare",
                    "function params": [
                        "obj1",
                        "obj2"
                    ],
                    "file name": "DefaultFileComparator.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/comparator/DefaultFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.DefaultFileComparator.compare"
                },
                {
                    "function name": "compare",
                    "function params": [
                        "obj1",
                        "obj2"
                    ],
                    "file name": "ExtensionFileComparator.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/comparator/ExtensionFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.ExtensionFileComparator.compare"
                },
                {
                    "function name": "ExtensionFileComparator",
                    "function params": [],
                    "file name": "ExtensionFileComparator.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/comparator/ExtensionFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.ExtensionFileComparator.ExtensionFileComparator"
                },
                {
                    "function name": "ExtensionFileComparator",
                    "function params": [
                        "caseSensitivity"
                    ],
                    "file name": "ExtensionFileComparator.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/comparator/ExtensionFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.ExtensionFileComparator.ExtensionFileComparator"
                },
                {
                    "function name": "compare",
                    "function params": [
                        "obj1",
                        "obj2"
                    ],
                    "file name": "LastModifiedFileComparator.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/comparator/LastModifiedFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.LastModifiedFileComparator.compare"
                },
                {
                    "function name": "compare",
                    "function params": [
                        "obj1",
                        "obj2"
                    ],
                    "file name": "NameFileComparator.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/comparator/NameFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.NameFileComparator.compare"
                },
                {
                    "function name": "NameFileComparator",
                    "function params": [],
                    "file name": "NameFileComparator.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/comparator/NameFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.NameFileComparator.NameFileComparator"
                },
                {
                    "function name": "NameFileComparator",
                    "function params": [
                        "caseSensitivity"
                    ],
                    "file name": "NameFileComparator.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/comparator/NameFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.NameFileComparator.NameFileComparator"
                },
                {
                    "function name": "compare",
                    "function params": [
                        "obj1",
                        "obj2"
                    ],
                    "file name": "PathFileComparator.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/comparator/PathFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.PathFileComparator.compare"
                },
                {
                    "function name": "PathFileComparator",
                    "function params": [
                        "caseSensitivity"
                    ],
                    "file name": "PathFileComparator.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/comparator/PathFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.PathFileComparator.PathFileComparator"
                },
                {
                    "function name": "PathFileComparator",
                    "function params": [],
                    "file name": "PathFileComparator.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/comparator/PathFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.PathFileComparator.PathFileComparator"
                },
                {
                    "function name": "ReverseComparator",
                    "function params": [
                        "delegate"
                    ],
                    "file name": "ReverseComparator.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/comparator/ReverseComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.ReverseComparator.ReverseComparator"
                },
                {
                    "function name": "compare",
                    "function params": [
                        "obj1",
                        "obj2"
                    ],
                    "file name": "ReverseComparator.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/comparator/ReverseComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.ReverseComparator.compare"
                },
                {
                    "function name": "SizeFileComparator",
                    "function params": [
                        "sumDirectoryContents"
                    ],
                    "file name": "SizeFileComparator.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/comparator/SizeFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.SizeFileComparator.SizeFileComparator"
                },
                {
                    "function name": "SizeFileComparator",
                    "function params": [],
                    "file name": "SizeFileComparator.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/comparator/SizeFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.SizeFileComparator.SizeFileComparator"
                },
                {
                    "function name": "compare",
                    "function params": [
                        "obj1",
                        "obj2"
                    ],
                    "file name": "SizeFileComparator.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/comparator/SizeFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.SizeFileComparator.compare"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "ComparatorAbstractTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.comparator.ComparatorAbstractTestCase.setUp"
                },
                {
                    "function name": "testReverseComparator",
                    "function params": [],
                    "file name": "ComparatorAbstractTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.comparator.ComparatorAbstractTestCase.testReverseComparator"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "ComparatorAbstractTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.comparator.ComparatorAbstractTestCase.tearDown"
                },
                {
                    "function name": "testComparator",
                    "function params": [],
                    "file name": "ComparatorAbstractTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.comparator.ComparatorAbstractTestCase.testComparator"
                },
                {
                    "function name": "ComparatorAbstractTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "ComparatorAbstractTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.comparator.ComparatorAbstractTestCase.ComparatorAbstractTestCase"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "DefaultFileComparatorTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/DefaultFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.DefaultFileComparatorTest.setUp"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "DefaultFileComparatorTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/DefaultFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.DefaultFileComparatorTest.suite"
                },
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "DefaultFileComparatorTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/DefaultFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.DefaultFileComparatorTest.main"
                },
                {
                    "function name": "DefaultFileComparatorTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "DefaultFileComparatorTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/DefaultFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.DefaultFileComparatorTest.DefaultFileComparatorTest"
                },
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "ExtensionFileComparatorTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/ExtensionFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.ExtensionFileComparatorTest.main"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "ExtensionFileComparatorTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/ExtensionFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.ExtensionFileComparatorTest.setUp"
                },
                {
                    "function name": "ExtensionFileComparatorTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "ExtensionFileComparatorTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/ExtensionFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.ExtensionFileComparatorTest.ExtensionFileComparatorTest"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "ExtensionFileComparatorTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/ExtensionFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.ExtensionFileComparatorTest.suite"
                },
                {
                    "function name": "LastModifiedFileComparatorTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "LastModifiedFileComparatorTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/LastModifiedFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.LastModifiedFileComparatorTest.LastModifiedFileComparatorTest"
                },
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "LastModifiedFileComparatorTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/LastModifiedFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.LastModifiedFileComparatorTest.main"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "LastModifiedFileComparatorTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/LastModifiedFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.LastModifiedFileComparatorTest.setUp"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "LastModifiedFileComparatorTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/LastModifiedFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.LastModifiedFileComparatorTest.suite"
                },
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "NameFileComparatorTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/NameFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.NameFileComparatorTest.main"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "NameFileComparatorTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/NameFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.NameFileComparatorTest.setUp"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "NameFileComparatorTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/NameFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.NameFileComparatorTest.suite"
                },
                {
                    "function name": "NameFileComparatorTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "NameFileComparatorTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/NameFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.NameFileComparatorTest.NameFileComparatorTest"
                },
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "PathFileComparatorTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/PathFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.PathFileComparatorTest.main"
                },
                {
                    "function name": "PathFileComparatorTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "PathFileComparatorTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/PathFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.PathFileComparatorTest.PathFileComparatorTest"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "PathFileComparatorTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/PathFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.PathFileComparatorTest.setUp"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "PathFileComparatorTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/PathFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.PathFileComparatorTest.suite"
                },
                {
                    "function name": "testNonexistantFile",
                    "function params": [],
                    "file name": "SizeFileComparatorTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/SizeFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.SizeFileComparatorTest.testNonexistantFile"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "SizeFileComparatorTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/SizeFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.SizeFileComparatorTest.suite"
                },
                {
                    "function name": "testCompareDirectorySizes",
                    "function params": [],
                    "file name": "SizeFileComparatorTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/SizeFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.SizeFileComparatorTest.testCompareDirectorySizes"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "SizeFileComparatorTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/SizeFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.SizeFileComparatorTest.setUp"
                },
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "SizeFileComparatorTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/SizeFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.SizeFileComparatorTest.main"
                },
                {
                    "function name": "SizeFileComparatorTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "SizeFileComparatorTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/SizeFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.SizeFileComparatorTest.SizeFileComparatorTest"
                }
            ],
            "date": "2008-01-06"
        },
        {
            "commit_id": 480,
            "hash": "eafc20dce3e58795b4a2aae11029a658e038fb48",
            "commit_summary": "IO-135 - Add convenience deleteQuietly to FileUtils - adapted from patch by Kevin Conaway\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609253 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "deleteQuietly",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.deleteQuietly"
                },
                {
                    "function name": "testDeleteQuietlyDir",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyDir"
                },
                {
                    "function name": "testDeleteQuietlyNonExistent",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyNonExistent"
                },
                {
                    "function name": "testDeleteQuietlyFile",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyFile"
                },
                {
                    "function name": "testDeleteQuietlyForNull",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyForNull"
                }
            ],
            "date": "2008-01-06"
        },
        {
            "commit_id": 481,
            "hash": "d6c044b0a745d877a99f0f61af19bae187d5e6fa",
            "commit_summary": "Style fix - Unify @since tag format\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609286 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/IOExceptionWithCause.java",
                "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java"
            ],
            "functions": [],
            "date": "2008-01-06"
        },
        {
            "commit_id": 482,
            "hash": "da8e3183bd70cdb2e1b9441e2e4b640e3fc27fad",
            "commit_summary": "IO-135 - change deleteQuietly() to catch Exception rather than Throwable as per Stephen's comment on dev@:\n\"I think I would prefer catch(Exception) rather than catch(Throwable).Hiding an OutOfMemoryError (and similar) is generally a Bad Idea.\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609395 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [
                {
                    "function name": "deleteQuietly",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.deleteQuietly"
                }
            ],
            "date": "2008-01-06"
        },
        {
            "commit_id": 483,
            "hash": "bad9fee57a900e8bfa1d412dfd82a32dc1b41d34",
            "commit_summary": "IO-152 - Add ByteArrayOutputStream.write(InputStream)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609421 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java"
            ],
            "functions": [
                {
                    "function name": "write",
                    "function params": [
                        "in"
                    ],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.write"
                },
                {
                    "function name": "testStream",
                    "function params": [],
                    "file name": "ByteArrayOutputStreamTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                    "full name": "src.test.org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream"
                }
            ],
            "date": "2008-01-06"
        },
        {
            "commit_id": 484,
            "hash": "7cbb2763115558b029da2d1b409d5d3ce7f13655",
            "commit_summary": "IO-105 - Add a FileUtils copyDirectory method that makes use of FileFilter\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609471 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "doCopyDirectory",
                    "function params": [
                        "srcDir",
                        "destDir",
                        "preserveFileDate",
                        "exclusionList"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.doCopyDirectory"
                },
                {
                    "function name": "copyDirectory",
                    "function params": [
                        "srcDir",
                        "destDir",
                        "filter",
                        "preserveFileDate"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyDirectory"
                },
                {
                    "function name": "copyDirectory",
                    "function params": [
                        "srcDir",
                        "destDir",
                        "filter"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyDirectory"
                },
                {
                    "function name": "doCopyDirectory",
                    "function params": [
                        "srcDir",
                        "destDir",
                        "filter",
                        "preserveFileDate",
                        "exclusionList"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.doCopyDirectory"
                },
                {
                    "function name": "copyDirectory",
                    "function params": [
                        "srcDir",
                        "destDir",
                        "preserveFileDate"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyDirectory"
                },
                {
                    "function name": "testCopyDirectoryFiltered",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryFiltered"
                }
            ],
            "date": "2008-01-06"
        },
        {
            "commit_id": 485,
            "hash": "ee30084cc1f81f9440a05b8eb16fbbe12d210d20",
            "commit_summary": "IO-77 add moveFile() and moveDirectory() methods to FileUtils - thanks to Nicolas de Loof for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609622 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "moveToDirectory",
                    "function params": [
                        "src",
                        "destDir",
                        "createDestDir"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.moveToDirectory"
                },
                {
                    "function name": "moveFile",
                    "function params": [
                        "srcFile",
                        "destFile"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.moveFile"
                },
                {
                    "function name": "moveDirectory",
                    "function params": [
                        "srcDir",
                        "destDir"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.moveDirectory"
                },
                {
                    "function name": "moveDirectoryToDirectory",
                    "function params": [
                        "src",
                        "destDir",
                        "createDestDir"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.moveDirectoryToDirectory"
                },
                {
                    "function name": "moveFileToDirectory",
                    "function params": [
                        "srcFile",
                        "destDir",
                        "createDestDir"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.moveFileToDirectory"
                },
                {
                    "function name": "testMoveDirectoryToDirectory_Errors",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory_Errors"
                },
                {
                    "function name": "testMoveFileToDirectory_Errors",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory_Errors"
                },
                {
                    "function name": "testMoveToDirectory_Errors",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory_Errors"
                },
                {
                    "function name": "testMoveDirectory_Rename",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Rename"
                },
                {
                    "function name": "testMoveDirectoryToDirectory",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory"
                },
                {
                    "function name": "testMoveDirectory_Errors",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Errors"
                },
                {
                    "function name": "testMoveToDirectory",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory"
                },
                {
                    "function name": "testMoveFile_CopyDelete_Failed",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete_Failed"
                },
                {
                    "function name": "testMoveFileToDirectory",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory"
                },
                {
                    "function name": "testMoveDirectory_CopyDelete",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete"
                },
                {
                    "function name": "testMoveFile_Errors",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testMoveFile_Errors"
                },
                {
                    "function name": "testMoveFile_CopyDelete",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete"
                },
                {
                    "function name": "testMoveFile_Rename",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testMoveFile_Rename"
                }
            ],
            "date": "2008-01-07"
        },
        {
            "commit_id": 486,
            "hash": "b2342719e8abf75edf3bbdda6c84d3c55726626f",
            "commit_summary": "IO-77 improve error message\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609633 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [
                {
                    "function name": "moveFileToDirectory",
                    "function params": [
                        "srcFile",
                        "destDir",
                        "createDestDir"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.moveFileToDirectory"
                },
                {
                    "function name": "moveDirectoryToDirectory",
                    "function params": [
                        "src",
                        "destDir",
                        "createDestDir"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.moveDirectoryToDirectory"
                }
            ],
            "date": "2008-01-07"
        },
        {
            "commit_id": 487,
            "hash": "7f075b8e754037cb7c2fd396086ca3d6a955675f",
            "commit_summary": "IO-77 - change moveDirectory/moveFile mehtods to throw IllegalArgumentException rather than NullPointerException - thanks to Holger Hoffst\u00e4tte\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609683 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "moveFile",
                    "function params": [
                        "srcFile",
                        "destFile"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.moveFile"
                },
                {
                    "function name": "moveDirectory",
                    "function params": [
                        "srcDir",
                        "destDir"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.moveDirectory"
                },
                {
                    "function name": "moveFileToDirectory",
                    "function params": [
                        "srcFile",
                        "destDir",
                        "createDestDir"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.moveFileToDirectory"
                },
                {
                    "function name": "moveDirectoryToDirectory",
                    "function params": [
                        "src",
                        "destDir",
                        "createDestDir"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.moveDirectoryToDirectory"
                },
                {
                    "function name": "moveToDirectory",
                    "function params": [
                        "src",
                        "destDir",
                        "createDestDir"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.moveToDirectory"
                },
                {
                    "function name": "testMoveDirectory_Errors",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Errors"
                },
                {
                    "function name": "testMoveDirectoryToDirectory_Errors",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory_Errors"
                },
                {
                    "function name": "testMoveFile_Errors",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testMoveFile_Errors"
                },
                {
                    "function name": "testMoveFileToDirectory_Errors",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory_Errors"
                },
                {
                    "function name": "testMoveToDirectory_Errors",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory_Errors"
                }
            ],
            "date": "2008-01-07"
        },
        {
            "commit_id": 488,
            "hash": "deabf6a6b0eed1d677006ea3db6f349417dd50af",
            "commit_summary": "IO-153 Add a FileWriter that accepts an encoding - patch from Stephen Colebourne\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609864 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/output/PackageTestSuite.java"
            ],
            "functions": [
                {
                    "function name": "initWriter",
                    "function params": [
                        "file",
                        "encoding",
                        "append"
                    ],
                    "file name": "FileWriterWithEncoding.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                    "full name": "src.java.org.apache.commons.io.output.FileWriterWithEncoding.initWriter"
                },
                {
                    "function name": "FileWriterWithEncoding",
                    "function params": [
                        "filename",
                        "encoding"
                    ],
                    "file name": "FileWriterWithEncoding.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                    "full name": "src.java.org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding"
                },
                {
                    "function name": "FileWriterWithEncoding",
                    "function params": [
                        "filename",
                        "encoding",
                        "append"
                    ],
                    "file name": "FileWriterWithEncoding.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                    "full name": "src.java.org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding"
                },
                {
                    "function name": "write",
                    "function params": [
                        "chr"
                    ],
                    "file name": "FileWriterWithEncoding.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                    "full name": "src.java.org.apache.commons.io.output.FileWriterWithEncoding.write"
                },
                {
                    "function name": "FileWriterWithEncoding",
                    "function params": [
                        "file",
                        "encoding",
                        "append"
                    ],
                    "file name": "FileWriterWithEncoding.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                    "full name": "src.java.org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding"
                },
                {
                    "function name": "write",
                    "function params": [
                        "chr",
                        "st",
                        "end"
                    ],
                    "file name": "FileWriterWithEncoding.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                    "full name": "src.java.org.apache.commons.io.output.FileWriterWithEncoding.write"
                },
                {
                    "function name": "FileWriterWithEncoding",
                    "function params": [
                        "filename",
                        "encoding"
                    ],
                    "file name": "FileWriterWithEncoding.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                    "full name": "src.java.org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding"
                },
                {
                    "function name": "write",
                    "function params": [
                        "str",
                        "st",
                        "end"
                    ],
                    "file name": "FileWriterWithEncoding.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                    "full name": "src.java.org.apache.commons.io.output.FileWriterWithEncoding.write"
                },
                {
                    "function name": "FileWriterWithEncoding",
                    "function params": [
                        "file",
                        "encoding"
                    ],
                    "file name": "FileWriterWithEncoding.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                    "full name": "src.java.org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding"
                },
                {
                    "function name": "FileWriterWithEncoding",
                    "function params": [
                        "filename",
                        "encoding"
                    ],
                    "file name": "FileWriterWithEncoding.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                    "full name": "src.java.org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding"
                },
                {
                    "function name": "FileWriterWithEncoding",
                    "function params": [
                        "filename",
                        "encoding",
                        "append"
                    ],
                    "file name": "FileWriterWithEncoding.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                    "full name": "src.java.org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding"
                },
                {
                    "function name": "FileWriterWithEncoding",
                    "function params": [
                        "file",
                        "encoding"
                    ],
                    "file name": "FileWriterWithEncoding.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                    "full name": "src.java.org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding"
                },
                {
                    "function name": "FileWriterWithEncoding",
                    "function params": [
                        "file",
                        "encoding",
                        "append"
                    ],
                    "file name": "FileWriterWithEncoding.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                    "full name": "src.java.org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "FileWriterWithEncoding.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                    "full name": "src.java.org.apache.commons.io.output.FileWriterWithEncoding.close"
                },
                {
                    "function name": "write",
                    "function params": [
                        "str"
                    ],
                    "file name": "FileWriterWithEncoding.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                    "full name": "src.java.org.apache.commons.io.output.FileWriterWithEncoding.write"
                },
                {
                    "function name": "FileWriterWithEncoding",
                    "function params": [
                        "file",
                        "encoding"
                    ],
                    "file name": "FileWriterWithEncoding.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                    "full name": "src.java.org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding"
                },
                {
                    "function name": "FileWriterWithEncoding",
                    "function params": [
                        "filename",
                        "encoding",
                        "append"
                    ],
                    "file name": "FileWriterWithEncoding.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                    "full name": "src.java.org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding"
                },
                {
                    "function name": "write",
                    "function params": [
                        "idx"
                    ],
                    "file name": "FileWriterWithEncoding.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                    "full name": "src.java.org.apache.commons.io.output.FileWriterWithEncoding.write"
                },
                {
                    "function name": "flush",
                    "function params": [],
                    "file name": "FileWriterWithEncoding.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                    "full name": "src.java.org.apache.commons.io.output.FileWriterWithEncoding.flush"
                },
                {
                    "function name": "FileWriterWithEncoding",
                    "function params": [
                        "file",
                        "encoding",
                        "append"
                    ],
                    "file name": "FileWriterWithEncoding.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                    "full name": "src.java.org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding"
                },
                {
                    "function name": "FileWriterWithEncodingTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "FileWriterWithEncodingTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                    "full name": "src.test.org.apache.commons.io.output.FileWriterWithEncodingTest.FileWriterWithEncodingTest"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "FileWriterWithEncodingTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                    "full name": "src.test.org.apache.commons.io.output.FileWriterWithEncodingTest.setUp"
                },
                {
                    "function name": "testDifferentEncoding",
                    "function params": [],
                    "file name": "FileWriterWithEncodingTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                    "full name": "src.test.org.apache.commons.io.output.FileWriterWithEncodingTest.testDifferentEncoding"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "FileWriterWithEncodingTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                    "full name": "src.test.org.apache.commons.io.output.FileWriterWithEncodingTest.tearDown"
                },
                {
                    "function name": "testConstructor_fileName_nullFile",
                    "function params": [],
                    "file name": "FileWriterWithEncodingTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                    "full name": "src.test.org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_fileName_nullFile"
                },
                {
                    "function name": "testConstructor_File_nullFile",
                    "function params": [],
                    "file name": "FileWriterWithEncodingTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                    "full name": "src.test.org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_nullFile"
                },
                {
                    "function name": "testConstructor_File_directory",
                    "function params": [],
                    "file name": "FileWriterWithEncodingTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                    "full name": "src.test.org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_directory"
                },
                {
                    "function name": "testSameEncoding",
                    "function params": [],
                    "file name": "FileWriterWithEncodingTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                    "full name": "src.test.org.apache.commons.io.output.FileWriterWithEncodingTest.testSameEncoding"
                },
                {
                    "function name": "testConstructor_File_encoding_badEncoding",
                    "function params": [],
                    "file name": "FileWriterWithEncodingTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                    "full name": "src.test.org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_encoding_badEncoding"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "PackageTestSuite.java",
                    "file old path": "src/test/org/apache/commons/io/output/PackageTestSuite.java",
                    "file new path": "src/test/org/apache/commons/io/output/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.output.PackageTestSuite.suite"
                }
            ],
            "date": "2008-01-08"
        },
        {
            "commit_id": 489,
            "hash": "14978fec52d916b2e371044c714191013d3bb02c",
            "commit_summary": "IO-149 Make FilenameUtils.EXTENSION_SEPARATOR public - proposed by Gary Gregory\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@609870 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java"
            ],
            "functions": [],
            "date": "2008-01-08"
        },
        {
            "commit_id": 490,
            "hash": "fe6ec030da1ab53b5e5dc481572c9f072be3b965",
            "commit_summary": "Checkstyle/javadoc only - @see no longer works since checkstyle 4 - see http://tinyurl.com/2x8cev\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@610010 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/AutoCloseInputStream.java",
                "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                "src/java/org/apache/commons/io/input/ProxyReader.java",
                "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "src/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                "src/java/org/apache/commons/io/output/NullOutputStream.java",
                "src/java/org/apache/commons/io/output/NullWriter.java",
                "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                "src/java/org/apache/commons/io/output/ProxyWriter.java",
                "src/java/org/apache/commons/io/output/TeeOutputStream.java"
            ],
            "functions": [],
            "date": "2008-01-08"
        },
        {
            "commit_id": 491,
            "hash": "ded863b7710703cf27f42248a8dc467419ca3af9",
            "commit_summary": "Fix spelling allready -> already\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@610473 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [
                {
                    "function name": "moveFile",
                    "function params": [
                        "srcFile",
                        "destFile"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.moveFile"
                },
                {
                    "function name": "moveDirectory",
                    "function params": [
                        "srcDir",
                        "destDir"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.moveDirectory"
                }
            ],
            "date": "2008-01-09"
        },
        {
            "commit_id": 492,
            "hash": "cffe620e13b6a180e0347f6c12a12876e76534c4",
            "commit_summary": "Javadoc: Some methods were not using the active voices (e.g. \"Moves...\" instead of \"Move...\") in the first sentence of the Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@610485 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [],
            "date": "2008-01-09"
        },
        {
            "commit_id": 493,
            "hash": "ae372dbb31a9df152574c254eb7b48cb0aee82a5",
            "commit_summary": "Removed unnecessary cast.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@610516 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/CharSequenceReader.java"
            ],
            "functions": [
                {
                    "function name": "read",
                    "function params": [],
                    "file name": "CharSequenceReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/CharSequenceReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/CharSequenceReader.java",
                    "full name": "src.java.org.apache.commons.io.input.CharSequenceReader.read"
                }
            ],
            "date": "2008-01-09"
        },
        {
            "commit_id": 494,
            "hash": "660b89f08ab6469d548800b83619e4207c78381b",
            "commit_summary": "IO-77 revert to throwing NullPointerException rather than IllegalArgumentException\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@610810 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "moveFileToDirectory",
                    "function params": [
                        "srcFile",
                        "destDir",
                        "createDestDir"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.moveFileToDirectory"
                },
                {
                    "function name": "moveDirectoryToDirectory",
                    "function params": [
                        "src",
                        "destDir",
                        "createDestDir"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.moveDirectoryToDirectory"
                },
                {
                    "function name": "moveToDirectory",
                    "function params": [
                        "src",
                        "destDir",
                        "createDestDir"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.moveToDirectory"
                },
                {
                    "function name": "moveFile",
                    "function params": [
                        "srcFile",
                        "destFile"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.moveFile"
                },
                {
                    "function name": "moveDirectory",
                    "function params": [
                        "srcDir",
                        "destDir"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.moveDirectory"
                },
                {
                    "function name": "testMoveFile_Errors",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testMoveFile_Errors"
                },
                {
                    "function name": "testMoveDirectory_Errors",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Errors"
                },
                {
                    "function name": "testMoveFileToDirectory_Errors",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory_Errors"
                },
                {
                    "function name": "testMoveDirectoryToDirectory_Errors",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory_Errors"
                },
                {
                    "function name": "testMoveToDirectory_Errors",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory_Errors"
                }
            ],
            "date": "2008-01-10"
        },
        {
            "commit_id": 495,
            "hash": "c095d3cc232eedccb23e33d349546bda6adbe3aa",
            "commit_summary": "Add package test suite for comparators\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@611447 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "PackageTestSuite.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.comparator.PackageTestSuite.suite"
                },
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "PackageTestSuite.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.comparator.PackageTestSuite.main"
                }
            ],
            "date": "2008-01-12"
        },
        {
            "commit_id": 496,
            "hash": "ad41c8245cffd116890255258875da894712caf3",
            "commit_summary": "Correct JavaDoc - encoding must be specified\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@611634 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/output/FileWriterWithEncoding.java"
            ],
            "functions": [],
            "date": "2008-01-13"
        },
        {
            "commit_id": 497,
            "hash": "e413d91e7b3bfefb26480946d5e17f7b109a2202",
            "commit_summary": "IO-127 - Changes so that the tests run on JDK 1.3 using the Ant build:\n- Remove RegexFileFilter tests from FileFilterTestCase and put them in a new separate test case (RegexFileFilterTestCase)\n- Remove the other JDK 1.4 dependant classes from the package test suites\n- change the Ant build to conditionally compile and run the tests based on whether Java version is JDK 1.3 or higher\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@612686 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/PackageTestSuite.java",
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "src/test/org/apache/commons/io/input/PackageTestSuite.java",
                "src/test/org/apache/commons/io/output/PackageTestSuite.java"
            ],
            "functions": [
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "PackageTestSuite.java",
                    "file old path": "src/test/org/apache/commons/io/PackageTestSuite.java",
                    "file new path": "src/test/org/apache/commons/io/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.PackageTestSuite.suite"
                },
                {
                    "function name": "testRegex",
                    "function params": [],
                    "file name": "RegexFileFilterTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.RegexFileFilterTestCase.testRegex"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "RegexFileFilterTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.RegexFileFilterTestCase.tearDown"
                },
                {
                    "function name": "assertFiltering",
                    "function params": [
                        "filter",
                        "file",
                        "expected"
                    ],
                    "file name": "RegexFileFilterTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering"
                },
                {
                    "function name": "RegexFileFilterTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "RegexFileFilterTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.RegexFileFilterTestCase.RegexFileFilterTestCase"
                },
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "RegexFileFilterTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.RegexFileFilterTestCase.main"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "RegexFileFilterTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.RegexFileFilterTestCase.suite"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "RegexFileFilterTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.RegexFileFilterTestCase.setUp"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "PackageTestSuite.java",
                    "file old path": "src/test/org/apache/commons/io/input/PackageTestSuite.java",
                    "file new path": "src/test/org/apache/commons/io/input/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.input.PackageTestSuite.suite"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "PackageTestSuite.java",
                    "file old path": "src/test/org/apache/commons/io/output/PackageTestSuite.java",
                    "file new path": "src/test/org/apache/commons/io/output/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.output.PackageTestSuite.suite"
                }
            ],
            "date": "2008-01-17"
        },
        {
            "commit_id": 498,
            "hash": "60a177e6916379255d19becae385f7d354bd8097",
            "commit_summary": "Add FileCleaningTrackerTestCase to the package suite - thanks to Sebb\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@612857 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/PackageTestSuite.java"
            ],
            "functions": [
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "PackageTestSuite.java",
                    "file old path": "src/test/org/apache/commons/io/PackageTestSuite.java",
                    "file new path": "src/test/org/apache/commons/io/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.PackageTestSuite.suite"
                }
            ],
            "date": "2008-01-17"
        },
        {
            "commit_id": 499,
            "hash": "651332ef291809e8271cec74fdd6691cfb725f9f",
            "commit_summary": "Remove extraneous exec properties\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@618694 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/FileFileFilter.java"
            ],
            "functions": [],
            "date": "2008-02-05"
        },
        {
            "commit_id": 500,
            "hash": "a7628b03ac47459a47f2c340bb474afe50ea0a31",
            "commit_summary": "Switch to JDK 1.5, remove JDK 1.3 logic from ant build\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619102 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/PackageTestSuite.java",
                "src/test/org/apache/commons/io/filefilter/PackageTestSuite.java",
                "src/test/org/apache/commons/io/input/PackageTestSuite.java",
                "src/test/org/apache/commons/io/output/PackageTestSuite.java"
            ],
            "functions": [
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "PackageTestSuite.java",
                    "file old path": "src/test/org/apache/commons/io/PackageTestSuite.java",
                    "file new path": "src/test/org/apache/commons/io/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.PackageTestSuite.suite"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "PackageTestSuite.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/PackageTestSuite.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.PackageTestSuite.suite"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "PackageTestSuite.java",
                    "file old path": "src/test/org/apache/commons/io/input/PackageTestSuite.java",
                    "file new path": "src/test/org/apache/commons/io/input/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.input.PackageTestSuite.suite"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "PackageTestSuite.java",
                    "file old path": "src/test/org/apache/commons/io/output/PackageTestSuite.java",
                    "file new path": "src/test/org/apache/commons/io/output/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.output.PackageTestSuite.suite"
                }
            ],
            "date": "2008-02-06"
        },
        {
            "commit_id": 501,
            "hash": "a74a5a0c6ff41a4ca0a08caf740ebce1dc3c6d10",
            "commit_summary": "IO-140 JDK 1.5 changes: Use generics\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619103 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileCleaningTracker.java",
                "src/java/org/apache/commons/io/FileSystemUtils.java",
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/java/org/apache/commons/io/FilenameUtils.java",
                "src/java/org/apache/commons/io/IOUtils.java",
                "src/java/org/apache/commons/io/LineIterator.java",
                "src/java/org/apache/commons/io/comparator/DefaultFileComparator.java",
                "src/java/org/apache/commons/io/comparator/ExtensionFileComparator.java",
                "src/java/org/apache/commons/io/comparator/LastModifiedFileComparator.java",
                "src/java/org/apache/commons/io/comparator/NameFileComparator.java",
                "src/java/org/apache/commons/io/comparator/PathFileComparator.java",
                "src/java/org/apache/commons/io/comparator/ReverseComparator.java",
                "src/java/org/apache/commons/io/comparator/SizeFileComparator.java",
                "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/ConditionalFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "src/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                "src/java/org/apache/commons/io/input/DemuxInputStream.java",
                "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "src/java/org/apache/commons/io/output/DemuxOutputStream.java"
            ],
            "functions": [
                {
                    "function name": "performCommand",
                    "function params": [
                        "cmdAttribs",
                        "max"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.performCommand"
                },
                {
                    "function name": "freeSpaceUnix",
                    "function params": [
                        "path",
                        "kb",
                        "posix"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.freeSpaceUnix"
                },
                {
                    "function name": "listFiles",
                    "function params": [
                        "directory",
                        "fileFilter",
                        "dirFilter"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.listFiles"
                },
                {
                    "function name": "copyDirectory",
                    "function params": [
                        "srcDir",
                        "destDir",
                        "filter",
                        "preserveFileDate"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyDirectory"
                },
                {
                    "function name": "doCopyDirectory",
                    "function params": [
                        "srcDir",
                        "destDir",
                        "filter",
                        "preserveFileDate",
                        "exclusionList"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.doCopyDirectory"
                },
                {
                    "function name": "doCopyDirectory",
                    "function params": [
                        "srcDir",
                        "destDir",
                        "filter",
                        "preserveFileDate",
                        "exclusionList"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.doCopyDirectory"
                },
                {
                    "function name": "innerListFiles",
                    "function params": [
                        "files",
                        "directory",
                        "filter"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.innerListFiles"
                },
                {
                    "function name": "convertFileCollectionToFileArray",
                    "function params": [
                        "files"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.convertFileCollectionToFileArray"
                },
                {
                    "function name": "innerListFiles",
                    "function params": [
                        "files",
                        "directory",
                        "filter"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.innerListFiles"
                },
                {
                    "function name": "convertFileCollectionToFileArray",
                    "function params": [
                        "files"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.convertFileCollectionToFileArray"
                },
                {
                    "function name": "splitOnTokens",
                    "function params": [
                        "text"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.splitOnTokens"
                },
                {
                    "function name": "wildcardMatch",
                    "function params": [
                        "filename",
                        "wildcardMatcher",
                        "caseSensitivity"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.wildcardMatch"
                },
                {
                    "function name": "readLines",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.readLines"
                },
                {
                    "function name": "next",
                    "function params": [],
                    "file name": "LineIterator.java",
                    "file old path": "src/java/org/apache/commons/io/LineIterator.java",
                    "file new path": "src/java/org/apache/commons/io/LineIterator.java",
                    "full name": "src.java.org.apache.commons.io.LineIterator.next"
                },
                {
                    "function name": "compare",
                    "function params": [
                        "obj1",
                        "obj2"
                    ],
                    "file name": "DefaultFileComparator.java",
                    "file old path": "src/java/org/apache/commons/io/comparator/DefaultFileComparator.java",
                    "file new path": "src/java/org/apache/commons/io/comparator/DefaultFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.DefaultFileComparator.compare"
                },
                {
                    "function name": "compare",
                    "function params": [
                        "file1",
                        "file2"
                    ],
                    "file name": "DefaultFileComparator.java",
                    "file old path": "src/java/org/apache/commons/io/comparator/DefaultFileComparator.java",
                    "file new path": "src/java/org/apache/commons/io/comparator/DefaultFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.DefaultFileComparator.compare"
                },
                {
                    "function name": "compare",
                    "function params": [
                        "file1",
                        "file2"
                    ],
                    "file name": "ExtensionFileComparator.java",
                    "file old path": "src/java/org/apache/commons/io/comparator/ExtensionFileComparator.java",
                    "file new path": "src/java/org/apache/commons/io/comparator/ExtensionFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.ExtensionFileComparator.compare"
                },
                {
                    "function name": "compare",
                    "function params": [
                        "obj1",
                        "obj2"
                    ],
                    "file name": "ExtensionFileComparator.java",
                    "file old path": "src/java/org/apache/commons/io/comparator/ExtensionFileComparator.java",
                    "file new path": "src/java/org/apache/commons/io/comparator/ExtensionFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.ExtensionFileComparator.compare"
                },
                {
                    "function name": "compare",
                    "function params": [
                        "obj1",
                        "obj2"
                    ],
                    "file name": "LastModifiedFileComparator.java",
                    "file old path": "src/java/org/apache/commons/io/comparator/LastModifiedFileComparator.java",
                    "file new path": "src/java/org/apache/commons/io/comparator/LastModifiedFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.LastModifiedFileComparator.compare"
                },
                {
                    "function name": "compare",
                    "function params": [
                        "file1",
                        "file2"
                    ],
                    "file name": "LastModifiedFileComparator.java",
                    "file old path": "src/java/org/apache/commons/io/comparator/LastModifiedFileComparator.java",
                    "file new path": "src/java/org/apache/commons/io/comparator/LastModifiedFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.LastModifiedFileComparator.compare"
                },
                {
                    "function name": "compare",
                    "function params": [
                        "obj1",
                        "obj2"
                    ],
                    "file name": "NameFileComparator.java",
                    "file old path": "src/java/org/apache/commons/io/comparator/NameFileComparator.java",
                    "file new path": "src/java/org/apache/commons/io/comparator/NameFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.NameFileComparator.compare"
                },
                {
                    "function name": "compare",
                    "function params": [
                        "file1",
                        "file2"
                    ],
                    "file name": "NameFileComparator.java",
                    "file old path": "src/java/org/apache/commons/io/comparator/NameFileComparator.java",
                    "file new path": "src/java/org/apache/commons/io/comparator/NameFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.NameFileComparator.compare"
                },
                {
                    "function name": "compare",
                    "function params": [
                        "file1",
                        "file2"
                    ],
                    "file name": "PathFileComparator.java",
                    "file old path": "src/java/org/apache/commons/io/comparator/PathFileComparator.java",
                    "file new path": "src/java/org/apache/commons/io/comparator/PathFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.PathFileComparator.compare"
                },
                {
                    "function name": "compare",
                    "function params": [
                        "obj1",
                        "obj2"
                    ],
                    "file name": "PathFileComparator.java",
                    "file old path": "src/java/org/apache/commons/io/comparator/PathFileComparator.java",
                    "file new path": "src/java/org/apache/commons/io/comparator/PathFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.PathFileComparator.compare"
                },
                {
                    "function name": "ReverseComparator",
                    "function params": [
                        "delegate"
                    ],
                    "file name": "ReverseComparator.java",
                    "file old path": "src/java/org/apache/commons/io/comparator/ReverseComparator.java",
                    "file new path": "src/java/org/apache/commons/io/comparator/ReverseComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.ReverseComparator.ReverseComparator"
                },
                {
                    "function name": "compare",
                    "function params": [
                        "file1",
                        "file2"
                    ],
                    "file name": "ReverseComparator.java",
                    "file old path": "src/java/org/apache/commons/io/comparator/ReverseComparator.java",
                    "file new path": "src/java/org/apache/commons/io/comparator/ReverseComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.ReverseComparator.compare"
                },
                {
                    "function name": "compare",
                    "function params": [
                        "obj1",
                        "obj2"
                    ],
                    "file name": "ReverseComparator.java",
                    "file old path": "src/java/org/apache/commons/io/comparator/ReverseComparator.java",
                    "file new path": "src/java/org/apache/commons/io/comparator/ReverseComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.ReverseComparator.compare"
                },
                {
                    "function name": "ReverseComparator",
                    "function params": [
                        "delegate"
                    ],
                    "file name": "ReverseComparator.java",
                    "file old path": "src/java/org/apache/commons/io/comparator/ReverseComparator.java",
                    "file new path": "src/java/org/apache/commons/io/comparator/ReverseComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.ReverseComparator.ReverseComparator"
                },
                {
                    "function name": "compare",
                    "function params": [
                        "file1",
                        "file2"
                    ],
                    "file name": "SizeFileComparator.java",
                    "file old path": "src/java/org/apache/commons/io/comparator/SizeFileComparator.java",
                    "file new path": "src/java/org/apache/commons/io/comparator/SizeFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.SizeFileComparator.compare"
                },
                {
                    "function name": "compare",
                    "function params": [
                        "obj1",
                        "obj2"
                    ],
                    "file name": "SizeFileComparator.java",
                    "file old path": "src/java/org/apache/commons/io/comparator/SizeFileComparator.java",
                    "file new path": "src/java/org/apache/commons/io/comparator/SizeFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.SizeFileComparator.compare"
                },
                {
                    "function name": "AndFileFilter",
                    "function params": [],
                    "file name": "AndFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter"
                },
                {
                    "function name": "AndFileFilter",
                    "function params": [
                        "filter1",
                        "filter2"
                    ],
                    "file name": "AndFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter"
                },
                {
                    "function name": "setFileFilters",
                    "function params": [
                        "fileFilters"
                    ],
                    "file name": "AndFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AndFileFilter.setFileFilters"
                },
                {
                    "function name": "setFileFilters",
                    "function params": [
                        "fileFilters"
                    ],
                    "file name": "AndFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AndFileFilter.setFileFilters"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "AndFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AndFileFilter.accept"
                },
                {
                    "function name": "getFileFilters",
                    "function params": [],
                    "file name": "AndFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AndFileFilter.getFileFilters"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file",
                        "name"
                    ],
                    "file name": "AndFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AndFileFilter.accept"
                },
                {
                    "function name": "AndFileFilter",
                    "function params": [
                        "fileFilters"
                    ],
                    "file name": "AndFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter"
                },
                {
                    "function name": "AndFileFilter",
                    "function params": [
                        "fileFilters"
                    ],
                    "file name": "AndFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter"
                },
                {
                    "function name": "NameFileFilter",
                    "function params": [
                        "names"
                    ],
                    "file name": "NameFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter"
                },
                {
                    "function name": "NameFileFilter",
                    "function params": [
                        "names",
                        "caseSensitivity"
                    ],
                    "file name": "NameFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter"
                },
                {
                    "function name": "NameFileFilter",
                    "function params": [
                        "names",
                        "caseSensitivity"
                    ],
                    "file name": "NameFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter"
                },
                {
                    "function name": "NameFileFilter",
                    "function params": [
                        "names"
                    ],
                    "file name": "NameFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter"
                },
                {
                    "function name": "OrFileFilter",
                    "function params": [
                        "filter1",
                        "filter2"
                    ],
                    "file name": "OrFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter"
                },
                {
                    "function name": "setFileFilters",
                    "function params": [
                        "fileFilters"
                    ],
                    "file name": "OrFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.OrFileFilter.setFileFilters"
                },
                {
                    "function name": "setFileFilters",
                    "function params": [
                        "fileFilters"
                    ],
                    "file name": "OrFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.OrFileFilter.setFileFilters"
                },
                {
                    "function name": "getFileFilters",
                    "function params": [],
                    "file name": "OrFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.OrFileFilter.getFileFilters"
                },
                {
                    "function name": "OrFileFilter",
                    "function params": [],
                    "file name": "OrFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "OrFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.OrFileFilter.accept"
                },
                {
                    "function name": "OrFileFilter",
                    "function params": [
                        "fileFilters"
                    ],
                    "file name": "OrFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter"
                },
                {
                    "function name": "OrFileFilter",
                    "function params": [
                        "fileFilters"
                    ],
                    "file name": "OrFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file",
                        "name"
                    ],
                    "file name": "OrFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.OrFileFilter.accept"
                },
                {
                    "function name": "PrefixFileFilter",
                    "function params": [
                        "prefixes",
                        "caseSensitivity"
                    ],
                    "file name": "PrefixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter"
                },
                {
                    "function name": "PrefixFileFilter",
                    "function params": [
                        "prefixes",
                        "caseSensitivity"
                    ],
                    "file name": "PrefixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter"
                },
                {
                    "function name": "PrefixFileFilter",
                    "function params": [
                        "prefixes"
                    ],
                    "file name": "PrefixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter"
                },
                {
                    "function name": "PrefixFileFilter",
                    "function params": [
                        "prefixes"
                    ],
                    "file name": "PrefixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter"
                },
                {
                    "function name": "SuffixFileFilter",
                    "function params": [
                        "suffixes"
                    ],
                    "file name": "SuffixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter"
                },
                {
                    "function name": "SuffixFileFilter",
                    "function params": [
                        "suffixes"
                    ],
                    "file name": "SuffixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter"
                },
                {
                    "function name": "SuffixFileFilter",
                    "function params": [
                        "suffixes",
                        "caseSensitivity"
                    ],
                    "file name": "SuffixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter"
                },
                {
                    "function name": "SuffixFileFilter",
                    "function params": [
                        "suffixes",
                        "caseSensitivity"
                    ],
                    "file name": "SuffixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter"
                },
                {
                    "function name": "WildcardFileFilter",
                    "function params": [
                        "wildcards"
                    ],
                    "file name": "WildcardFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter"
                },
                {
                    "function name": "WildcardFileFilter",
                    "function params": [
                        "wildcards",
                        "caseSensitivity"
                    ],
                    "file name": "WildcardFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter"
                },
                {
                    "function name": "WildcardFileFilter",
                    "function params": [
                        "wildcards",
                        "caseSensitivity"
                    ],
                    "file name": "WildcardFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter"
                },
                {
                    "function name": "WildcardFileFilter",
                    "function params": [
                        "wildcards"
                    ],
                    "file name": "WildcardFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter"
                },
                {
                    "function name": "WildcardFilter",
                    "function params": [
                        "wildcards"
                    ],
                    "file name": "WildcardFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.WildcardFilter.WildcardFilter"
                },
                {
                    "function name": "WildcardFilter",
                    "function params": [
                        "wildcards"
                    ],
                    "file name": "WildcardFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.WildcardFilter.WildcardFilter"
                },
                {
                    "function name": "resolveClass",
                    "function params": [
                        "objectStreamClass"
                    ],
                    "file name": "ClassLoaderObjectInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ClassLoaderObjectInputStream.resolveClass"
                },
                {
                    "function name": "bindStream",
                    "function params": [
                        "input"
                    ],
                    "file name": "DemuxInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/DemuxInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/DemuxInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.DemuxInputStream.bindStream"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "DemuxInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/DemuxInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/DemuxInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.DemuxInputStream.close"
                },
                {
                    "function name": "read",
                    "function params": [],
                    "file name": "DemuxInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/DemuxInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/DemuxInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.DemuxInputStream.read"
                },
                {
                    "function name": "toByteArray",
                    "function params": [],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.toByteArray"
                },
                {
                    "function name": "writeTo",
                    "function params": [
                        "out"
                    ],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.writeTo"
                },
                {
                    "function name": "reset",
                    "function params": [],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.reset"
                },
                {
                    "function name": "needNewBuffer",
                    "function params": [
                        "newcount"
                    ],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.needNewBuffer"
                },
                {
                    "function name": "write",
                    "function params": [
                        "ch"
                    ],
                    "file name": "DemuxOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/DemuxOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/DemuxOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.DemuxOutputStream.write"
                },
                {
                    "function name": "bindStream",
                    "function params": [
                        "output"
                    ],
                    "file name": "DemuxOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/DemuxOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/DemuxOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.DemuxOutputStream.bindStream"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "DemuxOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/DemuxOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/DemuxOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.DemuxOutputStream.close"
                },
                {
                    "function name": "flush",
                    "function params": [],
                    "file name": "DemuxOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/DemuxOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/DemuxOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.DemuxOutputStream.flush"
                }
            ],
            "date": "2008-02-06"
        },
        {
            "commit_id": 502,
            "hash": "6d6a73a689ce734d094f71723752cde23a1d9259",
            "commit_summary": "IO-140 JDK 1.5 changes: Use StringBuilder (not-sync) instead of StringBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619112 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileSystemUtils.java",
                "src/java/org/apache/commons/io/FilenameUtils.java",
                "src/java/org/apache/commons/io/HexDump.java",
                "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java"
            ],
            "functions": [
                {
                    "function name": "parseDir",
                    "function params": [
                        "line",
                        "path"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.parseDir"
                },
                {
                    "function name": "splitOnTokens",
                    "function params": [
                        "text"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.splitOnTokens"
                },
                {
                    "function name": "dump",
                    "function params": [
                        "_lbuffer",
                        "value"
                    ],
                    "file name": "HexDump.java",
                    "file old path": "src/java/org/apache/commons/io/HexDump.java",
                    "file new path": "src/java/org/apache/commons/io/HexDump.java",
                    "full name": "src.java.org.apache.commons.io.HexDump.dump"
                },
                {
                    "function name": "dump",
                    "function params": [
                        "_cbuffer",
                        "value"
                    ],
                    "file name": "HexDump.java",
                    "file old path": "src/java/org/apache/commons/io/HexDump.java",
                    "file new path": "src/java/org/apache/commons/io/HexDump.java",
                    "full name": "src.java.org.apache.commons.io.HexDump.dump"
                },
                {
                    "function name": "dump",
                    "function params": [
                        "_cbuffer",
                        "value"
                    ],
                    "file name": "HexDump.java",
                    "file old path": "src/java/org/apache/commons/io/HexDump.java",
                    "file new path": "src/java/org/apache/commons/io/HexDump.java",
                    "full name": "src.java.org.apache.commons.io.HexDump.dump"
                },
                {
                    "function name": "dump",
                    "function params": [
                        "data",
                        "offset",
                        "stream",
                        "index"
                    ],
                    "file name": "HexDump.java",
                    "file old path": "src/java/org/apache/commons/io/HexDump.java",
                    "file new path": "src/java/org/apache/commons/io/HexDump.java",
                    "full name": "src.java.org.apache.commons.io.HexDump.dump"
                },
                {
                    "function name": "dump",
                    "function params": [
                        "_lbuffer",
                        "value"
                    ],
                    "file name": "HexDump.java",
                    "file old path": "src/java/org/apache/commons/io/HexDump.java",
                    "file new path": "src/java/org/apache/commons/io/HexDump.java",
                    "full name": "src.java.org.apache.commons.io.HexDump.dump"
                },
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "AndFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AndFileFilter.toString"
                },
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "NameFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NameFileFilter.toString"
                },
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "OrFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.OrFileFilter.toString"
                },
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "PrefixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.PrefixFileFilter.toString"
                },
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "SuffixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.SuffixFileFilter.toString"
                },
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "WildcardFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.WildcardFileFilter.toString"
                }
            ],
            "date": "2008-02-06"
        },
        {
            "commit_id": 503,
            "hash": "e3631718822db05a02cb7b086d6f28a0fae15f51",
            "commit_summary": "IO-140 JDK 1.5 changes: Add new JDK 1.5 methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619135 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/ProxyReader.java",
                "src/java/org/apache/commons/io/output/NullWriter.java",
                "src/java/org/apache/commons/io/output/ProxyWriter.java"
            ],
            "functions": [
                {
                    "function name": "read",
                    "function params": [
                        "target"
                    ],
                    "file name": "ProxyReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyReader.read"
                },
                {
                    "function name": "append",
                    "function params": [
                        "csq",
                        "start",
                        "end"
                    ],
                    "file name": "NullWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/NullWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/NullWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.NullWriter.append"
                },
                {
                    "function name": "append",
                    "function params": [
                        "c"
                    ],
                    "file name": "NullWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/NullWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/NullWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.NullWriter.append"
                },
                {
                    "function name": "append",
                    "function params": [
                        "csq"
                    ],
                    "file name": "NullWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/NullWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/NullWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.NullWriter.append"
                },
                {
                    "function name": "append",
                    "function params": [
                        "csq"
                    ],
                    "file name": "ProxyWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.append"
                },
                {
                    "function name": "append",
                    "function params": [
                        "csq",
                        "start",
                        "end"
                    ],
                    "file name": "ProxyWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.append"
                },
                {
                    "function name": "append",
                    "function params": [
                        "c"
                    ],
                    "file name": "ProxyWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.append"
                }
            ],
            "date": "2008-02-06"
        },
        {
            "commit_id": 504,
            "hash": "1b497f6ceea71f03d4529b29af901f286ef9b44f",
            "commit_summary": "IO-139 Add StringBuilder Writer implementation\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619141 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "StringBuilderWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/StringBuilderWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.StringBuilderWriter.toString"
                },
                {
                    "function name": "StringBuilderWriter",
                    "function params": [],
                    "file name": "StringBuilderWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/StringBuilderWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter"
                },
                {
                    "function name": "StringBuilderWriter",
                    "function params": [
                        "builder"
                    ],
                    "file name": "StringBuilderWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/StringBuilderWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter"
                },
                {
                    "function name": "append",
                    "function params": [
                        "value"
                    ],
                    "file name": "StringBuilderWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/StringBuilderWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.StringBuilderWriter.append"
                },
                {
                    "function name": "StringBuilderWriter",
                    "function params": [
                        "capacity"
                    ],
                    "file name": "StringBuilderWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/StringBuilderWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter"
                },
                {
                    "function name": "write",
                    "function params": [
                        "value"
                    ],
                    "file name": "StringBuilderWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/StringBuilderWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.StringBuilderWriter.write"
                },
                {
                    "function name": "getBuilder",
                    "function params": [],
                    "file name": "StringBuilderWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/StringBuilderWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.StringBuilderWriter.getBuilder"
                },
                {
                    "function name": "flush",
                    "function params": [],
                    "file name": "StringBuilderWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/StringBuilderWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.StringBuilderWriter.flush"
                },
                {
                    "function name": "append",
                    "function params": [
                        "value"
                    ],
                    "file name": "StringBuilderWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/StringBuilderWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.StringBuilderWriter.append"
                },
                {
                    "function name": "write",
                    "function params": [
                        "value",
                        "offset",
                        "length"
                    ],
                    "file name": "StringBuilderWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/StringBuilderWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.StringBuilderWriter.write"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "StringBuilderWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/StringBuilderWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.StringBuilderWriter.close"
                },
                {
                    "function name": "append",
                    "function params": [
                        "value",
                        "start",
                        "end"
                    ],
                    "file name": "StringBuilderWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/StringBuilderWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.StringBuilderWriter.append"
                },
                {
                    "function name": "testAppendConstructNull",
                    "function params": [],
                    "file name": "StringBuilderWriterTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/StringBuilderWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructNull"
                },
                {
                    "function name": "testAppendConstructCapacity",
                    "function params": [],
                    "file name": "StringBuilderWriterTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/StringBuilderWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructCapacity"
                },
                {
                    "function name": "testAppendCharSequencePortion",
                    "function params": [],
                    "file name": "StringBuilderWriterTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/StringBuilderWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.StringBuilderWriterTest.testAppendCharSequencePortion"
                },
                {
                    "function name": "testAppendCharSequence",
                    "function params": [],
                    "file name": "StringBuilderWriterTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/StringBuilderWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.StringBuilderWriterTest.testAppendCharSequence"
                },
                {
                    "function name": "testClose",
                    "function params": [],
                    "file name": "StringBuilderWriterTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/StringBuilderWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.StringBuilderWriterTest.testClose"
                },
                {
                    "function name": "testWriteCharArrayPortion",
                    "function params": [],
                    "file name": "StringBuilderWriterTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/StringBuilderWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.StringBuilderWriterTest.testWriteCharArrayPortion"
                },
                {
                    "function name": "StringBuilderWriterTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "StringBuilderWriterTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/StringBuilderWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.StringBuilderWriterTest.StringBuilderWriterTest"
                },
                {
                    "function name": "testWriteString",
                    "function params": [],
                    "file name": "StringBuilderWriterTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/StringBuilderWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.StringBuilderWriterTest.testWriteString"
                },
                {
                    "function name": "testWriteChar",
                    "function params": [],
                    "file name": "StringBuilderWriterTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/StringBuilderWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.StringBuilderWriterTest.testWriteChar"
                },
                {
                    "function name": "testAppendConstructStringBuilder",
                    "function params": [],
                    "file name": "StringBuilderWriterTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/StringBuilderWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructStringBuilder"
                },
                {
                    "function name": "testWriteCharArray",
                    "function params": [],
                    "file name": "StringBuilderWriterTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/StringBuilderWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.StringBuilderWriterTest.testWriteCharArray"
                },
                {
                    "function name": "testWriteStringPortion",
                    "function params": [],
                    "file name": "StringBuilderWriterTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/StringBuilderWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.StringBuilderWriterTest.testWriteStringPortion"
                },
                {
                    "function name": "testAppendChar",
                    "function params": [],
                    "file name": "StringBuilderWriterTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/StringBuilderWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.StringBuilderWriterTest.testAppendChar"
                }
            ],
            "date": "2008-02-06"
        },
        {
            "commit_id": 505,
            "hash": "f459805b3917cd01445f6f37d438484da8ae6bed",
            "commit_summary": "Javadoc corrections\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619144 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/output/NullWriter.java",
                "src/java/org/apache/commons/io/output/ProxyWriter.java"
            ],
            "functions": [],
            "date": "2008-02-06"
        },
        {
            "commit_id": 506,
            "hash": "ae8a261d47bec45e42904fd3e761860bab1e404c",
            "commit_summary": "IO-155 Use nio to copy files - based on a patch from Nicolas de Loof\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619156 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/java/org/apache/commons/io/IOUtils.java"
            ],
            "functions": [
                {
                    "function name": "doCopyFile",
                    "function params": [
                        "srcFile",
                        "destFile",
                        "preserveFileDate"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.doCopyFile"
                },
                {
                    "function name": "closeQuietly",
                    "function params": [
                        "channel"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.closeQuietly"
                }
            ],
            "date": "2008-02-06"
        },
        {
            "commit_id": 507,
            "hash": "61b41ee528d4d5cd358f8f5b0a4b2c5a743da561",
            "commit_summary": "IO-140 JDK 1.5 changes: Add new CharSequence flavours of methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619188 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/java/org/apache/commons/io/IOUtils.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java"
            ],
            "functions": [
                {
                    "function name": "write",
                    "function params": [
                        "file",
                        "data"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "file",
                        "data",
                        "encoding"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "toInputStream",
                    "function params": [
                        "input",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toInputStream"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "toInputStream",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toInputStream"
                },
                {
                    "function name": "testWriteCharSequence2",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testWriteCharSequence2"
                },
                {
                    "function name": "testWriteCharSequence1",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testWriteCharSequence1"
                },
                {
                    "function name": "testCharSequenceToInputStream",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testCharSequenceToInputStream"
                },
                {
                    "function name": "testWrite_charSequenceToWriter_Encoding_nullData",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter_Encoding_nullData"
                },
                {
                    "function name": "testWrite_charSequenceToOutputStream_nullStream",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullStream"
                },
                {
                    "function name": "testWrite_charSequenceToOutputStream_Encoding_nullData",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding_nullData"
                },
                {
                    "function name": "testWrite_charSequenceToWriter_Encoding_nullStream",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter_Encoding_nullStream"
                },
                {
                    "function name": "testWrite_charSequenceToOutputStream_Encoding",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding"
                },
                {
                    "function name": "testWrite_charSequenceToOutputStream",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream"
                },
                {
                    "function name": "testWrite_charSequenceToOutputStream_Encoding_nullStream",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding_nullStream"
                },
                {
                    "function name": "testWrite_charSequenceToOutputStream_nullEncoding",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullEncoding"
                },
                {
                    "function name": "testWrite_charSequenceToOutputStream_nullData",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullData"
                },
                {
                    "function name": "testWrite_charSequenceToWriter",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter"
                }
            ],
            "date": "2008-02-06"
        },
        {
            "commit_id": 508,
            "hash": "710ec8c94f842477c78adc5aeaf8fa11059d80be",
            "commit_summary": "IO-140 JDK 1.5 changes: Switch from StringWriter to StringBuilderWriter\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619195 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/IOUtils.java"
            ],
            "functions": [
                {
                    "function name": "toString",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                }
            ],
            "date": "2008-02-06"
        },
        {
            "commit_id": 509,
            "hash": "f8b24f98550578bcec92adc615f319f70f1cfc08",
            "commit_summary": "Specify explict types\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619241 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testListFiles",
                    "function params": [],
                    "file name": "FileUtilsListFilesTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsListFilesTestCase.testListFiles"
                }
            ],
            "date": "2008-02-07"
        },
        {
            "commit_id": 510,
            "hash": "80a0a547241a5ca9c4b6c58bc7d6a123374c0f27",
            "commit_summary": "Add StringBuilderWriterTest to suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619245 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/output/PackageTestSuite.java"
            ],
            "functions": [
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "PackageTestSuite.java",
                    "file old path": "src/test/org/apache/commons/io/output/PackageTestSuite.java",
                    "file new path": "src/test/org/apache/commons/io/output/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.output.PackageTestSuite.suite"
                }
            ],
            "date": "2008-02-07"
        },
        {
            "commit_id": 511,
            "hash": "a4c20307d1a166bcd702511b5c987639d1997cd9",
            "commit_summary": "Add messages to assertions to make it easier where the testFileCleanerExitWhenFinished1() is failing in Continuum\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619436 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testFileCleanerExitWhenFinished1",
                    "function params": [],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished1"
                }
            ],
            "date": "2008-02-07"
        },
        {
            "commit_id": 512,
            "hash": "2ed08896d273ad1d352874ce195537e3c74c1d60",
            "commit_summary": "Remove unnecessary semicolon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619998 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/IOUtils.java"
            ],
            "functions": [],
            "date": "2008-02-08"
        },
        {
            "commit_id": 513,
            "hash": "75e05a81366582417d54a04ef5204e9d76894271",
            "commit_summary": "Remove unnecessary cast from String to String.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619999 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileSystemUtils.java"
            ],
            "functions": [
                {
                    "function name": "freeSpaceUnix",
                    "function params": [
                        "path",
                        "kb",
                        "posix"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.freeSpaceUnix"
                }
            ],
            "date": "2008-02-08"
        },
        {
            "commit_id": 514,
            "hash": "6de38ce50ffd8305871f6313ba26645e592279a8",
            "commit_summary": "Use generics.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@620174 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/IOUtils.java"
            ],
            "functions": [
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "copyLarge",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copyLarge"
                },
                {
                    "function name": "writeLines",
                    "function params": [
                        "lines",
                        "lineEnding",
                        "writer"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.writeLines"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "writeLines",
                    "function params": [
                        "values",
                        "lineEnding",
                        "writer"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.writeLines"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toByteArray"
                },
                {
                    "function name": "readLines",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.readLines"
                },
                {
                    "function name": "writeLines",
                    "function params": [
                        "lines",
                        "lineEnding",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.writeLines"
                },
                {
                    "function name": "writeLines",
                    "function params": [
                        "lines",
                        "lineEnding",
                        "output",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.writeLines"
                },
                {
                    "function name": "readLines",
                    "function params": [
                        "input",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.readLines"
                },
                {
                    "function name": "contentEquals",
                    "function params": [
                        "input1",
                        "input2"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.contentEquals"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "writeLines",
                    "function params": [
                        "values",
                        "lineEnding",
                        "output",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.writeLines"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "defaultCharsetName",
                    "function params": [],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.defaultCharsetName"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "toCharArray",
                    "function params": [
                        "is",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toCharArray"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "lineIterator",
                    "function params": [
                        "input",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.lineIterator"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "contentEquals",
                    "function params": [
                        "input1",
                        "input2"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.contentEquals"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "writeLines",
                    "function params": [
                        "values",
                        "lineEnding",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.writeLines"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                }
            ],
            "date": "2008-02-09"
        },
        {
            "commit_id": 515,
            "hash": "2e12579c0a2af4278306e4d74163a333724cb03b",
            "commit_summary": "Use generics.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@620379 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/DirectoryWalker.java"
            ],
            "functions": [
                {
                    "function name": "walk",
                    "function params": [
                        "startDirectory",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.walk"
                },
                {
                    "function name": "handleDirectoryEnd",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleDirectoryEnd"
                },
                {
                    "function name": "walk",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.walk"
                },
                {
                    "function name": "handleStart",
                    "function params": [
                        "startDirectory",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleStart"
                },
                {
                    "function name": "handleDirectory",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleDirectory"
                },
                {
                    "function name": "handleFile",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleFile"
                },
                {
                    "function name": "handleEnd",
                    "function params": [
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleEnd"
                },
                {
                    "function name": "checkIfCancelled",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.checkIfCancelled"
                },
                {
                    "function name": "handleDirectory",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleDirectory"
                },
                {
                    "function name": "handleEnd",
                    "function params": [
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleEnd"
                },
                {
                    "function name": "walk",
                    "function params": [
                        "startDirectory",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.walk"
                },
                {
                    "function name": "walk",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.walk"
                },
                {
                    "function name": "handleFile",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleFile"
                },
                {
                    "function name": "handleIsCancelled",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleIsCancelled"
                },
                {
                    "function name": "handleCancelled",
                    "function params": [
                        "startDirectory",
                        "results",
                        "cancel"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleCancelled"
                },
                {
                    "function name": "handleStart",
                    "function params": [
                        "startDirectory",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleStart"
                },
                {
                    "function name": "handleRestricted",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleRestricted"
                },
                {
                    "function name": "checkIfCancelled",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.checkIfCancelled"
                },
                {
                    "function name": "handleRestricted",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleRestricted"
                },
                {
                    "function name": "handleCancelled",
                    "function params": [
                        "startDirectory",
                        "results",
                        "cancel"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleCancelled"
                },
                {
                    "function name": "handleDirectoryEnd",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleDirectoryEnd"
                },
                {
                    "function name": "handleDirectoryStart",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleDirectoryStart"
                },
                {
                    "function name": "handleDirectoryStart",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleDirectoryStart"
                },
                {
                    "function name": "handleIsCancelled",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleIsCancelled"
                }
            ],
            "date": "2008-02-11"
        },
        {
            "commit_id": 516,
            "hash": "e6658d5fae4de0b61ac459eac32433c6f787f542",
            "commit_summary": "Revert revision 620174 see http://commons.markmail.org/message/ex5ndwgs7kfnp6cp\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@634470 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/IOUtils.java"
            ],
            "functions": [
                {
                    "function name": "writeLines",
                    "function params": [
                        "values",
                        "lineEnding",
                        "writer"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.writeLines"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "input",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toByteArray"
                },
                {
                    "function name": "writeLines",
                    "function params": [
                        "lines",
                        "lineEnding",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.writeLines"
                },
                {
                    "function name": "writeLines",
                    "function params": [
                        "lines",
                        "lineEnding",
                        "output",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.writeLines"
                },
                {
                    "function name": "readLines",
                    "function params": [
                        "input",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.readLines"
                },
                {
                    "function name": "readLines",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.readLines"
                },
                {
                    "function name": "contentEquals",
                    "function params": [
                        "input1",
                        "input2"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.contentEquals"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "writeLines",
                    "function params": [
                        "values",
                        "lineEnding",
                        "output",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.writeLines"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "lineIterator",
                    "function params": [
                        "input",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.lineIterator"
                },
                {
                    "function name": "toCharArray",
                    "function params": [
                        "is",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toCharArray"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "contentEquals",
                    "function params": [
                        "input1",
                        "input2"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.contentEquals"
                },
                {
                    "function name": "writeLines",
                    "function params": [
                        "values",
                        "lineEnding",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.writeLines"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "input",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toString"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "data",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.write"
                },
                {
                    "function name": "copyLarge",
                    "function params": [
                        "input",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copyLarge"
                },
                {
                    "function name": "copy",
                    "function params": [
                        "input",
                        "output",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.copy"
                },
                {
                    "function name": "writeLines",
                    "function params": [
                        "lines",
                        "lineEnding",
                        "writer"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.writeLines"
                }
            ],
            "date": "2008-03-07"
        },
        {
            "commit_id": 517,
            "hash": "ce0e40253805516e781e4acac9001428fc01ecfd",
            "commit_summary": "Generify remaining raw types in the public API\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@634474 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/java/org/apache/commons/io/FilenameUtils.java",
                "src/java/org/apache/commons/io/IOUtils.java"
            ],
            "functions": [
                {
                    "function name": "writeLines",
                    "function params": [
                        "file",
                        "lines",
                        "lineEnding"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.writeLines"
                },
                {
                    "function name": "iterateFiles",
                    "function params": [
                        "directory",
                        "extensions",
                        "recursive"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.iterateFiles"
                },
                {
                    "function name": "readLines",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.readLines"
                },
                {
                    "function name": "writeLines",
                    "function params": [
                        "file",
                        "encoding",
                        "lines"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.writeLines"
                },
                {
                    "function name": "writeLines",
                    "function params": [
                        "file",
                        "encoding",
                        "lines",
                        "lineEnding"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.writeLines"
                },
                {
                    "function name": "iterateFiles",
                    "function params": [
                        "directory",
                        "fileFilter",
                        "dirFilter"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.iterateFiles"
                },
                {
                    "function name": "listFiles",
                    "function params": [
                        "directory",
                        "extensions",
                        "recursive"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.listFiles"
                },
                {
                    "function name": "writeLines",
                    "function params": [
                        "file",
                        "encoding",
                        "lines"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.writeLines"
                },
                {
                    "function name": "writeLines",
                    "function params": [
                        "file",
                        "lines"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.writeLines"
                },
                {
                    "function name": "readLines",
                    "function params": [
                        "file",
                        "encoding"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.readLines"
                },
                {
                    "function name": "writeLines",
                    "function params": [
                        "file",
                        "lines"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.writeLines"
                },
                {
                    "function name": "writeLines",
                    "function params": [
                        "file",
                        "encoding",
                        "lines",
                        "lineEnding"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.writeLines"
                },
                {
                    "function name": "writeLines",
                    "function params": [
                        "file",
                        "lines",
                        "lineEnding"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.writeLines"
                },
                {
                    "function name": "isExtension",
                    "function params": [
                        "filename",
                        "extensions"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.isExtension"
                },
                {
                    "function name": "isExtension",
                    "function params": [
                        "filename",
                        "extensions"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.isExtension"
                },
                {
                    "function name": "writeLines",
                    "function params": [
                        "lines",
                        "lineEnding",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.writeLines"
                },
                {
                    "function name": "writeLines",
                    "function params": [
                        "lines",
                        "lineEnding",
                        "writer"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.writeLines"
                },
                {
                    "function name": "writeLines",
                    "function params": [
                        "lines",
                        "lineEnding",
                        "output",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.writeLines"
                },
                {
                    "function name": "writeLines",
                    "function params": [
                        "lines",
                        "lineEnding",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.writeLines"
                },
                {
                    "function name": "readLines",
                    "function params": [
                        "input",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.readLines"
                },
                {
                    "function name": "readLines",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.readLines"
                },
                {
                    "function name": "writeLines",
                    "function params": [
                        "lines",
                        "lineEnding",
                        "output",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.writeLines"
                },
                {
                    "function name": "writeLines",
                    "function params": [
                        "lines",
                        "lineEnding",
                        "writer"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.writeLines"
                }
            ],
            "date": "2008-03-07"
        },
        {
            "commit_id": 518,
            "hash": "efe745c047c6f63eb85ee0b2b4d93c3544c31e97",
            "commit_summary": "Fix raw type\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@634483 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileSystemUtils.java"
            ],
            "functions": [
                {
                    "function name": "freeSpaceWindows",
                    "function params": [
                        "path"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.freeSpaceWindows"
                }
            ],
            "date": "2008-03-07"
        },
        {
            "commit_id": 519,
            "hash": "08a504135565a4ee0f0360d0c41c814d6b7f0ffd",
            "commit_summary": "Fix raw type\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@634485 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java"
            ],
            "functions": [
                {
                    "function name": "resolveClass",
                    "function params": [
                        "objectStreamClass"
                    ],
                    "file name": "ClassLoaderObjectInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ClassLoaderObjectInputStream.resolveClass"
                }
            ],
            "date": "2008-03-07"
        },
        {
            "commit_id": 520,
            "hash": "81eef5ded4684a1f4edea06e038894520fe72bc2",
            "commit_summary": "IO-132 - add File Listener/Monitor\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@645221 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "getName",
                    "function params": [],
                    "file name": "FilesystemEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemEntry.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemEntry.getName"
                },
                {
                    "function name": "getParent",
                    "function params": [],
                    "file name": "FilesystemEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemEntry.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemEntry.getParent"
                },
                {
                    "function name": "setName",
                    "function params": [
                        "name"
                    ],
                    "file name": "FilesystemEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemEntry.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemEntry.setName"
                },
                {
                    "function name": "newChildInstance",
                    "function params": [
                        "file"
                    ],
                    "file name": "FilesystemEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemEntry.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemEntry.newChildInstance"
                },
                {
                    "function name": "hasChanged",
                    "function params": [],
                    "file name": "FilesystemEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemEntry.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemEntry.hasChanged"
                },
                {
                    "function name": "isDirectory",
                    "function params": [],
                    "file name": "FilesystemEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemEntry.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemEntry.isDirectory"
                },
                {
                    "function name": "setFile",
                    "function params": [
                        "file"
                    ],
                    "file name": "FilesystemEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemEntry.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemEntry.setFile"
                },
                {
                    "function name": "getFile",
                    "function params": [],
                    "file name": "FilesystemEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemEntry.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemEntry.getFile"
                },
                {
                    "function name": "setChildren",
                    "function params": [
                        "children"
                    ],
                    "file name": "FilesystemEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemEntry.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemEntry.setChildren"
                },
                {
                    "function name": "FilesystemEntry",
                    "function params": [
                        "file"
                    ],
                    "file name": "FilesystemEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemEntry.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemEntry.FilesystemEntry"
                },
                {
                    "function name": "setDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FilesystemEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemEntry.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemEntry.setDirectory"
                },
                {
                    "function name": "getLevel",
                    "function params": [],
                    "file name": "FilesystemEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemEntry.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemEntry.getLevel"
                },
                {
                    "function name": "setLastModified",
                    "function params": [
                        "lastModified"
                    ],
                    "file name": "FilesystemEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemEntry.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemEntry.setLastModified"
                },
                {
                    "function name": "getLastModified",
                    "function params": [],
                    "file name": "FilesystemEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemEntry.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemEntry.getLastModified"
                },
                {
                    "function name": "setExists",
                    "function params": [
                        "exists"
                    ],
                    "file name": "FilesystemEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemEntry.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemEntry.setExists"
                },
                {
                    "function name": "isExists",
                    "function params": [],
                    "file name": "FilesystemEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemEntry.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemEntry.isExists"
                },
                {
                    "function name": "refresh",
                    "function params": [],
                    "file name": "FilesystemEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemEntry.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemEntry.refresh"
                },
                {
                    "function name": "getChildren",
                    "function params": [],
                    "file name": "FilesystemEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemEntry.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemEntry.getChildren"
                },
                {
                    "function name": "FilesystemEntry",
                    "function params": [
                        "parent",
                        "file"
                    ],
                    "file name": "FilesystemEntry.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemEntry.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemEntry.FilesystemEntry"
                },
                {
                    "function name": "onFileDelete",
                    "function params": [
                        "file"
                    ],
                    "file name": "FilesystemListenerAdaptor.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemListenerAdaptor.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemListenerAdaptor.onFileDelete"
                },
                {
                    "function name": "onDirectoryChange",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FilesystemListenerAdaptor.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemListenerAdaptor.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemListenerAdaptor.onDirectoryChange"
                },
                {
                    "function name": "onDirectoryDelete",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FilesystemListenerAdaptor.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemListenerAdaptor.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemListenerAdaptor.onDirectoryDelete"
                },
                {
                    "function name": "onFileCreate",
                    "function params": [
                        "file"
                    ],
                    "file name": "FilesystemListenerAdaptor.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemListenerAdaptor.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemListenerAdaptor.onFileCreate"
                },
                {
                    "function name": "onStop",
                    "function params": [
                        "observer"
                    ],
                    "file name": "FilesystemListenerAdaptor.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemListenerAdaptor.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemListenerAdaptor.onStop"
                },
                {
                    "function name": "onFileChange",
                    "function params": [
                        "file"
                    ],
                    "file name": "FilesystemListenerAdaptor.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemListenerAdaptor.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemListenerAdaptor.onFileChange"
                },
                {
                    "function name": "onStart",
                    "function params": [
                        "observer"
                    ],
                    "file name": "FilesystemListenerAdaptor.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemListenerAdaptor.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemListenerAdaptor.onStart"
                },
                {
                    "function name": "onDirectoryCreate",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FilesystemListenerAdaptor.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemListenerAdaptor.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemListenerAdaptor.onDirectoryCreate"
                },
                {
                    "function name": "FilesystemMonitor",
                    "function params": [
                        "interval"
                    ],
                    "file name": "FilesystemMonitor.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemMonitor.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemMonitor.FilesystemMonitor"
                },
                {
                    "function name": "stop",
                    "function params": [],
                    "file name": "FilesystemMonitor.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemMonitor.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemMonitor.stop"
                },
                {
                    "function name": "FilesystemMonitor",
                    "function params": [],
                    "file name": "FilesystemMonitor.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemMonitor.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemMonitor.FilesystemMonitor"
                },
                {
                    "function name": "start",
                    "function params": [],
                    "file name": "FilesystemMonitor.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemMonitor.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemMonitor.start"
                },
                {
                    "function name": "removeObserver",
                    "function params": [
                        "observer"
                    ],
                    "file name": "FilesystemMonitor.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemMonitor.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemMonitor.removeObserver"
                },
                {
                    "function name": "getObservers",
                    "function params": [],
                    "file name": "FilesystemMonitor.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemMonitor.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemMonitor.getObservers"
                },
                {
                    "function name": "addObserver",
                    "function params": [
                        "observer"
                    ],
                    "file name": "FilesystemMonitor.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemMonitor.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemMonitor.addObserver"
                },
                {
                    "function name": "FilesystemMonitor",
                    "function params": [
                        "interval",
                        "observers"
                    ],
                    "file name": "FilesystemMonitor.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemMonitor.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemMonitor.FilesystemMonitor"
                },
                {
                    "function name": "run",
                    "function params": [],
                    "file name": "FilesystemMonitor.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemMonitor.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemMonitor.run"
                },
                {
                    "function name": "getRootEntry",
                    "function params": [],
                    "file name": "FilesystemObserver.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemObserver.getRootEntry"
                },
                {
                    "function name": "getListeners",
                    "function params": [],
                    "file name": "FilesystemObserver.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemObserver.getListeners"
                },
                {
                    "function name": "FilesystemObserver",
                    "function params": [
                        "directory",
                        "fileFilter",
                        "comparator"
                    ],
                    "file name": "FilesystemObserver.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemObserver.FilesystemObserver"
                },
                {
                    "function name": "checkAndNotify",
                    "function params": [],
                    "file name": "FilesystemObserver.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemObserver.checkAndNotify"
                },
                {
                    "function name": "addListener",
                    "function params": [
                        "listener"
                    ],
                    "file name": "FilesystemObserver.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemObserver.addListener"
                },
                {
                    "function name": "doDelete",
                    "function params": [
                        "entry"
                    ],
                    "file name": "FilesystemObserver.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemObserver.doDelete"
                },
                {
                    "function name": "FilesystemObserver",
                    "function params": [
                        "rootEntry",
                        "fileFilter",
                        "comparator"
                    ],
                    "file name": "FilesystemObserver.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemObserver.FilesystemObserver"
                },
                {
                    "function name": "FilesystemObserver",
                    "function params": [
                        "directoryName"
                    ],
                    "file name": "FilesystemObserver.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemObserver.FilesystemObserver"
                },
                {
                    "function name": "initialize",
                    "function params": [],
                    "file name": "FilesystemObserver.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemObserver.initialize"
                },
                {
                    "function name": "doCreate",
                    "function params": [
                        "entry"
                    ],
                    "file name": "FilesystemObserver.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemObserver.doCreate"
                },
                {
                    "function name": "FilesystemObserver",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FilesystemObserver.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemObserver.FilesystemObserver"
                },
                {
                    "function name": "destroy",
                    "function params": [],
                    "file name": "FilesystemObserver.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemObserver.destroy"
                },
                {
                    "function name": "removeListener",
                    "function params": [
                        "listener"
                    ],
                    "file name": "FilesystemObserver.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemObserver.removeListener"
                },
                {
                    "function name": "checkAndNotify",
                    "function params": [
                        "parent",
                        "previous",
                        "files"
                    ],
                    "file name": "FilesystemObserver.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemObserver.checkAndNotify"
                },
                {
                    "function name": "getDirectory",
                    "function params": [],
                    "file name": "FilesystemObserver.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemObserver.getDirectory"
                },
                {
                    "function name": "getFileFilter",
                    "function params": [],
                    "file name": "FilesystemObserver.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemObserver.getFileFilter"
                },
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "FilesystemObserver.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemObserver.toString"
                },
                {
                    "function name": "FilesystemObserver",
                    "function params": [
                        "directoryName",
                        "fileFilter",
                        "comparator"
                    ],
                    "file name": "FilesystemObserver.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemObserver.FilesystemObserver"
                },
                {
                    "function name": "doMatch",
                    "function params": [
                        "entry",
                        "file"
                    ],
                    "file name": "FilesystemObserver.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemObserver.doMatch"
                },
                {
                    "function name": "listFiles",
                    "function params": [
                        "file"
                    ],
                    "file name": "FilesystemObserver.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemObserver.listFiles"
                },
                {
                    "function name": "FilesystemObserver",
                    "function params": [
                        "directoryName",
                        "fileFilter"
                    ],
                    "file name": "FilesystemObserver.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemObserver.FilesystemObserver"
                },
                {
                    "function name": "FilesystemObserver",
                    "function params": [
                        "directory",
                        "fileFilter"
                    ],
                    "file name": "FilesystemObserver.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemObserver.FilesystemObserver"
                },
                {
                    "function name": "createFileEntry",
                    "function params": [
                        "parent",
                        "file"
                    ],
                    "file name": "FilesystemObserver.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemObserver.createFileEntry"
                },
                {
                    "function name": "getComparator",
                    "function params": [],
                    "file name": "FilesystemObserver.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemObserver.getComparator"
                },
                {
                    "function name": "getCreatedFiles",
                    "function params": [],
                    "file name": "CollectionFilesystemListener.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/monitor/CollectionFilesystemListener.java",
                    "full name": "src.test.org.apache.commons.io.monitor.CollectionFilesystemListener.getCreatedFiles"
                },
                {
                    "function name": "onDirectoryChange",
                    "function params": [
                        "directory"
                    ],
                    "file name": "CollectionFilesystemListener.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/monitor/CollectionFilesystemListener.java",
                    "full name": "src.test.org.apache.commons.io.monitor.CollectionFilesystemListener.onDirectoryChange"
                },
                {
                    "function name": "getChangedDirectories",
                    "function params": [],
                    "file name": "CollectionFilesystemListener.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/monitor/CollectionFilesystemListener.java",
                    "full name": "src.test.org.apache.commons.io.monitor.CollectionFilesystemListener.getChangedDirectories"
                },
                {
                    "function name": "onDirectoryDelete",
                    "function params": [
                        "directory"
                    ],
                    "file name": "CollectionFilesystemListener.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/monitor/CollectionFilesystemListener.java",
                    "full name": "src.test.org.apache.commons.io.monitor.CollectionFilesystemListener.onDirectoryDelete"
                },
                {
                    "function name": "onFileCreate",
                    "function params": [
                        "file"
                    ],
                    "file name": "CollectionFilesystemListener.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/monitor/CollectionFilesystemListener.java",
                    "full name": "src.test.org.apache.commons.io.monitor.CollectionFilesystemListener.onFileCreate"
                },
                {
                    "function name": "onFileChange",
                    "function params": [
                        "file"
                    ],
                    "file name": "CollectionFilesystemListener.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/monitor/CollectionFilesystemListener.java",
                    "full name": "src.test.org.apache.commons.io.monitor.CollectionFilesystemListener.onFileChange"
                },
                {
                    "function name": "getChangedFiles",
                    "function params": [],
                    "file name": "CollectionFilesystemListener.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/monitor/CollectionFilesystemListener.java",
                    "full name": "src.test.org.apache.commons.io.monitor.CollectionFilesystemListener.getChangedFiles"
                },
                {
                    "function name": "onFileDelete",
                    "function params": [
                        "file"
                    ],
                    "file name": "CollectionFilesystemListener.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/monitor/CollectionFilesystemListener.java",
                    "full name": "src.test.org.apache.commons.io.monitor.CollectionFilesystemListener.onFileDelete"
                },
                {
                    "function name": "onDirectoryCreate",
                    "function params": [
                        "directory"
                    ],
                    "file name": "CollectionFilesystemListener.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/monitor/CollectionFilesystemListener.java",
                    "full name": "src.test.org.apache.commons.io.monitor.CollectionFilesystemListener.onDirectoryCreate"
                },
                {
                    "function name": "getDeletedFiles",
                    "function params": [],
                    "file name": "CollectionFilesystemListener.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/monitor/CollectionFilesystemListener.java",
                    "full name": "src.test.org.apache.commons.io.monitor.CollectionFilesystemListener.getDeletedFiles"
                },
                {
                    "function name": "onStart",
                    "function params": [
                        "observer"
                    ],
                    "file name": "CollectionFilesystemListener.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/monitor/CollectionFilesystemListener.java",
                    "full name": "src.test.org.apache.commons.io.monitor.CollectionFilesystemListener.onStart"
                },
                {
                    "function name": "getCreatedDirectories",
                    "function params": [],
                    "file name": "CollectionFilesystemListener.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/monitor/CollectionFilesystemListener.java",
                    "full name": "src.test.org.apache.commons.io.monitor.CollectionFilesystemListener.getCreatedDirectories"
                },
                {
                    "function name": "getDeletedDirectories",
                    "function params": [],
                    "file name": "CollectionFilesystemListener.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/monitor/CollectionFilesystemListener.java",
                    "full name": "src.test.org.apache.commons.io.monitor.CollectionFilesystemListener.getDeletedDirectories"
                },
                {
                    "function name": "onStop",
                    "function params": [
                        "observer"
                    ],
                    "file name": "CollectionFilesystemListener.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/monitor/CollectionFilesystemListener.java",
                    "full name": "src.test.org.apache.commons.io.monitor.CollectionFilesystemListener.onStop"
                },
                {
                    "function name": "testFileDelete",
                    "function params": [],
                    "file name": "FilesystemObserverTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "full name": "src.test.org.apache.commons.io.monitor.FilesystemObserverTestCase.testFileDelete"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "FilesystemObserverTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "full name": "src.test.org.apache.commons.io.monitor.FilesystemObserverTestCase.tearDown"
                },
                {
                    "function name": "checkCollectionsEmpty",
                    "function params": [
                        "label"
                    ],
                    "file name": "FilesystemObserverTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "full name": "src.test.org.apache.commons.io.monitor.FilesystemObserverTestCase.checkCollectionsEmpty"
                },
                {
                    "function name": "createObserver",
                    "function params": [
                        "file",
                        "fileFilter"
                    ],
                    "file name": "FilesystemObserverTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "full name": "src.test.org.apache.commons.io.monitor.FilesystemObserverTestCase.createObserver"
                },
                {
                    "function name": "testFileCreate",
                    "function params": [],
                    "file name": "FilesystemObserverTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "full name": "src.test.org.apache.commons.io.monitor.FilesystemObserverTestCase.testFileCreate"
                },
                {
                    "function name": "checkCollectionSizes",
                    "function params": [
                        "label",
                        "dirCreate",
                        "dirChange",
                        "dirDelete",
                        "fileCreate",
                        "fileChange",
                        "fileDelete"
                    ],
                    "file name": "FilesystemObserverTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "full name": "src.test.org.apache.commons.io.monitor.FilesystemObserverTestCase.checkCollectionSizes"
                },
                {
                    "function name": "testFileUpdate",
                    "function params": [],
                    "file name": "FilesystemObserverTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "full name": "src.test.org.apache.commons.io.monitor.FilesystemObserverTestCase.testFileUpdate"
                },
                {
                    "function name": "testObserveSingleFile",
                    "function params": [],
                    "file name": "FilesystemObserverTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "full name": "src.test.org.apache.commons.io.monitor.FilesystemObserverTestCase.testObserveSingleFile"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "FilesystemObserverTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "full name": "src.test.org.apache.commons.io.monitor.FilesystemObserverTestCase.setUp"
                },
                {
                    "function name": "checkAndNotify",
                    "function params": [],
                    "file name": "FilesystemObserverTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "full name": "src.test.org.apache.commons.io.monitor.FilesystemObserverTestCase.checkAndNotify"
                },
                {
                    "function name": "testDirectory",
                    "function params": [],
                    "file name": "FilesystemObserverTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "full name": "src.test.org.apache.commons.io.monitor.FilesystemObserverTestCase.testDirectory"
                },
                {
                    "function name": "FilesystemObserverTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "FilesystemObserverTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "full name": "src.test.org.apache.commons.io.monitor.FilesystemObserverTestCase.FilesystemObserverTestCase"
                },
                {
                    "function name": "touch",
                    "function params": [
                        "file"
                    ],
                    "file name": "FilesystemObserverTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "full name": "src.test.org.apache.commons.io.monitor.FilesystemObserverTestCase.touch"
                }
            ],
            "date": "2008-04-06"
        },
        {
            "commit_id": 521,
            "hash": "bcc797b528654e42e5ee2f7d385a78f5ef0613ff",
            "commit_summary": "minor javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@645548 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/monitor/FilesystemEntry.java"
            ],
            "functions": [],
            "date": "2008-04-07"
        },
        {
            "commit_id": 522,
            "hash": "6512f64a02c7d7c6b7c247a0f538e135132c9aae",
            "commit_summary": "IO-160 FileSystemUtils.freeSpace fails on solaris - thanks to Mike Bristow for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@645787 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileSystemUtils.java",
                "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "if",
                    "function params": [
                        "1"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.if"
                },
                {
                    "function name": "if",
                    "function params": [
                        "1"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.if"
                },
                {
                    "function name": "freeSpaceUnix",
                    "function params": [
                        "path",
                        "kb",
                        "posix"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.freeSpaceUnix"
                },
                {
                    "function name": "if",
                    "function params": [
                        "1"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.if"
                },
                {
                    "function name": "parseBytes",
                    "function params": [
                        "freeSpace",
                        "path"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.parseBytes"
                },
                {
                    "function name": "testGetFreeSpace_String",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String"
                }
            ],
            "date": "2008-04-08"
        },
        {
            "commit_id": 523,
            "hash": "c3b706ab8852c57446064031067dcbb92380502d",
            "commit_summary": "IO-160 Make DF path final\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@645828 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileSystemUtils.java"
            ],
            "functions": [
                {
                    "function name": "freeSpaceUnix",
                    "function params": [
                        "path",
                        "kb",
                        "posix"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.freeSpaceUnix"
                },
                {
                    "function name": "parseBytes",
                    "function params": [
                        "freeSpace",
                        "path"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.parseBytes"
                }
            ],
            "date": "2008-04-08"
        },
        {
            "commit_id": 524,
            "hash": "e87486f1a35090a754fdf95f3cd1178bcfd7e2ba",
            "commit_summary": "IO-163 Change FileUtils.toURLs() to use File.toURI().toURL() rather than File.toURL() - thanks to Alex Miller for the suggestion\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@647000 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "toURLs",
                    "function params": [
                        "files"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.toURLs"
                },
                {
                    "function name": "testToURLs1",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testToURLs1"
                }
            ],
            "date": "2008-04-10"
        },
        {
            "commit_id": 525,
            "hash": "9a4e82eaf99a38a898591f2faa9cd7c21b41e022",
            "commit_summary": "Provide more info for tests failing in Continuum\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@648903 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java"
            ],
            "functions": [
                {
                    "function name": "checkCollectionSizes",
                    "function params": [
                        "label",
                        "dirCreate",
                        "dirChange",
                        "dirDelete",
                        "fileCreate",
                        "fileChange",
                        "fileDelete"
                    ],
                    "file name": "FilesystemObserverTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "full name": "src.test.org.apache.commons.io.monitor.FilesystemObserverTestCase.checkCollectionSizes"
                }
            ],
            "date": "2008-04-17"
        },
        {
            "commit_id": 526,
            "hash": "58426094da67e4526bc49f84e3cb864d184ad180",
            "commit_summary": "Increase delay to see if that affects continuum\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@648905 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java"
            ],
            "functions": [
                {
                    "function name": "touch",
                    "function params": [
                        "file"
                    ],
                    "file name": "FilesystemObserverTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "full name": "src.test.org.apache.commons.io.monitor.FilesystemObserverTestCase.touch"
                }
            ],
            "date": "2008-04-17"
        },
        {
            "commit_id": 527,
            "hash": "860ee374e9b290e52cc48b772145d18816886134",
            "commit_summary": "[IO-164] change test case setup to work around apparent Java bug on OS X\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@650580 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/comparator/LastModifiedFileComparatorTest.java"
            ],
            "functions": [
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "LastModifiedFileComparatorTest.java",
                    "file old path": "src/test/org/apache/commons/io/comparator/LastModifiedFileComparatorTest.java",
                    "file new path": "src/test/org/apache/commons/io/comparator/LastModifiedFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.LastModifiedFileComparatorTest.setUp"
                }
            ],
            "date": "2008-04-22"
        },
        {
            "commit_id": 528,
            "hash": "cd3aafe7c8ef737c43aa11e4bfc5934653d0d4a2",
            "commit_summary": "IO-165 set svn:eol-style to native - thanks to Benjamin Bentmann for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@651569 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileCleaningTracker.java",
                "src/java/org/apache/commons/io/IOExceptionWithCause.java",
                "src/test/org/apache/commons/io/IOExceptionWithCauseTestCase.java",
                "src/test/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java"
            ],
            "functions": [
                {
                    "function name": "Tracker",
                    "function params": [
                        "path",
                        "deleteStrategy",
                        "marker",
                        "queue"
                    ],
                    "file name": "FileCleaningTracker.java",
                    "file old path": "src/java/org/apache/commons/io/FileCleaningTracker.java",
                    "file new path": "src/java/org/apache/commons/io/FileCleaningTracker.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaningTracker.Tracker"
                },
                {
                    "function name": "addTracker",
                    "function params": [
                        "path",
                        "marker",
                        "deleteStrategy"
                    ],
                    "file name": "FileCleaningTracker.java",
                    "file old path": "src/java/org/apache/commons/io/FileCleaningTracker.java",
                    "file new path": "src/java/org/apache/commons/io/FileCleaningTracker.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaningTracker.addTracker"
                },
                {
                    "function name": "Reaper",
                    "function params": [],
                    "file name": "FileCleaningTracker.java",
                    "file old path": "src/java/org/apache/commons/io/FileCleaningTracker.java",
                    "file new path": "src/java/org/apache/commons/io/FileCleaningTracker.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaningTracker.Reaper"
                },
                {
                    "function name": "exitWhenFinished",
                    "function params": [],
                    "file name": "FileCleaningTracker.java",
                    "file old path": "src/java/org/apache/commons/io/FileCleaningTracker.java",
                    "file new path": "src/java/org/apache/commons/io/FileCleaningTracker.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaningTracker.exitWhenFinished"
                },
                {
                    "function name": "track",
                    "function params": [
                        "file",
                        "marker"
                    ],
                    "file name": "FileCleaningTracker.java",
                    "file old path": "src/java/org/apache/commons/io/FileCleaningTracker.java",
                    "file new path": "src/java/org/apache/commons/io/FileCleaningTracker.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaningTracker.track"
                },
                {
                    "function name": "track",
                    "function params": [
                        "path",
                        "marker"
                    ],
                    "file name": "FileCleaningTracker.java",
                    "file old path": "src/java/org/apache/commons/io/FileCleaningTracker.java",
                    "file new path": "src/java/org/apache/commons/io/FileCleaningTracker.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaningTracker.track"
                },
                {
                    "function name": "Reaper",
                    "function params": [],
                    "file name": "FileCleaningTracker.java",
                    "file old path": "src/java/org/apache/commons/io/FileCleaningTracker.java",
                    "file new path": "src/java/org/apache/commons/io/FileCleaningTracker.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaningTracker.Reaper"
                },
                {
                    "function name": "track",
                    "function params": [
                        "file",
                        "marker",
                        "deleteStrategy"
                    ],
                    "file name": "FileCleaningTracker.java",
                    "file old path": "src/java/org/apache/commons/io/FileCleaningTracker.java",
                    "file new path": "src/java/org/apache/commons/io/FileCleaningTracker.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaningTracker.track"
                },
                {
                    "function name": "getTrackCount",
                    "function params": [],
                    "file name": "FileCleaningTracker.java",
                    "file old path": "src/java/org/apache/commons/io/FileCleaningTracker.java",
                    "file new path": "src/java/org/apache/commons/io/FileCleaningTracker.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaningTracker.getTrackCount"
                },
                {
                    "function name": "track",
                    "function params": [
                        "path",
                        "marker",
                        "deleteStrategy"
                    ],
                    "file name": "FileCleaningTracker.java",
                    "file old path": "src/java/org/apache/commons/io/FileCleaningTracker.java",
                    "file new path": "src/java/org/apache/commons/io/FileCleaningTracker.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaningTracker.track"
                },
                {
                    "function name": "Tracker",
                    "function params": [],
                    "file name": "FileCleaningTracker.java",
                    "file old path": "src/java/org/apache/commons/io/FileCleaningTracker.java",
                    "file new path": "src/java/org/apache/commons/io/FileCleaningTracker.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaningTracker.Tracker"
                },
                {
                    "function name": "IOExceptionWithCause",
                    "function params": [
                        "cause"
                    ],
                    "file name": "IOExceptionWithCause.java",
                    "file old path": "src/java/org/apache/commons/io/IOExceptionWithCause.java",
                    "file new path": "src/java/org/apache/commons/io/IOExceptionWithCause.java",
                    "full name": "src.java.org.apache.commons.io.IOExceptionWithCause.IOExceptionWithCause"
                },
                {
                    "function name": "IOExceptionWithCause",
                    "function params": [
                        "message",
                        "cause"
                    ],
                    "file name": "IOExceptionWithCause.java",
                    "file old path": "src/java/org/apache/commons/io/IOExceptionWithCause.java",
                    "file new path": "src/java/org/apache/commons/io/IOExceptionWithCause.java",
                    "full name": "src.java.org.apache.commons.io.IOExceptionWithCause.IOExceptionWithCause"
                },
                {
                    "function name": "testIOExceptionStringThrowable",
                    "function params": [],
                    "file name": "IOExceptionWithCauseTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOExceptionWithCauseTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOExceptionWithCauseTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOExceptionWithCauseTestCase.testIOExceptionStringThrowable"
                },
                {
                    "function name": "validate",
                    "function params": [
                        "throwable",
                        "expectedCause",
                        "expectedMessage"
                    ],
                    "file name": "IOExceptionWithCauseTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOExceptionWithCauseTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOExceptionWithCauseTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOExceptionWithCauseTestCase.validate"
                },
                {
                    "function name": "testIOExceptionThrowable",
                    "function params": [],
                    "file name": "IOExceptionWithCauseTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOExceptionWithCauseTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOExceptionWithCauseTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOExceptionWithCauseTestCase.testIOExceptionThrowable"
                },
                {
                    "function name": "ClassLoaderObjectInputStreamTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "ClassLoaderObjectInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.ClassLoaderObjectInputStreamTest"
                },
                {
                    "function name": "testExpected",
                    "function params": [],
                    "file name": "ClassLoaderObjectInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testExpected"
                }
            ],
            "date": "2008-04-25"
        },
        {
            "commit_id": 529,
            "hash": "409139cbeed713f64b6e61ea53726aca4a53c2ad",
            "commit_summary": "Fix svn properties only (eol-style, keywords etc)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@658782 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/DirectoryWalker.java",
                "src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testFileCleanerExitWhenFinished1",
                    "function params": [],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished1"
                },
                {
                    "function name": "FileCleaningTrackerTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleaningTrackerTestCase.FileCleaningTrackerTestCase"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleaningTrackerTestCase.suite"
                },
                {
                    "function name": "waitUntilTrackCount",
                    "function params": [],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleaningTrackerTestCase.waitUntilTrackCount"
                },
                {
                    "function name": "testFileCleanerDirectory_NullStrategy",
                    "function params": [],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_NullStrategy"
                },
                {
                    "function name": "testFileCleanerExitWhenFinished2",
                    "function params": [],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished2"
                },
                {
                    "function name": "testFileCleanerDirectory_ForceStrategy",
                    "function params": [],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_ForceStrategy"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleaningTrackerTestCase.tearDown"
                },
                {
                    "function name": "testFileCleanerNull",
                    "function params": [],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerNull"
                },
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleaningTrackerTestCase.main"
                },
                {
                    "function name": "testFileCleanerFile",
                    "function params": [],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerFile"
                },
                {
                    "function name": "testFileCleanerExitWhenFinished_NoTrackAfter",
                    "function params": [],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished_NoTrackAfter"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleaningTrackerTestCase.setUp"
                },
                {
                    "function name": "newInstance",
                    "function params": [],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleaningTrackerTestCase.newInstance"
                },
                {
                    "function name": "testFileCleanerExitWhenFinishedFirst",
                    "function params": [],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinishedFirst"
                },
                {
                    "function name": "testFileCleanerDirectory",
                    "function params": [],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory"
                }
            ],
            "date": "2008-05-21"
        },
        {
            "commit_id": 530,
            "hash": "c2ec1d05ec7707a55aa0e32f01450148848ade59",
            "commit_summary": "Remove tabs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@658831 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "src/test/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java"
            ],
            "functions": [
                {
                    "function name": "testDelegateFileFilter",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testDelegateFileFilter"
                },
                {
                    "function name": "testNameFilterNullListArgument",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullListArgument"
                },
                {
                    "function name": "testSuffix",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix"
                },
                {
                    "function name": "testNameFilterNullArgument",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullArgument"
                },
                {
                    "function name": "testNameFilterNullArrayArgument",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullArrayArgument"
                },
                {
                    "function name": "testExpected",
                    "function params": [],
                    "file name": "ClassLoaderObjectInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testExpected"
                }
            ],
            "date": "2008-05-21"
        },
        {
            "commit_id": 531,
            "hash": "91509112bb42d52eb4cef40f2dee16a3633b446f",
            "commit_summary": "IO-140 annotate with @Override and @Deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@659817 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/CopyUtils.java",
                "src/java/org/apache/commons/io/FileCleaner.java",
                "src/java/org/apache/commons/io/FileDeleteStrategy.java",
                "src/java/org/apache/commons/io/FileSystemUtils.java",
                "src/java/org/apache/commons/io/IOCase.java",
                "src/java/org/apache/commons/io/IOUtils.java",
                "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/CanReadFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/CanWriteFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/EmptyFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/FileFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/HiddenFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/RegexFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/SizeFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "src/java/org/apache/commons/io/input/AutoCloseInputStream.java",
                "src/java/org/apache/commons/io/input/CharSequenceReader.java",
                "src/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                "src/java/org/apache/commons/io/input/CloseShieldInputStream.java",
                "src/java/org/apache/commons/io/input/ClosedInputStream.java",
                "src/java/org/apache/commons/io/input/CountingInputStream.java",
                "src/java/org/apache/commons/io/input/DemuxInputStream.java",
                "src/java/org/apache/commons/io/input/NullInputStream.java",
                "src/java/org/apache/commons/io/input/NullReader.java",
                "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                "src/java/org/apache/commons/io/input/ProxyReader.java",
                "src/java/org/apache/commons/io/input/TeeInputStream.java",
                "src/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "src/java/org/apache/commons/io/output/CloseShieldOutputStream.java",
                "src/java/org/apache/commons/io/output/ClosedOutputStream.java",
                "src/java/org/apache/commons/io/output/CountingOutputStream.java",
                "src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "src/java/org/apache/commons/io/output/DemuxOutputStream.java",
                "src/java/org/apache/commons/io/output/FileWriterWithEncoding.java",
                "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                "src/java/org/apache/commons/io/output/NullOutputStream.java",
                "src/java/org/apache/commons/io/output/NullWriter.java",
                "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                "src/java/org/apache/commons/io/output/ProxyWriter.java",
                "src/java/org/apache/commons/io/output/StringBuilderWriter.java",
                "src/java/org/apache/commons/io/output/TeeOutputStream.java",
                "src/java/org/apache/commons/io/output/ThresholdingOutputStream.java"
            ],
            "functions": [],
            "date": "2008-05-24"
        },
        {
            "commit_id": 532,
            "hash": "ce90015bdc3614f88fbe55a697731a2f5b052ca3",
            "commit_summary": "IO-167 Fix case-insensitive string handling - thanks to Benjamin Bentmann for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@661646 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileSystemUtils.java",
                "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "performCommand",
                    "function params": [
                        "cmdAttribs",
                        "max"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.performCommand"
                },
                {
                    "function name": "testGetFreeSpace_String",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String"
                }
            ],
            "date": "2008-05-30"
        },
        {
            "commit_id": 533,
            "hash": "d71a8b3bcd1e28ed4cff1ab497aaabae1c102408",
            "commit_summary": "IO-157 FileUtils - Return target File from copyFileToDirectory() - thanks to Kenny MacLeod\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@661658 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "copyFileToDirectory",
                    "function params": [
                        "srcFile",
                        "destDir"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyFileToDirectory"
                },
                {
                    "function name": "copyFileToDirectory",
                    "function params": [
                        "srcFile",
                        "destDir",
                        "preserveFileDate"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyFileToDirectory"
                },
                {
                    "function name": "testCopyFile1ToDir",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyFile1ToDir"
                }
            ],
            "date": "2008-05-30"
        },
        {
            "commit_id": 534,
            "hash": "5c13fa7579650c2cbcab61c6b18e509951f640aa",
            "commit_summary": "IO-167 Fix case-insensitive string handling - thanks to Benjamin Bentmann\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@661822 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java",
                "src/java/org/apache/commons/io/IOCase.java",
                "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                "src/test/org/apache/commons/io/IOCaseTestCase.java"
            ],
            "functions": [
                {
                    "function name": "wildcardMatch",
                    "function params": [
                        "filename",
                        "wildcardMatcher",
                        "caseSensitivity"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.wildcardMatch"
                },
                {
                    "function name": "checkIndexOf",
                    "function params": [
                        "str",
                        "strStartIndex",
                        "search"
                    ],
                    "file name": "IOCase.java",
                    "file old path": "src/java/org/apache/commons/io/IOCase.java",
                    "file new path": "src/java/org/apache/commons/io/IOCase.java",
                    "full name": "src.java.org.apache.commons.io.IOCase.checkIndexOf"
                },
                {
                    "function name": "checkRegionMatches",
                    "function params": [
                        "str",
                        "strStartIndex",
                        "search"
                    ],
                    "file name": "IOCase.java",
                    "file old path": "src/java/org/apache/commons/io/IOCase.java",
                    "file new path": "src/java/org/apache/commons/io/IOCase.java",
                    "full name": "src.java.org.apache.commons.io.IOCase.checkRegionMatches"
                },
                {
                    "function name": "testLocaleIndependence",
                    "function params": [],
                    "file name": "FilenameUtilsWildcardTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsWildcardTestCase.testLocaleIndependence"
                },
                {
                    "function name": "test_checkIndexOf_case",
                    "function params": [],
                    "file name": "IOCaseTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOCaseTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOCaseTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOCaseTestCase.test_checkIndexOf_case"
                },
                {
                    "function name": "test_checkIndexOf_functionality",
                    "function params": [],
                    "file name": "IOCaseTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOCaseTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOCaseTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOCaseTestCase.test_checkIndexOf_functionality"
                }
            ],
            "date": "2008-05-30"
        },
        {
            "commit_id": 535,
            "hash": "7bfef476d8a9e08223ec4bff31054ff23655da4c",
            "commit_summary": "Fix IO-168 Symbolic links (symlinks) followed when deleting directory - reported by Apostolos Lerios, thanks to Attila Szegedi for the solution and Brydie McCoy for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@684715 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [
                {
                    "function name": "isSymlink",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.isSymlink"
                },
                {
                    "function name": "deleteDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.deleteDirectory"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "FileUtilsCleanSymlinksTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsCleanSymlinksTestCase.tearDown"
                },
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "FileUtilsCleanSymlinksTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsCleanSymlinksTestCase.main"
                },
                {
                    "function name": "FileUtilsCleanSymlinksTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "FileUtilsCleanSymlinksTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsCleanSymlinksTestCase.FileUtilsCleanSymlinksTestCase"
                },
                {
                    "function name": "testCorrectlyIdentifySymlinkWithParentSymLink",
                    "function params": [],
                    "file name": "FileUtilsCleanSymlinksTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCorrectlyIdentifySymlinkWithParentSymLink"
                },
                {
                    "function name": "testCleanDirWithASymlinkDir",
                    "function params": [],
                    "file name": "FileUtilsCleanSymlinksTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithASymlinkDir"
                },
                {
                    "function name": "testCleanDirWithSymlinkFile",
                    "function params": [],
                    "file name": "FileUtilsCleanSymlinksTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithSymlinkFile"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "FileUtilsCleanSymlinksTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsCleanSymlinksTestCase.setUp"
                },
                {
                    "function name": "setupSymlink",
                    "function params": [
                        "res",
                        "link"
                    ],
                    "file name": "FileUtilsCleanSymlinksTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsCleanSymlinksTestCase.setupSymlink"
                },
                {
                    "function name": "testStillClearsIfGivenDirectoryIsASymlink",
                    "function params": [],
                    "file name": "FileUtilsCleanSymlinksTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testStillClearsIfGivenDirectoryIsASymlink"
                },
                {
                    "function name": "testIdentifiesSymlinkDir",
                    "function params": [],
                    "file name": "FileUtilsCleanSymlinksTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testIdentifiesSymlinkDir"
                },
                {
                    "function name": "testIdentifiesSymlinkFile",
                    "function params": [],
                    "file name": "FileUtilsCleanSymlinksTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testIdentifiesSymlinkFile"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "FileUtilsCleanSymlinksTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsCleanSymlinksTestCase.suite"
                },
                {
                    "function name": "testCleanDirWithParentSymlinks",
                    "function params": [],
                    "file name": "FileUtilsCleanSymlinksTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithParentSymlinks"
                }
            ],
            "date": "2008-08-11"
        },
        {
            "commit_id": 536,
            "hash": "f28c4933e6c92fed61431c7a4024b26c4f06a5e9",
            "commit_summary": "Fix IO-168 Add symlink check to deleteDirectoryOnExit() method as well\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@684716 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [
                {
                    "function name": "deleteDirectoryOnExit",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.deleteDirectoryOnExit"
                }
            ],
            "date": "2008-08-11"
        },
        {
            "commit_id": 537,
            "hash": "934d08cb4a4566eeffdb8c429f6294dba63b56b8",
            "commit_summary": "Javadoc changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@684725 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [],
            "date": "2008-08-11"
        },
        {
            "commit_id": 538,
            "hash": "0b86b74abdfdc8165eec057be2c579be40aea038",
            "commit_summary": "Fixing javadoc as per IO-180\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@694200 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/LineIterator.java"
            ],
            "functions": [],
            "date": "2008-09-11"
        },
        {
            "commit_id": 539,
            "hash": "d55dd62cc0b07e1124369d74dd0095cc2b491dfe",
            "commit_summary": "Fix for IO-179 StringIndexOutOfBounds exception on FilenameUtils.getPathNoEndSeparator - thanks to Francisco Borges for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@721610 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java",
                "src/test/org/apache/commons/io/FilenameUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "doGetPath",
                    "function params": [
                        "filename",
                        "separatorAdd"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.doGetPath"
                },
                {
                    "function name": "testGetPathNoEndSeparator",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testGetPathNoEndSeparator"
                },
                {
                    "function name": "testGetPath",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testGetPath"
                }
            ],
            "date": "2008-11-29"
        },
        {
            "commit_id": 540,
            "hash": "f992185eafa1610f505c97eb6188650feeede226",
            "commit_summary": "IO-142 Add facility to sort file lists/arrays to Comparator implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@721626 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/comparator/DefaultFileComparator.java",
                "src/java/org/apache/commons/io/comparator/ExtensionFileComparator.java",
                "src/java/org/apache/commons/io/comparator/LastModifiedFileComparator.java",
                "src/java/org/apache/commons/io/comparator/NameFileComparator.java",
                "src/java/org/apache/commons/io/comparator/PathFileComparator.java",
                "src/java/org/apache/commons/io/comparator/ReverseComparator.java",
                "src/java/org/apache/commons/io/comparator/SizeFileComparator.java",
                "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                "src/test/org/apache/commons/io/comparator/DefaultFileComparatorTest.java",
                "src/test/org/apache/commons/io/comparator/ExtensionFileComparatorTest.java",
                "src/test/org/apache/commons/io/comparator/LastModifiedFileComparatorTest.java",
                "src/test/org/apache/commons/io/comparator/NameFileComparatorTest.java",
                "src/test/org/apache/commons/io/comparator/PathFileComparatorTest.java",
                "src/test/org/apache/commons/io/comparator/SizeFileComparatorTest.java"
            ],
            "functions": [
                {
                    "function name": "sort",
                    "function params": [
                        "files"
                    ],
                    "file name": "AbstractFileComparator.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/comparator/AbstractFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.AbstractFileComparator.sort"
                },
                {
                    "function name": "sort",
                    "function params": [
                        "files"
                    ],
                    "file name": "AbstractFileComparator.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/comparator/AbstractFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.AbstractFileComparator.sort"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "ComparatorAbstractTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.comparator.ComparatorAbstractTestCase.setUp"
                },
                {
                    "function name": "testSortList",
                    "function params": [],
                    "file name": "ComparatorAbstractTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortList"
                },
                {
                    "function name": "testSortArray",
                    "function params": [],
                    "file name": "ComparatorAbstractTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortArray"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "DefaultFileComparatorTest.java",
                    "file old path": "src/test/org/apache/commons/io/comparator/DefaultFileComparatorTest.java",
                    "file new path": "src/test/org/apache/commons/io/comparator/DefaultFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.DefaultFileComparatorTest.setUp"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "ExtensionFileComparatorTest.java",
                    "file old path": "src/test/org/apache/commons/io/comparator/ExtensionFileComparatorTest.java",
                    "file new path": "src/test/org/apache/commons/io/comparator/ExtensionFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.ExtensionFileComparatorTest.setUp"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "LastModifiedFileComparatorTest.java",
                    "file old path": "src/test/org/apache/commons/io/comparator/LastModifiedFileComparatorTest.java",
                    "file new path": "src/test/org/apache/commons/io/comparator/LastModifiedFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.LastModifiedFileComparatorTest.setUp"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "NameFileComparatorTest.java",
                    "file old path": "src/test/org/apache/commons/io/comparator/NameFileComparatorTest.java",
                    "file new path": "src/test/org/apache/commons/io/comparator/NameFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.NameFileComparatorTest.setUp"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "PathFileComparatorTest.java",
                    "file old path": "src/test/org/apache/commons/io/comparator/PathFileComparatorTest.java",
                    "file new path": "src/test/org/apache/commons/io/comparator/PathFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.PathFileComparatorTest.setUp"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "SizeFileComparatorTest.java",
                    "file old path": "src/test/org/apache/commons/io/comparator/SizeFileComparatorTest.java",
                    "file new path": "src/test/org/apache/commons/io/comparator/SizeFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.SizeFileComparatorTest.setUp"
                }
            ],
            "date": "2008-11-29"
        },
        {
            "commit_id": 541,
            "hash": "45da38fd8a5086df7099fbb8c774e8433eec6485",
            "commit_summary": "IO-176 Add a callback method for filtering directory contents - requested by David Felsenthal\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@721635 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/DirectoryWalker.java"
            ],
            "functions": [
                {
                    "function name": "walk",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.walk"
                },
                {
                    "function name": "filterDirectoryContents",
                    "function params": [
                        "directory",
                        "depth",
                        "files"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.filterDirectoryContents"
                }
            ],
            "date": "2008-11-29"
        },
        {
            "commit_id": 542,
            "hash": "e2d0dce6ebd0e02f491cbba324e0cfe0ec649bd3",
            "commit_summary": "Try to fix gump failure\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@721739 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/comparator/DefaultFileComparatorTest.java"
            ],
            "functions": [
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "DefaultFileComparatorTest.java",
                    "file old path": "src/test/org/apache/commons/io/comparator/DefaultFileComparatorTest.java",
                    "file new path": "src/test/org/apache/commons/io/comparator/DefaultFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.DefaultFileComparatorTest.setUp"
                }
            ],
            "date": "2008-11-29"
        },
        {
            "commit_id": 543,
            "hash": "b03cc28187980b60c0630bf8f47b679671670bce",
            "commit_summary": "Add Comparator toString() implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@721740 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/comparator/AbstractFileComparator.java",
                "src/java/org/apache/commons/io/comparator/ExtensionFileComparator.java",
                "src/java/org/apache/commons/io/comparator/NameFileComparator.java",
                "src/java/org/apache/commons/io/comparator/PathFileComparator.java",
                "src/java/org/apache/commons/io/comparator/ReverseComparator.java",
                "src/java/org/apache/commons/io/comparator/SizeFileComparator.java"
            ],
            "functions": [
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "AbstractFileComparator.java",
                    "file old path": "src/java/org/apache/commons/io/comparator/AbstractFileComparator.java",
                    "file new path": "src/java/org/apache/commons/io/comparator/AbstractFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.AbstractFileComparator.toString"
                },
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "ExtensionFileComparator.java",
                    "file old path": "src/java/org/apache/commons/io/comparator/ExtensionFileComparator.java",
                    "file new path": "src/java/org/apache/commons/io/comparator/ExtensionFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.ExtensionFileComparator.toString"
                },
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "NameFileComparator.java",
                    "file old path": "src/java/org/apache/commons/io/comparator/NameFileComparator.java",
                    "file new path": "src/java/org/apache/commons/io/comparator/NameFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.NameFileComparator.toString"
                },
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "PathFileComparator.java",
                    "file old path": "src/java/org/apache/commons/io/comparator/PathFileComparator.java",
                    "file new path": "src/java/org/apache/commons/io/comparator/PathFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.PathFileComparator.toString"
                },
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "ReverseComparator.java",
                    "file old path": "src/java/org/apache/commons/io/comparator/ReverseComparator.java",
                    "file new path": "src/java/org/apache/commons/io/comparator/ReverseComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.ReverseComparator.toString"
                },
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "SizeFileComparator.java",
                    "file old path": "src/java/org/apache/commons/io/comparator/SizeFileComparator.java",
                    "file new path": "src/java/org/apache/commons/io/comparator/SizeFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.SizeFileComparator.toString"
                }
            ],
            "date": "2008-11-29"
        },
        {
            "commit_id": 544,
            "hash": "b79a58eed59cb1c7156a308fb03ffc4e19bf9c03",
            "commit_summary": "Comparator test improvements\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@721741 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testSortListNull",
                    "function params": [],
                    "file name": "ComparatorAbstractTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortListNull"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "ComparatorAbstractTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.comparator.ComparatorAbstractTestCase.tearDown"
                },
                {
                    "function name": "testToString",
                    "function params": [],
                    "file name": "ComparatorAbstractTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.comparator.ComparatorAbstractTestCase.testToString"
                },
                {
                    "function name": "testSortArrayNull",
                    "function params": [],
                    "file name": "ComparatorAbstractTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortArrayNull"
                },
                {
                    "function name": "testSortArray",
                    "function params": [],
                    "file name": "ComparatorAbstractTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortArray"
                },
                {
                    "function name": "testSortList",
                    "function params": [],
                    "file name": "ComparatorAbstractTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortList"
                }
            ],
            "date": "2008-11-29"
        },
        {
            "commit_id": 545,
            "hash": "0a3e9611fcaf3c2e174d33ba12d15140d3fb8bef",
            "commit_summary": "javadoc/checkstyle\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@721742 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/DirectoryWalker.java"
            ],
            "functions": [],
            "date": "2008-11-29"
        },
        {
            "commit_id": 546,
            "hash": "faa58c0ca1a1d04befc5e9f2be62c7eea8fea8d9",
            "commit_summary": "IO-186 new Composite and DIrectory File Comparator implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@721744 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "CompositeFileComparator",
                    "function params": [
                        "delegates"
                    ],
                    "file name": "CompositeFileComparator.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/comparator/CompositeFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.CompositeFileComparator.CompositeFileComparator"
                },
                {
                    "function name": "CompositeFileComparator",
                    "function params": [
                        "delegates"
                    ],
                    "file name": "CompositeFileComparator.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/comparator/CompositeFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.CompositeFileComparator.CompositeFileComparator"
                },
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "CompositeFileComparator.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/comparator/CompositeFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.CompositeFileComparator.toString"
                },
                {
                    "function name": "compare",
                    "function params": [
                        "file1",
                        "file2"
                    ],
                    "file name": "CompositeFileComparator.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/comparator/CompositeFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.CompositeFileComparator.compare"
                },
                {
                    "function name": "getType",
                    "function params": [
                        "file"
                    ],
                    "file name": "DirectoryFileComparator.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/comparator/DirectoryFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.DirectoryFileComparator.getType"
                },
                {
                    "function name": "compare",
                    "function params": [
                        "file1",
                        "file2"
                    ],
                    "file name": "DirectoryFileComparator.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/comparator/DirectoryFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.DirectoryFileComparator.compare"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "CompositeFileComparatorTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/CompositeFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.CompositeFileComparatorTest.setUp"
                },
                {
                    "function name": "testConstructorIterableNull",
                    "function params": [],
                    "file name": "CompositeFileComparatorTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/CompositeFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorIterableNull"
                },
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "CompositeFileComparatorTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/CompositeFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.CompositeFileComparatorTest.main"
                },
                {
                    "function name": "CompositeFileComparatorTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "CompositeFileComparatorTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/CompositeFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.CompositeFileComparatorTest.CompositeFileComparatorTest"
                },
                {
                    "function name": "testConstructorIterable",
                    "function params": [],
                    "file name": "CompositeFileComparatorTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/CompositeFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorIterable"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "CompositeFileComparatorTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/CompositeFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.CompositeFileComparatorTest.suite"
                },
                {
                    "function name": "testConstructorArrayNull",
                    "function params": [],
                    "file name": "CompositeFileComparatorTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/CompositeFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorArrayNull"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "DirectoryFileComparatorTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/DirectoryFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.DirectoryFileComparatorTest.suite"
                },
                {
                    "function name": "testSortArray",
                    "function params": [],
                    "file name": "DirectoryFileComparatorTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/DirectoryFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.DirectoryFileComparatorTest.testSortArray"
                },
                {
                    "function name": "testSortList",
                    "function params": [],
                    "file name": "DirectoryFileComparatorTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/DirectoryFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.DirectoryFileComparatorTest.testSortList"
                },
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "DirectoryFileComparatorTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/DirectoryFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.DirectoryFileComparatorTest.main"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "DirectoryFileComparatorTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/DirectoryFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.DirectoryFileComparatorTest.setUp"
                },
                {
                    "function name": "DirectoryFileComparatorTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "DirectoryFileComparatorTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/comparator/DirectoryFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.DirectoryFileComparatorTest.DirectoryFileComparatorTest"
                }
            ],
            "date": "2008-11-30"
        },
        {
            "commit_id": 547,
            "hash": "3e8e057385f3fe803bff6efcb074602a3443f3cc",
            "commit_summary": "IO-178 BOMExclusionInputStream - an InputStream for UTF-8 data that ignores an initial Byte Order mark - thanks for patch from Keith D Gregory\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@721749 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "reset",
                    "function params": [],
                    "file name": "BOMExclusionInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BOMExclusionInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BOMExclusionInputStream.reset"
                },
                {
                    "function name": "readFirstBytes",
                    "function params": [],
                    "file name": "BOMExclusionInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BOMExclusionInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BOMExclusionInputStream.readFirstBytes"
                },
                {
                    "function name": "read",
                    "function params": [
                        "buf",
                        "off",
                        "len"
                    ],
                    "file name": "BOMExclusionInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BOMExclusionInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BOMExclusionInputStream.read"
                },
                {
                    "function name": "read",
                    "function params": [
                        "buf"
                    ],
                    "file name": "BOMExclusionInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BOMExclusionInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BOMExclusionInputStream.read"
                },
                {
                    "function name": "skip",
                    "function params": [
                        "n"
                    ],
                    "file name": "BOMExclusionInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BOMExclusionInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BOMExclusionInputStream.skip"
                },
                {
                    "function name": "BOMExclusionInputStream",
                    "function params": [
                        "delegate"
                    ],
                    "file name": "BOMExclusionInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BOMExclusionInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BOMExclusionInputStream.BOMExclusionInputStream"
                },
                {
                    "function name": "read",
                    "function params": [],
                    "file name": "BOMExclusionInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BOMExclusionInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BOMExclusionInputStream.read"
                },
                {
                    "function name": "mark",
                    "function params": [
                        "readlimit"
                    ],
                    "file name": "BOMExclusionInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BOMExclusionInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BOMExclusionInputStream.mark"
                },
                {
                    "function name": "ExpectCloseInputStream",
                    "function params": [],
                    "file name": "BOMExclusionInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMExclusionInputStreamTest.ExpectCloseInputStream"
                },
                {
                    "function name": "testSkipWithBOM",
                    "function params": [],
                    "file name": "BOMExclusionInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMExclusionInputStreamTest.testSkipWithBOM"
                },
                {
                    "function name": "testMarkResetAfterReadWithBOM",
                    "function params": [],
                    "file name": "BOMExclusionInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMExclusionInputStreamTest.testMarkResetAfterReadWithBOM"
                },
                {
                    "function name": "testSkipWithoutBOM",
                    "function params": [],
                    "file name": "BOMExclusionInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMExclusionInputStreamTest.testSkipWithoutBOM"
                },
                {
                    "function name": "ExpectCloseInputStream",
                    "function params": [],
                    "file name": "BOMExclusionInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMExclusionInputStreamTest.ExpectCloseInputStream"
                },
                {
                    "function name": "testMarkResetBeforeReadWithBOM",
                    "function params": [],
                    "file name": "BOMExclusionInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMExclusionInputStreamTest.testMarkResetBeforeReadWithBOM"
                },
                {
                    "function name": "testAvailableWithBOM",
                    "function params": [],
                    "file name": "BOMExclusionInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMExclusionInputStreamTest.testAvailableWithBOM"
                },
                {
                    "function name": "assertData",
                    "function params": [
                        "expected",
                        "actual",
                        "off",
                        "len"
                    ],
                    "file name": "BOMExclusionInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMExclusionInputStreamTest.assertData"
                },
                {
                    "function name": "testClose",
                    "function params": [],
                    "file name": "BOMExclusionInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMExclusionInputStreamTest.testClose"
                },
                {
                    "function name": "testSmallBufferWithoutBOM",
                    "function params": [],
                    "file name": "BOMExclusionInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMExclusionInputStreamTest.testSmallBufferWithoutBOM"
                },
                {
                    "function name": "testLeadingNonBOMSingleRead",
                    "function params": [],
                    "file name": "BOMExclusionInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMExclusionInputStreamTest.testLeadingNonBOMSingleRead"
                },
                {
                    "function name": "ExpectCloseInputStream",
                    "function params": [],
                    "file name": "BOMExclusionInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMExclusionInputStreamTest.ExpectCloseInputStream"
                },
                {
                    "function name": "testReadWithBOM",
                    "function params": [],
                    "file name": "BOMExclusionInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMExclusionInputStreamTest.testReadWithBOM"
                },
                {
                    "function name": "testLargeBufferWithoutBOM",
                    "function params": [],
                    "file name": "BOMExclusionInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMExclusionInputStreamTest.testLargeBufferWithoutBOM"
                },
                {
                    "function name": "testLargeBufferWithBOM",
                    "function params": [],
                    "file name": "BOMExclusionInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMExclusionInputStreamTest.testLargeBufferWithBOM"
                },
                {
                    "function name": "testMarkResetAfterReadWithoutBOM",
                    "function params": [],
                    "file name": "BOMExclusionInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMExclusionInputStreamTest.testMarkResetAfterReadWithoutBOM"
                },
                {
                    "function name": "testSmallBufferWithBOM",
                    "function params": [],
                    "file name": "BOMExclusionInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMExclusionInputStreamTest.testSmallBufferWithBOM"
                },
                {
                    "function name": "testMarkResetBeforeReadWithoutBOM",
                    "function params": [],
                    "file name": "BOMExclusionInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMExclusionInputStreamTest.testMarkResetBeforeReadWithoutBOM"
                },
                {
                    "function name": "testAvailableWithoutBOM",
                    "function params": [],
                    "file name": "BOMExclusionInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMExclusionInputStreamTest.testAvailableWithoutBOM"
                },
                {
                    "function name": "testReadWithoutBOM",
                    "function params": [],
                    "file name": "BOMExclusionInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMExclusionInputStreamTest.testReadWithoutBOM"
                },
                {
                    "function name": "testSupportCode",
                    "function params": [],
                    "file name": "BOMExclusionInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMExclusionInputStreamTest.testSupportCode"
                },
                {
                    "function name": "testLeadingNonBOMBufferedRead",
                    "function params": [],
                    "file name": "BOMExclusionInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMExclusionInputStreamTest.testLeadingNonBOMBufferedRead"
                },
                {
                    "function name": "createDataStream",
                    "function params": [
                        "baseData",
                        "addBOM"
                    ],
                    "file name": "BOMExclusionInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMExclusionInputStreamTest.createDataStream"
                }
            ],
            "date": "2008-11-30"
        },
        {
            "commit_id": 548,
            "hash": "328a7efc17e8c77853fea42a84808dd1d26c8d5a",
            "commit_summary": "Fix IO-161 FileCleaningTrackerTestCase hangs - reported by Sebastiano Vigna\n(copied code to try to force garbage collection from BeanUtils MemoryLeakTestCase)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@723153 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java"
            ],
            "functions": [
                {
                    "function name": "waitUntilTrackCount",
                    "function params": [],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleaningTrackerTestCase.waitUntilTrackCount"
                }
            ],
            "date": "2008-12-04"
        },
        {
            "commit_id": 549,
            "hash": "4a3fd09f1b0296514684fa2931c61bd8130f3cfd",
            "commit_summary": "IO-156 Add normalize() and normalizeNoEndSeparator() method flavours which allow the separator character to be specified\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@723186 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java",
                "src/test/org/apache/commons/io/FilenameUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "doNormalize",
                    "function params": [
                        "filename",
                        "separator",
                        "keepSeparator"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.doNormalize"
                },
                {
                    "function name": "normalize",
                    "function params": [
                        "filename",
                        "unixSeparator"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.normalize"
                },
                {
                    "function name": "normalize",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.normalize"
                },
                {
                    "function name": "normalizeNoEndSeparator",
                    "function params": [
                        "filename",
                        "unixSeparator"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator"
                },
                {
                    "function name": "normalizeNoEndSeparator",
                    "function params": [
                        "filename"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator"
                },
                {
                    "function name": "doNormalize",
                    "function params": [
                        "filename",
                        "keepSeparator"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.doNormalize"
                },
                {
                    "function name": "testNormalizeNoEndSeparatorUnixWin",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparatorUnixWin"
                },
                {
                    "function name": "testNormalizeUnixWin",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin"
                }
            ],
            "date": "2008-12-04"
        },
        {
            "commit_id": 550,
            "hash": "ee8a7df94a2b9f928c4a50e55291e427e363f76d",
            "commit_summary": "IO-183 Improve javadoc for FilenameUtils.getExtension() method - reported by Vadim Ponomarev\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@723189 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java"
            ],
            "functions": [],
            "date": "2008-12-04"
        },
        {
            "commit_id": 551,
            "hash": "63213c888b3a47036105bfa9caddf63f73cd695d",
            "commit_summary": "Fix fir IO-175 IOUtils.doCopyFile() issues with very large files and closing file input streams - thanks to David Sitsky\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@723199 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "doCopyFile",
                    "function params": [
                        "srcFile",
                        "destFile",
                        "preserveFileDate"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.doCopyFile"
                },
                {
                    "function name": "IGNOREtestCopyFileLarge",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.IGNOREtestCopyFileLarge"
                }
            ],
            "date": "2008-12-04"
        },
        {
            "commit_id": 552,
            "hash": "30fca899772d354211257381e89dac596eb5818f",
            "commit_summary": "IO-137 Added method for getting InputStream from ByteArrayOutputStream & IOUtils avoiding unnecessary array allocation and copy - thanks to Nikunj Trivedi for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@723507 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/IOUtils.java",
                "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "src/test/org/apache/commons/io/IOUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "toBufferedInputStream",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.toBufferedInputStream"
                },
                {
                    "function name": "toBufferedInputStream",
                    "function params": [
                        "input"
                    ],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.toBufferedInputStream"
                },
                {
                    "function name": "toBufferedInputStream",
                    "function params": [],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.toBufferedInputStream"
                },
                {
                    "function name": "testInputStreamToBufferedInputStream",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testInputStreamToBufferedInputStream"
                }
            ],
            "date": "2008-12-05"
        },
        {
            "commit_id": 553,
            "hash": "4c83c48a2a6b5fae5eaf2279ce1a20bc0c3edee7",
            "commit_summary": "IO-158 New ReaderInputStream and WriterOutputStream implementations - thanks to Andreas Veithen for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@723912 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "ReaderInputStream",
                    "function params": [
                        "reader"
                    ],
                    "file name": "ReaderInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/ReaderInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ReaderInputStream.ReaderInputStream"
                },
                {
                    "function name": "ReaderInputStream",
                    "function params": [
                        "reader",
                        "charset"
                    ],
                    "file name": "ReaderInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/ReaderInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ReaderInputStream.ReaderInputStream"
                },
                {
                    "function name": "ReaderInputStream",
                    "function params": [
                        "reader",
                        "charsetName",
                        "bufferSize"
                    ],
                    "file name": "ReaderInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/ReaderInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ReaderInputStream.ReaderInputStream"
                },
                {
                    "function name": "ReaderInputStream",
                    "function params": [
                        "reader",
                        "charsetName"
                    ],
                    "file name": "ReaderInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/ReaderInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ReaderInputStream.ReaderInputStream"
                },
                {
                    "function name": "ReaderInputStream",
                    "function params": [
                        "reader",
                        "charset",
                        "bufferSize"
                    ],
                    "file name": "ReaderInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/ReaderInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ReaderInputStream.ReaderInputStream"
                },
                {
                    "function name": "read",
                    "function params": [],
                    "file name": "ReaderInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/ReaderInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ReaderInputStream.read"
                },
                {
                    "function name": "read",
                    "function params": [
                        "b",
                        "off",
                        "len"
                    ],
                    "file name": "ReaderInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/ReaderInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ReaderInputStream.read"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "ReaderInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/ReaderInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ReaderInputStream.close"
                },
                {
                    "function name": "read",
                    "function params": [
                        "b"
                    ],
                    "file name": "ReaderInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/ReaderInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ReaderInputStream.read"
                },
                {
                    "function name": "write",
                    "function params": [
                        "b",
                        "off",
                        "len"
                    ],
                    "file name": "WriterOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/WriterOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.WriterOutputStream.write"
                },
                {
                    "function name": "WriterOutputStream",
                    "function params": [
                        "writer",
                        "charsetName",
                        "bufferSize",
                        "writeImmediately"
                    ],
                    "file name": "WriterOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/WriterOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.WriterOutputStream.WriterOutputStream"
                },
                {
                    "function name": "WriterOutputStream",
                    "function params": [
                        "writer",
                        "charsetName"
                    ],
                    "file name": "WriterOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/WriterOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.WriterOutputStream.WriterOutputStream"
                },
                {
                    "function name": "WriterOutputStream",
                    "function params": [
                        "writer",
                        "charset",
                        "bufferSize",
                        "writeImmediately"
                    ],
                    "file name": "WriterOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/WriterOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.WriterOutputStream.WriterOutputStream"
                },
                {
                    "function name": "processInput",
                    "function params": [
                        "endOfInput"
                    ],
                    "file name": "WriterOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/WriterOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.WriterOutputStream.processInput"
                },
                {
                    "function name": "WriterOutputStream",
                    "function params": [
                        "writer"
                    ],
                    "file name": "WriterOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/WriterOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.WriterOutputStream.WriterOutputStream"
                },
                {
                    "function name": "flush",
                    "function params": [],
                    "file name": "WriterOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/WriterOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.WriterOutputStream.flush"
                },
                {
                    "function name": "flushOutput",
                    "function params": [],
                    "file name": "WriterOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/WriterOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.WriterOutputStream.flushOutput"
                },
                {
                    "function name": "WriterOutputStream",
                    "function params": [
                        "writer",
                        "charset"
                    ],
                    "file name": "WriterOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/WriterOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.WriterOutputStream.WriterOutputStream"
                },
                {
                    "function name": "write",
                    "function params": [
                        "b"
                    ],
                    "file name": "WriterOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/WriterOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.WriterOutputStream.write"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "WriterOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/WriterOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.WriterOutputStream.close"
                },
                {
                    "function name": "write",
                    "function params": [
                        "b"
                    ],
                    "file name": "WriterOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/WriterOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.WriterOutputStream.write"
                },
                {
                    "function name": "testUTF8WithSingleByteRead",
                    "function params": [],
                    "file name": "ReaderInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/ReaderInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.ReaderInputStreamTest.testUTF8WithSingleByteRead"
                },
                {
                    "function name": "testLargeUTF8WithSingleByteRead",
                    "function params": [],
                    "file name": "ReaderInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/ReaderInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.ReaderInputStreamTest.testLargeUTF8WithSingleByteRead"
                },
                {
                    "function name": "testLargeUTF8WithBufferedRead",
                    "function params": [],
                    "file name": "ReaderInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/ReaderInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.ReaderInputStreamTest.testLargeUTF8WithBufferedRead"
                },
                {
                    "function name": "testUTF16WithSingleByteRead",
                    "function params": [],
                    "file name": "ReaderInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/ReaderInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.ReaderInputStreamTest.testUTF16WithSingleByteRead"
                },
                {
                    "function name": "testUTF8WithBufferedRead",
                    "function params": [],
                    "file name": "ReaderInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/ReaderInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.ReaderInputStreamTest.testUTF8WithBufferedRead"
                },
                {
                    "function name": "testReadZero",
                    "function params": [],
                    "file name": "ReaderInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/ReaderInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.ReaderInputStreamTest.testReadZero"
                },
                {
                    "function name": "testWithBufferedRead",
                    "function params": [],
                    "file name": "ReaderInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/ReaderInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.ReaderInputStreamTest.testWithBufferedRead"
                },
                {
                    "function name": "testWithSingleByteRead",
                    "function params": [],
                    "file name": "ReaderInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/ReaderInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.ReaderInputStreamTest.testWithSingleByteRead"
                },
                {
                    "function name": "for",
                    "function params": [
                        "i"
                    ],
                    "file name": "ReaderInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/ReaderInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.ReaderInputStreamTest.for"
                },
                {
                    "function name": "testUTF8WithBufferedWrite",
                    "function params": [],
                    "file name": "WriterOutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/WriterOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.WriterOutputStreamTest.testUTF8WithBufferedWrite"
                },
                {
                    "function name": "testWithSingleByteWrite",
                    "function params": [],
                    "file name": "WriterOutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/WriterOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.WriterOutputStreamTest.testWithSingleByteWrite"
                },
                {
                    "function name": "testUTF16WithSingleByteWrite",
                    "function params": [],
                    "file name": "WriterOutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/WriterOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.WriterOutputStreamTest.testUTF16WithSingleByteWrite"
                },
                {
                    "function name": "testUTF8WithSingleByteWrite",
                    "function params": [],
                    "file name": "WriterOutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/WriterOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.WriterOutputStreamTest.testUTF8WithSingleByteWrite"
                },
                {
                    "function name": "testLargeUTF8WithBufferedWrite",
                    "function params": [],
                    "file name": "WriterOutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/WriterOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.WriterOutputStreamTest.testLargeUTF8WithBufferedWrite"
                },
                {
                    "function name": "testLargeUTF8WithSingleByteWrite",
                    "function params": [],
                    "file name": "WriterOutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/WriterOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.WriterOutputStreamTest.testLargeUTF8WithSingleByteWrite"
                },
                {
                    "function name": "testWithBufferedWrite",
                    "function params": [],
                    "file name": "WriterOutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/WriterOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.WriterOutputStreamTest.testWithBufferedWrite"
                },
                {
                    "function name": "testFlush",
                    "function params": [],
                    "file name": "WriterOutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/WriterOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.WriterOutputStreamTest.testFlush"
                },
                {
                    "function name": "for",
                    "function params": [
                        "i"
                    ],
                    "file name": "WriterOutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/WriterOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.WriterOutputStreamTest.for"
                },
                {
                    "function name": "testWriteImmediately",
                    "function params": [],
                    "file name": "WriterOutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/WriterOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.WriterOutputStreamTest.testWriteImmediately"
                }
            ],
            "date": "2008-12-05"
        },
        {
            "commit_id": 554,
            "hash": "96d5ebb4c523d89af6c8fa6f6a3fee86c823487c",
            "commit_summary": "Fix Javadoc error\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@723941 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/comparator/DirectoryFileComparator.java"
            ],
            "functions": [],
            "date": "2008-12-06"
        },
        {
            "commit_id": 555,
            "hash": "2e06e9c1145fb30c3cffbfa38b84c4ac4c68db4f",
            "commit_summary": "Add missing @Override annotations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@723942 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileCleaningTracker.java",
                "src/java/org/apache/commons/io/FileDeleteStrategy.java",
                "src/java/org/apache/commons/io/comparator/AbstractFileComparator.java",
                "src/java/org/apache/commons/io/comparator/CompositeFileComparator.java",
                "src/java/org/apache/commons/io/comparator/ExtensionFileComparator.java",
                "src/java/org/apache/commons/io/comparator/NameFileComparator.java",
                "src/java/org/apache/commons/io/comparator/PathFileComparator.java",
                "src/java/org/apache/commons/io/comparator/ReverseComparator.java",
                "src/java/org/apache/commons/io/comparator/SizeFileComparator.java",
                "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/WildcardFilter.java"
            ],
            "functions": [],
            "date": "2008-12-06"
        },
        {
            "commit_id": 556,
            "hash": "7cf17155587fea0f9c855de67fe7a60d7e6c30eb",
            "commit_summary": "Add missing @Deprecated annotations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@723969 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileCleaner.java"
            ],
            "functions": [],
            "date": "2008-12-06"
        },
        {
            "commit_id": 557,
            "hash": "e702b9fa057131e21bff06a6a01809379b02a9a6",
            "commit_summary": "IO-189: update javadoc on HexDump.dump method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@736507 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/HexDump.java"
            ],
            "functions": [],
            "date": "2009-01-22"
        },
        {
            "commit_id": 558,
            "hash": "d4c5044c7b7697d944a444470a296dcd15911595",
            "commit_summary": "IO-191 - Possible improvements using static analysis - patch from Peter Lawrey\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@736890 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/DirectoryWalker.java",
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/java/org/apache/commons/io/FilenameUtils.java",
                "src/java/org/apache/commons/io/IOUtils.java",
                "src/java/org/apache/commons/io/comparator/AbstractFileComparator.java",
                "src/java/org/apache/commons/io/comparator/CompositeFileComparator.java",
                "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "src/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java",
                "src/java/org/apache/commons/io/input/DemuxInputStream.java",
                "src/java/org/apache/commons/io/input/NullInputStream.java",
                "src/java/org/apache/commons/io/input/NullReader.java",
                "src/java/org/apache/commons/io/monitor/FilesystemEntry.java",
                "src/java/org/apache/commons/io/monitor/FilesystemMonitor.java",
                "src/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "src/java/org/apache/commons/io/output/CountingOutputStream.java",
                "src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                "src/java/org/apache/commons/io/output/DemuxOutputStream.java",
                "src/java/org/apache/commons/io/output/ThresholdingOutputStream.java"
            ],
            "functions": [
                {
                    "function name": "walk",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.walk"
                },
                {
                    "function name": "innerListFiles",
                    "function params": [
                        "files",
                        "directory",
                        "filter"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.innerListFiles"
                },
                {
                    "function name": "sizeOfDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.sizeOfDirectory"
                },
                {
                    "function name": "cleanDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.cleanDirectory"
                },
                {
                    "function name": "cleanDirectoryOnExit",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.cleanDirectoryOnExit"
                },
                {
                    "function name": "doCopyDirectory",
                    "function params": [
                        "srcDir",
                        "destDir",
                        "filter",
                        "preserveFileDate",
                        "exclusionList"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.doCopyDirectory"
                },
                {
                    "function name": "copyDirectory",
                    "function params": [
                        "srcDir",
                        "destDir",
                        "filter",
                        "preserveFileDate"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyDirectory"
                },
                {
                    "function name": "deleteQuietly",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.deleteQuietly"
                },
                {
                    "function name": "isExtension",
                    "function params": [
                        "filename",
                        "extensions"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.isExtension"
                },
                {
                    "function name": "isExtension",
                    "function params": [
                        "filename",
                        "extensions"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.isExtension"
                },
                {
                    "function name": "splitOnTokens",
                    "function params": [
                        "text"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.splitOnTokens"
                },
                {
                    "function name": "writeLines",
                    "function params": [
                        "lines",
                        "lineEnding",
                        "output",
                        "encoding"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.writeLines"
                },
                {
                    "function name": "writeLines",
                    "function params": [
                        "lines",
                        "lineEnding",
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.writeLines"
                },
                {
                    "function name": "writeLines",
                    "function params": [
                        "lines",
                        "lineEnding",
                        "writer"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.writeLines"
                },
                {
                    "function name": "compare",
                    "function params": [
                        "file1",
                        "file2"
                    ],
                    "file name": "CompositeFileComparator.java",
                    "file old path": "src/java/org/apache/commons/io/comparator/CompositeFileComparator.java",
                    "file new path": "src/java/org/apache/commons/io/comparator/CompositeFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.CompositeFileComparator.compare"
                },
                {
                    "function name": "CompositeFileComparator",
                    "function params": [
                        "delegates"
                    ],
                    "file name": "CompositeFileComparator.java",
                    "file old path": "src/java/org/apache/commons/io/comparator/CompositeFileComparator.java",
                    "file new path": "src/java/org/apache/commons/io/comparator/CompositeFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.CompositeFileComparator.CompositeFileComparator"
                },
                {
                    "function name": "CompositeFileComparator",
                    "function params": [
                        "delegates"
                    ],
                    "file name": "CompositeFileComparator.java",
                    "file old path": "src/java/org/apache/commons/io/comparator/CompositeFileComparator.java",
                    "file new path": "src/java/org/apache/commons/io/comparator/CompositeFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.CompositeFileComparator.CompositeFileComparator"
                },
                {
                    "function name": "AndFileFilter",
                    "function params": [
                        "filter1",
                        "filter2"
                    ],
                    "file name": "AndFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter"
                },
                {
                    "function name": "setFileFilters",
                    "function params": [
                        "fileFilters"
                    ],
                    "file name": "AndFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AndFileFilter.setFileFilters"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file",
                        "name"
                    ],
                    "file name": "NameFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NameFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "NameFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NameFileFilter.accept"
                },
                {
                    "function name": "OrFileFilter",
                    "function params": [
                        "filter1",
                        "filter2"
                    ],
                    "file name": "OrFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter"
                },
                {
                    "function name": "setFileFilters",
                    "function params": [
                        "fileFilters"
                    ],
                    "file name": "OrFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.OrFileFilter.setFileFilters"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file",
                        "name"
                    ],
                    "file name": "PrefixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.PrefixFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "PrefixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.PrefixFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file",
                        "name"
                    ],
                    "file name": "SuffixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.SuffixFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "SuffixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.SuffixFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "WildcardFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.WildcardFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "dir",
                        "name"
                    ],
                    "file name": "WildcardFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.WildcardFileFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "dir",
                        "name"
                    ],
                    "file name": "WildcardFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.WildcardFilter.accept"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "WildcardFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.WildcardFilter.accept"
                },
                {
                    "function name": "FilesystemMonitor",
                    "function params": [
                        "interval",
                        "observers"
                    ],
                    "file name": "FilesystemMonitor.java",
                    "file old path": "src/java/org/apache/commons/io/monitor/FilesystemMonitor.java",
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemMonitor.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemMonitor.FilesystemMonitor"
                },
                {
                    "function name": "stop",
                    "function params": [],
                    "file name": "FilesystemMonitor.java",
                    "file old path": "src/java/org/apache/commons/io/monitor/FilesystemMonitor.java",
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemMonitor.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemMonitor.stop"
                },
                {
                    "function name": "run",
                    "function params": [],
                    "file name": "FilesystemMonitor.java",
                    "file old path": "src/java/org/apache/commons/io/monitor/FilesystemMonitor.java",
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemMonitor.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemMonitor.run"
                },
                {
                    "function name": "checkAndNotify",
                    "function params": [
                        "parent",
                        "previous",
                        "files"
                    ],
                    "file name": "FilesystemObserver.java",
                    "file old path": "src/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemObserver.checkAndNotify"
                },
                {
                    "function name": "doCreate",
                    "function params": [
                        "entry"
                    ],
                    "file name": "FilesystemObserver.java",
                    "file old path": "src/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "file new path": "src/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "full name": "src.java.org.apache.commons.io.monitor.FilesystemObserver.doCreate"
                },
                {
                    "function name": "writeTo",
                    "function params": [
                        "out"
                    ],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.writeTo"
                },
                {
                    "function name": "toBufferedInputStream",
                    "function params": [],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.toBufferedInputStream"
                },
                {
                    "function name": "toByteArray",
                    "function params": [],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.toByteArray"
                },
                {
                    "function name": "DeferredFileOutputStream",
                    "function params": [
                        "threshold",
                        "outputFile",
                        "prefix",
                        "suffix",
                        "directory"
                    ],
                    "file name": "DeferredFileOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream"
                },
                {
                    "function name": "DeferredFileOutputStream",
                    "function params": [
                        "threshold",
                        "outputFile"
                    ],
                    "file name": "DeferredFileOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream"
                },
                {
                    "function name": "DeferredFileOutputStream",
                    "function params": [
                        "threshold",
                        "prefix",
                        "suffix",
                        "directory"
                    ],
                    "file name": "DeferredFileOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/DeferredFileOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream"
                }
            ],
            "date": "2009-01-23"
        },
        {
            "commit_id": 559,
            "hash": "28c59d7e10c28c3911970b61327af1be95f0399d",
            "commit_summary": "Use Class getSimpleName()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@736891 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/comparator/AbstractFileComparator.java",
                "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java"
            ],
            "functions": [
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "AbstractFileComparator.java",
                    "file old path": "src/java/org/apache/commons/io/comparator/AbstractFileComparator.java",
                    "file new path": "src/java/org/apache/commons/io/comparator/AbstractFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.AbstractFileComparator.toString"
                },
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "AbstractFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/AbstractFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.AbstractFileFilter.toString"
                }
            ],
            "date": "2009-01-23"
        },
        {
            "commit_id": 560,
            "hash": "bccee3ba757d0accbe27bc9e09420781214ba631",
            "commit_summary": "IO-193: Broken input and output streams\n\nAdded the proposed BrokenInputStream and BrokenOutputStream classes.\nAlso added simple test cases for the new code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@741531 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/input/PackageTestSuite.java",
                "src/test/org/apache/commons/io/output/PackageTestSuite.java"
            ],
            "functions": [
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "BrokenInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BrokenInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BrokenInputStream.close"
                },
                {
                    "function name": "reset",
                    "function params": [],
                    "file name": "BrokenInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BrokenInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BrokenInputStream.reset"
                },
                {
                    "function name": "BrokenInputStream",
                    "function params": [],
                    "file name": "BrokenInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BrokenInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BrokenInputStream.BrokenInputStream"
                },
                {
                    "function name": "BrokenInputStream",
                    "function params": [
                        "exception"
                    ],
                    "file name": "BrokenInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BrokenInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BrokenInputStream.BrokenInputStream"
                },
                {
                    "function name": "available",
                    "function params": [],
                    "file name": "BrokenInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BrokenInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BrokenInputStream.available"
                },
                {
                    "function name": "skip",
                    "function params": [
                        "n"
                    ],
                    "file name": "BrokenInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BrokenInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BrokenInputStream.skip"
                },
                {
                    "function name": "read",
                    "function params": [],
                    "file name": "BrokenInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BrokenInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BrokenInputStream.read"
                },
                {
                    "function name": "BrokenOutputStream",
                    "function params": [],
                    "file name": "BrokenOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/BrokenOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.BrokenOutputStream.BrokenOutputStream"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "BrokenOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/BrokenOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.BrokenOutputStream.close"
                },
                {
                    "function name": "BrokenOutputStream",
                    "function params": [
                        "exception"
                    ],
                    "file name": "BrokenOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/BrokenOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.BrokenOutputStream.BrokenOutputStream"
                },
                {
                    "function name": "flush",
                    "function params": [],
                    "file name": "BrokenOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/BrokenOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.BrokenOutputStream.flush"
                },
                {
                    "function name": "write",
                    "function params": [
                        "b"
                    ],
                    "file name": "BrokenOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/BrokenOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.BrokenOutputStream.write"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "BrokenInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/BrokenInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BrokenInputStreamTest.setUp"
                },
                {
                    "function name": "testAvailable",
                    "function params": [],
                    "file name": "BrokenInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/BrokenInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BrokenInputStreamTest.testAvailable"
                },
                {
                    "function name": "testReset",
                    "function params": [],
                    "file name": "BrokenInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/BrokenInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BrokenInputStreamTest.testReset"
                },
                {
                    "function name": "testSkip",
                    "function params": [],
                    "file name": "BrokenInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/BrokenInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BrokenInputStreamTest.testSkip"
                },
                {
                    "function name": "testRead",
                    "function params": [],
                    "file name": "BrokenInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/BrokenInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BrokenInputStreamTest.testRead"
                },
                {
                    "function name": "testClose",
                    "function params": [],
                    "file name": "BrokenInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/BrokenInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BrokenInputStreamTest.testClose"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "PackageTestSuite.java",
                    "file old path": "src/test/org/apache/commons/io/input/PackageTestSuite.java",
                    "file new path": "src/test/org/apache/commons/io/input/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.input.PackageTestSuite.suite"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "BrokenOutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/BrokenOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.BrokenOutputStreamTest.setUp"
                },
                {
                    "function name": "testClose",
                    "function params": [],
                    "file name": "BrokenOutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/BrokenOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.BrokenOutputStreamTest.testClose"
                },
                {
                    "function name": "testFlush",
                    "function params": [],
                    "file name": "BrokenOutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/BrokenOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.BrokenOutputStreamTest.testFlush"
                },
                {
                    "function name": "testWrite",
                    "function params": [],
                    "file name": "BrokenOutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/BrokenOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.BrokenOutputStreamTest.testWrite"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "PackageTestSuite.java",
                    "file old path": "src/test/org/apache/commons/io/output/PackageTestSuite.java",
                    "file new path": "src/test/org/apache/commons/io/output/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.output.PackageTestSuite.suite"
                }
            ],
            "date": "2009-02-06"
        },
        {
            "commit_id": 561,
            "hash": "7c80287d174486fcbb387ba50cba90e43f72586d",
            "commit_summary": "IO-193: Broken input and output streams\n\nThere's no need for BrokenInputStream.reset() to be synchronized like the InputStream.reset() method it overrides.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@741536 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/BrokenInputStream.java"
            ],
            "functions": [
                {
                    "function name": "reset",
                    "function params": [],
                    "file name": "BrokenInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/BrokenInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/BrokenInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BrokenInputStream.reset"
                }
            ],
            "date": "2009-02-06"
        },
        {
            "commit_id": 562,
            "hash": "71fd53258da00eaf9dfb6c7bb92a9ec170bc976b",
            "commit_summary": "IO-192: Tagged input and output streams\n\nAdded the proposed TaggedIOException, TaggedInputStream and TaggedOutputStream classes and related unit tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@741562 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/PackageTestSuite.java",
                "src/test/org/apache/commons/io/input/PackageTestSuite.java",
                "src/test/org/apache/commons/io/output/PackageTestSuite.java"
            ],
            "functions": [
                {
                    "function name": "getCause",
                    "function params": [],
                    "file name": "TaggedIOException.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/TaggedIOException.java",
                    "full name": "src.java.org.apache.commons.io.TaggedIOException.getCause"
                },
                {
                    "function name": "TaggedIOException",
                    "function params": [
                        "original",
                        "tag"
                    ],
                    "file name": "TaggedIOException.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/TaggedIOException.java",
                    "full name": "src.java.org.apache.commons.io.TaggedIOException.TaggedIOException"
                },
                {
                    "function name": "getTag",
                    "function params": [],
                    "file name": "TaggedIOException.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/TaggedIOException.java",
                    "full name": "src.java.org.apache.commons.io.TaggedIOException.getTag"
                },
                {
                    "function name": "reset",
                    "function params": [],
                    "file name": "TaggedInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/TaggedInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.TaggedInputStream.reset"
                },
                {
                    "function name": "TaggedInputStream",
                    "function params": [
                        "proxy"
                    ],
                    "file name": "TaggedInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/TaggedInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.TaggedInputStream.TaggedInputStream"
                },
                {
                    "function name": "throwIfCauseOf",
                    "function params": [
                        "exception"
                    ],
                    "file name": "TaggedInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/TaggedInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.TaggedInputStream.throwIfCauseOf"
                },
                {
                    "function name": "skip",
                    "function params": [
                        "ln"
                    ],
                    "file name": "TaggedInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/TaggedInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.TaggedInputStream.skip"
                },
                {
                    "function name": "available",
                    "function params": [],
                    "file name": "TaggedInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/TaggedInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.TaggedInputStream.available"
                },
                {
                    "function name": "isCauseOf",
                    "function params": [
                        "exception"
                    ],
                    "file name": "TaggedInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/TaggedInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.TaggedInputStream.isCauseOf"
                },
                {
                    "function name": "read",
                    "function params": [],
                    "file name": "TaggedInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/TaggedInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.TaggedInputStream.read"
                },
                {
                    "function name": "read",
                    "function params": [
                        "bts"
                    ],
                    "file name": "TaggedInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/TaggedInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.TaggedInputStream.read"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "TaggedInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/TaggedInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.TaggedInputStream.close"
                },
                {
                    "function name": "read",
                    "function params": [
                        "bts",
                        "st",
                        "end"
                    ],
                    "file name": "TaggedInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/TaggedInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.TaggedInputStream.read"
                },
                {
                    "function name": "throwIfCauseOf",
                    "function params": [
                        "exception"
                    ],
                    "file name": "TaggedOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/TaggedOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.TaggedOutputStream.throwIfCauseOf"
                },
                {
                    "function name": "isCauseOf",
                    "function params": [
                        "exception"
                    ],
                    "file name": "TaggedOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/TaggedOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.TaggedOutputStream.isCauseOf"
                },
                {
                    "function name": "write",
                    "function params": [
                        "idx"
                    ],
                    "file name": "TaggedOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/TaggedOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.TaggedOutputStream.write"
                },
                {
                    "function name": "flush",
                    "function params": [],
                    "file name": "TaggedOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/TaggedOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.TaggedOutputStream.flush"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "TaggedOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/TaggedOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.TaggedOutputStream.close"
                },
                {
                    "function name": "write",
                    "function params": [
                        "bts"
                    ],
                    "file name": "TaggedOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/TaggedOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.TaggedOutputStream.write"
                },
                {
                    "function name": "TaggedOutputStream",
                    "function params": [
                        "proxy"
                    ],
                    "file name": "TaggedOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/TaggedOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.TaggedOutputStream.TaggedOutputStream"
                },
                {
                    "function name": "write",
                    "function params": [
                        "bts",
                        "st",
                        "end"
                    ],
                    "file name": "TaggedOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/TaggedOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.TaggedOutputStream.write"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "PackageTestSuite.java",
                    "file old path": "src/test/org/apache/commons/io/PackageTestSuite.java",
                    "file new path": "src/test/org/apache/commons/io/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.PackageTestSuite.suite"
                },
                {
                    "function name": "testTaggedIOException",
                    "function params": [],
                    "file name": "TaggedIOExceptionTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/TaggedIOExceptionTest.java",
                    "full name": "src.test.org.apache.commons.io.TaggedIOExceptionTest.testTaggedIOException"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "PackageTestSuite.java",
                    "file old path": "src/test/org/apache/commons/io/input/PackageTestSuite.java",
                    "file new path": "src/test/org/apache/commons/io/input/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.input.PackageTestSuite.suite"
                },
                {
                    "function name": "testOtherException",
                    "function params": [],
                    "file name": "TaggedInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/TaggedInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.TaggedInputStreamTest.testOtherException"
                },
                {
                    "function name": "testEmptyStream",
                    "function params": [],
                    "file name": "TaggedInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/TaggedInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.TaggedInputStreamTest.testEmptyStream"
                },
                {
                    "function name": "testBrokenStream",
                    "function params": [],
                    "file name": "TaggedInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/TaggedInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.TaggedInputStreamTest.testBrokenStream"
                },
                {
                    "function name": "testNormalStream",
                    "function params": [],
                    "file name": "TaggedInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/TaggedInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.TaggedInputStreamTest.testNormalStream"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "PackageTestSuite.java",
                    "file old path": "src/test/org/apache/commons/io/output/PackageTestSuite.java",
                    "file new path": "src/test/org/apache/commons/io/output/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.output.PackageTestSuite.suite"
                },
                {
                    "function name": "testNormalStream",
                    "function params": [],
                    "file name": "TaggedOutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/TaggedOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.TaggedOutputStreamTest.testNormalStream"
                },
                {
                    "function name": "testBrokenStream",
                    "function params": [],
                    "file name": "TaggedOutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/TaggedOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.TaggedOutputStreamTest.testBrokenStream"
                },
                {
                    "function name": "testOtherException",
                    "function params": [],
                    "file name": "TaggedOutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/TaggedOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.TaggedOutputStreamTest.testOtherException"
                }
            ],
            "date": "2009-02-06"
        },
        {
            "commit_id": 563,
            "hash": "6319a20fdc43ab33c19d162d527b95ced13c0e76",
            "commit_summary": "IO-195 Provide exception handling methods in the Proxy streams/readers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@744371 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                "src/java/org/apache/commons/io/input/ProxyReader.java",
                "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                "src/java/org/apache/commons/io/output/ProxyWriter.java"
            ],
            "functions": [
                {
                    "function name": "read",
                    "function params": [
                        "bts"
                    ],
                    "file name": "ProxyInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyInputStream.read"
                },
                {
                    "function name": "read",
                    "function params": [
                        "bts",
                        "st",
                        "end"
                    ],
                    "file name": "ProxyInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyInputStream.read"
                },
                {
                    "function name": "skip",
                    "function params": [
                        "ln"
                    ],
                    "file name": "ProxyInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyInputStream.skip"
                },
                {
                    "function name": "available",
                    "function params": [],
                    "file name": "ProxyInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyInputStream.available"
                },
                {
                    "function name": "read",
                    "function params": [],
                    "file name": "ProxyInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyInputStream.read"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "ProxyInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyInputStream.close"
                },
                {
                    "function name": "handleIOException",
                    "function params": [
                        "e"
                    ],
                    "file name": "ProxyInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyInputStream.handleIOException"
                },
                {
                    "function name": "reset",
                    "function params": [],
                    "file name": "ProxyInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyInputStream.reset"
                },
                {
                    "function name": "reset",
                    "function params": [],
                    "file name": "ProxyReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyReader.reset"
                },
                {
                    "function name": "read",
                    "function params": [
                        "target"
                    ],
                    "file name": "ProxyReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyReader.read"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "ProxyReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyReader.close"
                },
                {
                    "function name": "mark",
                    "function params": [
                        "idx"
                    ],
                    "file name": "ProxyReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyReader.mark"
                },
                {
                    "function name": "skip",
                    "function params": [
                        "ln"
                    ],
                    "file name": "ProxyReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyReader.skip"
                },
                {
                    "function name": "read",
                    "function params": [],
                    "file name": "ProxyReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyReader.read"
                },
                {
                    "function name": "ready",
                    "function params": [],
                    "file name": "ProxyReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyReader.ready"
                },
                {
                    "function name": "read",
                    "function params": [
                        "chr",
                        "st",
                        "end"
                    ],
                    "file name": "ProxyReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyReader.read"
                },
                {
                    "function name": "handleIOException",
                    "function params": [
                        "e"
                    ],
                    "file name": "ProxyReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyReader.handleIOException"
                },
                {
                    "function name": "read",
                    "function params": [
                        "chr"
                    ],
                    "file name": "ProxyReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyReader.read"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "ProxyOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyOutputStream.close"
                },
                {
                    "function name": "handleIOException",
                    "function params": [
                        "e"
                    ],
                    "file name": "ProxyOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyOutputStream.handleIOException"
                },
                {
                    "function name": "flush",
                    "function params": [],
                    "file name": "ProxyOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyOutputStream.flush"
                },
                {
                    "function name": "write",
                    "function params": [
                        "idx"
                    ],
                    "file name": "ProxyOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyOutputStream.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "bts",
                        "st",
                        "end"
                    ],
                    "file name": "ProxyOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyOutputStream.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "bts"
                    ],
                    "file name": "ProxyOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyOutputStream.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "chr",
                        "st",
                        "end"
                    ],
                    "file name": "ProxyWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "str",
                        "st",
                        "end"
                    ],
                    "file name": "ProxyWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.write"
                },
                {
                    "function name": "append",
                    "function params": [
                        "csq",
                        "start",
                        "end"
                    ],
                    "file name": "ProxyWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.append"
                },
                {
                    "function name": "flush",
                    "function params": [],
                    "file name": "ProxyWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.flush"
                },
                {
                    "function name": "write",
                    "function params": [
                        "str"
                    ],
                    "file name": "ProxyWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.write"
                },
                {
                    "function name": "append",
                    "function params": [
                        "csq"
                    ],
                    "file name": "ProxyWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.append"
                },
                {
                    "function name": "write",
                    "function params": [
                        "chr"
                    ],
                    "file name": "ProxyWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.write"
                },
                {
                    "function name": "handleIOException",
                    "function params": [
                        "e"
                    ],
                    "file name": "ProxyWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.handleIOException"
                },
                {
                    "function name": "write",
                    "function params": [
                        "idx"
                    ],
                    "file name": "ProxyWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.write"
                },
                {
                    "function name": "append",
                    "function params": [
                        "c"
                    ],
                    "file name": "ProxyWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.append"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "ProxyWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.close"
                }
            ],
            "date": "2009-02-14"
        },
        {
            "commit_id": 564,
            "hash": "73beb941c537803ae470f0ff459d76a3612abeed",
            "commit_summary": "IO-192 use the new exception handling methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@744372 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/TaggedInputStream.java",
                "src/java/org/apache/commons/io/output/TaggedOutputStream.java"
            ],
            "functions": [
                {
                    "function name": "handleIOException",
                    "function params": [
                        "e"
                    ],
                    "file name": "TaggedInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/TaggedInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/TaggedInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.TaggedInputStream.handleIOException"
                },
                {
                    "function name": "handleIOException",
                    "function params": [
                        "e"
                    ],
                    "file name": "TaggedOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/TaggedOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/TaggedOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.TaggedOutputStream.handleIOException"
                }
            ],
            "date": "2009-02-14"
        },
        {
            "commit_id": 565,
            "hash": "80e9b2c3af8e9150ae54f7e28c753b251b361c36",
            "commit_summary": "Add missing @Override tag\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@744489 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/TaggedIOException.java"
            ],
            "functions": [],
            "date": "2009-02-14"
        },
        {
            "commit_id": 566,
            "hash": "151b81612e06770e6c1fc4b7dd27fc8c047d1a08",
            "commit_summary": "IO-157 revert as this breaks binary compatibility with previous releases\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@744725 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "copyFileToDirectory",
                    "function params": [
                        "srcFile",
                        "destDir"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyFileToDirectory"
                },
                {
                    "function name": "copyFileToDirectory",
                    "function params": [
                        "srcFile",
                        "destDir",
                        "preserveFileDate"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyFileToDirectory"
                },
                {
                    "function name": "testCopyFile1ToDir",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyFile1ToDir"
                }
            ],
            "date": "2009-02-15"
        },
        {
            "commit_id": 567,
            "hash": "fe4ff5cb6f913bc48cca642f3236bbf0aa578c97",
            "commit_summary": "Fix IO-202 NotFileFilter documentation is incorrect - thanks to Matthew Flaschen for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@768750 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/NotFileFilter.java"
            ],
            "functions": [],
            "date": "2009-04-26"
        },
        {
            "commit_id": 568,
            "hash": "16f2923131b65748c5b6cf5a560f712383b003de",
            "commit_summary": "Fix IO-206 ProxyInputStream: misleading parameter names - thanks to Jeremias Maerki for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@776062 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/ProxyInputStream.java"
            ],
            "functions": [
                {
                    "function name": "mark",
                    "function params": [
                        "idx"
                    ],
                    "file name": "ProxyInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyInputStream.mark"
                },
                {
                    "function name": "mark",
                    "function params": [
                        "readlimit"
                    ],
                    "file name": "ProxyInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyInputStream.mark"
                },
                {
                    "function name": "read",
                    "function params": [
                        "bts",
                        "st",
                        "end"
                    ],
                    "file name": "ProxyInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyInputStream.read"
                },
                {
                    "function name": "read",
                    "function params": [
                        "bts",
                        "off",
                        "len"
                    ],
                    "file name": "ProxyInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyInputStream.read"
                }
            ],
            "date": "2009-05-18"
        },
        {
            "commit_id": 569,
            "hash": "2853baafcb5ffc93d087efc230ce79e0bbab0536",
            "commit_summary": "IO-192: Tagged input and output streams\n\nAdded static checker methods on TaggedIOException. This simplified the tagged stream classes and should make it easier to reuse just the TaggedIOException class.\n\nMade the tag object Serializable. Switched to using a unique id (UUID) object per tagged stream instead of the stream instance as the tag that binds thrown exceptions to the tagged stream.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@803310 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/TaggedIOException.java",
                "src/java/org/apache/commons/io/input/TaggedInputStream.java",
                "src/java/org/apache/commons/io/output/TaggedOutputStream.java",
                "src/test/org/apache/commons/io/TaggedIOExceptionTest.java",
                "src/test/org/apache/commons/io/input/TaggedInputStreamTest.java",
                "src/test/org/apache/commons/io/output/TaggedOutputStreamTest.java"
            ],
            "functions": [
                {
                    "function name": "throwCauseIfTaggedWith",
                    "function params": [
                        "throwable",
                        "tag"
                    ],
                    "file name": "TaggedIOException.java",
                    "file old path": "src/java/org/apache/commons/io/TaggedIOException.java",
                    "file new path": "src/java/org/apache/commons/io/TaggedIOException.java",
                    "full name": "src.java.org.apache.commons.io.TaggedIOException.throwCauseIfTaggedWith"
                },
                {
                    "function name": "getTag",
                    "function params": [],
                    "file name": "TaggedIOException.java",
                    "file old path": "src/java/org/apache/commons/io/TaggedIOException.java",
                    "file new path": "src/java/org/apache/commons/io/TaggedIOException.java",
                    "full name": "src.java.org.apache.commons.io.TaggedIOException.getTag"
                },
                {
                    "function name": "isTaggedWith",
                    "function params": [
                        "throwable",
                        "tag"
                    ],
                    "file name": "TaggedIOException.java",
                    "file old path": "src/java/org/apache/commons/io/TaggedIOException.java",
                    "file new path": "src/java/org/apache/commons/io/TaggedIOException.java",
                    "full name": "src.java.org.apache.commons.io.TaggedIOException.isTaggedWith"
                },
                {
                    "function name": "TaggedIOException",
                    "function params": [
                        "original",
                        "tag"
                    ],
                    "file name": "TaggedIOException.java",
                    "file old path": "src/java/org/apache/commons/io/TaggedIOException.java",
                    "file new path": "src/java/org/apache/commons/io/TaggedIOException.java",
                    "full name": "src.java.org.apache.commons.io.TaggedIOException.TaggedIOException"
                },
                {
                    "function name": "TaggedIOException",
                    "function params": [
                        "original",
                        "tag"
                    ],
                    "file name": "TaggedIOException.java",
                    "file old path": "src/java/org/apache/commons/io/TaggedIOException.java",
                    "file new path": "src/java/org/apache/commons/io/TaggedIOException.java",
                    "full name": "src.java.org.apache.commons.io.TaggedIOException.TaggedIOException"
                },
                {
                    "function name": "isCauseOf",
                    "function params": [
                        "exception"
                    ],
                    "file name": "TaggedInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/TaggedInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/TaggedInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.TaggedInputStream.isCauseOf"
                },
                {
                    "function name": "handleIOException",
                    "function params": [
                        "e"
                    ],
                    "file name": "TaggedInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/TaggedInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/TaggedInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.TaggedInputStream.handleIOException"
                },
                {
                    "function name": "isCauseOf",
                    "function params": [
                        "exception"
                    ],
                    "file name": "TaggedInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/TaggedInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/TaggedInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.TaggedInputStream.isCauseOf"
                },
                {
                    "function name": "throwIfCauseOf",
                    "function params": [
                        "throwable"
                    ],
                    "file name": "TaggedInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/TaggedInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/TaggedInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.TaggedInputStream.throwIfCauseOf"
                },
                {
                    "function name": "throwIfCauseOf",
                    "function params": [
                        "exception"
                    ],
                    "file name": "TaggedInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/TaggedInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/TaggedInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.TaggedInputStream.throwIfCauseOf"
                },
                {
                    "function name": "isCauseOf",
                    "function params": [
                        "exception"
                    ],
                    "file name": "TaggedOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/TaggedOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/TaggedOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.TaggedOutputStream.isCauseOf"
                },
                {
                    "function name": "handleIOException",
                    "function params": [
                        "e"
                    ],
                    "file name": "TaggedOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/TaggedOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/TaggedOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.TaggedOutputStream.handleIOException"
                },
                {
                    "function name": "throwIfCauseOf",
                    "function params": [
                        "exception"
                    ],
                    "file name": "TaggedOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/TaggedOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/TaggedOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.TaggedOutputStream.throwIfCauseOf"
                },
                {
                    "function name": "isCauseOf",
                    "function params": [
                        "exception"
                    ],
                    "file name": "TaggedOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/TaggedOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/TaggedOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.TaggedOutputStream.isCauseOf"
                },
                {
                    "function name": "testTaggedIOException",
                    "function params": [],
                    "file name": "TaggedIOExceptionTest.java",
                    "file old path": "src/test/org/apache/commons/io/TaggedIOExceptionTest.java",
                    "file new path": "src/test/org/apache/commons/io/TaggedIOExceptionTest.java",
                    "full name": "src.test.org.apache.commons.io.TaggedIOExceptionTest.testTaggedIOException"
                },
                {
                    "function name": "testOtherException",
                    "function params": [],
                    "file name": "TaggedInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/TaggedInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/TaggedInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.TaggedInputStreamTest.testOtherException"
                },
                {
                    "function name": "testOtherException",
                    "function params": [],
                    "file name": "TaggedOutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/TaggedOutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/TaggedOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.TaggedOutputStreamTest.testOtherException"
                }
            ],
            "date": "2009-08-11"
        },
        {
            "commit_id": 570,
            "hash": "3ce24e5883f282e5b6dcdea3eaa5b8992ab1f86e",
            "commit_summary": "IO-211: Pre- and post-processing support for proxied streams\n\nCommitted the proposed patch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805151 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/AutoCloseInputStream.java",
                "src/java/org/apache/commons/io/input/CountingInputStream.java",
                "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                "src/java/org/apache/commons/io/output/CountingOutputStream.java",
                "src/java/org/apache/commons/io/output/ProxyOutputStream.java"
            ],
            "functions": [
                {
                    "function name": "afterRead",
                    "function params": [
                        "n"
                    ],
                    "file name": "AutoCloseInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/AutoCloseInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/AutoCloseInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.AutoCloseInputStream.afterRead"
                },
                {
                    "function name": "afterRead",
                    "function params": [
                        "n"
                    ],
                    "file name": "CountingInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.CountingInputStream.afterRead"
                },
                {
                    "function name": "read",
                    "function params": [
                        "bts"
                    ],
                    "file name": "ProxyInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyInputStream.read"
                },
                {
                    "function name": "afterRead",
                    "function params": [
                        "n"
                    ],
                    "file name": "ProxyInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyInputStream.afterRead"
                },
                {
                    "function name": "beforeRead",
                    "function params": [
                        "n"
                    ],
                    "file name": "ProxyInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyInputStream.beforeRead"
                },
                {
                    "function name": "read",
                    "function params": [
                        "bts",
                        "off",
                        "len"
                    ],
                    "file name": "ProxyInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyInputStream.read"
                },
                {
                    "function name": "read",
                    "function params": [],
                    "file name": "ProxyInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyInputStream.read"
                },
                {
                    "function name": "beforeWrite",
                    "function params": [
                        "n"
                    ],
                    "file name": "CountingOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/CountingOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/CountingOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.CountingOutputStream.beforeWrite"
                },
                {
                    "function name": "write",
                    "function params": [
                        "idx"
                    ],
                    "file name": "ProxyOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyOutputStream.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "bts",
                        "st",
                        "end"
                    ],
                    "file name": "ProxyOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyOutputStream.write"
                },
                {
                    "function name": "afterWrite",
                    "function params": [
                        "n"
                    ],
                    "file name": "ProxyOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyOutputStream.afterWrite"
                },
                {
                    "function name": "beforeWrite",
                    "function params": [
                        "n"
                    ],
                    "file name": "ProxyOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyOutputStream.beforeWrite"
                },
                {
                    "function name": "write",
                    "function params": [
                        "bts"
                    ],
                    "file name": "ProxyOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyOutputStream.write"
                }
            ],
            "date": "2009-08-17"
        },
        {
            "commit_id": 571,
            "hash": "d0ccc55dacccf84bf81845366a947a707381939e",
            "commit_summary": "IO-212: Incorrect ProxyInputStream.skip() javadoc\n\nFixed the javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805156 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/ProxyInputStream.java"
            ],
            "functions": [],
            "date": "2009-08-17"
        },
        {
            "commit_id": 572,
            "hash": "4a8ac544323146d698d2168ccfa3be4fd8fe708c",
            "commit_summary": "IO-193: Broken input and output streams\n\nNext release version is 2.0\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805160 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/BrokenInputStream.java",
                "src/java/org/apache/commons/io/output/BrokenOutputStream.java"
            ],
            "functions": [],
            "date": "2009-08-17"
        },
        {
            "commit_id": 573,
            "hash": "cecd086698aaed0d453bd4be9ac9e579797a9764",
            "commit_summary": "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805892 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/CopyUtilsTest.java",
                "src/test/org/apache/commons/io/DemuxTestCase.java",
                "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                "src/test/org/apache/commons/io/FileDeleteStrategyTestCase.java",
                "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "src/test/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                "src/test/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java",
                "src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                "src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "src/test/org/apache/commons/io/FileUtilsWaitForTestCase.java",
                "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "src/test/org/apache/commons/io/IOCaseTestCase.java",
                "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                "src/test/org/apache/commons/io/comparator/CompositeFileComparatorTest.java",
                "src/test/org/apache/commons/io/comparator/DefaultFileComparatorTest.java",
                "src/test/org/apache/commons/io/comparator/DirectoryFileComparatorTest.java",
                "src/test/org/apache/commons/io/comparator/ExtensionFileComparatorTest.java",
                "src/test/org/apache/commons/io/comparator/LastModifiedFileComparatorTest.java",
                "src/test/org/apache/commons/io/comparator/NameFileComparatorTest.java",
                "src/test/org/apache/commons/io/comparator/PathFileComparatorTest.java",
                "src/test/org/apache/commons/io/comparator/SizeFileComparatorTest.java",
                "src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                "src/test/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java",
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "src/test/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                "src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                "src/test/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java",
                "src/test/org/apache/commons/io/input/AutoCloseInputStreamTest.java",
                "src/test/org/apache/commons/io/input/BrokenInputStreamTest.java",
                "src/test/org/apache/commons/io/input/CloseShieldInputStreamTest.java",
                "src/test/org/apache/commons/io/input/NullInputStreamTest.java",
                "src/test/org/apache/commons/io/input/NullReaderTest.java",
                "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                "src/test/org/apache/commons/io/input/TeeInputStreamTest.java",
                "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                "src/test/org/apache/commons/io/output/BrokenOutputStreamTest.java",
                "src/test/org/apache/commons/io/output/CloseShieldOutputStreamTest.java",
                "src/test/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                "src/test/org/apache/commons/io/testtools/YellOnCloseInputStream.java",
                "src/test/org/apache/commons/io/testtools/YellOnFlushAndCloseOutputStream.java"
            ],
            "functions": [
                {
                    "function name": "testGetFreeSpaceOS_String_Unix",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Unix"
                },
                {
                    "function name": "MockFileSystemUtils",
                    "function params": [
                        "params"
                    ],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils"
                },
                {
                    "function name": "testGetFreeSpaceOS_String_Windows",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Windows"
                },
                {
                    "function name": "testMoveFile_CopyDelete",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete"
                },
                {
                    "function name": "testMoveFile_CopyDelete_Failed",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete_Failed"
                },
                {
                    "function name": "testMoveDirectory_CopyDelete",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete"
                },
                {
                    "function name": "testFiltering",
                    "function params": [],
                    "file name": "LineIteratorTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.LineIteratorTestCase.testFiltering"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "AutoCloseInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/AutoCloseInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/AutoCloseInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.AutoCloseInputStreamTest.setUp"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "CloseShieldInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/CloseShieldInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/CloseShieldInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.CloseShieldInputStreamTest.setUp"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "CloseShieldOutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/CloseShieldOutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/CloseShieldOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.CloseShieldOutputStreamTest.setUp"
                }
            ],
            "date": "2009-08-19"
        },
        {
            "commit_id": 574,
            "hash": "dbc19f8446fc57c206b759fa249b63a381e4b153",
            "commit_summary": "Unused import\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805894 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/output/CountingOutputStream.java"
            ],
            "functions": [],
            "date": "2009-08-19"
        },
        {
            "commit_id": 575,
            "hash": "a7757d0af0eecff4d5356abd467062fced80ce34",
            "commit_summary": "Javadoc fixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805895 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/TaggedInputStream.java"
            ],
            "functions": [],
            "date": "2009-08-19"
        },
        {
            "commit_id": 576,
            "hash": "ad1ab4b07c59d5d3108b073e15a0f594b2bb07b1",
            "commit_summary": "Ensure Printwriter is closed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@805996 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/IOUtils.java"
            ],
            "functions": [],
            "date": "2009-08-19"
        },
        {
            "commit_id": 577,
            "hash": "9883d20834994141dc976bb3642e18cea2c8eb41",
            "commit_summary": "Does not make sense to use static fields to hold file sizes for instance File fields\nFix raw types\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@806003 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FilenameUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "FilenameUtilsTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.FilenameUtilsTestCase"
                },
                {
                    "function name": "testIsExtensionCollection",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionCollection"
                }
            ],
            "date": "2009-08-19"
        },
        {
            "commit_id": 578,
            "hash": "aea39f7fb302e90a76baaedad6fed08a66de6ff5",
            "commit_summary": "Unnecessary cast; javadoc error; raw types\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@806006 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/input/CharSequenceReaderTest.java"
            ],
            "functions": [
                {
                    "function name": "testMarkSupported",
                    "function params": [],
                    "file name": "CharSequenceReaderTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/CharSequenceReaderTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/CharSequenceReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.CharSequenceReaderTest.testMarkSupported"
                },
                {
                    "function name": "checkArray",
                    "function params": [
                        "expected",
                        "actual"
                    ],
                    "file name": "CharSequenceReaderTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/CharSequenceReaderTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/CharSequenceReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.CharSequenceReaderTest.checkArray"
                },
                {
                    "function name": "checkRead",
                    "function params": [
                        "reader",
                        "expected"
                    ],
                    "file name": "CharSequenceReaderTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/CharSequenceReaderTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/CharSequenceReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.CharSequenceReaderTest.checkRead"
                }
            ],
            "date": "2009-08-19"
        },
        {
            "commit_id": 579,
            "hash": "9c47f241d0eb912c276da809b02f0febb4736f84",
            "commit_summary": "Fix up some raw types and unthrown Exceptions\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@806007 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/DemuxTestCase.java",
                "src/test/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                "src/test/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java",
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "src/test/org/apache/commons/io/monitor/CollectionFilesystemListener.java",
                "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                "src/test/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                "src/test/org/apache/commons/io/output/StringBuilderWriterTest.java"
            ],
            "functions": [
                {
                    "function name": "getOutput",
                    "function params": [
                        "threadName"
                    ],
                    "file name": "DemuxTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.getOutput"
                },
                {
                    "function name": "getInput",
                    "function params": [
                        "threadName"
                    ],
                    "file name": "DemuxTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.getInput"
                },
                {
                    "function name": "doStart",
                    "function params": [],
                    "file name": "DemuxTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.doStart"
                },
                {
                    "function name": "doJoin",
                    "function params": [],
                    "file name": "DemuxTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DemuxTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DemuxTestCase.doJoin"
                },
                {
                    "function name": "chmod",
                    "function params": [
                        "file",
                        "mode",
                        "recurse"
                    ],
                    "file name": "FileUtilsCleanDirectoryTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsCleanDirectoryTestCase.chmod"
                },
                {
                    "function name": "setupSymlink",
                    "function params": [
                        "res",
                        "link"
                    ],
                    "file name": "FileUtilsCleanSymlinksTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsCleanSymlinksTestCase.setupSymlink"
                },
                {
                    "function name": "testPrefix",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix"
                },
                {
                    "function name": "testNameFilter",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilter"
                },
                {
                    "function name": "testOr",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testOr"
                },
                {
                    "function name": "testSuffixCaseInsensitive",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testSuffixCaseInsensitive"
                },
                {
                    "function name": "testDeprecatedWildcard",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard"
                },
                {
                    "function name": "testSuffix",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix"
                },
                {
                    "function name": "testAnd",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testAnd"
                },
                {
                    "function name": "testWildcard",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard"
                },
                {
                    "function name": "testNameFilterNullListArgument",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullListArgument"
                },
                {
                    "function name": "testPrefixCaseInsensitive",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive"
                },
                {
                    "function name": "getDeletedFiles",
                    "function params": [],
                    "file name": "CollectionFilesystemListener.java",
                    "file old path": "src/test/org/apache/commons/io/monitor/CollectionFilesystemListener.java",
                    "file new path": "src/test/org/apache/commons/io/monitor/CollectionFilesystemListener.java",
                    "full name": "src.test.org.apache.commons.io.monitor.CollectionFilesystemListener.getDeletedFiles"
                },
                {
                    "function name": "getCreatedDirectories",
                    "function params": [],
                    "file name": "CollectionFilesystemListener.java",
                    "file old path": "src/test/org/apache/commons/io/monitor/CollectionFilesystemListener.java",
                    "file new path": "src/test/org/apache/commons/io/monitor/CollectionFilesystemListener.java",
                    "full name": "src.test.org.apache.commons.io.monitor.CollectionFilesystemListener.getCreatedDirectories"
                },
                {
                    "function name": "getDeletedDirectories",
                    "function params": [],
                    "file name": "CollectionFilesystemListener.java",
                    "file old path": "src/test/org/apache/commons/io/monitor/CollectionFilesystemListener.java",
                    "file new path": "src/test/org/apache/commons/io/monitor/CollectionFilesystemListener.java",
                    "full name": "src.test.org.apache.commons.io.monitor.CollectionFilesystemListener.getDeletedDirectories"
                },
                {
                    "function name": "getCreatedFiles",
                    "function params": [],
                    "file name": "CollectionFilesystemListener.java",
                    "file old path": "src/test/org/apache/commons/io/monitor/CollectionFilesystemListener.java",
                    "file new path": "src/test/org/apache/commons/io/monitor/CollectionFilesystemListener.java",
                    "full name": "src.test.org.apache.commons.io.monitor.CollectionFilesystemListener.getCreatedFiles"
                },
                {
                    "function name": "getChangedDirectories",
                    "function params": [],
                    "file name": "CollectionFilesystemListener.java",
                    "file old path": "src/test/org/apache/commons/io/monitor/CollectionFilesystemListener.java",
                    "file new path": "src/test/org/apache/commons/io/monitor/CollectionFilesystemListener.java",
                    "full name": "src.test.org.apache.commons.io.monitor.CollectionFilesystemListener.getChangedDirectories"
                },
                {
                    "function name": "getChangedFiles",
                    "function params": [],
                    "file name": "CollectionFilesystemListener.java",
                    "file old path": "src/test/org/apache/commons/io/monitor/CollectionFilesystemListener.java",
                    "file new path": "src/test/org/apache/commons/io/monitor/CollectionFilesystemListener.java",
                    "full name": "src.test.org.apache.commons.io.monitor.CollectionFilesystemListener.getChangedFiles"
                },
                {
                    "function name": "writeData",
                    "function params": [],
                    "file name": "ByteArrayOutputStreamTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                    "full name": "src.test.org.apache.commons.io.output.ByteArrayOutputStreamTestCase.writeData"
                },
                {
                    "function name": "writeData",
                    "function params": [],
                    "file name": "ByteArrayOutputStreamTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java",
                    "full name": "src.test.org.apache.commons.io.output.ByteArrayOutputStreamTestCase.writeData"
                },
                {
                    "function name": "testConstructor_File_encoding_badEncoding",
                    "function params": [],
                    "file name": "FileWriterWithEncodingTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                    "full name": "src.test.org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_encoding_badEncoding"
                },
                {
                    "function name": "testConstructor_File_directory",
                    "function params": [],
                    "file name": "FileWriterWithEncodingTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                    "full name": "src.test.org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_directory"
                },
                {
                    "function name": "testDifferentEncoding",
                    "function params": [],
                    "file name": "FileWriterWithEncodingTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/FileWriterWithEncodingTest.java",
                    "full name": "src.test.org.apache.commons.io.output.FileWriterWithEncodingTest.testDifferentEncoding"
                },
                {
                    "function name": "testConstructor_File_encoding_badEncoding",
                    "function params": [],
                    "file name": "LockableFileWriterTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_encoding_badEncoding"
                },
                {
                    "function name": "testConstructor_File_directory",
                    "function params": [],
                    "file name": "LockableFileWriterTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/LockableFileWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_directory"
                },
                {
                    "function name": "testAppendConstructStringBuilder",
                    "function params": [],
                    "file name": "StringBuilderWriterTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/StringBuilderWriterTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/StringBuilderWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructStringBuilder"
                }
            ],
            "date": "2009-08-19"
        },
        {
            "commit_id": 580,
            "hash": "b5787a6d57af928d86a348907173f6907c76f104",
            "commit_summary": "IO-223 IOUtils.copy Javadoc inconsistency (return -1 vs. throw ArithmeticException)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@896739 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/IOUtils.java"
            ],
            "functions": [],
            "date": "2010-01-07"
        },
        {
            "commit_id": 581,
            "hash": "e57d824517f9f1dd020d1001e2c6fe77facdfa11",
            "commit_summary": "project.xml has been deleted; replace with pom.xml in test cases\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@896984 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testFiles",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testFiles"
                },
                {
                    "function name": "testDirectory",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testDirectory"
                }
            ],
            "date": "2010-01-07"
        },
        {
            "commit_id": 582,
            "hash": "8f639e41f572d48194ef309252c88c5ac6619865",
            "commit_summary": "Drop or make use of variables returned by method calls\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@896986 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/CopyUtilsTest.java",
                "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                "src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java"
            ],
            "functions": [
                {
                    "function name": "testCopy_inputStreamToOutputStream",
                    "function params": [],
                    "file name": "CopyUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToOutputStream"
                },
                {
                    "function name": "testCopy_inputStreamToOutputStream",
                    "function params": [],
                    "file name": "IOUtilsCopyTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream"
                },
                {
                    "function name": "testReadUTF",
                    "function params": [],
                    "file name": "SwappedDataInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUTF"
                },
                {
                    "function name": "testReadLine",
                    "function params": [],
                    "file name": "SwappedDataInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLine"
                },
                {
                    "function name": "testTempFileError",
                    "function params": [],
                    "file name": "DeferredFileOutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileError"
                }
            ],
            "date": "2010-01-07"
        },
        {
            "commit_id": 583,
            "hash": "c49252cecf4a02ca5a879bd23a2e8278e9999ae9",
            "commit_summary": "Remove throws clauses that don't apply\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@896987 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/EndianUtilsTest.java",
                "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "src/test/org/apache/commons/io/FileUtilsWaitForTestCase.java",
                "src/test/org/apache/commons/io/IOCaseTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testSymmetryOfLong",
                    "function params": [],
                    "file name": "EndianUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/EndianUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.EndianUtilsTest.testSymmetryOfLong"
                },
                {
                    "function name": "FileCleanerTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "FileCleanerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleanerTestCase.FileCleanerTestCase"
                },
                {
                    "function name": "FileCleaningTrackerTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleaningTrackerTestCase.FileCleaningTrackerTestCase"
                },
                {
                    "function name": "FileSystemUtilsTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.FileSystemUtilsTestCase"
                },
                {
                    "function name": "FileUtilsWaitForTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "FileUtilsWaitForTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsWaitForTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsWaitForTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsWaitForTestCase.FileUtilsWaitForTestCase"
                },
                {
                    "function name": "IOCaseTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "IOCaseTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOCaseTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOCaseTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOCaseTestCase.IOCaseTestCase"
                }
            ],
            "date": "2010-01-07"
        },
        {
            "commit_id": 584,
            "hash": "8841ea9bd4c4519c95e2ec0c7699c587baae2da4",
            "commit_summary": "Fix up raw types in test code\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@896988 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                "src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                "src/test/org/apache/commons/io/comparator/CompositeFileComparatorTest.java",
                "src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                "src/test/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java",
                "src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testFilterDirAndFile2",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile2"
                },
                {
                    "function name": "filesOnly",
                    "function params": [
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.filesOnly"
                },
                {
                    "function name": "testCancel",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.testCancel"
                },
                {
                    "function name": "TestFileFinder",
                    "function params": [
                        "startDirectory"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder"
                },
                {
                    "function name": "filesOnly",
                    "function params": [
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.filesOnly"
                },
                {
                    "function name": "checkContainsFiles",
                    "function params": [
                        "prefix",
                        "files",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles"
                },
                {
                    "function name": "TestCancelWalker",
                    "function params": [
                        "startDirectory"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker"
                },
                {
                    "function name": "testLimitToCurrent",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.testLimitToCurrent"
                },
                {
                    "function name": "testFilterAndLimitC",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitC"
                },
                {
                    "function name": "directoriesOnly",
                    "function params": [
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.directoriesOnly"
                },
                {
                    "function name": "directoriesOnly",
                    "function params": [
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.directoriesOnly"
                },
                {
                    "function name": "TestMultiThreadCancelWalker",
                    "function params": [
                        "startDirectory"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker"
                },
                {
                    "function name": "testFilterDirAndFile1",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile1"
                },
                {
                    "function name": "checkContainsFiles",
                    "function params": [
                        "prefix",
                        "files",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles"
                },
                {
                    "function name": "testFilterAndLimitB",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitB"
                },
                {
                    "function name": "testMultiThreadCancel",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.testMultiThreadCancel"
                },
                {
                    "function name": "testFilterDirAndFile3",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile3"
                },
                {
                    "function name": "testFilterAndLimitA",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitA"
                },
                {
                    "function name": "testFilterAndLimitD",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitD"
                },
                {
                    "function name": "testHandleStartDirectoryFalse",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.testHandleStartDirectoryFalse"
                },
                {
                    "function name": "testFilterDirAndFile4",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile4"
                },
                {
                    "function name": "testMissingStartDirectory",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.testMissingStartDirectory"
                },
                {
                    "function name": "testFilter",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.testFilter"
                },
                {
                    "function name": "filesToFilenames",
                    "function params": [
                        "files"
                    ],
                    "file name": "FileUtilsListFilesTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsListFilesTestCase.filesToFilenames"
                },
                {
                    "function name": "filesToFilenames",
                    "function params": [
                        "files"
                    ],
                    "file name": "FileUtilsListFilesTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsListFilesTestCase.filesToFilenames"
                },
                {
                    "function name": "testListFiles",
                    "function params": [],
                    "file name": "FileUtilsListFilesTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsListFilesTestCase.testListFiles"
                },
                {
                    "function name": "testListFilesByExtension",
                    "function params": [],
                    "file name": "FileUtilsListFilesTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsListFilesTestCase.testListFilesByExtension"
                },
                {
                    "function name": "testWriteLines_4arg_Writer_nullData",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_Writer_nullData"
                },
                {
                    "function name": "FileUtilsTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.FileUtilsTestCase"
                },
                {
                    "function name": "testWriteLines_4arg",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg"
                },
                {
                    "function name": "testIterateFiles",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testIterateFiles"
                },
                {
                    "function name": "testListFiles",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testListFiles"
                },
                {
                    "function name": "testWriteLines_3arg_nullSeparator",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testWriteLines_3arg_nullSeparator"
                },
                {
                    "function name": "ListDirectoryWalker",
                    "function params": [
                        "startDirectory"
                    ],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.ListDirectoryWalker"
                },
                {
                    "function name": "testWriteLines_4arg_nullSeparator",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_nullSeparator"
                },
                {
                    "function name": "testCopyDirectoryFiltered",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryFiltered"
                },
                {
                    "function name": "testReadLines",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testReadLines"
                },
                {
                    "function name": "testReadLines_InputStream_String",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream_String"
                },
                {
                    "function name": "testReadLines_InputStream",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream"
                },
                {
                    "function name": "testReadLines_Reader",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testReadLines_Reader"
                },
                {
                    "function name": "assertEqualContent",
                    "function params": [
                        "b0",
                        "b1"
                    ],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.assertEqualContent"
                },
                {
                    "function name": "testWriteLines_OutputStream_Encoding_nullSeparator",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullSeparator"
                },
                {
                    "function name": "testWriteLines_Writer_nullStream",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullStream"
                },
                {
                    "function name": "testWriteLines_OutputStream_Encoding_nullEncoding",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullEncoding"
                },
                {
                    "function name": "testWriteLines_Writer",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer"
                },
                {
                    "function name": "testWriteLines_OutputStream_Encoding",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding"
                },
                {
                    "function name": "testWriteLines_OutputStream_Encoding_nullStream",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullStream"
                },
                {
                    "function name": "testWriteLines_OutputStream",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream"
                },
                {
                    "function name": "testWriteLines_OutputStream_nullSeparator",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullSeparator"
                },
                {
                    "function name": "testWriteLines_OutputStream_nullData",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullData"
                },
                {
                    "function name": "testWriteLines_Writer_nullSeparator",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullSeparator"
                },
                {
                    "function name": "testWriteLines_OutputStream_nullStream",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullStream"
                },
                {
                    "function name": "testWriteLines_OutputStream_Encoding_nullData",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullData"
                },
                {
                    "function name": "testWriteLines_Writer_nullData",
                    "function params": [],
                    "file name": "IOUtilsWriteTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullData"
                },
                {
                    "function name": "testFiltering",
                    "function params": [],
                    "file name": "LineIteratorTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.LineIteratorTestCase.testFiltering"
                },
                {
                    "function name": "doTestFileWithSpecifiedLines",
                    "function params": [
                        "lineCount"
                    ],
                    "file name": "LineIteratorTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines"
                },
                {
                    "function name": "testNextOnly",
                    "function params": [],
                    "file name": "LineIteratorTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.LineIteratorTestCase.testNextOnly"
                },
                {
                    "function name": "createFile",
                    "function params": [
                        "file",
                        "encoding",
                        "lineCount"
                    ],
                    "file name": "LineIteratorTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.LineIteratorTestCase.createFile"
                },
                {
                    "function name": "LineIteratorTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "LineIteratorTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.LineIteratorTestCase.LineIteratorTestCase"
                },
                {
                    "function name": "testNextLineOnly",
                    "function params": [],
                    "file name": "LineIteratorTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.LineIteratorTestCase.testNextLineOnly"
                },
                {
                    "function name": "testSortListNull",
                    "function params": [],
                    "file name": "ComparatorAbstractTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortListNull"
                },
                {
                    "function name": "testConstructorIterableNull",
                    "function params": [],
                    "file name": "CompositeFileComparatorTest.java",
                    "file old path": "src/test/org/apache/commons/io/comparator/CompositeFileComparatorTest.java",
                    "file new path": "src/test/org/apache/commons/io/comparator/CompositeFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorIterableNull"
                },
                {
                    "function name": "testConstructorArrayNull",
                    "function params": [],
                    "file name": "CompositeFileComparatorTest.java",
                    "file old path": "src/test/org/apache/commons/io/comparator/CompositeFileComparatorTest.java",
                    "file new path": "src/test/org/apache/commons/io/comparator/CompositeFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorArrayNull"
                },
                {
                    "function name": "getFalseResults",
                    "function params": [],
                    "file name": "AndFileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.AndFileFilterTestCase.getFalseResults"
                },
                {
                    "function name": "buildFilterUsingAdd",
                    "function params": [
                        "filters"
                    ],
                    "file name": "AndFileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.AndFileFilterTestCase.buildFilterUsingAdd"
                },
                {
                    "function name": "getTrueResults",
                    "function params": [],
                    "file name": "AndFileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.AndFileFilterTestCase.getTrueResults"
                },
                {
                    "function name": "setUpTestFilters",
                    "function params": [],
                    "file name": "AndFileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.AndFileFilterTestCase.setUpTestFilters"
                },
                {
                    "function name": "getTestFilters",
                    "function params": [],
                    "file name": "AndFileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.AndFileFilterTestCase.getTestFilters"
                },
                {
                    "function name": "buildFilterUsingConstructor",
                    "function params": [
                        "filters"
                    ],
                    "file name": "AndFileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.AndFileFilterTestCase.buildFilterUsingConstructor"
                },
                {
                    "function name": "buildFilterUsingConstructor",
                    "function params": [
                        "filters"
                    ],
                    "file name": "AndFileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.AndFileFilterTestCase.buildFilterUsingConstructor"
                },
                {
                    "function name": "getFileResults",
                    "function params": [],
                    "file name": "AndFileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.AndFileFilterTestCase.getFileResults"
                },
                {
                    "function name": "buildFilterUsingAdd",
                    "function params": [
                        "filters"
                    ],
                    "file name": "AndFileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.AndFileFilterTestCase.buildFilterUsingAdd"
                },
                {
                    "function name": "getFilenameResults",
                    "function params": [],
                    "file name": "AndFileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.AndFileFilterTestCase.getFilenameResults"
                },
                {
                    "function name": "testAdd",
                    "function params": [],
                    "file name": "ConditionalFileFilterAbstractTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testAdd"
                },
                {
                    "function name": "testFilterBuiltUsingAdd",
                    "function params": [],
                    "file name": "ConditionalFileFilterAbstractTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingAdd"
                },
                {
                    "function name": "testFilterBuiltUsingConstructor",
                    "function params": [],
                    "file name": "ConditionalFileFilterAbstractTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingConstructor"
                },
                {
                    "function name": "testRemove",
                    "function params": [],
                    "file name": "ConditionalFileFilterAbstractTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testRemove"
                },
                {
                    "function name": "getTrueResults",
                    "function params": [],
                    "file name": "OrFileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.OrFileFilterTestCase.getTrueResults"
                },
                {
                    "function name": "getFalseResults",
                    "function params": [],
                    "file name": "OrFileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.OrFileFilterTestCase.getFalseResults"
                },
                {
                    "function name": "setUpTestFilters",
                    "function params": [],
                    "file name": "OrFileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.OrFileFilterTestCase.setUpTestFilters"
                },
                {
                    "function name": "buildFilterUsingAdd",
                    "function params": [
                        "filters"
                    ],
                    "file name": "OrFileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.OrFileFilterTestCase.buildFilterUsingAdd"
                },
                {
                    "function name": "getFilenameResults",
                    "function params": [],
                    "file name": "OrFileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.OrFileFilterTestCase.getFilenameResults"
                },
                {
                    "function name": "buildFilterUsingConstructor",
                    "function params": [
                        "filters"
                    ],
                    "file name": "OrFileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.OrFileFilterTestCase.buildFilterUsingConstructor"
                },
                {
                    "function name": "getTestFilters",
                    "function params": [],
                    "file name": "OrFileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.OrFileFilterTestCase.getTestFilters"
                },
                {
                    "function name": "getFileResults",
                    "function params": [],
                    "file name": "OrFileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.OrFileFilterTestCase.getFileResults"
                },
                {
                    "function name": "buildFilterUsingConstructor",
                    "function params": [
                        "filters"
                    ],
                    "file name": "OrFileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.OrFileFilterTestCase.buildFilterUsingConstructor"
                },
                {
                    "function name": "buildFilterUsingAdd",
                    "function params": [
                        "filters"
                    ],
                    "file name": "OrFileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.OrFileFilterTestCase.buildFilterUsingAdd"
                }
            ],
            "date": "2010-01-07"
        },
        {
            "commit_id": 585,
            "hash": "cf02f0f9b4c0ce1687bbf76dd567c18ab6f23bce",
            "commit_summary": "Fix raw types for private variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@896991 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/comparator/CompositeFileComparator.java"
            ],
            "functions": [
                {
                    "function name": "CompositeFileComparator",
                    "function params": [
                        "delegates"
                    ],
                    "file name": "CompositeFileComparator.java",
                    "file old path": "src/java/org/apache/commons/io/comparator/CompositeFileComparator.java",
                    "file new path": "src/java/org/apache/commons/io/comparator/CompositeFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.CompositeFileComparator.CompositeFileComparator"
                },
                {
                    "function name": "CompositeFileComparator",
                    "function params": [
                        "delegates"
                    ],
                    "file name": "CompositeFileComparator.java",
                    "file old path": "src/java/org/apache/commons/io/comparator/CompositeFileComparator.java",
                    "file new path": "src/java/org/apache/commons/io/comparator/CompositeFileComparator.java",
                    "full name": "src.java.org.apache.commons.io.comparator.CompositeFileComparator.CompositeFileComparator"
                }
            ],
            "date": "2010-01-07"
        },
        {
            "commit_id": 586,
            "hash": "11abbca78285fa0d3fd91ea64d6fd80686fd4eae",
            "commit_summary": "Remove items from try block that don't need to be protected; fixes possible NPE warning in Eclipse.\nStart fixing raw types\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@897193 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java"
            ],
            "functions": [
                {
                    "function name": "TestMultiThreadCancelWalker",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker"
                },
                {
                    "function name": "TestFalseFileFinder",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestFalseFileFinder"
                },
                {
                    "function name": "TestCancelWalker",
                    "function params": [
                        "startDirectory",
                        "results",
                        "cancel"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker"
                },
                {
                    "function name": "TestMultiThreadCancelWalker",
                    "function params": [
                        "startDirectory",
                        "results",
                        "cancel"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker"
                },
                {
                    "function name": "TestMultiThreadCancelWalker",
                    "function params": [
                        "startDirectory",
                        "results",
                        "cancel"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker"
                },
                {
                    "function name": "TestMultiThreadCancelWalker",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker"
                },
                {
                    "function name": "testMultiThreadCancel",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.testMultiThreadCancel"
                },
                {
                    "function name": "TestFalseFileFinder",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestFalseFileFinder"
                },
                {
                    "function name": "TestCancelWalker",
                    "function params": [
                        "startDirectory",
                        "results",
                        "cancel"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker"
                }
            ],
            "date": "2010-01-08"
        },
        {
            "commit_id": 587,
            "hash": "34bb05d6c3b791517064a6fb1294ad88d11f3117",
            "commit_summary": "Add Java4 version of DirectoryWalkerTestCase\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@897274 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "TestCancelWalker",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCaseJava4.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker"
                },
                {
                    "function name": "TestCancelWalker",
                    "function params": [
                        "startDirectory"
                    ],
                    "file name": "DirectoryWalkerTestCaseJava4.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker"
                },
                {
                    "function name": "checkContainsFiles",
                    "function params": [
                        "prefix",
                        "files",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCaseJava4.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCaseJava4.checkContainsFiles"
                },
                {
                    "function name": "filesOnly",
                    "function params": [
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCaseJava4.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCaseJava4.filesOnly"
                },
                {
                    "function name": "testFilter",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCaseJava4.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilter"
                },
                {
                    "function name": "testFilterDirAndFile4",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCaseJava4.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile4"
                },
                {
                    "function name": "TestMultiThreadCancelWalker",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCaseJava4.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker"
                },
                {
                    "function name": "TestMultiThreadCancelWalker",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCaseJava4.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker"
                },
                {
                    "function name": "testLimitToCurrent",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCaseJava4.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCaseJava4.testLimitToCurrent"
                },
                {
                    "function name": "TestFalseFileFinder",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCaseJava4.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFalseFileFinder"
                },
                {
                    "function name": "testCancel",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCaseJava4.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCaseJava4.testCancel"
                },
                {
                    "function name": "DirectoryWalkerTestCaseJava4",
                    "function params": [
                        "name"
                    ],
                    "file name": "DirectoryWalkerTestCaseJava4.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCaseJava4.DirectoryWalkerTestCaseJava4"
                },
                {
                    "function name": "TestFileFinder",
                    "function params": [
                        "startDirectory"
                    ],
                    "file name": "DirectoryWalkerTestCaseJava4.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder"
                },
                {
                    "function name": "TestFalseFileFinder",
                    "function params": [
                        "filter",
                        "depthLimit"
                    ],
                    "file name": "DirectoryWalkerTestCaseJava4.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFalseFileFinder"
                },
                {
                    "function name": "directoriesOnly",
                    "function params": [
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCaseJava4.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCaseJava4.directoriesOnly"
                },
                {
                    "function name": "testFilterAndLimitC",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCaseJava4.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitC"
                },
                {
                    "function name": "TestMultiThreadCancelWalker",
                    "function params": [
                        "cancelFileName",
                        "suppressCancel"
                    ],
                    "file name": "DirectoryWalkerTestCaseJava4.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCaseJava4.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCaseJava4.tearDown"
                },
                {
                    "function name": "TestFileFinder",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCaseJava4.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder"
                },
                {
                    "function name": "testFilterAndLimitA",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCaseJava4.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitA"
                },
                {
                    "function name": "TestCancelWalker",
                    "function params": [
                        "cancelFileName",
                        "suppressCancel"
                    ],
                    "file name": "DirectoryWalkerTestCaseJava4.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker"
                },
                {
                    "function name": "testFilterDirAndFile3",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCaseJava4.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile3"
                },
                {
                    "function name": "TestFileFinder",
                    "function params": [
                        "filter",
                        "depthLimit"
                    ],
                    "file name": "DirectoryWalkerTestCaseJava4.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder"
                },
                {
                    "function name": "testFilterAndLimitB",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCaseJava4.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitB"
                },
                {
                    "function name": "TestMultiThreadCancelWalker",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCaseJava4.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker"
                },
                {
                    "function name": "testFilterAndLimitD",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCaseJava4.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitD"
                },
                {
                    "function name": "TestCancelWalker",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCaseJava4.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCaseJava4.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCaseJava4.setUp"
                },
                {
                    "function name": "testFilterDirAndFile2",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCaseJava4.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile2"
                },
                {
                    "function name": "TestCancelWalker",
                    "function params": [
                        "startDirectory",
                        "results",
                        "cancel"
                    ],
                    "file name": "DirectoryWalkerTestCaseJava4.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker"
                },
                {
                    "function name": "TestMultiThreadCancelWalker",
                    "function params": [
                        "startDirectory"
                    ],
                    "file name": "DirectoryWalkerTestCaseJava4.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker"
                },
                {
                    "function name": "TestFileFinder",
                    "function params": [
                        "dirFilter",
                        "fileFilter",
                        "depthLimit"
                    ],
                    "file name": "DirectoryWalkerTestCaseJava4.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder"
                },
                {
                    "function name": "testMissingStartDirectory",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCaseJava4.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCaseJava4.testMissingStartDirectory"
                },
                {
                    "function name": "testMultiThreadCancel",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCaseJava4.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCaseJava4.testMultiThreadCancel"
                },
                {
                    "function name": "TestFileFinder",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCaseJava4.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder"
                },
                {
                    "function name": "testFilterDirAndFile1",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCaseJava4.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile1"
                },
                {
                    "function name": "createNameFilter",
                    "function params": [
                        "files"
                    ],
                    "file name": "DirectoryWalkerTestCaseJava4.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCaseJava4.createNameFilter"
                },
                {
                    "function name": "testHandleStartDirectoryFalse",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCaseJava4.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCaseJava4.testHandleStartDirectoryFalse"
                },
                {
                    "function name": "TestMultiThreadCancelWalker",
                    "function params": [
                        "startDirectory",
                        "results",
                        "cancel"
                    ],
                    "file name": "DirectoryWalkerTestCaseJava4.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCaseJava4.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCaseJava4.suite"
                }
            ],
            "date": "2010-01-08"
        },
        {
            "commit_id": 588,
            "hash": "3718aace0e233794e765e39b2542251f45ea9452",
            "commit_summary": "Fix raw types\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@897360 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileCleaningTracker.java"
            ],
            "functions": [
                {
                    "function name": "Tracker",
                    "function params": [
                        "path",
                        "deleteStrategy",
                        "marker",
                        "queue"
                    ],
                    "file name": "FileCleaningTracker.java",
                    "file old path": "src/java/org/apache/commons/io/FileCleaningTracker.java",
                    "file new path": "src/java/org/apache/commons/io/FileCleaningTracker.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaningTracker.Tracker"
                },
                {
                    "function name": "Tracker",
                    "function params": [
                        "path",
                        "deleteStrategy",
                        "marker",
                        "queue"
                    ],
                    "file name": "FileCleaningTracker.java",
                    "file old path": "src/java/org/apache/commons/io/FileCleaningTracker.java",
                    "file new path": "src/java/org/apache/commons/io/FileCleaningTracker.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaningTracker.Tracker"
                }
            ],
            "date": "2010-01-09"
        },
        {
            "commit_id": 589,
            "hash": "b9b0631a0d1c8df7cb0a6c6753975fa33571ad42",
            "commit_summary": "Fix raw types\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@897361 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java"
            ],
            "functions": [
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleaningTrackerTestCase.tearDown"
                }
            ],
            "date": "2010-01-09"
        },
        {
            "commit_id": 590,
            "hash": "0a37082aaf9ab878c0503108bc96e947426e60d3",
            "commit_summary": "Change DirectoryWalker to use generified Collection\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@897578 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/DirectoryWalker.java",
                "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "checkIfCancelled",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.checkIfCancelled"
                },
                {
                    "function name": "handleRestricted",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleRestricted"
                },
                {
                    "function name": "handleEnd",
                    "function params": [
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleEnd"
                },
                {
                    "function name": "walk",
                    "function params": [
                        "startDirectory",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.walk"
                },
                {
                    "function name": "walk",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.walk"
                },
                {
                    "function name": "handleFile",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleFile"
                },
                {
                    "function name": "handleCancelled",
                    "function params": [
                        "startDirectory",
                        "results",
                        "cancel"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleCancelled"
                },
                {
                    "function name": "handleFile",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleFile"
                },
                {
                    "function name": "handleCancelled",
                    "function params": [
                        "startDirectory",
                        "results",
                        "cancel"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleCancelled"
                },
                {
                    "function name": "handleDirectory",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleDirectory"
                },
                {
                    "function name": "handleDirectoryEnd",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleDirectoryEnd"
                },
                {
                    "function name": "handleStart",
                    "function params": [
                        "startDirectory",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleStart"
                },
                {
                    "function name": "handleDirectoryStart",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleDirectoryStart"
                },
                {
                    "function name": "handleIsCancelled",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleIsCancelled"
                },
                {
                    "function name": "walk",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.walk"
                },
                {
                    "function name": "handleRestricted",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleRestricted"
                },
                {
                    "function name": "handleIsCancelled",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleIsCancelled"
                },
                {
                    "function name": "handleDirectoryStart",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleDirectoryStart"
                },
                {
                    "function name": "handleEnd",
                    "function params": [
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleEnd"
                },
                {
                    "function name": "walk",
                    "function params": [
                        "startDirectory",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.walk"
                },
                {
                    "function name": "handleDirectoryEnd",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleDirectoryEnd"
                },
                {
                    "function name": "checkIfCancelled",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.checkIfCancelled"
                },
                {
                    "function name": "handleStart",
                    "function params": [
                        "startDirectory",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleStart"
                },
                {
                    "function name": "handleDirectory",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.handleDirectory"
                },
                {
                    "function name": "TestMultiThreadCancelWalker",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker"
                },
                {
                    "function name": "TestCancelWalker",
                    "function params": [
                        "startDirectory",
                        "results",
                        "cancel"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker"
                },
                {
                    "function name": "TestMultiThreadCancelWalker",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker"
                },
                {
                    "function name": "TestCancelWalker",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker"
                },
                {
                    "function name": "TestCancelWalker",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker"
                },
                {
                    "function name": "TestFalseFileFinder",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestFalseFileFinder"
                },
                {
                    "function name": "TestFileFinder",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder"
                },
                {
                    "function name": "TestMultiThreadCancelWalker",
                    "function params": [
                        "startDirectory",
                        "results",
                        "cancel"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker"
                },
                {
                    "function name": "TestFalseFileFinder",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestFalseFileFinder"
                },
                {
                    "function name": "TestFileFinder",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder"
                },
                {
                    "function name": "TestMultiThreadCancelWalker",
                    "function params": [
                        "startDirectory",
                        "results",
                        "cancel"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker"
                },
                {
                    "function name": "TestCancelWalker",
                    "function params": [
                        "startDirectory",
                        "results",
                        "cancel"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker"
                },
                {
                    "function name": "TestMultiThreadCancelWalker",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker"
                },
                {
                    "function name": "TestFileFinder",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder"
                },
                {
                    "function name": "TestCancelWalker",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker"
                },
                {
                    "function name": "TestMultiThreadCancelWalker",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker"
                },
                {
                    "function name": "TestFileFinder",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder"
                },
                {
                    "function name": "TestMultiThreadCancelWalker",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker"
                },
                {
                    "function name": "TestCancelWalker",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker"
                },
                {
                    "function name": "TestMultiThreadCancelWalker",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker"
                },
                {
                    "function name": "ListDirectoryWalker",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.ListDirectoryWalker"
                },
                {
                    "function name": "ListDirectoryWalker",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.ListDirectoryWalker"
                },
                {
                    "function name": "ListDirectoryWalker",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.ListDirectoryWalker"
                },
                {
                    "function name": "ListDirectoryWalker",
                    "function params": [
                        "directory",
                        "depth",
                        "results"
                    ],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.ListDirectoryWalker"
                }
            ],
            "date": "2010-01-09"
        },
        {
            "commit_id": 591,
            "hash": "3f124e79a2763ce44d1ac8f9eb78a4c358d3ad30",
            "commit_summary": "Does not make sense to use static fields for sizes of instance Files\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@897581 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [],
            "date": "2010-01-10"
        },
        {
            "commit_id": 592,
            "hash": "4e6639ecee2211312e8a730bac19c2bdc5615590",
            "commit_summary": "IO-224 Add IOUTils.closeQuietly(Closeable) method - thanks to Sean Cote\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@897582 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/IOUtils.java"
            ],
            "functions": [
                {
                    "function name": "closeQuietly",
                    "function params": [
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.closeQuietly"
                },
                {
                    "function name": "closeQuietly",
                    "function params": [
                        "channel"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.closeQuietly"
                },
                {
                    "function name": "closeQuietly",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.closeQuietly"
                },
                {
                    "function name": "closeQuietly",
                    "function params": [
                        "input"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.closeQuietly"
                },
                {
                    "function name": "closeQuietly",
                    "function params": [
                        "output"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.closeQuietly"
                },
                {
                    "function name": "closeQuietly",
                    "function params": [
                        "closeable"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.closeQuietly"
                }
            ],
            "date": "2010-01-10"
        },
        {
            "commit_id": 593,
            "hash": "e69461a88efa0cfeaf73c5cc90e7fe347b330b52",
            "commit_summary": "Test File filtering using a String results list\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@897583 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testFilterString",
                    "function params": [],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.testFilterString"
                },
                {
                    "function name": "TestFileFinderString",
                    "function params": [
                        "filter",
                        "depthLimit"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinderString"
                },
                {
                    "function name": "TestFileFinderString",
                    "function params": [
                        "startDirectory"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinderString"
                },
                {
                    "function name": "TestFileFinderString",
                    "function params": [
                        "file",
                        "depth",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinderString"
                },
                {
                    "function name": "checkContainsString",
                    "function params": [
                        "prefix",
                        "files",
                        "results"
                    ],
                    "file name": "DirectoryWalkerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.DirectoryWalkerTestCase.checkContainsString"
                }
            ],
            "date": "2010-01-10"
        },
        {
            "commit_id": 594,
            "hash": "4172468f9e0069a1d2f6803a4d35f31a971c27a0",
            "commit_summary": "Oops - forgot to update the test suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@902086 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/PackageTestSuite.java"
            ],
            "functions": [
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "PackageTestSuite.java",
                    "file old path": "src/test/org/apache/commons/io/PackageTestSuite.java",
                    "file new path": "src/test/org/apache/commons/io/PackageTestSuite.java",
                    "full name": "src.test.org.apache.commons.io.PackageTestSuite.suite"
                }
            ],
            "date": "2010-01-22"
        },
        {
            "commit_id": 595,
            "hash": "168faab974a90e242031d39f9e3114dfd55dcddd",
            "commit_summary": "Suppress deprecation warnings for tests of deprecated class\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919085 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/CopyUtilsTest.java"
            ],
            "functions": [],
            "date": "2010-03-04"
        },
        {
            "commit_id": 596,
            "hash": "d7b629b0288bfeaf7d9fbe93d608ebe8ffe6ee0b",
            "commit_summary": "IO-231 FileUtils generate wrong exception message in isFileNewer method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919101 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "isFileOlder",
                    "function params": [
                        "file",
                        "reference"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.isFileOlder"
                },
                {
                    "function name": "isFileNewer",
                    "function params": [
                        "file",
                        "reference"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.isFileNewer"
                },
                {
                    "function name": "testIsFileNewerOlder",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder"
                }
            ],
            "date": "2010-03-04"
        },
        {
            "commit_id": 597,
            "hash": "439ca6ca358f44a6be741b7bb938e05fe426b8ac",
            "commit_summary": "Make private static field final\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919236 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/DemuxTestCase.java"
            ],
            "functions": [],
            "date": "2010-03-05"
        },
        {
            "commit_id": 598,
            "hash": "95b0ab8276dbd6cb130cc149e85448a13d43c5e0",
            "commit_summary": "Make mutable static field volatile, in case used from multiple threads\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919238 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java"
            ],
            "functions": [],
            "date": "2010-03-05"
        },
        {
            "commit_id": 599,
            "hash": "e697954454b3b3c5f44ca0dbdafd55612b705dbc",
            "commit_summary": "IO-226 - document rounding behaviour\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919253 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [],
            "date": "2010-03-05"
        },
        {
            "commit_id": 600,
            "hash": "5526f2ed85647269b94d91353d72469822925b4e",
            "commit_summary": "IO-207 Race condition in forceMkdir\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919263 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [
                {
                    "function name": "forceMkdir",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.forceMkdir"
                }
            ],
            "date": "2010-03-05"
        },
        {
            "commit_id": 601,
            "hash": "65ba81b2035fa7d22d67b652a435b57f53eb4b6a",
            "commit_summary": "IO-205 FileUtils.forceMkdir Javadoc is unclear\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919265 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [
                {
                    "function name": "forceMkdir",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.forceMkdir"
                }
            ],
            "date": "2010-03-05"
        },
        {
            "commit_id": 602,
            "hash": "4a72ffcacd1959970b2dd8abe5f88ff9ef88f78b",
            "commit_summary": "Tidy up tests:\n- remove suite() and main() methods\n- Deleted package test classes and All test classes\n- Allow Ant build to run a single test; default to all\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919474 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/CopyUtilsTest.java",
                "src/test/org/apache/commons/io/DirectoryWalkerTestCase.java",
                "src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java",
                "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                "src/test/org/apache/commons/io/FileDeleteStrategyTestCase.java",
                "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                "src/test/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java",
                "src/test/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "src/test/org/apache/commons/io/FileUtilsWaitForTestCase.java",
                "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                "src/test/org/apache/commons/io/HexDumpTest.java",
                "src/test/org/apache/commons/io/IOCaseTestCase.java",
                "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "src/test/org/apache/commons/io/IOUtilsWriteTestCase.java",
                "src/test/org/apache/commons/io/LineIteratorTestCase.java",
                "src/test/org/apache/commons/io/comparator/CompositeFileComparatorTest.java",
                "src/test/org/apache/commons/io/comparator/DefaultFileComparatorTest.java",
                "src/test/org/apache/commons/io/comparator/DirectoryFileComparatorTest.java",
                "src/test/org/apache/commons/io/comparator/ExtensionFileComparatorTest.java",
                "src/test/org/apache/commons/io/comparator/LastModifiedFileComparatorTest.java",
                "src/test/org/apache/commons/io/comparator/NameFileComparatorTest.java",
                "src/test/org/apache/commons/io/comparator/PathFileComparatorTest.java",
                "src/test/org/apache/commons/io/comparator/SizeFileComparatorTest.java",
                "src/test/org/apache/commons/io/filefilter/AndFileFilterTestCase.java",
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "src/test/org/apache/commons/io/filefilter/OrFileFilterTestCase.java",
                "src/test/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java"
            ],
            "functions": [],
            "date": "2010-03-05"
        },
        {
            "commit_id": 603,
            "hash": "e5940fdbbac3910c0c78e04cca96134be868dcbb",
            "commit_summary": "IO-181 LineIterator should implement Iterable\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919627 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/LineIterator.java"
            ],
            "functions": [
                {
                    "function name": "iterator",
                    "function params": [],
                    "file name": "LineIterator.java",
                    "file old path": "src/java/org/apache/commons/io/LineIterator.java",
                    "file new path": "src/java/org/apache/commons/io/LineIterator.java",
                    "full name": "src.java.org.apache.commons.io.LineIterator.iterator"
                }
            ],
            "date": "2010-03-05"
        },
        {
            "commit_id": 604,
            "hash": "8ae4137b10ccab1408b9df36c10c06568c10acd7",
            "commit_summary": "See IO-159: remove() never returns null\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919676 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileCleaningTracker.java"
            ],
            "functions": [
                {
                    "function name": "Reaper",
                    "function params": [],
                    "file name": "FileCleaningTracker.java",
                    "file old path": "src/java/org/apache/commons/io/FileCleaningTracker.java",
                    "file new path": "src/java/org/apache/commons/io/FileCleaningTracker.java",
                    "full name": "src.java.org.apache.commons.io.FileCleaningTracker.Reaper"
                }
            ],
            "date": "2010-03-06"
        },
        {
            "commit_id": 605,
            "hash": "d8cc4c9981d797f55c05e309050d788fa356da01",
            "commit_summary": "IO-210 Create MagicNumberFileFilter\nApplied patch, with following fixes:\n- remove additional null checks in FileFilterUtils static methods; leave the checks to the ctors\n- close RandomAcessFile in MagicNumberFileFilter.accept()\n- close streams in test cases\n- Javadoc fix (wrap < in {@code})\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919682 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "magicNumberFileFilter",
                    "function params": [
                        "magicNumber"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter"
                },
                {
                    "function name": "magicNumberFileFilter",
                    "function params": [
                        "magicNumber",
                        "offset"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter"
                },
                {
                    "function name": "magicNumberFileFilter",
                    "function params": [
                        "magicNumber"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter"
                },
                {
                    "function name": "magicNumberFileFilter",
                    "function params": [
                        "magicNumber",
                        "offset"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter"
                },
                {
                    "function name": "MagicNumberFileFilter",
                    "function params": [
                        "magicNumber",
                        "offset"
                    ],
                    "file name": "MagicNumberFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.MagicNumberFileFilter.MagicNumberFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "MagicNumberFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.MagicNumberFileFilter.accept"
                },
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "MagicNumberFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.MagicNumberFileFilter.toString"
                },
                {
                    "function name": "MagicNumberFileFilter",
                    "function params": [
                        "magicNumber"
                    ],
                    "file name": "MagicNumberFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.MagicNumberFileFilter.MagicNumberFileFilter"
                },
                {
                    "function name": "MagicNumberFileFilter",
                    "function params": [
                        "magicNumber"
                    ],
                    "file name": "MagicNumberFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.MagicNumberFileFilter.MagicNumberFileFilter"
                },
                {
                    "function name": "MagicNumberFileFilter",
                    "function params": [
                        "magicNumber",
                        "offset"
                    ],
                    "file name": "MagicNumberFileFilter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.MagicNumberFileFilter.MagicNumberFileFilter"
                },
                {
                    "function name": "testMagicNumberFileFilterBytes",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytes"
                },
                {
                    "function name": "testMagicNumberFileFilterString",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString"
                },
                {
                    "function name": "testMagicNumberFileFilterBytesOffset",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytesOffset"
                },
                {
                    "function name": "testMagicNumberFileFilterStringOffset",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterStringOffset"
                }
            ],
            "date": "2010-03-06"
        },
        {
            "commit_id": 606,
            "hash": "b0c65975278d1d6f5297f3fa2470dbc8a563e16b",
            "commit_summary": "IO-157 FileUtils - Return target File from copyFileToDirectory() - thanks to Kenny MacLeod\n(Reapplied)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919684 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "copyFileToDirectory",
                    "function params": [
                        "srcFile",
                        "destDir"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyFileToDirectory"
                },
                {
                    "function name": "copyFileToDirectory",
                    "function params": [
                        "srcFile",
                        "destDir",
                        "preserveFileDate"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyFileToDirectory"
                },
                {
                    "function name": "testCopyFile1ToDir",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyFile1ToDir"
                }
            ],
            "date": "2010-03-06"
        },
        {
            "commit_id": 607,
            "hash": "d577693e0a85d59d7d0ac9458bf84eb1678efde1",
            "commit_summary": "IO-187 FileSystemUtils.freeSpaceKb doesn't work with relative paths on Linux\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919687 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileSystemUtils.java"
            ],
            "functions": [
                {
                    "function name": "freeSpaceUnix",
                    "function params": [
                        "path",
                        "kb",
                        "posix"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.freeSpaceUnix"
                }
            ],
            "date": "2010-03-06"
        },
        {
            "commit_id": 608,
            "hash": "1282c294a11e637b3830d84ee87a4b3bcf823bc6",
            "commit_summary": "IO-194 FreeSpaceKb() with no input arguments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919691 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileSystemUtils.java"
            ],
            "functions": [
                {
                    "function name": "freeSpaceKb",
                    "function params": [],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.freeSpaceKb"
                }
            ],
            "date": "2010-03-06"
        },
        {
            "commit_id": 609,
            "hash": "8bc5bbc46af134d18a412d7e04a97d1fd43d213c",
            "commit_summary": "It's never too late to report an error!\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919763 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/IOUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.tearDown"
                }
            ],
            "date": "2010-03-06"
        },
        {
            "commit_id": 610,
            "hash": "b9a5019dcf27a9171aba354bb97b0475f716cc12",
            "commit_summary": "Revert r919684 - not binary compatible\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919995 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [
                {
                    "function name": "copyFileToDirectory",
                    "function params": [
                        "srcFile",
                        "destDir",
                        "preserveFileDate"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyFileToDirectory"
                },
                {
                    "function name": "copyFileToDirectory",
                    "function params": [
                        "srcFile",
                        "destDir"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyFileToDirectory"
                }
            ],
            "date": "2010-03-07"
        },
        {
            "commit_id": 611,
            "hash": "3574daf89b649db7491dca41c83532e87740da63",
            "commit_summary": "Revert r919684 - not binary compatible (forgot test case)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@919996 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testCopyFile1ToDir",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyFile1ToDir"
                }
            ],
            "date": "2010-03-07"
        },
        {
            "commit_id": 612,
            "hash": "09e43b27212c6a6314c449d84a80f44aefd0873c",
            "commit_summary": "Add skipFully() methods for InputStream and Reader\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@920114 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/IOUtils.java",
                "src/test/org/apache/commons/io/IOUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "skipFully",
                    "function params": [
                        "input",
                        "toSkip"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.skipFully"
                },
                {
                    "function name": "skipFully",
                    "function params": [
                        "input",
                        "toSkip"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.skipFully"
                },
                {
                    "function name": "testSkipStream",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testSkipStream"
                },
                {
                    "function name": "testSkipReader",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testSkipReader"
                }
            ],
            "date": "2010-03-07"
        },
        {
            "commit_id": 613,
            "hash": "b7ff34d44c574d035b4ebdb5dcfccc373f08a05d",
            "commit_summary": "Suppress deprecated warnings when testing deprecated methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@920126 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/IOUtilsTestCase.java"
            ],
            "functions": [],
            "date": "2010-03-07"
        },
        {
            "commit_id": 614,
            "hash": "551fd8b465bb343c9095e0146e65e6b3af6e2ee8",
            "commit_summary": "More deliberate use of deprecated items\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@920127 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FileCleanerTestCase.java",
                "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testGetFreeSpace_String",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String"
                }
            ],
            "date": "2010-03-07"
        },
        {
            "commit_id": 615,
            "hash": "99a6100c9ba8128a99122612f0c711444e71b085",
            "commit_summary": "IO-203 - Add skipFully() method for InputStreams\nImplement our own skip() methods; rewrite skipFully() to use them\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@920483 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/IOUtils.java",
                "src/test/org/apache/commons/io/IOUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "skipFully",
                    "function params": [
                        "input",
                        "toSkip"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.skipFully"
                },
                {
                    "function name": "skipFully",
                    "function params": [
                        "input",
                        "toSkip"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.skipFully"
                },
                {
                    "function name": "skip",
                    "function params": [
                        "input",
                        "toSkip"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.skip"
                },
                {
                    "function name": "skip",
                    "function params": [
                        "input",
                        "toSkip"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.skip"
                },
                {
                    "function name": "testSkipFileInput",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testSkipFileInput"
                },
                {
                    "function name": "testSkipFileReader",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testSkipFileReader"
                }
            ],
            "date": "2010-03-08"
        },
        {
            "commit_id": 616,
            "hash": "0ae502ec4d228bd8206abfe7a859e3fcbaf60a47",
            "commit_summary": "IO-224 Add closeQuietly(Socket) to IOUtils\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@920497 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/IOUtils.java"
            ],
            "functions": [
                {
                    "function name": "closeQuietly",
                    "function params": [
                        "sock"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.closeQuietly"
                }
            ],
            "date": "2010-03-08"
        },
        {
            "commit_id": 617,
            "hash": "d52d1440f5bce727ce4d5b23813c6bbad1aeb1cd",
            "commit_summary": "Revert r919627\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@922103 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/LineIterator.java"
            ],
            "functions": [],
            "date": "2010-03-12"
        },
        {
            "commit_id": 618,
            "hash": "de742346e4b19ea053ff3e36f53caa6b59c838b4",
            "commit_summary": "Get a new File instance every time a file is \"touched\" - hopefully might reduce test failures on Gump/Continuum (that I can't reproduce locally)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@922465 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java"
            ],
            "functions": [
                {
                    "function name": "touch",
                    "function params": [
                        "file"
                    ],
                    "file name": "FilesystemObserverTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "full name": "src.test.org.apache.commons.io.monitor.FilesystemObserverTestCase.touch"
                },
                {
                    "function name": "testFileDelete",
                    "function params": [],
                    "file name": "FilesystemObserverTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "full name": "src.test.org.apache.commons.io.monitor.FilesystemObserverTestCase.testFileDelete"
                },
                {
                    "function name": "testFileCreate",
                    "function params": [],
                    "file name": "FilesystemObserverTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "full name": "src.test.org.apache.commons.io.monitor.FilesystemObserverTestCase.testFileCreate"
                },
                {
                    "function name": "testFileUpdate",
                    "function params": [],
                    "file name": "FilesystemObserverTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "full name": "src.test.org.apache.commons.io.monitor.FilesystemObserverTestCase.testFileUpdate"
                },
                {
                    "function name": "testObserveSingleFile",
                    "function params": [],
                    "file name": "FilesystemObserverTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "full name": "src.test.org.apache.commons.io.monitor.FilesystemObserverTestCase.testObserveSingleFile"
                },
                {
                    "function name": "testDirectory",
                    "function params": [],
                    "file name": "FilesystemObserverTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "full name": "src.test.org.apache.commons.io.monitor.FilesystemObserverTestCase.testDirectory"
                }
            ],
            "date": "2010-03-13"
        },
        {
            "commit_id": 619,
            "hash": "d8d63554f59c74fe44ded336129a6bf23080dd12",
            "commit_summary": "IO-242: Pre- and post-processing support for ProxyReader/Writer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@933964 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/ProxyReader.java",
                "src/java/org/apache/commons/io/output/ProxyWriter.java"
            ],
            "functions": [
                {
                    "function name": "read",
                    "function params": [
                        "chr",
                        "st",
                        "end"
                    ],
                    "file name": "ProxyReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyReader.read"
                },
                {
                    "function name": "read",
                    "function params": [
                        "chr",
                        "st",
                        "len"
                    ],
                    "file name": "ProxyReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyReader.read"
                },
                {
                    "function name": "afterRead",
                    "function params": [
                        "n"
                    ],
                    "file name": "ProxyReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyReader.afterRead"
                },
                {
                    "function name": "read",
                    "function params": [
                        "chr"
                    ],
                    "file name": "ProxyReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyReader.read"
                },
                {
                    "function name": "beforeRead",
                    "function params": [
                        "n"
                    ],
                    "file name": "ProxyReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyReader.beforeRead"
                },
                {
                    "function name": "read",
                    "function params": [
                        "target"
                    ],
                    "file name": "ProxyReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyReader.read"
                },
                {
                    "function name": "read",
                    "function params": [],
                    "file name": "ProxyReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyReader.read"
                },
                {
                    "function name": "write",
                    "function params": [
                        "chr"
                    ],
                    "file name": "ProxyWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "chr",
                        "st",
                        "end"
                    ],
                    "file name": "ProxyWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "str",
                        "st",
                        "len"
                    ],
                    "file name": "ProxyWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "idx"
                    ],
                    "file name": "ProxyWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.write"
                },
                {
                    "function name": "beforeWrite",
                    "function params": [
                        "n"
                    ],
                    "file name": "ProxyWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.beforeWrite"
                },
                {
                    "function name": "append",
                    "function params": [
                        "c"
                    ],
                    "file name": "ProxyWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.append"
                },
                {
                    "function name": "write",
                    "function params": [
                        "str"
                    ],
                    "file name": "ProxyWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "str",
                        "st",
                        "end"
                    ],
                    "file name": "ProxyWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.write"
                },
                {
                    "function name": "append",
                    "function params": [
                        "csq"
                    ],
                    "file name": "ProxyWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.append"
                },
                {
                    "function name": "append",
                    "function params": [
                        "csq",
                        "start",
                        "end"
                    ],
                    "file name": "ProxyWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.append"
                },
                {
                    "function name": "write",
                    "function params": [
                        "chr",
                        "st",
                        "len"
                    ],
                    "file name": "ProxyWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.write"
                },
                {
                    "function name": "afterWrite",
                    "function params": [
                        "n"
                    ],
                    "file name": "ProxyWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.afterWrite"
                }
            ],
            "date": "2010-04-14"
        },
        {
            "commit_id": 620,
            "hash": "12092391607fac9e0aac136a043914e9d05b2f59",
            "commit_summary": "A bit more info if the test fails\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@933994 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testReverseComparator",
                    "function params": [],
                    "file name": "ComparatorAbstractTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.comparator.ComparatorAbstractTestCase.testReverseComparator"
                },
                {
                    "function name": "testComparator",
                    "function params": [],
                    "file name": "ComparatorAbstractTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.comparator.ComparatorAbstractTestCase.testComparator"
                }
            ],
            "date": "2010-04-14"
        },
        {
            "commit_id": 621,
            "hash": "0612df2c5c59c932c9924362016f54a2216023af",
            "commit_summary": "xdocs directory has moved\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@933995 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/comparator/DirectoryFileComparatorTest.java"
            ],
            "functions": [
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "DirectoryFileComparatorTest.java",
                    "file old path": "src/test/org/apache/commons/io/comparator/DirectoryFileComparatorTest.java",
                    "file new path": "src/test/org/apache/commons/io/comparator/DirectoryFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.DirectoryFileComparatorTest.setUp"
                }
            ],
            "date": "2010-04-14"
        },
        {
            "commit_id": 622,
            "hash": "3b90ec20e5c3ea99312d53018a11d6f5438c1516",
            "commit_summary": "IO-242 Add proxy reader/writer tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@934024 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "CustomNullReader",
                    "function params": [
                        "chars"
                    ],
                    "file name": "ProxyReaderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/ProxyReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.ProxyReaderTest.CustomNullReader"
                },
                {
                    "function name": "ProxyReaderImpl",
                    "function params": [
                        "proxy"
                    ],
                    "file name": "ProxyReaderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/ProxyReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.ProxyReaderTest.ProxyReaderImpl"
                },
                {
                    "function name": "CustomNullReader",
                    "function params": [
                        "len"
                    ],
                    "file name": "ProxyReaderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/ProxyReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.ProxyReaderTest.CustomNullReader"
                },
                {
                    "function name": "testNullCharBuffer",
                    "function params": [],
                    "file name": "ProxyReaderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/ProxyReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.ProxyReaderTest.testNullCharBuffer"
                },
                {
                    "function name": "CustomNullReader",
                    "function params": [
                        "target"
                    ],
                    "file name": "ProxyReaderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/ProxyReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.ProxyReaderTest.CustomNullReader"
                },
                {
                    "function name": "testNullCharArray",
                    "function params": [],
                    "file name": "ProxyReaderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/ProxyReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.ProxyReaderTest.testNullCharArray"
                },
                {
                    "function name": "ProxyReaderTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "ProxyReaderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/ProxyReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.ProxyReaderTest.ProxyReaderTest"
                },
                {
                    "function name": "testNullString",
                    "function params": [],
                    "file name": "ProxyWriterTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/ProxyWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.ProxyWriterTest.testNullString"
                },
                {
                    "function name": "ProxyWriterTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "ProxyWriterTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/ProxyWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.ProxyWriterTest.ProxyWriterTest"
                },
                {
                    "function name": "testNullCharArray",
                    "function params": [],
                    "file name": "ProxyWriterTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/ProxyWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.ProxyWriterTest.testNullCharArray"
                }
            ],
            "date": "2010-04-14"
        },
        {
            "commit_id": 623,
            "hash": "3c034f895a6f77439ade84d6af8c4a7ebfa73486",
            "commit_summary": "IO-242: Pre- and post-processing support for ProxyReader/Writer\n\nProtect against null arguments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@934035 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/ProxyReader.java",
                "src/java/org/apache/commons/io/output/ProxyWriter.java",
                "src/test/org/apache/commons/io/input/ProxyReaderTest.java",
                "src/test/org/apache/commons/io/output/ProxyWriterTest.java"
            ],
            "functions": [
                {
                    "function name": "read",
                    "function params": [
                        "chr"
                    ],
                    "file name": "ProxyReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyReader.read"
                },
                {
                    "function name": "read",
                    "function params": [
                        "target"
                    ],
                    "file name": "ProxyReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyReader.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyReader.read"
                },
                {
                    "function name": "write",
                    "function params": [
                        "chr"
                    ],
                    "file name": "ProxyWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "str"
                    ],
                    "file name": "ProxyWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.write"
                },
                {
                    "function name": "append",
                    "function params": [
                        "csq"
                    ],
                    "file name": "ProxyWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyWriter.append"
                },
                {
                    "function name": "testNullCharBuffer",
                    "function params": [],
                    "file name": "ProxyReaderTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/ProxyReaderTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/ProxyReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.ProxyReaderTest.testNullCharBuffer"
                },
                {
                    "function name": "testNullCharArray",
                    "function params": [],
                    "file name": "ProxyReaderTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/ProxyReaderTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/ProxyReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.ProxyReaderTest.testNullCharArray"
                },
                {
                    "function name": "testNullCharArray",
                    "function params": [],
                    "file name": "ProxyWriterTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/ProxyWriterTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/ProxyWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.ProxyWriterTest.testNullCharArray"
                },
                {
                    "function name": "testNullString",
                    "function params": [],
                    "file name": "ProxyWriterTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/ProxyWriterTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/ProxyWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.ProxyWriterTest.testNullString"
                }
            ],
            "date": "2010-04-14"
        },
        {
            "commit_id": 624,
            "hash": "4e5a0e15d4351abcc39c1592d8f252713e44d50a",
            "commit_summary": "IO-211: Pre- and post-processing support for proxied streams\n\nAdd null protection as pointed out in IO-242\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@934041 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                "src/java/org/apache/commons/io/output/ProxyOutputStream.java"
            ],
            "functions": [
                {
                    "function name": "read",
                    "function params": [
                        "bts"
                    ],
                    "file name": "ProxyInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/ProxyInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.ProxyInputStream.read"
                },
                {
                    "function name": "write",
                    "function params": [
                        "bts"
                    ],
                    "file name": "ProxyOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyOutputStream.write"
                }
            ],
            "date": "2010-04-14"
        },
        {
            "commit_id": 625,
            "hash": "74b139dd49c10df0cd44684d23de72279ff7d924",
            "commit_summary": "Add a few more tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@934053 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/output/ProxyWriterTest.java"
            ],
            "functions": [
                {
                    "function name": "testNullCharSequencec",
                    "function params": [],
                    "file name": "ProxyWriterTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/ProxyWriterTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/ProxyWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.ProxyWriterTest.testNullCharSequencec"
                },
                {
                    "function name": "testWriteCharArrayPartial",
                    "function params": [],
                    "file name": "ProxyWriterTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/ProxyWriterTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/ProxyWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.ProxyWriterTest.testWriteCharArrayPartial"
                },
                {
                    "function name": "testWriteCharArray",
                    "function params": [],
                    "file name": "ProxyWriterTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/ProxyWriterTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/ProxyWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.ProxyWriterTest.testWriteCharArray"
                },
                {
                    "function name": "testWriteString",
                    "function params": [],
                    "file name": "ProxyWriterTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/ProxyWriterTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/ProxyWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.ProxyWriterTest.testWriteString"
                },
                {
                    "function name": "testAppendCharSequence",
                    "function params": [],
                    "file name": "ProxyWriterTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/ProxyWriterTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/ProxyWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.ProxyWriterTest.testAppendCharSequence"
                },
                {
                    "function name": "testWriteStringPartial",
                    "function params": [],
                    "file name": "ProxyWriterTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/ProxyWriterTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/ProxyWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.ProxyWriterTest.testWriteStringPartial"
                }
            ],
            "date": "2010-04-14"
        },
        {
            "commit_id": 626,
            "hash": "e60ebfedc4eb34553da129dc3185f81f7ff4d2cd",
            "commit_summary": "assertTrue(actual==expected) => assertEquals(expected, actual)\nGives more info in failure cases\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@934112 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/CopyUtilsTest.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                "src/test/org/apache/commons/io/comparator/CompositeFileComparatorTest.java",
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "src/test/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                "src/test/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java",
                "src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                "src/test/org/apache/commons/io/output/StringBuilderWriterTest.java"
            ],
            "functions": [
                {
                    "function name": "testCopy_inputStreamToWriter",
                    "function params": [],
                    "file name": "CopyUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToWriter"
                },
                {
                    "function name": "testCopy_inputStreamToOutputStream",
                    "function params": [],
                    "file name": "CopyUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToOutputStream"
                },
                {
                    "function name": "testCopyFile2ToDir",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyFile2ToDir"
                },
                {
                    "function name": "testCopyFile1",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyFile1"
                },
                {
                    "function name": "testCopyFile2WithoutFileDatePreservation",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyFile2WithoutFileDatePreservation"
                },
                {
                    "function name": "testCopyFile2",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyFile2"
                },
                {
                    "function name": "IGNOREtestCopyFileLarge",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.IGNOREtestCopyFileLarge"
                },
                {
                    "function name": "testCopyFile1ToDir",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyFile1ToDir"
                },
                {
                    "function name": "testCopy_inputStreamToWriter_Encoding_nullEncoding",
                    "function params": [],
                    "file name": "IOUtilsCopyTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullEncoding"
                },
                {
                    "function name": "testCopy_inputStreamToWriter",
                    "function params": [],
                    "file name": "IOUtilsCopyTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter"
                },
                {
                    "function name": "testCopy_inputStreamToOutputStream",
                    "function params": [],
                    "file name": "IOUtilsCopyTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream"
                },
                {
                    "function name": "testCopy_inputStreamToWriter_Encoding",
                    "function params": [],
                    "file name": "IOUtilsCopyTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding"
                },
                {
                    "function name": "testReaderToString",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testReaderToString"
                },
                {
                    "function name": "testInputStreamToCharArrayWithEncoding",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testInputStreamToCharArrayWithEncoding"
                },
                {
                    "function name": "testInputStreamToBufferedInputStream",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testInputStreamToBufferedInputStream"
                },
                {
                    "function name": "testReaderToCharArray",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testReaderToCharArray"
                },
                {
                    "function name": "testInputStreamToString",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testInputStreamToString"
                },
                {
                    "function name": "testInputStreamToByteArray",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray"
                },
                {
                    "function name": "testInputStreamToCharArray",
                    "function params": [],
                    "file name": "IOUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsTestCase.testInputStreamToCharArray"
                },
                {
                    "function name": "testSortArray",
                    "function params": [],
                    "file name": "ComparatorAbstractTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortArray"
                },
                {
                    "function name": "testSortList",
                    "function params": [],
                    "file name": "ComparatorAbstractTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortList"
                },
                {
                    "function name": "testConstructorIterable",
                    "function params": [],
                    "file name": "CompositeFileComparatorTest.java",
                    "file old path": "src/test/org/apache/commons/io/comparator/CompositeFileComparatorTest.java",
                    "file new path": "src/test/org/apache/commons/io/comparator/CompositeFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorIterable"
                },
                {
                    "function name": "assertFiltering",
                    "function params": [
                        "filter",
                        "file",
                        "expected"
                    ],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering"
                },
                {
                    "function name": "assertFiltering",
                    "function params": [
                        "testNumber",
                        "filter",
                        "file",
                        "expected"
                    ],
                    "file name": "IOFileFilterAbstractTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFiltering"
                },
                {
                    "function name": "assertFilenameFiltering",
                    "function params": [
                        "testNumber",
                        "filter",
                        "file",
                        "expected"
                    ],
                    "file name": "IOFileFilterAbstractTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFilenameFiltering"
                },
                {
                    "function name": "assertFileFiltering",
                    "function params": [
                        "testNumber",
                        "filter",
                        "file",
                        "expected"
                    ],
                    "file name": "IOFileFilterAbstractTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFileFiltering"
                },
                {
                    "function name": "assertFiltering",
                    "function params": [
                        "filter",
                        "file",
                        "expected"
                    ],
                    "file name": "RegexFileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering"
                },
                {
                    "function name": "testBelowThreshold",
                    "function params": [],
                    "file name": "DeferredFileOutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.DeferredFileOutputStreamTest.testBelowThreshold"
                },
                {
                    "function name": "verifyResultFile",
                    "function params": [
                        "testFile"
                    ],
                    "file name": "DeferredFileOutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.DeferredFileOutputStreamTest.verifyResultFile"
                },
                {
                    "function name": "testAtThreshold",
                    "function params": [],
                    "file name": "DeferredFileOutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.DeferredFileOutputStreamTest.testAtThreshold"
                },
                {
                    "function name": "testAppendConstructStringBuilder",
                    "function params": [],
                    "file name": "StringBuilderWriterTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/StringBuilderWriterTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/StringBuilderWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructStringBuilder"
                }
            ],
            "date": "2010-04-14"
        },
        {
            "commit_id": 627,
            "hash": "5a01ecd9dd08efa1113ca1c483c3127120ec59ab",
            "commit_summary": "Oops - bug in r934112. Use assertSame() for Object ==\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@936122 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                "src/test/org/apache/commons/io/output/StringBuilderWriterTest.java"
            ],
            "functions": [
                {
                    "function name": "testSortList",
                    "function params": [],
                    "file name": "ComparatorAbstractTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortList"
                },
                {
                    "function name": "testSortArray",
                    "function params": [],
                    "file name": "ComparatorAbstractTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java",
                    "full name": "src.test.org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortArray"
                },
                {
                    "function name": "testAppendConstructStringBuilder",
                    "function params": [],
                    "file name": "StringBuilderWriterTest.java",
                    "file old path": "src/test/org/apache/commons/io/output/StringBuilderWriterTest.java",
                    "file new path": "src/test/org/apache/commons/io/output/StringBuilderWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructStringBuilder"
                }
            ],
            "date": "2010-04-21"
        },
        {
            "commit_id": 628,
            "hash": "bf30068bae7f930170030e705a5bdb4f4abce384",
            "commit_summary": "IO-220 FileCleaningTracker Vector performs badly under load\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@982093 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileCleaningTracker.java"
            ],
            "functions": [],
            "date": "2010-08-04"
        },
        {
            "commit_id": 629,
            "hash": "9f4951abf0154d24cea4ab14e6df3afeced8b1e1",
            "commit_summary": "IO-235 Fix Test case - unused YellOnFlushAndCloseOutputStream\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@982430 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/CopyUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "testCopy_readerToWriter",
                    "function params": [],
                    "file name": "CopyUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.CopyUtilsTest.testCopy_readerToWriter"
                },
                {
                    "function name": "testCopy_stringToWriter",
                    "function params": [],
                    "file name": "CopyUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.CopyUtilsTest.testCopy_stringToWriter"
                },
                {
                    "function name": "testCopy_inputStreamToWriter",
                    "function params": [],
                    "file name": "CopyUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToWriter"
                },
                {
                    "function name": "testCopy_byteArrayToWriter",
                    "function params": [],
                    "file name": "CopyUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/io/CopyUtilsTest.java",
                    "full name": "src.test.org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToWriter"
                }
            ],
            "date": "2010-08-04"
        },
        {
            "commit_id": 630,
            "hash": "af9bf289fbd7f6294ca399c54f4277e8631e903a",
            "commit_summary": "IO-219 - Throw FileExistsException when moving a file or directory if the destination already exists\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@982433 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "FileExistsException",
                    "function params": [],
                    "file name": "FileExistsException.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileExistsException.java",
                    "full name": "src.java.org.apache.commons.io.FileExistsException.FileExistsException"
                },
                {
                    "function name": "FileExistsException",
                    "function params": [
                        "message"
                    ],
                    "file name": "FileExistsException.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileExistsException.java",
                    "full name": "src.java.org.apache.commons.io.FileExistsException.FileExistsException"
                },
                {
                    "function name": "FileExistsException",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileExistsException.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/FileExistsException.java",
                    "full name": "src.java.org.apache.commons.io.FileExistsException.FileExistsException"
                },
                {
                    "function name": "moveDirectory",
                    "function params": [
                        "srcDir",
                        "destDir"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.moveDirectory"
                },
                {
                    "function name": "moveFile",
                    "function params": [
                        "srcFile",
                        "destFile"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.moveFile"
                },
                {
                    "function name": "testMoveFile_Errors",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testMoveFile_Errors"
                },
                {
                    "function name": "testMoveDirectory_Errors",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Errors"
                }
            ],
            "date": "2010-08-04"
        },
        {
            "commit_id": 631,
            "hash": "ae6f41b4c16bc0e036415d7a808f737cd442009c",
            "commit_summary": "IO-221 Add methods for suffix and prefix filters which take an IOCase object\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@982435 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java"
            ],
            "functions": [
                {
                    "function name": "prefixFileFilter",
                    "function params": [
                        "prefix",
                        "caseSensitivity"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.prefixFileFilter"
                },
                {
                    "function name": "suffixFileFilter",
                    "function params": [
                        "suffix",
                        "caseSensitivity"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.suffixFileFilter"
                }
            ],
            "date": "2010-08-05"
        },
        {
            "commit_id": 632,
            "hash": "4dcf99ae012fe5d15656967832dc0fb0bec35b10",
            "commit_summary": "IO-240 ensure cvsFilter and svnFilter are only created once.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@982437 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java"
            ],
            "functions": [
                {
                    "function name": "makeCVSAware",
                    "function params": [
                        "filter"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.makeCVSAware"
                },
                {
                    "function name": "makeSVNAware",
                    "function params": [
                        "filter"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.makeSVNAware"
                }
            ],
            "date": "2010-08-05"
        },
        {
            "commit_id": 633,
            "hash": "f4eb259c964c628ecd5facb38347f23628e09a80",
            "commit_summary": "IO-232 Add Case Sensitive Creation Methods to FileFilterUtils - thanks to Michael Wooten for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@982447 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "nameFileFilter",
                    "function params": [
                        "name",
                        "caseSensitivity"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter"
                },
                {
                    "function name": "testPrefixCaseInsensitive",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive"
                },
                {
                    "function name": "testNameFilter",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilter"
                },
                {
                    "function name": "testNameFilterNullArgument",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullArgument"
                },
                {
                    "function name": "testSuffixCaseInsensitive",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testSuffixCaseInsensitive"
                }
            ],
            "date": "2010-08-05"
        },
        {
            "commit_id": 634,
            "hash": "cdd0750b19a44dfe5fe0a2e74fbea2768e2292b3",
            "commit_summary": "IO-234 Add Methods For Retrieving System Directories/Paths to FileUtils - thanks to Michael Wooten for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@982449 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "getTempDirectoryPath",
                    "function params": [],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.getTempDirectoryPath"
                },
                {
                    "function name": "getTempDirectory",
                    "function params": [],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.getTempDirectory"
                },
                {
                    "function name": "getUserDirectoryPath",
                    "function params": [],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.getUserDirectoryPath"
                },
                {
                    "function name": "getUserDirectory",
                    "function params": [],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.getUserDirectory"
                },
                {
                    "function name": "testGetTempDirectory",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testGetTempDirectory"
                },
                {
                    "function name": "testGetUserDirectoryPath",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testGetUserDirectoryPath"
                },
                {
                    "function name": "testGetUserDirectory",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testGetUserDirectory"
                },
                {
                    "function name": "testGetTempDirectoryPath",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testGetTempDirectoryPath"
                }
            ],
            "date": "2010-08-05"
        },
        {
            "commit_id": 635,
            "hash": "bf0850a0e2dff6acf0041de4fde2828082c9195c",
            "commit_summary": "IO-235 Fix Test case - unused YellOnFlushAndCloseOutputStream\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@982450 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testCopy_inputStreamToWriter_Encoding_nullIn",
                    "function params": [],
                    "file name": "IOUtilsCopyTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullIn"
                },
                {
                    "function name": "testCopy_inputStreamToWriter_nullIn",
                    "function params": [],
                    "file name": "IOUtilsCopyTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_nullIn"
                },
                {
                    "function name": "testCopy_readerToWriter_nullIn",
                    "function params": [],
                    "file name": "IOUtilsCopyTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/IOUtilsCopyTestCase.java",
                    "full name": "src.test.org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_nullIn"
                }
            ],
            "date": "2010-08-05"
        },
        {
            "commit_id": 636,
            "hash": "2f0b339e138e171a91360a98699e87505c03cde5",
            "commit_summary": "IO-208 Add timeout (connection and read) support for FileUtils.copyURLToFile - thanks to Oliver Siegmar for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@995076 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [
                {
                    "function name": "copyURLToFile",
                    "function params": [
                        "source",
                        "destination"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyURLToFile"
                },
                {
                    "function name": "copyInputStreamToFile",
                    "function params": [
                        "source",
                        "destination"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyInputStreamToFile"
                },
                {
                    "function name": "copyURLToFile",
                    "function params": [
                        "source",
                        "destination",
                        "connectionTimeout",
                        "readTimeout"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.copyURLToFile"
                }
            ],
            "date": "2010-09-08"
        },
        {
            "commit_id": 637,
            "hash": "0e97953c31b9e6339e66fcdc5afc6e1b1ae6bfd7",
            "commit_summary": "IO-208 Add test case for timeout (connection and read) support for FileUtils.copyURLToFile\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@995078 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testCopyURLToFileWithTimeout",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyURLToFileWithTimeout"
                }
            ],
            "date": "2010-09-08"
        },
        {
            "commit_id": 638,
            "hash": "6cc7234cfdb139356eba9e03eb98b72a61baa27a",
            "commit_summary": "javadoc correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@995080 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [],
            "date": "2010-09-08"
        },
        {
            "commit_id": 639,
            "hash": "8f2e98882296a917c500e35aaded0d6bec08d7ce",
            "commit_summary": "IO-247 Add closeQuietly() examples to the javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@995152 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/IOUtils.java"
            ],
            "functions": [],
            "date": "2010-09-08"
        },
        {
            "commit_id": 640,
            "hash": "86e4b30ba700cb8bcf4d7488e0d60e07a75d6315",
            "commit_summary": "IO-243 SwappedDataInputStream readBoolean is inverted - thanks to Ray Myers for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@995160 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java"
            ],
            "functions": [
                {
                    "function name": "readBoolean",
                    "function params": [],
                    "file name": "SwappedDataInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/SwappedDataInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.SwappedDataInputStream.readBoolean"
                },
                {
                    "function name": "testReadBoolean",
                    "function params": [],
                    "file name": "SwappedDataInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/SwappedDataInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.SwappedDataInputStreamTest.testReadBoolean"
                }
            ],
            "date": "2010-09-08"
        },
        {
            "commit_id": 641,
            "hash": "f6273c54219710924c1db46fae16824bf99053d7",
            "commit_summary": "IO-215 Improve documentation regarding preserving the last modified date\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@995431 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [],
            "date": "2010-09-09"
        },
        {
            "commit_id": 642,
            "hash": "2969197cc539b484d048a9c24ea65ece7f271d27",
            "commit_summary": "IO-215 Clarify that file modification failure is not reported\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@995532 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [],
            "date": "2010-09-09"
        },
        {
            "commit_id": 643,
            "hash": "3ca6e3770eb1192d3471bbf5ca49db9f61557d72",
            "commit_summary": "IO-216 Delete files quietly when an exception is thrown during initialization\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002142 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/output/LockableFileWriter.java"
            ],
            "functions": [
                {
                    "function name": "initWriter",
                    "function params": [
                        "file",
                        "encoding",
                        "append"
                    ],
                    "file name": "LockableFileWriter.java",
                    "file old path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "file new path": "src/java/org/apache/commons/io/output/LockableFileWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.LockableFileWriter.initWriter"
                }
            ],
            "date": "2010-09-28"
        },
        {
            "commit_id": 644,
            "hash": "869d23be2e2fd509731da6f1ba58bd2fa9fcbfa4",
            "commit_summary": "IO-171 Document that IOCase assumes there are only two OSes: Windows and Unix\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002159 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/IOCase.java"
            ],
            "functions": [],
            "date": "2010-09-28"
        },
        {
            "commit_id": 645,
            "hash": "27738832b3163724842379503ae3016e51131998",
            "commit_summary": "IO-216 - Document that lock file deletion failure is not reported\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002182 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/output/LockableFileWriter.java"
            ],
            "functions": [],
            "date": "2010-09-28"
        },
        {
            "commit_id": 646,
            "hash": "57686b62dba65d1dffb4ad472df93f920dbcf489",
            "commit_summary": "IO-238 Add sizeOf(File) Method to FileUtils - thanks to Michael Wooten for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002367 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "sizeOfDirectory",
                    "function params": [
                        "directory"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.sizeOfDirectory"
                },
                {
                    "function name": "sizeOf",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.sizeOf"
                },
                {
                    "function name": "testSizeOf",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testSizeOf"
                }
            ],
            "date": "2010-09-28"
        },
        {
            "commit_id": 647,
            "hash": "6e2f0e8bc89bbaabe8fa9734e246c285af232fd7",
            "commit_summary": "IO-229 FileFilterUtils - add varargs methods for AndFileFilter and OrFileFilter - thanks to Michael Wooten\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002394 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "or",
                    "function params": [
                        "filters"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.or"
                },
                {
                    "function name": "toList",
                    "function params": [
                        "filters"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.toList"
                },
                {
                    "function name": "and",
                    "function params": [
                        "filters"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.and"
                },
                {
                    "function name": "testFileFilterUtils_or",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testFileFilterUtils_or"
                },
                {
                    "function name": "testFileFilterUtils_and",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testFileFilterUtils_and"
                }
            ],
            "date": "2010-09-28"
        },
        {
            "commit_id": 648,
            "hash": "4353d481a16f046a19be7995e99bbc6edc18ddad",
            "commit_summary": "IO-168 Always return false from isSymlink() for windows\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002416 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [
                {
                    "function name": "isSymlink",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.isSymlink"
                }
            ],
            "date": "2010-09-28"
        },
        {
            "commit_id": 649,
            "hash": "4286199ac5ad636d11f4428d1827b78d94217e06",
            "commit_summary": "IO-217 FileUtils.copyDirectoryToDirectory makes infinite loops - thanks to Roun Lee for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002424 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "doCopyDirectory",
                    "function params": [
                        "srcDir",
                        "destDir",
                        "filter",
                        "preserveFileDate",
                        "exclusionList"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.doCopyDirectory"
                },
                {
                    "function name": "testCopyDirectoryToItself",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself"
                }
            ],
            "date": "2010-09-28"
        },
        {
            "commit_id": 650,
            "hash": "c88a865299f2abb21082cf8ff24cf5e8f97126d2",
            "commit_summary": "IO-197 Copy BoundedInputStream from Apache JackRabbit\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002430 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "skip",
                    "function params": [
                        "n"
                    ],
                    "file name": "BoundedInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BoundedInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BoundedInputStream.skip"
                },
                {
                    "function name": "available",
                    "function params": [],
                    "file name": "BoundedInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BoundedInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BoundedInputStream.available"
                },
                {
                    "function name": "BoundedInputStream",
                    "function params": [
                        "in"
                    ],
                    "file name": "BoundedInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BoundedInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BoundedInputStream.BoundedInputStream"
                },
                {
                    "function name": "BoundedInputStream",
                    "function params": [
                        "in",
                        "size"
                    ],
                    "file name": "BoundedInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BoundedInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BoundedInputStream.BoundedInputStream"
                },
                {
                    "function name": "read",
                    "function params": [
                        "b",
                        "off",
                        "len"
                    ],
                    "file name": "BoundedInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BoundedInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BoundedInputStream.read"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "BoundedInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BoundedInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BoundedInputStream.close"
                },
                {
                    "function name": "read",
                    "function params": [],
                    "file name": "BoundedInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BoundedInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BoundedInputStream.read"
                },
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "BoundedInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BoundedInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BoundedInputStream.toString"
                },
                {
                    "function name": "isPropagateClose",
                    "function params": [],
                    "file name": "BoundedInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BoundedInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BoundedInputStream.isPropagateClose"
                },
                {
                    "function name": "markSupported",
                    "function params": [],
                    "file name": "BoundedInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BoundedInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BoundedInputStream.markSupported"
                },
                {
                    "function name": "reset",
                    "function params": [],
                    "file name": "BoundedInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BoundedInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BoundedInputStream.reset"
                },
                {
                    "function name": "setPropagateClose",
                    "function params": [
                        "propagateClose"
                    ],
                    "file name": "BoundedInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BoundedInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BoundedInputStream.setPropagateClose"
                },
                {
                    "function name": "mark",
                    "function params": [
                        "readlimit"
                    ],
                    "file name": "BoundedInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BoundedInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BoundedInputStream.mark"
                },
                {
                    "function name": "read",
                    "function params": [
                        "b"
                    ],
                    "file name": "BoundedInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BoundedInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BoundedInputStream.read"
                }
            ],
            "date": "2010-09-29"
        },
        {
            "commit_id": 651,
            "hash": "8c7fe8be2dc75c6c45c81812a0685e66e75c4e01",
            "commit_summary": "IO-197 Improve BoundedInputStream Javadocs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002431 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/BoundedInputStream.java"
            ],
            "functions": [],
            "date": "2010-09-29"
        },
        {
            "commit_id": 652,
            "hash": "2f1f38a46068f323711ed6e1a4662d3278660de4",
            "commit_summary": "IO-197 Change size and position from int to long\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002432 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/BoundedInputStream.java"
            ],
            "functions": [
                {
                    "function name": "BoundedInputStream",
                    "function params": [
                        "in",
                        "size"
                    ],
                    "file name": "BoundedInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/BoundedInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/BoundedInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BoundedInputStream.BoundedInputStream"
                },
                {
                    "function name": "read",
                    "function params": [
                        "b",
                        "off",
                        "len"
                    ],
                    "file name": "BoundedInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/BoundedInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/BoundedInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BoundedInputStream.read"
                }
            ],
            "date": "2010-09-29"
        },
        {
            "commit_id": 653,
            "hash": "5fddc0a35fa40efde63f4eb31b86710c8386ebff",
            "commit_summary": "IO-197 Add test case\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002440 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "testReadSingle",
                    "function params": [],
                    "file name": "BoundedInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/BoundedInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BoundedInputStreamTest.testReadSingle"
                },
                {
                    "function name": "testReadArray",
                    "function params": [],
                    "file name": "BoundedInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/BoundedInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BoundedInputStreamTest.testReadArray"
                },
                {
                    "function name": "compare",
                    "function params": [
                        "msg",
                        "expected",
                        "actual"
                    ],
                    "file name": "BoundedInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/BoundedInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BoundedInputStreamTest.compare"
                },
                {
                    "function name": "BoundedInputStreamTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "BoundedInputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/BoundedInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BoundedInputStreamTest.BoundedInputStreamTest"
                }
            ],
            "date": "2010-09-29"
        },
        {
            "commit_id": 654,
            "hash": "0ea3d2f98434942cabdc951bbbc6414a0b6efb0a",
            "commit_summary": "IO-197 Javadoc corrections\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002443 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/BoundedInputStream.java"
            ],
            "functions": [],
            "date": "2010-09-29"
        },
        {
            "commit_id": 655,
            "hash": "58db1d1a55827a211865f0bc73a529e1b1d0ffdc",
            "commit_summary": "IO-198 FileFilterUtils - add ability to apply file filters to collections and arrays - thanks to Michael Wooten for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002454 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "filter",
                    "function params": [
                        "filter",
                        "files"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.filter"
                },
                {
                    "function name": "filterSet",
                    "function params": [
                        "filter",
                        "files"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.filterSet"
                },
                {
                    "function name": "filter",
                    "function params": [
                        "filter",
                        "files",
                        "acceptedFiles"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.filter"
                },
                {
                    "function name": "filter",
                    "function params": [
                        "filter",
                        "files"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.filter"
                },
                {
                    "function name": "filterSet",
                    "function params": [
                        "filter",
                        "files"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.filterSet"
                },
                {
                    "function name": "filterList",
                    "function params": [
                        "filter",
                        "files"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.filterList"
                },
                {
                    "function name": "filterList",
                    "function params": [
                        "filter",
                        "files"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.filterList"
                },
                {
                    "function name": "testFilterArray",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray"
                },
                {
                    "function name": "testFilterList",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList"
                },
                {
                    "function name": "testFilterList_fromArray",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList_fromArray"
                },
                {
                    "function name": "testFilterSet_fromArray",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet_fromArray"
                },
                {
                    "function name": "testFilterListNullParameters",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testFilterListNullParameters"
                },
                {
                    "function name": "testFilterArrayNullParameters",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArrayNullParameters"
                },
                {
                    "function name": "testFilterSetNullParameters",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSetNullParameters"
                },
                {
                    "function name": "testFilterSet",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet"
                },
                {
                    "function name": "testFilterArray_fromList",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray_fromList"
                }
            ],
            "date": "2010-09-29"
        },
        {
            "commit_id": 656,
            "hash": "ed01f165f9bbb7ccbd48dde7dd3106eb044dd859",
            "commit_summary": "IO-166 Fix URL decoding in FileUtils.toFile() - thanks to Benjamin Bentmann for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002457 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "toFile",
                    "function params": [
                        "url"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.toFile"
                },
                {
                    "function name": "decodeUrl",
                    "function params": [
                        "url"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.decodeUrl"
                },
                {
                    "function name": "testDecodeUrlEncodingUtf8",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testDecodeUrlEncodingUtf8"
                },
                {
                    "function name": "testDecodeUrl",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testDecodeUrl"
                },
                {
                    "function name": "testDecodeUrlNullSafe",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testDecodeUrlNullSafe"
                },
                {
                    "function name": "testToFile4",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testToFile4"
                },
                {
                    "function name": "testToFileUtf8",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testToFileUtf8"
                },
                {
                    "function name": "testToFile2",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testToFile2"
                },
                {
                    "function name": "testDecodeUrlLenient",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testDecodeUrlLenient"
                }
            ],
            "date": "2010-09-29"
        },
        {
            "commit_id": 657,
            "hash": "d062bd01f7e9e9194ae0fd9dc01683e7c934c315",
            "commit_summary": "IO-246 FilenameUtils - wildcardMatch gives incorrect results - thanks to wa\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002582 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java",
                "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java"
            ],
            "functions": [
                {
                    "function name": "wildcardMatch",
                    "function params": [
                        "filename",
                        "wildcardMatcher",
                        "caseSensitivity"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.wildcardMatch"
                },
                {
                    "function name": "test_IO_246",
                    "function params": [],
                    "file name": "FilenameUtilsWildcardTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsWildcardTestCase.test_IO_246"
                }
            ],
            "date": "2010-09-29"
        },
        {
            "commit_id": 658,
            "hash": "ab42367cc639fa3b18786d13afdc17a3394f229f",
            "commit_summary": "IO-185 FileSystemUtils add freeSpaceKb() methods that take a timeout parameter - fixes FileSystemUtils.freeSpaceWindows blocks - reported by Martin Thelian\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002689 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileSystemUtils.java"
            ],
            "functions": [
                {
                    "function name": "freeSpaceUnix",
                    "function params": [
                        "path",
                        "kb",
                        "posix",
                        "timeout"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.freeSpaceUnix"
                },
                {
                    "function name": "freeSpaceOS",
                    "function params": [
                        "path",
                        "os",
                        "kb",
                        "timeout"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.freeSpaceOS"
                },
                {
                    "function name": "freeSpaceWindows",
                    "function params": [
                        "path",
                        "timeout"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.freeSpaceWindows"
                },
                {
                    "function name": "performCommand",
                    "function params": [
                        "cmdAttribs",
                        "max",
                        "timeout"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.performCommand"
                },
                {
                    "function name": "freeSpaceKb",
                    "function params": [
                        "path"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.freeSpaceKb"
                },
                {
                    "function name": "freeSpaceWindows",
                    "function params": [
                        "path"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.freeSpaceWindows"
                },
                {
                    "function name": "freeSpaceKb",
                    "function params": [],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.freeSpaceKb"
                },
                {
                    "function name": "freeSpaceUnix",
                    "function params": [
                        "path",
                        "kb",
                        "posix"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.freeSpaceUnix"
                },
                {
                    "function name": "freeSpaceKb",
                    "function params": [
                        "timeout"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.freeSpaceKb"
                },
                {
                    "function name": "freeSpace",
                    "function params": [
                        "path"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.freeSpace"
                },
                {
                    "function name": "freeSpaceOS",
                    "function params": [
                        "path",
                        "os",
                        "kb"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.freeSpaceOS"
                },
                {
                    "function name": "performCommand",
                    "function params": [
                        "cmdAttribs",
                        "max"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.performCommand"
                },
                {
                    "function name": "freeSpaceKb",
                    "function params": [
                        "path",
                        "timeout"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.freeSpaceKb"
                },
                {
                    "function name": "run",
                    "function params": [],
                    "file name": "ThreadMonitor.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/ThreadMonitor.java",
                    "full name": "src.java.org.apache.commons.io.ThreadMonitor.run"
                },
                {
                    "function name": "start",
                    "function params": [
                        "timeout"
                    ],
                    "file name": "ThreadMonitor.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/ThreadMonitor.java",
                    "full name": "src.java.org.apache.commons.io.ThreadMonitor.start"
                },
                {
                    "function name": "start",
                    "function params": [
                        "thread",
                        "timeout"
                    ],
                    "file name": "ThreadMonitor.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/ThreadMonitor.java",
                    "full name": "src.java.org.apache.commons.io.ThreadMonitor.start"
                },
                {
                    "function name": "stop",
                    "function params": [
                        "thread"
                    ],
                    "file name": "ThreadMonitor.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/ThreadMonitor.java",
                    "full name": "src.java.org.apache.commons.io.ThreadMonitor.stop"
                },
                {
                    "function name": "ThreadMonitor",
                    "function params": [
                        "thread",
                        "timeout"
                    ],
                    "file name": "ThreadMonitor.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/ThreadMonitor.java",
                    "full name": "src.java.org.apache.commons.io.ThreadMonitor.ThreadMonitor"
                },
                {
                    "function name": "testTimeout",
                    "function params": [],
                    "file name": "ThreadMonitorTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/ThreadMonitorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.ThreadMonitorTestCase.testTimeout"
                },
                {
                    "function name": "testCompletedWithoutTimeout",
                    "function params": [],
                    "file name": "ThreadMonitorTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/ThreadMonitorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.ThreadMonitorTestCase.testCompletedWithoutTimeout"
                },
                {
                    "function name": "ThreadMonitorTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "ThreadMonitorTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/ThreadMonitorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.ThreadMonitorTestCase.ThreadMonitorTestCase"
                },
                {
                    "function name": "testNoTimeout",
                    "function params": [],
                    "file name": "ThreadMonitorTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/ThreadMonitorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.ThreadMonitorTestCase.testNoTimeout"
                }
            ],
            "date": "2010-09-29"
        },
        {
            "commit_id": 659,
            "hash": "0e7c3a88a727f307e2d38701f8117ae59e019e93",
            "commit_summary": "Include 'cause' in re-thrown exceptions\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002698 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileSystemUtils.java"
            ],
            "functions": [
                {
                    "function name": "performCommand",
                    "function params": [
                        "cmdAttribs",
                        "max",
                        "timeout"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.performCommand"
                },
                {
                    "function name": "parseBytes",
                    "function params": [
                        "freeSpace",
                        "path"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.parseBytes"
                }
            ],
            "date": "2010-09-29"
        },
        {
            "commit_id": 660,
            "hash": "55a86c21c2960a53118edfb23d1654fbfcf6b994",
            "commit_summary": "IO-214 Inconsistent synchronization of fields\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002791 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java"
            ],
            "functions": [
                {
                    "function name": "ByteArrayOutputStream",
                    "function params": [
                        "size"
                    ],
                    "file name": "ByteArrayOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream"
                }
            ],
            "date": "2010-09-29"
        },
        {
            "commit_id": 661,
            "hash": "a8e9eef627d00022fe6a6bbda64a9478c6b89dab",
            "commit_summary": "IO-185 FileSystemUtils add freeSpaceKb() methods that take a timeout parameter - fixes FileSystemUtils.freeSpaceWindows blocks - reported by Martin Thelian\n\n(woops - forgot to commit the test case changes)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002794 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testGetFreeSpaceUnix_String_EmptyResponse",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_EmptyResponse"
                },
                {
                    "function name": "testGetFreeSpaceWindows_String_EmptyResponse",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyResponse"
                },
                {
                    "function name": "testGetFreeSpaceOS_String_Other",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Other"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_LongResponseKb",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_LongResponseKb"
                },
                {
                    "function name": "testGetFreeSpaceWindows_String_EmptyMultiLineResponse",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyMultiLineResponse"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_NormalResponseFreeBSD",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseFreeBSD"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_NormalResponseKbSolaris",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKbSolaris"
                },
                {
                    "function name": "testGetFreeSpaceOS_String_Windows",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Windows"
                },
                {
                    "function name": "testGetFreeSpaceWindows_String_ParseCommaFormatBytes",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_ParseCommaFormatBytes"
                },
                {
                    "function name": "testGetFreeSpaceOS_String_Unix",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Unix"
                },
                {
                    "function name": "testGetFreeSpaceOS_String_InitError",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_InitError"
                },
                {
                    "function name": "testGetFreeSpaceWindows_String_NormalResponse",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_NormalResponse"
                },
                {
                    "function name": "testGetFreeSpaceWindows_String_EmptyPath",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyPath"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_InvalidResponse1",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse1"
                },
                {
                    "function name": "testGetFreeSpaceOS_String_NullPath",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_NullPath"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_InvalidResponse3",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse3"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_NormalResponseLinux",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseLinux"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_NormalResponseKbLinux",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKbLinux"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_InvalidResponse4",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse4"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_InvalidResponse2",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse2"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_EmptyPath",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_EmptyPath"
                },
                {
                    "function name": "testGetFreeSpaceUnix_String_LongResponse",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_LongResponse"
                },
                {
                    "function name": "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_NoSuchDirectoryResponse"
                },
                {
                    "function name": "testGetFreeSpaceWindows_String_StripDrive",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_StripDrive"
                },
                {
                    "function name": "testGetFreeSpaceWindows_String_InvalidTextResponse",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_InvalidTextResponse"
                }
            ],
            "date": "2010-09-29"
        },
        {
            "commit_id": 662,
            "hash": "e295faec880b136d5c19d4164c17d768d7037af7",
            "commit_summary": "IO-190 FileUtils copyDirectory preserves destination subdirectories, rather than overwriting with the source subdirectories - thanks to Jukka for the pacth\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002796 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/test/org/apache/commons/io/FileUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "doCopyDirectory",
                    "function params": [
                        "srcDir",
                        "destDir",
                        "filter",
                        "preserveFileDate",
                        "exclusionList"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.doCopyDirectory"
                },
                {
                    "function name": "testCopyDirectoryPreserveDates",
                    "function params": [],
                    "file name": "FileUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryPreserveDates"
                }
            ],
            "date": "2010-09-29"
        },
        {
            "commit_id": 663,
            "hash": "5e0fe4de1790c5e50573a8b6a4f26510a3b3d62a",
            "commit_summary": "Javadoc clarifications\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002801 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java"
            ],
            "functions": [],
            "date": "2010-09-29"
        },
        {
            "commit_id": 664,
            "hash": "226bb72340b7ad715df7a2de586531e7c3078026",
            "commit_summary": "Document that \"*?\" does not work properly currently\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002804 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java"
            ],
            "functions": [],
            "date": "2010-09-29"
        },
        {
            "commit_id": 665,
            "hash": "709699a220fd036759ce28623a5389624ac81be0",
            "commit_summary": "Some more test cases\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002805 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testSplitOnTokens",
                    "function params": [],
                    "file name": "FilenameUtilsWildcardTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsWildcardTestCase.testSplitOnTokens"
                },
                {
                    "function name": "testMatch",
                    "function params": [],
                    "file name": "FilenameUtilsWildcardTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch"
                }
            ],
            "date": "2010-09-29"
        },
        {
            "commit_id": 666,
            "hash": "9e612272b0f2ae0f3fb0e2163fdcc918bc6731a4",
            "commit_summary": "IO-248 FilenameUtils - getFullPathNoEndSeparator returns empty while path is a one level directory - thanks to hippo spark for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002806 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java",
                "src/test/org/apache/commons/io/FilenameUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "doGetFullPath",
                    "function params": [
                        "filename",
                        "includeSeparator"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.doGetFullPath"
                },
                {
                    "function name": "testGetFullPathNoEndSeparator_IO_248",
                    "function params": [],
                    "file name": "FilenameUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator_IO_248"
                }
            ],
            "date": "2010-09-29"
        },
        {
            "commit_id": 667,
            "hash": "f113fe9d2f6ad04047bde353994e4e475f83b409",
            "commit_summary": "Fix tests so the show \"*?\" bug, and disable for time being\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002807 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java"
            ],
            "functions": [
                {
                    "function name": "test_IO_246",
                    "function params": [],
                    "file name": "FilenameUtilsWildcardTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FilenameUtilsWildcardTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FilenameUtilsWildcardTestCase.test_IO_246"
                }
            ],
            "date": "2010-09-29"
        },
        {
            "commit_id": 668,
            "hash": "a8d59e345210ca6fd3fc426ab7fb7b3c2563cb04",
            "commit_summary": "IO-209 FileSystemUtils freeSpaceKb fails to return correct size for a windows mount point - reported by Aditya Kishore\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002819 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileSystemUtils.java",
                "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java"
            ],
            "functions": [
                {
                    "function name": "freeSpaceWindows",
                    "function params": [
                        "path",
                        "timeout"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.freeSpaceWindows"
                },
                {
                    "function name": "testGetFreeSpaceWindows_String_NormalResponse",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_NormalResponse"
                },
                {
                    "function name": "testGetFreeSpaceWindows_String_StripDrive",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_StripDrive"
                },
                {
                    "function name": "testGetFreeSpaceWindows_String_quoted",
                    "function params": [],
                    "file name": "FileSystemUtilsTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileSystemUtilsTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_quoted"
                }
            ],
            "date": "2010-09-29"
        },
        {
            "commit_id": 669,
            "hash": "587f5571c6eb5a55b752fd7bfd66c2c535f5e566",
            "commit_summary": "IO-177 New Tailer class - Simple implementation of the unix \"tail -f\" functionality - thanks to Jeff Rodriguez for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002844 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "getFile",
                    "function params": [],
                    "file name": "Tailer.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/Tailer.java",
                    "full name": "src.java.org.apache.commons.io.input.Tailer.getFile"
                },
                {
                    "function name": "Tailer",
                    "function params": [
                        "file",
                        "listener",
                        "delay"
                    ],
                    "file name": "Tailer.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/Tailer.java",
                    "full name": "src.java.org.apache.commons.io.input.Tailer.Tailer"
                },
                {
                    "function name": "stop",
                    "function params": [],
                    "file name": "Tailer.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/Tailer.java",
                    "full name": "src.java.org.apache.commons.io.input.Tailer.stop"
                },
                {
                    "function name": "readLines",
                    "function params": [],
                    "file name": "Tailer.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/Tailer.java",
                    "full name": "src.java.org.apache.commons.io.input.Tailer.readLines"
                },
                {
                    "function name": "Tailer",
                    "function params": [
                        "file",
                        "listener",
                        "delay",
                        "end"
                    ],
                    "file name": "Tailer.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/Tailer.java",
                    "full name": "src.java.org.apache.commons.io.input.Tailer.Tailer"
                },
                {
                    "function name": "run",
                    "function params": [],
                    "file name": "Tailer.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/Tailer.java",
                    "full name": "src.java.org.apache.commons.io.input.Tailer.run"
                },
                {
                    "function name": "getDelay",
                    "function params": [],
                    "file name": "Tailer.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/Tailer.java",
                    "full name": "src.java.org.apache.commons.io.input.Tailer.getDelay"
                },
                {
                    "function name": "Tailer",
                    "function params": [
                        "file",
                        "listener"
                    ],
                    "file name": "Tailer.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/Tailer.java",
                    "full name": "src.java.org.apache.commons.io.input.Tailer.Tailer"
                },
                {
                    "function name": "fileRotated",
                    "function params": [],
                    "file name": "TailerListenerAdapter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/TailerListenerAdapter.java",
                    "full name": "src.java.org.apache.commons.io.input.TailerListenerAdapter.fileRotated"
                },
                {
                    "function name": "handle",
                    "function params": [
                        "line"
                    ],
                    "file name": "TailerListenerAdapter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/TailerListenerAdapter.java",
                    "full name": "src.java.org.apache.commons.io.input.TailerListenerAdapter.handle"
                },
                {
                    "function name": "init",
                    "function params": [
                        "tailer"
                    ],
                    "file name": "TailerListenerAdapter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/TailerListenerAdapter.java",
                    "full name": "src.java.org.apache.commons.io.input.TailerListenerAdapter.init"
                },
                {
                    "function name": "handle",
                    "function params": [
                        "ex"
                    ],
                    "file name": "TailerListenerAdapter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/TailerListenerAdapter.java",
                    "full name": "src.java.org.apache.commons.io.input.TailerListenerAdapter.handle"
                },
                {
                    "function name": "fileNotFound",
                    "function params": [],
                    "file name": "TailerListenerAdapter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/TailerListenerAdapter.java",
                    "full name": "src.java.org.apache.commons.io.input.TailerListenerAdapter.fileNotFound"
                },
                {
                    "function name": "TestTailerListener",
                    "function params": [],
                    "file name": "TailerTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/TailerTest.java",
                    "full name": "src.test.org.apache.commons.io.input.TailerTest.TestTailerListener"
                },
                {
                    "function name": "TailerTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "TailerTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/TailerTest.java",
                    "full name": "src.test.org.apache.commons.io.input.TailerTest.TailerTest"
                },
                {
                    "function name": "write",
                    "function params": [
                        "file",
                        "lines"
                    ],
                    "file name": "TailerTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/TailerTest.java",
                    "full name": "src.test.org.apache.commons.io.input.TailerTest.write"
                },
                {
                    "function name": "TestTailerListener",
                    "function params": [],
                    "file name": "TailerTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/TailerTest.java",
                    "full name": "src.test.org.apache.commons.io.input.TailerTest.TestTailerListener"
                },
                {
                    "function name": "testTailer",
                    "function params": [],
                    "file name": "TailerTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/TailerTest.java",
                    "full name": "src.test.org.apache.commons.io.input.TailerTest.testTailer"
                },
                {
                    "function name": "TestTailerListener",
                    "function params": [
                        "line"
                    ],
                    "file name": "TailerTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/TailerTest.java",
                    "full name": "src.test.org.apache.commons.io.input.TailerTest.TestTailerListener"
                },
                {
                    "function name": "start",
                    "function params": [
                        "file",
                        "listener",
                        "delay",
                        "end"
                    ],
                    "file name": "TailerTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/TailerTest.java",
                    "full name": "src.test.org.apache.commons.io.input.TailerTest.start"
                }
            ],
            "date": "2010-09-29"
        },
        {
            "commit_id": 670,
            "hash": "61256c1fdea67508ad6cf99956cdc23cdfedb3d6",
            "commit_summary": "IO-229 use new FileFilterUtils.and() and FileFilterUtils.or() varargs methods \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002869 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/DirectoryWalker.java",
                "src/java/org/apache/commons/io/FileUtils.java"
            ],
            "functions": [
                {
                    "function name": "DirectoryWalker",
                    "function params": [
                        "directoryFilter",
                        "fileFilter",
                        "depthLimit"
                    ],
                    "file name": "DirectoryWalker.java",
                    "file old path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "file new path": "src/java/org/apache/commons/io/DirectoryWalker.java",
                    "full name": "src.java.org.apache.commons.io.DirectoryWalker.DirectoryWalker"
                },
                {
                    "function name": "listFiles",
                    "function params": [
                        "directory",
                        "fileFilter",
                        "dirFilter"
                    ],
                    "file name": "FileUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileUtils.listFiles"
                }
            ],
            "date": "2010-09-29"
        },
        {
            "commit_id": 671,
            "hash": "83e8dfb7d02b830db0dff8d50312167067bef93b",
            "commit_summary": "Make run field volatile because it is shared between threads\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002908 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/Tailer.java"
            ],
            "functions": [],
            "date": "2010-09-30"
        },
        {
            "commit_id": 672,
            "hash": "f34187ec9f43d416d4059bb3414476f960be87f2",
            "commit_summary": "IO-196 - make test more focused to avoid the intermitent failures\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002909 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testObserveSingleFile",
                    "function params": [],
                    "file name": "FilesystemObserverTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "full name": "src.test.org.apache.commons.io.monitor.FilesystemObserverTestCase.testObserveSingleFile"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "FilesystemObserverTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "full name": "src.test.org.apache.commons.io.monitor.FilesystemObserverTestCase.setUp"
                },
                {
                    "function name": "testDirectory",
                    "function params": [],
                    "file name": "FilesystemObserverTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "full name": "src.test.org.apache.commons.io.monitor.FilesystemObserverTestCase.testDirectory"
                },
                {
                    "function name": "checkFileCounts",
                    "function params": [
                        "label",
                        "fileCreate",
                        "fileChange",
                        "fileDelete"
                    ],
                    "file name": "FilesystemObserverTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "full name": "src.test.org.apache.commons.io.monitor.FilesystemObserverTestCase.checkFileCounts"
                },
                {
                    "function name": "testFileDelete",
                    "function params": [],
                    "file name": "FilesystemObserverTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "full name": "src.test.org.apache.commons.io.monitor.FilesystemObserverTestCase.testFileDelete"
                },
                {
                    "function name": "testFileCreate",
                    "function params": [],
                    "file name": "FilesystemObserverTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "full name": "src.test.org.apache.commons.io.monitor.FilesystemObserverTestCase.testFileCreate"
                },
                {
                    "function name": "checkCollectionsEmpty",
                    "function params": [
                        "label"
                    ],
                    "file name": "FilesystemObserverTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "full name": "src.test.org.apache.commons.io.monitor.FilesystemObserverTestCase.checkCollectionsEmpty"
                },
                {
                    "function name": "checkDirectoryCounts",
                    "function params": [
                        "label",
                        "dirCreate",
                        "dirChange",
                        "dirDelete"
                    ],
                    "file name": "FilesystemObserverTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "full name": "src.test.org.apache.commons.io.monitor.FilesystemObserverTestCase.checkDirectoryCounts"
                },
                {
                    "function name": "testFileUpdate",
                    "function params": [],
                    "file name": "FilesystemObserverTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "full name": "src.test.org.apache.commons.io.monitor.FilesystemObserverTestCase.testFileUpdate"
                }
            ],
            "date": "2010-09-30"
        },
        {
            "commit_id": 673,
            "hash": "317841f44a515e57356fe50d7eb1be15030dfb5b",
            "commit_summary": "No longer need synch. here\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002913 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/Tailer.java"
            ],
            "functions": [
                {
                    "function name": "stop",
                    "function params": [],
                    "file name": "Tailer.java",
                    "file old path": "src/java/org/apache/commons/io/input/Tailer.java",
                    "file new path": "src/java/org/apache/commons/io/input/Tailer.java",
                    "full name": "src.java.org.apache.commons.io.input.Tailer.stop"
                }
            ],
            "date": "2010-09-30"
        },
        {
            "commit_id": 674,
            "hash": "a360f974003c5c60c16d019e873314c09d965107",
            "commit_summary": "IO-209 Fix test failing on Unix - freeSpaceWindows() should always normalize files to Windows (even for the MockFileSystemUtils on Unix)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002917 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FileSystemUtils.java"
            ],
            "functions": [
                {
                    "function name": "freeSpaceWindows",
                    "function params": [
                        "path",
                        "timeout"
                    ],
                    "file name": "FileSystemUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FileSystemUtils.java",
                    "full name": "src.java.org.apache.commons.io.FileSystemUtils.freeSpaceWindows"
                }
            ],
            "date": "2010-09-30"
        },
        {
            "commit_id": 675,
            "hash": "a32a395a621098ce652ee8158e6320fa422f9fa3",
            "commit_summary": "Add test for and fix NPE if thread stopped with no file found\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002918 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/Tailer.java",
                "src/test/org/apache/commons/io/input/TailerTest.java"
            ],
            "functions": [
                {
                    "function name": "run",
                    "function params": [],
                    "file name": "Tailer.java",
                    "file old path": "src/java/org/apache/commons/io/input/Tailer.java",
                    "file new path": "src/java/org/apache/commons/io/input/Tailer.java",
                    "full name": "src.java.org.apache.commons.io.input.Tailer.run"
                },
                {
                    "function name": "testStopWithNoFile",
                    "function params": [],
                    "file name": "TailerTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/TailerTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/TailerTest.java",
                    "full name": "src.test.org.apache.commons.io.input.TailerTest.testStopWithNoFile"
                },
                {
                    "function name": "TestTailerListener",
                    "function params": [
                        "e"
                    ],
                    "file name": "TailerTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/TailerTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/TailerTest.java",
                    "full name": "src.test.org.apache.commons.io.input.TailerTest.TestTailerListener"
                }
            ],
            "date": "2010-09-30"
        },
        {
            "commit_id": 676,
            "hash": "cc70c4c1647072de7b97af67b6e8351c2d360624",
            "commit_summary": "IO-161 Try to fix the OutOfMemoryError in FileCleaningTrackerTestCase were seeing in Continuum and Gump\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002920 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java"
            ],
            "functions": [
                {
                    "function name": "waitUntilTrackCount",
                    "function params": [],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileCleaningTrackerTestCase.waitUntilTrackCount"
                }
            ],
            "date": "2010-09-30"
        },
        {
            "commit_id": 677,
            "hash": "e94870a592001f77c29368d2913b0d0aa29cac47",
            "commit_summary": "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002921 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/TailerListener.java"
            ],
            "functions": [],
            "date": "2010-09-30"
        },
        {
            "commit_id": 678,
            "hash": "25032e70cbf8cb14de334a5002811852867d16dd",
            "commit_summary": "Localise variables to run() method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002922 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/Tailer.java"
            ],
            "functions": [
                {
                    "function name": "readLines",
                    "function params": [
                        "reader"
                    ],
                    "file name": "Tailer.java",
                    "file old path": "src/java/org/apache/commons/io/input/Tailer.java",
                    "file new path": "src/java/org/apache/commons/io/input/Tailer.java",
                    "full name": "src.java.org.apache.commons.io.input.Tailer.readLines"
                },
                {
                    "function name": "run",
                    "function params": [],
                    "file name": "Tailer.java",
                    "file old path": "src/java/org/apache/commons/io/input/Tailer.java",
                    "file new path": "src/java/org/apache/commons/io/input/Tailer.java",
                    "full name": "src.java.org.apache.commons.io.input.Tailer.run"
                },
                {
                    "function name": "readLines",
                    "function params": [],
                    "file name": "Tailer.java",
                    "file old path": "src/java/org/apache/commons/io/input/Tailer.java",
                    "file new path": "src/java/org/apache/commons/io/input/Tailer.java",
                    "full name": "src.java.org.apache.commons.io.input.Tailer.readLines"
                }
            ],
            "date": "2010-09-30"
        },
        {
            "commit_id": 679,
            "hash": "9f17760e3ea10bc221a006e10728c611f3b8ba01",
            "commit_summary": "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002924 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/Tailer.java"
            ],
            "functions": [],
            "date": "2010-09-30"
        },
        {
            "commit_id": 680,
            "hash": "230a3c292c67918a019d96f15f2fb30bbb261bc1",
            "commit_summary": "Ensure file is closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002931 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/Tailer.java"
            ],
            "functions": [
                {
                    "function name": "run",
                    "function params": [],
                    "file name": "Tailer.java",
                    "file old path": "src/java/org/apache/commons/io/input/Tailer.java",
                    "file new path": "src/java/org/apache/commons/io/input/Tailer.java",
                    "full name": "src.java.org.apache.commons.io.input.Tailer.run"
                }
            ],
            "date": "2010-09-30"
        },
        {
            "commit_id": 681,
            "hash": "cdc2dadd24ee51a464cae08a98fb2da4f8ab4a76",
            "commit_summary": "Original code kept the RAF if the re-open failed.\nRevert to the same behaviour, but explicitly close the file\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002933 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/Tailer.java"
            ],
            "functions": [
                {
                    "function name": "run",
                    "function params": [],
                    "file name": "Tailer.java",
                    "file old path": "src/java/org/apache/commons/io/input/Tailer.java",
                    "file new path": "src/java/org/apache/commons/io/input/Tailer.java",
                    "full name": "src.java.org.apache.commons.io.input.Tailer.run"
                }
            ],
            "date": "2010-09-30"
        },
        {
            "commit_id": 682,
            "hash": "fb9d4d500f9a13684d6147456d7f9670fb1b1528",
            "commit_summary": "Add more checks to ensure callbacks called as expected\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003112 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/input/TailerTest.java"
            ],
            "functions": [
                {
                    "function name": "TestTailerListener",
                    "function params": [],
                    "file name": "TailerTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/TailerTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/TailerTest.java",
                    "full name": "src.test.org.apache.commons.io.input.TailerTest.TestTailerListener"
                },
                {
                    "function name": "TestTailerListener",
                    "function params": [],
                    "file name": "TailerTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/TailerTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/TailerTest.java",
                    "full name": "src.test.org.apache.commons.io.input.TailerTest.TestTailerListener"
                },
                {
                    "function name": "TestTailerListener",
                    "function params": [
                        "tailer"
                    ],
                    "file name": "TailerTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/TailerTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/TailerTest.java",
                    "full name": "src.test.org.apache.commons.io.input.TailerTest.TestTailerListener"
                },
                {
                    "function name": "testTailer",
                    "function params": [],
                    "file name": "TailerTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/TailerTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/TailerTest.java",
                    "full name": "src.test.org.apache.commons.io.input.TailerTest.testTailer"
                },
                {
                    "function name": "testStopWithNoFile",
                    "function params": [],
                    "file name": "TailerTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/TailerTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/TailerTest.java",
                    "full name": "src.test.org.apache.commons.io.input.TailerTest.testStopWithNoFile"
                }
            ],
            "date": "2010-09-30"
        },
        {
            "commit_id": 683,
            "hash": "70f4ddc09819068a13fcb522ad08340140d48f37",
            "commit_summary": "Add static helper methods; update Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003156 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/Tailer.java"
            ],
            "functions": [
                {
                    "function name": "create",
                    "function params": [
                        "file",
                        "listener",
                        "delay",
                        "end"
                    ],
                    "file name": "Tailer.java",
                    "file old path": "src/java/org/apache/commons/io/input/Tailer.java",
                    "file new path": "src/java/org/apache/commons/io/input/Tailer.java",
                    "full name": "src.java.org.apache.commons.io.input.Tailer.create"
                },
                {
                    "function name": "create",
                    "function params": [
                        "file",
                        "listener"
                    ],
                    "file name": "Tailer.java",
                    "file old path": "src/java/org/apache/commons/io/input/Tailer.java",
                    "file new path": "src/java/org/apache/commons/io/input/Tailer.java",
                    "full name": "src.java.org.apache.commons.io.input.Tailer.create"
                },
                {
                    "function name": "create",
                    "function params": [
                        "file",
                        "listener",
                        "delay"
                    ],
                    "file name": "Tailer.java",
                    "file old path": "src/java/org/apache/commons/io/input/Tailer.java",
                    "file new path": "src/java/org/apache/commons/io/input/Tailer.java",
                    "full name": "src.java.org.apache.commons.io.input.Tailer.create"
                }
            ],
            "date": "2010-09-30"
        },
        {
            "commit_id": 684,
            "hash": "09899f0dad6ae165122e5a0e765535f813bc9a71",
            "commit_summary": "Test static method and Executor method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003158 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/input/TailerTest.java"
            ],
            "functions": [
                {
                    "function name": "testStopWithNoFile",
                    "function params": [],
                    "file name": "TailerTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/TailerTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/TailerTest.java",
                    "full name": "src.test.org.apache.commons.io.input.TailerTest.testStopWithNoFile"
                },
                {
                    "function name": "testStopWithNoFileUsingExecutor",
                    "function params": [],
                    "file name": "TailerTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/TailerTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/TailerTest.java",
                    "full name": "src.test.org.apache.commons.io.input.TailerTest.testStopWithNoFileUsingExecutor"
                }
            ],
            "date": "2010-09-30"
        },
        {
            "commit_id": 685,
            "hash": "74b54ab22649c901e787598bffa8565059539d9a",
            "commit_summary": "Fix checkstyle errors\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003216 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/TaggedIOException.java",
                "src/java/org/apache/commons/io/comparator/ExtensionFileComparator.java"
            ],
            "functions": [],
            "date": "2010-09-30"
        },
        {
            "commit_id": 686,
            "hash": "48e46e1f50acc5db088ca704bbcaa94ec5628553",
            "commit_summary": "Improve test coverage\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003315 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/comparator/ExtensionFileComparatorTest.java",
                "src/test/org/apache/commons/io/comparator/NameFileComparatorTest.java",
                "src/test/org/apache/commons/io/comparator/PathFileComparatorTest.java"
            ],
            "functions": [
                {
                    "function name": "testCaseSensitivity",
                    "function params": [],
                    "file name": "ExtensionFileComparatorTest.java",
                    "file old path": "src/test/org/apache/commons/io/comparator/ExtensionFileComparatorTest.java",
                    "file new path": "src/test/org/apache/commons/io/comparator/ExtensionFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.ExtensionFileComparatorTest.testCaseSensitivity"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "ExtensionFileComparatorTest.java",
                    "file old path": "src/test/org/apache/commons/io/comparator/ExtensionFileComparatorTest.java",
                    "file new path": "src/test/org/apache/commons/io/comparator/ExtensionFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.ExtensionFileComparatorTest.setUp"
                },
                {
                    "function name": "testCaseSensitivity",
                    "function params": [],
                    "file name": "NameFileComparatorTest.java",
                    "file old path": "src/test/org/apache/commons/io/comparator/NameFileComparatorTest.java",
                    "file new path": "src/test/org/apache/commons/io/comparator/NameFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.NameFileComparatorTest.testCaseSensitivity"
                },
                {
                    "function name": "testCaseSensitivity",
                    "function params": [],
                    "file name": "PathFileComparatorTest.java",
                    "file old path": "src/test/org/apache/commons/io/comparator/PathFileComparatorTest.java",
                    "file new path": "src/test/org/apache/commons/io/comparator/PathFileComparatorTest.java",
                    "full name": "src.test.org.apache.commons.io.comparator.PathFileComparatorTest.testCaseSensitivity"
                }
            ],
            "date": "2010-09-30"
        },
        {
            "commit_id": 687,
            "hash": "3545c7701ef563309c4cb6dc3a66f68ec61ed980",
            "commit_summary": "Fix potential NPE if proxied stream supports write((byte[]) null) without complaining\nAdd test for same\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003340 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/output/ProxyOutputStream.java"
            ],
            "functions": [
                {
                    "function name": "write",
                    "function params": [
                        "bts"
                    ],
                    "file name": "ProxyOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/ProxyOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.ProxyOutputStream.write"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "ProxyOutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/ProxyOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.ProxyOutputStreamTest.setUp"
                },
                {
                    "function name": "testWriteNullBaSucceeds",
                    "function params": [],
                    "file name": "ProxyOutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/ProxyOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.ProxyOutputStreamTest.testWriteNullBaSucceeds"
                },
                {
                    "function name": "testWrite",
                    "function params": [],
                    "file name": "ProxyOutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/ProxyOutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.output.ProxyOutputStreamTest.testWrite"
                }
            ],
            "date": "2010-10-01"
        },
        {
            "commit_id": 688,
            "hash": "ba7b754546b22471e5d0df732afbe9d19ef62ce7",
            "commit_summary": "Add FileSystemMonitor Test\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003342 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/monitor/CollectionFilesystemListener.java",
                "src/test/org/apache/commons/io/monitor/FilesystemObserverTestCase.java"
            ],
            "functions": [
                {
                    "function name": "onStart",
                    "function params": [
                        "observer"
                    ],
                    "file name": "CollectionFilesystemListener.java",
                    "file old path": "src/test/org/apache/commons/io/monitor/CollectionFilesystemListener.java",
                    "file new path": "src/test/org/apache/commons/io/monitor/CollectionFilesystemListener.java",
                    "full name": "src.test.org.apache.commons.io.monitor.CollectionFilesystemListener.onStart"
                },
                {
                    "function name": "clear",
                    "function params": [],
                    "file name": "CollectionFilesystemListener.java",
                    "file old path": "src/test/org/apache/commons/io/monitor/CollectionFilesystemListener.java",
                    "file new path": "src/test/org/apache/commons/io/monitor/CollectionFilesystemListener.java",
                    "full name": "src.test.org.apache.commons.io.monitor.CollectionFilesystemListener.clear"
                },
                {
                    "function name": "CollectionFilesystemListener",
                    "function params": [
                        "clearOnStart"
                    ],
                    "file name": "CollectionFilesystemListener.java",
                    "file old path": "src/test/org/apache/commons/io/monitor/CollectionFilesystemListener.java",
                    "file new path": "src/test/org/apache/commons/io/monitor/CollectionFilesystemListener.java",
                    "full name": "src.test.org.apache.commons.io.monitor.CollectionFilesystemListener.CollectionFilesystemListener"
                },
                {
                    "function name": "checkDirectoryCounts",
                    "function params": [
                        "label",
                        "dirCreate",
                        "dirChange",
                        "dirDelete"
                    ],
                    "file name": "FileSystemMonitorTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/monitor/FileSystemMonitorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.monitor.FileSystemMonitorTestCase.checkDirectoryCounts"
                },
                {
                    "function name": "testMonitor",
                    "function params": [],
                    "file name": "FileSystemMonitorTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/monitor/FileSystemMonitorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.monitor.FileSystemMonitorTestCase.testMonitor"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "FileSystemMonitorTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/monitor/FileSystemMonitorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.monitor.FileSystemMonitorTestCase.setUp"
                },
                {
                    "function name": "checkCollectionsEmpty",
                    "function params": [
                        "label"
                    ],
                    "file name": "FileSystemMonitorTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/monitor/FileSystemMonitorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.monitor.FileSystemMonitorTestCase.checkCollectionsEmpty"
                },
                {
                    "function name": "checkFile",
                    "function params": [
                        "label",
                        "file",
                        "interval",
                        "files"
                    ],
                    "file name": "FileSystemMonitorTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/monitor/FileSystemMonitorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.monitor.FileSystemMonitorTestCase.checkFile"
                },
                {
                    "function name": "checkFileCounts",
                    "function params": [
                        "label",
                        "fileCreate",
                        "fileChange",
                        "fileDelete"
                    ],
                    "file name": "FileSystemMonitorTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/monitor/FileSystemMonitorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.monitor.FileSystemMonitorTestCase.checkFileCounts"
                },
                {
                    "function name": "touch",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileSystemMonitorTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/monitor/FileSystemMonitorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.monitor.FileSystemMonitorTestCase.touch"
                },
                {
                    "function name": "FileSystemMonitorTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "FileSystemMonitorTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/monitor/FileSystemMonitorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.monitor.FileSystemMonitorTestCase.FileSystemMonitorTestCase"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "FileSystemMonitorTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/monitor/FileSystemMonitorTestCase.java",
                    "full name": "src.test.org.apache.commons.io.monitor.FileSystemMonitorTestCase.tearDown"
                }
            ],
            "date": "2010-10-01"
        },
        {
            "commit_id": 689,
            "hash": "45e7ddd803f4cd9949dcb3db947de2f27a634448",
            "commit_summary": "Narrow allowable Exceptions\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003571 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                "src/test/org/apache/commons/io/input/NullInputStreamTest.java",
                "src/test/org/apache/commons/io/input/NullReaderTest.java"
            ],
            "functions": [
                {
                    "function name": "testListFiles",
                    "function params": [],
                    "file name": "FileUtilsListFilesTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/FileUtilsListFilesTestCase.java",
                    "full name": "src.test.org.apache.commons.io.FileUtilsListFilesTestCase.testListFiles"
                },
                {
                    "function name": "testSkip",
                    "function params": [],
                    "file name": "NullInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/NullInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/NullInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.NullInputStreamTest.testSkip"
                },
                {
                    "function name": "testMarkAndReset",
                    "function params": [],
                    "file name": "NullInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/NullInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/NullInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.NullInputStreamTest.testMarkAndReset"
                },
                {
                    "function name": "testSkip",
                    "function params": [],
                    "file name": "NullReaderTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/NullReaderTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/NullReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.NullReaderTest.testSkip"
                },
                {
                    "function name": "testMarkAndReset",
                    "function params": [],
                    "file name": "NullReaderTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/NullReaderTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/NullReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.NullReaderTest.testMarkAndReset"
                }
            ],
            "date": "2010-10-01"
        },
        {
            "commit_id": 690,
            "hash": "724d798408a98141d537976a6c924ed8f5501fce",
            "commit_summary": "@since Commons IO 2.0 tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003647 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/DirectoryWalker.java",
                "src/java/org/apache/commons/io/FileSystemUtils.java",
                "src/java/org/apache/commons/io/FileUtils.java",
                "src/java/org/apache/commons/io/FilenameUtils.java",
                "src/java/org/apache/commons/io/IOCase.java",
                "src/java/org/apache/commons/io/IOUtils.java",
                "src/java/org/apache/commons/io/comparator/AbstractFileComparator.java",
                "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "src/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java",
                "src/java/org/apache/commons/io/input/AutoCloseInputStream.java",
                "src/java/org/apache/commons/io/input/CountingInputStream.java",
                "src/java/org/apache/commons/io/input/ProxyReader.java",
                "src/java/org/apache/commons/io/monitor/FilesystemEntry.java",
                "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java",
                "src/java/org/apache/commons/io/output/CountingOutputStream.java",
                "src/java/org/apache/commons/io/output/NullWriter.java",
                "src/java/org/apache/commons/io/output/ProxyWriter.java",
                "src/java/org/apache/commons/io/output/StringBuilderWriter.java"
            ],
            "functions": [],
            "date": "2010-10-01"
        },
        {
            "commit_id": 691,
            "hash": "8bb718182e27ef0a030f0769238c01e019283652",
            "commit_summary": "IO-224 Remove IOUtils.closeQuietly(Channel) added as part of IO-155 - redundant now there is IOUtils.closeQuietly(Closeable) \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003652 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/IOUtils.java"
            ],
            "functions": [
                {
                    "function name": "closeQuietly",
                    "function params": [
                        "channel"
                    ],
                    "file name": "IOUtils.java",
                    "file old path": "src/java/org/apache/commons/io/IOUtils.java",
                    "file new path": "src/java/org/apache/commons/io/IOUtils.java",
                    "full name": "src.java.org.apache.commons.io.IOUtils.closeQuietly"
                }
            ],
            "date": "2010-10-01"
        },
        {
            "commit_id": 692,
            "hash": "49509582b37ce84e9b8d313fc9e344ea856b276c",
            "commit_summary": "Fix test javadoc warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003659 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FileUtilsFileNewerTestCase.java",
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                "src/test/org/apache/commons/io/input/BoundedInputStreamTest.java"
            ],
            "functions": [],
            "date": "2010-10-01"
        },
        {
            "commit_id": 693,
            "hash": "dbf024bd5d6043c7272f4b0d40eef3e6902f01d1",
            "commit_summary": "Replace use of deprecated methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003661 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "makeCVSAware",
                    "function params": [
                        "filter"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.makeCVSAware"
                },
                {
                    "function name": "makeSVNAware",
                    "function params": [
                        "filter"
                    ],
                    "file name": "FileFilterUtils.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.FileFilterUtils.makeSVNAware"
                },
                {
                    "function name": "testSuffix",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix"
                }
            ],
            "date": "2010-10-01"
        },
        {
            "commit_id": 694,
            "hash": "420395ab290c93598faf8ecd7dd21f970bc745f1",
            "commit_summary": "remove unused import\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003672 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/IOUtils.java"
            ],
            "functions": [],
            "date": "2010-10-01"
        },
        {
            "commit_id": 695,
            "hash": "049d68042051f98a2c959eb6594ad2248890d0bd",
            "commit_summary": "Missing annotations; extraneous semi-colon\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003685 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java"
            ],
            "functions": [],
            "date": "2010-10-01"
        },
        {
            "commit_id": 696,
            "hash": "67053cbf321a333bcb9741f9bba5a78298c90189",
            "commit_summary": "Missing annotations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003686 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/input/ProxyReaderTest.java"
            ],
            "functions": [],
            "date": "2010-10-01"
        },
        {
            "commit_id": 697,
            "hash": "9c16abaad33a595959b5f82b1bd98ee884f334e9",
            "commit_summary": "Suppress raw types warnings as well\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003693 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java"
            ],
            "functions": [],
            "date": "2010-10-01"
        },
        {
            "commit_id": 698,
            "hash": "803484d8d5ba799e76ee241920662cf23aa40630",
            "commit_summary": "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003695 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/io/FileCleaningTrackerTestCase.java"
            ],
            "functions": [],
            "date": "2010-10-01"
        },
        {
            "commit_id": 699,
            "hash": "4c17f2bcb464dc60c1937ee9ba5c5bbe2a84c2e8",
            "commit_summary": "Cannot be null\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003696 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/Tailer.java"
            ],
            "functions": [
                {
                    "function name": "run",
                    "function params": [],
                    "file name": "Tailer.java",
                    "file old path": "src/java/org/apache/commons/io/input/Tailer.java",
                    "file new path": "src/java/org/apache/commons/io/input/Tailer.java",
                    "full name": "src.java.org.apache.commons.io.input.Tailer.run"
                }
            ],
            "date": "2010-10-01"
        },
        {
            "commit_id": 700,
            "hash": "7fd0d3d22f83789ad0203394158320bd8ff4066e",
            "commit_summary": "@since Commons IO 2.0 tag\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1003721 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/IOUtils.java"
            ],
            "functions": [],
            "date": "2010-10-02"
        },
        {
            "commit_id": 701,
            "hash": "3c14167fecb1e1ee38891efcc2423e3c82466de1",
            "commit_summary": "Javadocs only - fix checkstyle issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004062 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/Tailer.java"
            ],
            "functions": [],
            "date": "2010-10-03"
        },
        {
            "commit_id": 702,
            "hash": "ea84049a791cfe83d9fb93e0cdea74dd362b0692",
            "commit_summary": "IO-178 Extend BOMInputStream from excluding UTF-8 BOMs to detecting and optionally excluding any BOM\n  - Rename BOMExclusionInputStream to BOMInputStream\n  - Add new ByteOrderMark implementation\n  - Enhance BOMInputStream from only processing UTF-8 BOMs to be able to configure for any BOM\n  - Provide ability to get/check the BOM detected\n  - Provide facility to either include or exclude the detected BOM\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004073 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "getCharsetName",
                    "function params": [],
                    "file name": "ByteOrderMark.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/ByteOrderMark.java",
                    "full name": "src.java.org.apache.commons.io.ByteOrderMark.getCharsetName"
                },
                {
                    "function name": "hashCode",
                    "function params": [],
                    "file name": "ByteOrderMark.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/ByteOrderMark.java",
                    "full name": "src.java.org.apache.commons.io.ByteOrderMark.hashCode"
                },
                {
                    "function name": "equals",
                    "function params": [
                        "obj"
                    ],
                    "file name": "ByteOrderMark.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/ByteOrderMark.java",
                    "full name": "src.java.org.apache.commons.io.ByteOrderMark.equals"
                },
                {
                    "function name": "get",
                    "function params": [
                        "pos"
                    ],
                    "file name": "ByteOrderMark.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/ByteOrderMark.java",
                    "full name": "src.java.org.apache.commons.io.ByteOrderMark.get"
                },
                {
                    "function name": "ByteOrderMark",
                    "function params": [
                        "charsetName",
                        "bytes"
                    ],
                    "file name": "ByteOrderMark.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/ByteOrderMark.java",
                    "full name": "src.java.org.apache.commons.io.ByteOrderMark.ByteOrderMark"
                },
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "ByteOrderMark.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/ByteOrderMark.java",
                    "full name": "src.java.org.apache.commons.io.ByteOrderMark.toString"
                },
                {
                    "function name": "getBytes",
                    "function params": [],
                    "file name": "ByteOrderMark.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/ByteOrderMark.java",
                    "full name": "src.java.org.apache.commons.io.ByteOrderMark.getBytes"
                },
                {
                    "function name": "length",
                    "function params": [],
                    "file name": "ByteOrderMark.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/ByteOrderMark.java",
                    "full name": "src.java.org.apache.commons.io.ByteOrderMark.length"
                },
                {
                    "function name": "BOMInputStream",
                    "function params": [
                        "delegate"
                    ],
                    "file name": "BOMInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BOMInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BOMInputStream.BOMInputStream"
                },
                {
                    "function name": "reset",
                    "function params": [],
                    "file name": "BOMInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BOMInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BOMInputStream.reset"
                },
                {
                    "function name": "BOMInputStream",
                    "function params": [
                        "delegate",
                        "include",
                        "boms"
                    ],
                    "file name": "BOMInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BOMInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BOMInputStream.BOMInputStream"
                },
                {
                    "function name": "find",
                    "function params": [],
                    "file name": "BOMInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BOMInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BOMInputStream.find"
                },
                {
                    "function name": "hasBOM",
                    "function params": [],
                    "file name": "BOMInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BOMInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BOMInputStream.hasBOM"
                },
                {
                    "function name": "getBOM",
                    "function params": [],
                    "file name": "BOMInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BOMInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BOMInputStream.getBOM"
                },
                {
                    "function name": "matches",
                    "function params": [
                        "bom"
                    ],
                    "file name": "BOMInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BOMInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BOMInputStream.matches"
                },
                {
                    "function name": "read",
                    "function params": [
                        "buf",
                        "off",
                        "len"
                    ],
                    "file name": "BOMInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BOMInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BOMInputStream.read"
                },
                {
                    "function name": "read",
                    "function params": [
                        "buf"
                    ],
                    "file name": "BOMInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BOMInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BOMInputStream.read"
                },
                {
                    "function name": "mark",
                    "function params": [
                        "readlimit"
                    ],
                    "file name": "BOMInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BOMInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BOMInputStream.mark"
                },
                {
                    "function name": "read",
                    "function params": [],
                    "file name": "BOMInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BOMInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BOMInputStream.read"
                },
                {
                    "function name": "skip",
                    "function params": [
                        "n"
                    ],
                    "file name": "BOMInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BOMInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BOMInputStream.skip"
                },
                {
                    "function name": "BOMInputStream",
                    "function params": [
                        "delegate",
                        "boms"
                    ],
                    "file name": "BOMInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BOMInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BOMInputStream.BOMInputStream"
                },
                {
                    "function name": "hasBOM",
                    "function params": [
                        "bom"
                    ],
                    "file name": "BOMInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BOMInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BOMInputStream.hasBOM"
                },
                {
                    "function name": "BOMInputStream",
                    "function params": [
                        "delegate",
                        "include"
                    ],
                    "file name": "BOMInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BOMInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BOMInputStream.BOMInputStream"
                },
                {
                    "function name": "readFirstBytes",
                    "function params": [],
                    "file name": "BOMInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/BOMInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BOMInputStream.readFirstBytes"
                },
                {
                    "function name": "testGet",
                    "function params": [],
                    "file name": "ByteOrderMarkTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/ByteOrderMarkTestCase.java",
                    "full name": "src.test.org.apache.commons.io.ByteOrderMarkTestCase.testGet"
                },
                {
                    "function name": "testGetBytes",
                    "function params": [],
                    "file name": "ByteOrderMarkTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/ByteOrderMarkTestCase.java",
                    "full name": "src.test.org.apache.commons.io.ByteOrderMarkTestCase.testGetBytes"
                },
                {
                    "function name": "testEquals",
                    "function params": [],
                    "file name": "ByteOrderMarkTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/ByteOrderMarkTestCase.java",
                    "full name": "src.test.org.apache.commons.io.ByteOrderMarkTestCase.testEquals"
                },
                {
                    "function name": "ByteOrderMarkTestCase",
                    "function params": [
                        "name"
                    ],
                    "file name": "ByteOrderMarkTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/ByteOrderMarkTestCase.java",
                    "full name": "src.test.org.apache.commons.io.ByteOrderMarkTestCase.ByteOrderMarkTestCase"
                },
                {
                    "function name": "testErrors",
                    "function params": [],
                    "file name": "ByteOrderMarkTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/ByteOrderMarkTestCase.java",
                    "full name": "src.test.org.apache.commons.io.ByteOrderMarkTestCase.testErrors"
                },
                {
                    "function name": "testHashCode",
                    "function params": [],
                    "file name": "ByteOrderMarkTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/ByteOrderMarkTestCase.java",
                    "full name": "src.test.org.apache.commons.io.ByteOrderMarkTestCase.testHashCode"
                },
                {
                    "function name": "testLength",
                    "function params": [],
                    "file name": "ByteOrderMarkTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/ByteOrderMarkTestCase.java",
                    "full name": "src.test.org.apache.commons.io.ByteOrderMarkTestCase.testLength"
                },
                {
                    "function name": "testToString",
                    "function params": [],
                    "file name": "ByteOrderMarkTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/ByteOrderMarkTestCase.java",
                    "full name": "src.test.org.apache.commons.io.ByteOrderMarkTestCase.testToString"
                },
                {
                    "function name": "testCharsetName",
                    "function params": [],
                    "file name": "ByteOrderMarkTestCase.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/ByteOrderMarkTestCase.java",
                    "full name": "src.test.org.apache.commons.io.ByteOrderMarkTestCase.testCharsetName"
                },
                {
                    "function name": "testSmallBufferWithoutBOM",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMInputStreamTest.testSmallBufferWithoutBOM"
                },
                {
                    "function name": "testLeadingNonBOMBufferedRead",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMInputStreamTest.testLeadingNonBOMBufferedRead"
                },
                {
                    "function name": "testReadEmpty",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMInputStreamTest.testReadEmpty"
                },
                {
                    "function name": "testGetBOMFirstThenRead",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenRead"
                },
                {
                    "function name": "testReadWithoutBOM",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMInputStreamTest.testReadWithoutBOM"
                },
                {
                    "function name": "testLargeBufferWithoutBOM",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMInputStreamTest.testLargeBufferWithoutBOM"
                },
                {
                    "function name": "testLeadingNonBOMSingleRead",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMInputStreamTest.testLeadingNonBOMSingleRead"
                },
                {
                    "function name": "testMarkResetBeforeReadWithoutBOM",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMInputStreamTest.testMarkResetBeforeReadWithoutBOM"
                },
                {
                    "function name": "testReadWithBOMInclude",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMInclude"
                },
                {
                    "function name": "testSkipWithBOM",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMInputStreamTest.testSkipWithBOM"
                },
                {
                    "function name": "testAvailableWithoutBOM",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMInputStreamTest.testAvailableWithoutBOM"
                },
                {
                    "function name": "testSmallBufferWithBOM",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMInputStreamTest.testSmallBufferWithBOM"
                },
                {
                    "function name": "testLargeBufferWithBOM",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMInputStreamTest.testLargeBufferWithBOM"
                },
                {
                    "function name": "testReadWithBOM",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOM"
                },
                {
                    "function name": "testReadWithMultipleBOM",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMInputStreamTest.testReadWithMultipleBOM"
                },
                {
                    "function name": "testMarkResetBeforeReadWithBOM",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMInputStreamTest.testMarkResetBeforeReadWithBOM"
                },
                {
                    "function name": "testReadSmall",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMInputStreamTest.testReadSmall"
                },
                {
                    "function name": "testAvailableWithBOM",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMInputStreamTest.testAvailableWithBOM"
                },
                {
                    "function name": "testSkipWithoutBOM",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMInputStreamTest.testSkipWithoutBOM"
                },
                {
                    "function name": "testClose",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMInputStreamTest.testClose"
                },
                {
                    "function name": "testMarkResetAfterReadWithoutBOM",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMInputStreamTest.testMarkResetAfterReadWithoutBOM"
                },
                {
                    "function name": "testMarkResetAfterReadWithBOM",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMInputStreamTest.testMarkResetAfterReadWithBOM"
                },
                {
                    "function name": "testNoBoms",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/BOMExclusionInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMInputStreamTest.testNoBoms"
                }
            ],
            "date": "2010-10-03"
        },
        {
            "commit_id": 703,
            "hash": "218a9e687dd42de2d2bc43eadec6f02ab685f410",
            "commit_summary": "Minor Javadoc correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004076 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/ByteOrderMark.java"
            ],
            "functions": [],
            "date": "2010-10-04"
        },
        {
            "commit_id": 704,
            "hash": "79c97ab6a11d8c67914982bf2efdc82009de977b",
            "commit_summary": "Fix some issues identified by FindBugs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004077 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/FilenameUtils.java",
                "src/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "equals",
                    "function params": [
                        "filename1",
                        "filename2",
                        "normalized",
                        "caseSensitivity"
                    ],
                    "file name": "FilenameUtils.java",
                    "file old path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "file new path": "src/java/org/apache/commons/io/FilenameUtils.java",
                    "full name": "src.java.org.apache.commons.io.FilenameUtils.equals"
                },
                {
                    "function name": "MagicNumberFileFilter",
                    "function params": [
                        "magicNumber",
                        "offset"
                    ],
                    "file name": "MagicNumberFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.MagicNumberFileFilter.MagicNumberFileFilter"
                },
                {
                    "function name": "accept",
                    "function params": [
                        "file"
                    ],
                    "file name": "MagicNumberFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.MagicNumberFileFilter.accept"
                },
                {
                    "function name": "NameFileFilter",
                    "function params": [
                        "names",
                        "caseSensitivity"
                    ],
                    "file name": "NameFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter"
                },
                {
                    "function name": "PrefixFileFilter",
                    "function params": [
                        "prefixes",
                        "caseSensitivity"
                    ],
                    "file name": "PrefixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter"
                },
                {
                    "function name": "SuffixFileFilter",
                    "function params": [
                        "suffixes",
                        "caseSensitivity"
                    ],
                    "file name": "SuffixFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter"
                },
                {
                    "function name": "WildcardFileFilter",
                    "function params": [
                        "wildcards",
                        "caseSensitivity"
                    ],
                    "file name": "WildcardFileFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter"
                },
                {
                    "function name": "WildcardFilter",
                    "function params": [
                        "wildcards"
                    ],
                    "file name": "WildcardFilter.java",
                    "file old path": "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                    "file new path": "src/java/org/apache/commons/io/filefilter/WildcardFilter.java",
                    "full name": "src.java.org.apache.commons.io.filefilter.WildcardFilter.WildcardFilter"
                },
                {
                    "function name": "testMagicNumberFileFilterBytes",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytes"
                }
            ],
            "date": "2010-10-04"
        },
        {
            "commit_id": 705,
            "hash": "94d8c10b757a5f85012916255bb43d49f854a3c8",
            "commit_summary": "IO-201 Fix inconsistent synchronization\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004079 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/CountingInputStream.java",
                "src/java/org/apache/commons/io/output/CountingOutputStream.java"
            ],
            "functions": [
                {
                    "function name": "getCount",
                    "function params": [],
                    "file name": "CountingInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.CountingInputStream.getCount"
                },
                {
                    "function name": "skip",
                    "function params": [
                        "length"
                    ],
                    "file name": "CountingInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.CountingInputStream.skip"
                },
                {
                    "function name": "resetCount",
                    "function params": [],
                    "file name": "CountingInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.CountingInputStream.resetCount"
                },
                {
                    "function name": "afterRead",
                    "function params": [
                        "n"
                    ],
                    "file name": "CountingInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/CountingInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.CountingInputStream.afterRead"
                },
                {
                    "function name": "beforeWrite",
                    "function params": [
                        "n"
                    ],
                    "file name": "CountingOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/CountingOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/CountingOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.CountingOutputStream.beforeWrite"
                },
                {
                    "function name": "getCount",
                    "function params": [],
                    "file name": "CountingOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/CountingOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/CountingOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.CountingOutputStream.getCount"
                },
                {
                    "function name": "resetCount",
                    "function params": [],
                    "file name": "CountingOutputStream.java",
                    "file old path": "src/java/org/apache/commons/io/output/CountingOutputStream.java",
                    "file new path": "src/java/org/apache/commons/io/output/CountingOutputStream.java",
                    "full name": "src.java.org.apache.commons.io.output.CountingOutputStream.resetCount"
                }
            ],
            "date": "2010-10-04"
        },
        {
            "commit_id": 706,
            "hash": "d43262058d2a3530c4d7305ea1a1e03d7001bd1d",
            "commit_summary": "IO-178 Fix Bug with firstBytes being consumed by getBOM()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004087 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/BOMInputStream.java",
                "src/test/org/apache/commons/io/input/BOMInputStreamTest.java"
            ],
            "functions": [
                {
                    "function name": "readFirstBytes",
                    "function params": [],
                    "file name": "BOMInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/BOMInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/BOMInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BOMInputStream.readFirstBytes"
                },
                {
                    "function name": "getBOM",
                    "function params": [],
                    "file name": "BOMInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/BOMInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/BOMInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BOMInputStream.getBOM"
                },
                {
                    "function name": "testGetBOMFirstThenReadInclude",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenReadInclude"
                }
            ],
            "date": "2010-10-04"
        },
        {
            "commit_id": 707,
            "hash": "5b75cf83b2db408f8228b26910a8d3d3633cd54f",
            "commit_summary": "IO-162 add Xml(Stream)Reader/Writer from ROME - thanks to Herv\u00e9 Boutemy for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004090 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "doLenientDetection",
                    "function params": [
                        "httpContentType",
                        "ex"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.doLenientDetection"
                },
                {
                    "function name": "XmlStreamReader",
                    "function params": [
                        "url"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.XmlStreamReader"
                },
                {
                    "function name": "isTextXml",
                    "function params": [
                        "mime"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.isTextXml"
                },
                {
                    "function name": "calculateRawEncoding",
                    "function params": [
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc",
                        "is"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding"
                },
                {
                    "function name": "doHttpStream",
                    "function params": [
                        "is",
                        "httpContentType",
                        "lenient"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.doHttpStream"
                },
                {
                    "function name": "setDefaultEncoding",
                    "function params": [
                        "encoding"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.setDefaultEncoding"
                },
                {
                    "function name": "XmlStreamReader",
                    "function params": [
                        "file"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.XmlStreamReader"
                },
                {
                    "function name": "XmlStreamReader",
                    "function params": [
                        "is",
                        "httpContentType"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.XmlStreamReader"
                },
                {
                    "function name": "getContentTypeEncoding",
                    "function params": [
                        "httpContentType"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.getContentTypeEncoding"
                },
                {
                    "function name": "getEncoding",
                    "function params": [],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.getEncoding"
                },
                {
                    "function name": "getDefaultEncoding",
                    "function params": [],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.getDefaultEncoding"
                },
                {
                    "function name": "isAppXml",
                    "function params": [
                        "mime"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.isAppXml"
                },
                {
                    "function name": "prepareReader",
                    "function params": [
                        "is",
                        "encoding"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.prepareReader"
                },
                {
                    "function name": "getXMLGuessEncoding",
                    "function params": [
                        "is"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.getXMLGuessEncoding"
                },
                {
                    "function name": "calculateHttpEncoding",
                    "function params": [
                        "cTMime",
                        "cTEnc",
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc",
                        "is",
                        "lenient"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding"
                },
                {
                    "function name": "doRawStream",
                    "function params": [
                        "is",
                        "lenient"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.doRawStream"
                },
                {
                    "function name": "XmlStreamReader",
                    "function params": [
                        "conn"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.XmlStreamReader"
                },
                {
                    "function name": "XmlStreamReader",
                    "function params": [
                        "is"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.XmlStreamReader"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.close"
                },
                {
                    "function name": "getContentTypeMime",
                    "function params": [
                        "httpContentType"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.getContentTypeMime"
                },
                {
                    "function name": "read",
                    "function params": [
                        "buf",
                        "offset",
                        "len"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.read"
                },
                {
                    "function name": "XmlStreamReader",
                    "function params": [
                        "is",
                        "httpContentType",
                        "lenient"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.XmlStreamReader"
                },
                {
                    "function name": "getXmlProlog",
                    "function params": [
                        "is",
                        "guessedEnc"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.getXmlProlog"
                },
                {
                    "function name": "getBOMEncoding",
                    "function params": [
                        "is"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.getBOMEncoding"
                },
                {
                    "function name": "XmlStreamReader",
                    "function params": [
                        "is",
                        "lenient"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.XmlStreamReader"
                },
                {
                    "function name": "XmlStreamReader",
                    "function params": [
                        "is",
                        "httpContentType",
                        "lenient",
                        "defaultEncoding"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.XmlStreamReader"
                },
                {
                    "function name": "getXmlGuessEncoding",
                    "function params": [],
                    "file name": "XmlStreamReaderException.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReaderException.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReaderException.getXmlGuessEncoding"
                },
                {
                    "function name": "XmlStreamReaderException",
                    "function params": [
                        "msg",
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc",
                        "is"
                    ],
                    "file name": "XmlStreamReaderException.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReaderException.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReaderException.XmlStreamReaderException"
                },
                {
                    "function name": "getXmlEncoding",
                    "function params": [],
                    "file name": "XmlStreamReaderException.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReaderException.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReaderException.getXmlEncoding"
                },
                {
                    "function name": "getInputStream",
                    "function params": [],
                    "file name": "XmlStreamReaderException.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReaderException.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReaderException.getInputStream"
                },
                {
                    "function name": "getContentTypeMime",
                    "function params": [],
                    "file name": "XmlStreamReaderException.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReaderException.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReaderException.getContentTypeMime"
                },
                {
                    "function name": "getContentTypeEncoding",
                    "function params": [],
                    "file name": "XmlStreamReaderException.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReaderException.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReaderException.getContentTypeEncoding"
                },
                {
                    "function name": "getBomEncoding",
                    "function params": [],
                    "file name": "XmlStreamReaderException.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReaderException.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReaderException.getBomEncoding"
                },
                {
                    "function name": "XmlStreamReaderException",
                    "function params": [
                        "msg",
                        "ctMime",
                        "ctEnc",
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc",
                        "is"
                    ],
                    "file name": "XmlStreamReaderException.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReaderException.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReaderException.XmlStreamReaderException"
                },
                {
                    "function name": "XmlStreamWriter",
                    "function params": [
                        "file"
                    ],
                    "file name": "XmlStreamWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/XmlStreamWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.XmlStreamWriter.XmlStreamWriter"
                },
                {
                    "function name": "getEncoding",
                    "function params": [],
                    "file name": "XmlStreamWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/XmlStreamWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.XmlStreamWriter.getEncoding"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "XmlStreamWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/XmlStreamWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.XmlStreamWriter.close"
                },
                {
                    "function name": "XmlStreamWriter",
                    "function params": [
                        "out"
                    ],
                    "file name": "XmlStreamWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/XmlStreamWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.XmlStreamWriter.XmlStreamWriter"
                },
                {
                    "function name": "detectEncoding",
                    "function params": [
                        "cbuf",
                        "off",
                        "len"
                    ],
                    "file name": "XmlStreamWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/XmlStreamWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.XmlStreamWriter.detectEncoding"
                },
                {
                    "function name": "write",
                    "function params": [
                        "cbuf",
                        "off",
                        "len"
                    ],
                    "file name": "XmlStreamWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/XmlStreamWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.XmlStreamWriter.write"
                },
                {
                    "function name": "flush",
                    "function params": [],
                    "file name": "XmlStreamWriter.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/io/output/XmlStreamWriter.java",
                    "full name": "src.java.org.apache.commons.io.output.XmlStreamWriter.flush"
                },
                {
                    "function name": "_testAlternateDefaultEncoding",
                    "function params": [
                        "cT",
                        "bomEnc",
                        "streamEnc",
                        "prologEnc",
                        "alternateEnc"
                    ],
                    "file name": "XmlStreamReaderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/XmlStreamReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.XmlStreamReaderTest._testAlternateDefaultEncoding"
                },
                {
                    "function name": "testHttp",
                    "function params": [],
                    "file name": "XmlStreamReaderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/XmlStreamReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.XmlStreamReaderTest.testHttp"
                },
                {
                    "function name": "testRawNoBom",
                    "function params": [],
                    "file name": "XmlStreamReaderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/XmlStreamReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBom"
                },
                {
                    "function name": "getXmlStream",
                    "function params": [
                        "bomType",
                        "xmlType",
                        "streamEnc",
                        "prologEnc"
                    ],
                    "file name": "XmlStreamReaderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/XmlStreamReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.XmlStreamReaderTest.getXmlStream"
                },
                {
                    "function name": "_testHttpInvalid",
                    "function params": [
                        "cT",
                        "bomEnc",
                        "streamEnc",
                        "prologEnc"
                    ],
                    "file name": "XmlStreamReaderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/XmlStreamReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.XmlStreamReaderTest._testHttpInvalid"
                },
                {
                    "function name": "testRawBom",
                    "function params": [],
                    "file name": "XmlStreamReaderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/XmlStreamReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.XmlStreamReaderTest.testRawBom"
                },
                {
                    "function name": "_testRawBomValid",
                    "function params": [
                        "encoding"
                    ],
                    "file name": "XmlStreamReaderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/XmlStreamReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.XmlStreamReaderTest._testRawBomValid"
                },
                {
                    "function name": "_testRawNoBomValid",
                    "function params": [
                        "encoding"
                    ],
                    "file name": "XmlStreamReaderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/XmlStreamReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomValid"
                },
                {
                    "function name": "_testRawNoBomInvalid",
                    "function params": [
                        "encoding"
                    ],
                    "file name": "XmlStreamReaderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/XmlStreamReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomInvalid"
                },
                {
                    "function name": "_testHttpValid",
                    "function params": [
                        "cT",
                        "bomEnc",
                        "streamEnc",
                        "prologEnc"
                    ],
                    "file name": "XmlStreamReaderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/XmlStreamReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.XmlStreamReaderTest._testHttpValid"
                },
                {
                    "function name": "testEncodingAttributeXML",
                    "function params": [],
                    "file name": "XmlStreamReaderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/XmlStreamReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.XmlStreamReaderTest.testEncodingAttributeXML"
                },
                {
                    "function name": "_testRawBomInvalid",
                    "function params": [
                        "bomEnc",
                        "streamEnc",
                        "prologEnc"
                    ],
                    "file name": "XmlStreamReaderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/XmlStreamReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.XmlStreamReaderTest._testRawBomInvalid"
                },
                {
                    "function name": "_testHttpLenient",
                    "function params": [
                        "cT",
                        "bomEnc",
                        "streamEnc",
                        "prologEnc",
                        "shouldbe"
                    ],
                    "file name": "XmlStreamReaderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/input/XmlStreamReaderTest.java",
                    "full name": "src.test.org.apache.commons.io.input.XmlStreamReaderTest._testHttpLenient"
                },
                {
                    "function name": "testEmpty",
                    "function params": [],
                    "file name": "XmlStreamWriterTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/XmlStreamWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.XmlStreamWriterTest.testEmpty"
                },
                {
                    "function name": "testUTF16Encoding",
                    "function params": [],
                    "file name": "XmlStreamWriterTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/XmlStreamWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.XmlStreamWriterTest.testUTF16Encoding"
                },
                {
                    "function name": "testEUC_JPEncoding",
                    "function params": [],
                    "file name": "XmlStreamWriterTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/XmlStreamWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.XmlStreamWriterTest.testEUC_JPEncoding"
                },
                {
                    "function name": "checkXmlWriter",
                    "function params": [
                        "text",
                        "encoding"
                    ],
                    "file name": "XmlStreamWriterTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/XmlStreamWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter"
                },
                {
                    "function name": "testUTF16BEEncoding",
                    "function params": [],
                    "file name": "XmlStreamWriterTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/XmlStreamWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.XmlStreamWriterTest.testUTF16BEEncoding"
                },
                {
                    "function name": "checkXmlContent",
                    "function params": [
                        "xml",
                        "encoding"
                    ],
                    "file name": "XmlStreamWriterTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/XmlStreamWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.XmlStreamWriterTest.checkXmlContent"
                },
                {
                    "function name": "testLatin7Encoding",
                    "function params": [],
                    "file name": "XmlStreamWriterTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/XmlStreamWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.XmlStreamWriterTest.testLatin7Encoding"
                },
                {
                    "function name": "testLatin15Encoding",
                    "function params": [],
                    "file name": "XmlStreamWriterTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/XmlStreamWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.XmlStreamWriterTest.testLatin15Encoding"
                },
                {
                    "function name": "createXmlContent",
                    "function params": [
                        "text",
                        "encoding"
                    ],
                    "file name": "XmlStreamWriterTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/XmlStreamWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.XmlStreamWriterTest.createXmlContent"
                },
                {
                    "function name": "testEBCDICEncoding",
                    "function params": [],
                    "file name": "XmlStreamWriterTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/XmlStreamWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.XmlStreamWriterTest.testEBCDICEncoding"
                },
                {
                    "function name": "testUTF16LEEncoding",
                    "function params": [],
                    "file name": "XmlStreamWriterTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/XmlStreamWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.XmlStreamWriterTest.testUTF16LEEncoding"
                },
                {
                    "function name": "testUTF8Encoding",
                    "function params": [],
                    "file name": "XmlStreamWriterTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/XmlStreamWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.XmlStreamWriterTest.testUTF8Encoding"
                },
                {
                    "function name": "testDefaultEncoding",
                    "function params": [],
                    "file name": "XmlStreamWriterTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/XmlStreamWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.XmlStreamWriterTest.testDefaultEncoding"
                },
                {
                    "function name": "testLatin1Encoding",
                    "function params": [],
                    "file name": "XmlStreamWriterTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/XmlStreamWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.XmlStreamWriterTest.testLatin1Encoding"
                },
                {
                    "function name": "testNoXmlHeader",
                    "function params": [],
                    "file name": "XmlStreamWriterTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/io/output/XmlStreamWriterTest.java",
                    "full name": "src.test.org.apache.commons.io.output.XmlStreamWriterTest.testNoXmlHeader"
                }
            ],
            "date": "2010-10-04"
        },
        {
            "commit_id": 708,
            "hash": "2fbbf47aaf12f3efc333caf06bb61d63472d610e",
            "commit_summary": "Replace BOM detection and XML guess logic with BOMInputStream\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004092 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/XmlStreamReader.java"
            ],
            "functions": [
                {
                    "function name": "getXmlProlog",
                    "function params": [
                        "is",
                        "guessedEnc"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.getXmlProlog"
                },
                {
                    "function name": "getXmlProlog",
                    "function params": [
                        "is",
                        "guessedEnc"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.getXmlProlog"
                },
                {
                    "function name": "createBomStream",
                    "function params": [
                        "delegate"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.createBomStream"
                },
                {
                    "function name": "doRawStream",
                    "function params": [
                        "is",
                        "lenient"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.doRawStream"
                },
                {
                    "function name": "doHttpStream",
                    "function params": [
                        "is",
                        "httpContentType",
                        "lenient"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.doHttpStream"
                },
                {
                    "function name": "createXmlStream",
                    "function params": [
                        "delegate"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.createXmlStream"
                }
            ],
            "date": "2010-10-04"
        },
        {
            "commit_id": 709,
            "hash": "a2800c889834ee30b5e8c0971cd1efbfa980bf9a",
            "commit_summary": "IO-162 Javadocs improvements and add @Override tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004103 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                "src/java/org/apache/commons/io/output/XmlStreamWriter.java"
            ],
            "functions": [],
            "date": "2010-10-04"
        },
        {
            "commit_id": 710,
            "hash": "e8703179767272e33bc097c730606ee03476c44b",
            "commit_summary": "IO-162 Refactoring to remove the InputStream from XmlStreamReaderException\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004109 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                "src/java/org/apache/commons/io/input/XmlStreamReaderException.java"
            ],
            "functions": [
                {
                    "function name": "XmlStreamReader",
                    "function params": [
                        "is",
                        "httpContentType",
                        "lenient",
                        "defaultEncoding"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.XmlStreamReader"
                },
                {
                    "function name": "doLenientDetection",
                    "function params": [
                        "httpContentType",
                        "ex"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.doLenientDetection"
                },
                {
                    "function name": "calculateHttpEncoding",
                    "function params": [
                        "cTMime",
                        "cTEnc",
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc",
                        "is",
                        "lenient"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding"
                },
                {
                    "function name": "doLenientDetection",
                    "function params": [
                        "httpContentType",
                        "is",
                        "ex"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.doLenientDetection"
                },
                {
                    "function name": "XmlStreamReader",
                    "function params": [
                        "is",
                        "lenient"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.XmlStreamReader"
                },
                {
                    "function name": "calculateRawEncoding",
                    "function params": [
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc",
                        "is"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding"
                },
                {
                    "function name": "XmlStreamReader",
                    "function params": [
                        "conn"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.XmlStreamReader"
                },
                {
                    "function name": "XmlStreamReaderException",
                    "function params": [
                        "msg",
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc",
                        "is"
                    ],
                    "file name": "XmlStreamReaderException.java",
                    "file old path": "src/java/org/apache/commons/io/input/XmlStreamReaderException.java",
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReaderException.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReaderException.XmlStreamReaderException"
                },
                {
                    "function name": "XmlStreamReaderException",
                    "function params": [
                        "msg",
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc"
                    ],
                    "file name": "XmlStreamReaderException.java",
                    "file old path": "src/java/org/apache/commons/io/input/XmlStreamReaderException.java",
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReaderException.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReaderException.XmlStreamReaderException"
                },
                {
                    "function name": "XmlStreamReaderException",
                    "function params": [
                        "msg",
                        "ctMime",
                        "ctEnc",
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc"
                    ],
                    "file name": "XmlStreamReaderException.java",
                    "file old path": "src/java/org/apache/commons/io/input/XmlStreamReaderException.java",
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReaderException.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReaderException.XmlStreamReaderException"
                },
                {
                    "function name": "XmlStreamReaderException",
                    "function params": [
                        "msg",
                        "ctMime",
                        "ctEnc",
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc",
                        "is"
                    ],
                    "file name": "XmlStreamReaderException.java",
                    "file old path": "src/java/org/apache/commons/io/input/XmlStreamReaderException.java",
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReaderException.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReaderException.XmlStreamReaderException"
                }
            ],
            "date": "2010-10-04"
        },
        {
            "commit_id": 711,
            "hash": "5b4212d98988e6798d1ced601a2036f7e98b70e0",
            "commit_summary": "Add @since tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004112 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                "src/java/org/apache/commons/io/input/XmlStreamReaderException.java",
                "src/java/org/apache/commons/io/output/XmlStreamWriter.java"
            ],
            "functions": [],
            "date": "2010-10-04"
        },
        {
            "commit_id": 712,
            "hash": "50d5aeea6180c582b788aedc44c3ae2c3c441eff",
            "commit_summary": "IO-162 Slight refactoring to simplify\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004121 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/XmlStreamReader.java"
            ],
            "functions": [
                {
                    "function name": "doLenientDetection",
                    "function params": [
                        "httpContentType",
                        "is",
                        "ex"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.doLenientDetection"
                },
                {
                    "function name": "doHttpStream",
                    "function params": [
                        "is",
                        "httpContentType",
                        "lenient"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.doHttpStream"
                },
                {
                    "function name": "doRawStream",
                    "function params": [
                        "is",
                        "lenient"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.doRawStream"
                }
            ],
            "date": "2010-10-04"
        },
        {
            "commit_id": 713,
            "hash": "1056d5ded9d19c3ee8c013d35fa5679163935935",
            "commit_summary": "IO-162 Minor refactoring to improve readability\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004122 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/XmlStreamReader.java"
            ],
            "functions": [
                {
                    "function name": "getContentTypeMime",
                    "function params": [
                        "httpContentType"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.getContentTypeMime"
                },
                {
                    "function name": "isAppXml",
                    "function params": [
                        "mime"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.isAppXml"
                },
                {
                    "function name": "isTextXml",
                    "function params": [
                        "mime"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.isTextXml"
                }
            ],
            "date": "2010-10-04"
        },
        {
            "commit_id": 714,
            "hash": "5a21350fb904af0f0e0f8d1cc5ce484c7183dd13",
            "commit_summary": "IO-162 and IO-178 Minor refactoring to simplify\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004123 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/io/input/BOMInputStream.java",
                "src/java/org/apache/commons/io/input/XmlStreamReader.java"
            ],
            "functions": [
                {
                    "function name": "getBOMCharsetName",
                    "function params": [],
                    "file name": "BOMInputStream.java",
                    "file old path": "src/java/org/apache/commons/io/input/BOMInputStream.java",
                    "file new path": "src/java/org/apache/commons/io/input/BOMInputStream.java",
                    "full name": "src.java.org.apache.commons.io.input.BOMInputStream.getBOMCharsetName"
                },
                {
                    "function name": "doRawStream",
                    "function params": [
                        "is",
                        "lenient"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.doRawStream"
                },
                {
                    "function name": "doHttpStream",
                    "function params": [
                        "is",
                        "httpContentType",
                        "lenient"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.java.org.apache.commons.io.input.XmlStreamReader.doHttpStream"
                }
            ],
            "date": "2010-10-04"
        },
        {
            "commit_id": 715,
            "hash": "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a",
            "commit_summary": "Build changes - re-organize to standard m2 layout, remove useless JIRA report and fix some Ant issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004358 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [],
            "date": "2010-10-04"
        },
        {
            "commit_id": 716,
            "hash": "b575a8b771ac2140c893ce9c8364bbede89cf7a7",
            "commit_summary": "Build changes - re-organize to standard m2 layout - fix test error\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004368 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java"
            ],
            "functions": [
                {
                    "function name": "testDirectory",
                    "function params": [],
                    "file name": "FileFilterTestCase.java",
                    "file old path": "src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "file new path": "src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java",
                    "full name": "src.test.java.org.apache.commons.io.filefilter.FileFilterTestCase.testDirectory"
                }
            ],
            "date": "2010-10-04"
        },
        {
            "commit_id": 717,
            "hash": "01afc9d7d01e802ee3a0d91ff47c75041cff0cfe",
            "commit_summary": "remove redundant code\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004467 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/io/ByteOrderMark.java"
            ],
            "functions": [
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "ByteOrderMark.java",
                    "file old path": "src/main/java/org/apache/commons/io/ByteOrderMark.java",
                    "file new path": "src/main/java/org/apache/commons/io/ByteOrderMark.java",
                    "full name": "src.main.java.org.apache.commons.io.ByteOrderMark.toString"
                }
            ],
            "date": "2010-10-04"
        },
        {
            "commit_id": 718,
            "hash": "784ddb2e02b273db264b250d1b852eccac0f96dc",
            "commit_summary": "Add original XmlStreamReader implementation for compatibility testing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004487 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "XmlStreamReader",
                    "function params": [
                        "is",
                        "httpContentType"
                    ],
                    "file name": "OriginalXmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/OriginalXmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.OriginalXmlStreamReader.XmlStreamReader"
                },
                {
                    "function name": "setDefaultEncoding",
                    "function params": [
                        "encoding"
                    ],
                    "file name": "OriginalXmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/OriginalXmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.OriginalXmlStreamReader.setDefaultEncoding"
                },
                {
                    "function name": "XmlStreamReader",
                    "function params": [
                        "is"
                    ],
                    "file name": "OriginalXmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/OriginalXmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.OriginalXmlStreamReader.XmlStreamReader"
                },
                {
                    "function name": "prepareReader",
                    "function params": [
                        "is",
                        "encoding"
                    ],
                    "file name": "OriginalXmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/OriginalXmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.OriginalXmlStreamReader.prepareReader"
                },
                {
                    "function name": "XmlStreamReader",
                    "function params": [
                        "file"
                    ],
                    "file name": "OriginalXmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/OriginalXmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.OriginalXmlStreamReader.XmlStreamReader"
                },
                {
                    "function name": "getBOMEncoding",
                    "function params": [
                        "is"
                    ],
                    "file name": "OriginalXmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/OriginalXmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.OriginalXmlStreamReader.getBOMEncoding"
                },
                {
                    "function name": "isAppXml",
                    "function params": [
                        "mime"
                    ],
                    "file name": "OriginalXmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/OriginalXmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.OriginalXmlStreamReader.isAppXml"
                },
                {
                    "function name": "XmlStreamReader",
                    "function params": [
                        "is",
                        "httpContentType",
                        "lenient",
                        "defaultEncoding"
                    ],
                    "file name": "OriginalXmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/OriginalXmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.OriginalXmlStreamReader.XmlStreamReader"
                },
                {
                    "function name": "getXmlProlog",
                    "function params": [
                        "is",
                        "guessedEnc"
                    ],
                    "file name": "OriginalXmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/OriginalXmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.OriginalXmlStreamReader.getXmlProlog"
                },
                {
                    "function name": "getContentTypeMime",
                    "function params": [
                        "httpContentType"
                    ],
                    "file name": "OriginalXmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/OriginalXmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.OriginalXmlStreamReader.getContentTypeMime"
                },
                {
                    "function name": "isTextXml",
                    "function params": [
                        "mime"
                    ],
                    "file name": "OriginalXmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/OriginalXmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.OriginalXmlStreamReader.isTextXml"
                },
                {
                    "function name": "doLenientDetection",
                    "function params": [
                        "httpContentType",
                        "ex"
                    ],
                    "file name": "OriginalXmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/OriginalXmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.OriginalXmlStreamReader.doLenientDetection"
                },
                {
                    "function name": "calculateRawEncoding",
                    "function params": [
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc",
                        "is"
                    ],
                    "file name": "OriginalXmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/OriginalXmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.OriginalXmlStreamReader.calculateRawEncoding"
                },
                {
                    "function name": "doHttpStream",
                    "function params": [
                        "is",
                        "httpContentType",
                        "lenient"
                    ],
                    "file name": "OriginalXmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/OriginalXmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.OriginalXmlStreamReader.doHttpStream"
                },
                {
                    "function name": "XmlStreamReader",
                    "function params": [
                        "conn"
                    ],
                    "file name": "OriginalXmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/OriginalXmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.OriginalXmlStreamReader.XmlStreamReader"
                },
                {
                    "function name": "doRawStream",
                    "function params": [
                        "is",
                        "lenient"
                    ],
                    "file name": "OriginalXmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/OriginalXmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.OriginalXmlStreamReader.doRawStream"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "OriginalXmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/OriginalXmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.OriginalXmlStreamReader.close"
                },
                {
                    "function name": "XmlStreamReader",
                    "function params": [
                        "is",
                        "lenient"
                    ],
                    "file name": "OriginalXmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/OriginalXmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.OriginalXmlStreamReader.XmlStreamReader"
                },
                {
                    "function name": "XmlStreamReader",
                    "function params": [
                        "is",
                        "httpContentType",
                        "lenient"
                    ],
                    "file name": "OriginalXmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/OriginalXmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.OriginalXmlStreamReader.XmlStreamReader"
                },
                {
                    "function name": "getContentTypeEncoding",
                    "function params": [
                        "httpContentType"
                    ],
                    "file name": "OriginalXmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/OriginalXmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.OriginalXmlStreamReader.getContentTypeEncoding"
                },
                {
                    "function name": "getDefaultEncoding",
                    "function params": [],
                    "file name": "OriginalXmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/OriginalXmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.OriginalXmlStreamReader.getDefaultEncoding"
                },
                {
                    "function name": "getXMLGuessEncoding",
                    "function params": [
                        "is"
                    ],
                    "file name": "OriginalXmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/OriginalXmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.OriginalXmlStreamReader.getXMLGuessEncoding"
                },
                {
                    "function name": "read",
                    "function params": [
                        "buf",
                        "offset",
                        "len"
                    ],
                    "file name": "OriginalXmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/OriginalXmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.OriginalXmlStreamReader.read"
                },
                {
                    "function name": "calculateHttpEncoding",
                    "function params": [
                        "cTMime",
                        "cTEnc",
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc",
                        "is",
                        "lenient"
                    ],
                    "file name": "OriginalXmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/OriginalXmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.OriginalXmlStreamReader.calculateHttpEncoding"
                },
                {
                    "function name": "getEncoding",
                    "function params": [],
                    "file name": "OriginalXmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/OriginalXmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.OriginalXmlStreamReader.getEncoding"
                },
                {
                    "function name": "XmlStreamReader",
                    "function params": [
                        "url"
                    ],
                    "file name": "OriginalXmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/OriginalXmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.OriginalXmlStreamReader.XmlStreamReader"
                }
            ],
            "date": "2010-10-05"
        },
        {
            "commit_id": 719,
            "hash": "823fe4d9ff7b795287ce5c813b1a0e79d4e81c3d",
            "commit_summary": "Remove\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004488 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [],
            "date": "2010-10-05"
        },
        {
            "commit_id": 720,
            "hash": "073bda909983f5a42365728e9a659c6c09464bc1",
            "commit_summary": "Add original XmlStreamReader implementation for compatibility testing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004489 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "read",
                    "function params": [
                        "buf",
                        "offset",
                        "len"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReader.read"
                },
                {
                    "function name": "XmlStreamReader",
                    "function params": [
                        "is",
                        "httpContentType",
                        "lenient"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader"
                },
                {
                    "function name": "doLenientDetection",
                    "function params": [
                        "httpContentType",
                        "ex"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReader.doLenientDetection"
                },
                {
                    "function name": "getXmlProlog",
                    "function params": [
                        "is",
                        "guessedEnc"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReader.getXmlProlog"
                },
                {
                    "function name": "getBOMEncoding",
                    "function params": [
                        "is"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReader.getBOMEncoding"
                },
                {
                    "function name": "XmlStreamReader",
                    "function params": [
                        "is",
                        "lenient"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader"
                },
                {
                    "function name": "XmlStreamReader",
                    "function params": [
                        "is",
                        "httpContentType",
                        "lenient",
                        "defaultEncoding"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader"
                },
                {
                    "function name": "XmlStreamReader",
                    "function params": [
                        "url"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader"
                },
                {
                    "function name": "isTextXml",
                    "function params": [
                        "mime"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReader.isTextXml"
                },
                {
                    "function name": "calculateRawEncoding",
                    "function params": [
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc",
                        "is"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReader.calculateRawEncoding"
                },
                {
                    "function name": "doHttpStream",
                    "function params": [
                        "is",
                        "httpContentType",
                        "lenient"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReader.doHttpStream"
                },
                {
                    "function name": "setDefaultEncoding",
                    "function params": [
                        "encoding"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReader.setDefaultEncoding"
                },
                {
                    "function name": "XmlStreamReader",
                    "function params": [
                        "file"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader"
                },
                {
                    "function name": "getEncoding",
                    "function params": [],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReader.getEncoding"
                },
                {
                    "function name": "getDefaultEncoding",
                    "function params": [],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReader.getDefaultEncoding"
                },
                {
                    "function name": "isAppXml",
                    "function params": [
                        "mime"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReader.isAppXml"
                },
                {
                    "function name": "XmlStreamReader",
                    "function params": [
                        "is",
                        "httpContentType"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader"
                },
                {
                    "function name": "getContentTypeEncoding",
                    "function params": [
                        "httpContentType"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReader.getContentTypeEncoding"
                },
                {
                    "function name": "prepareReader",
                    "function params": [
                        "is",
                        "encoding"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReader.prepareReader"
                },
                {
                    "function name": "getXMLGuessEncoding",
                    "function params": [
                        "is"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReader.getXMLGuessEncoding"
                },
                {
                    "function name": "calculateHttpEncoding",
                    "function params": [
                        "cTMime",
                        "cTEnc",
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc",
                        "is",
                        "lenient"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReader.calculateHttpEncoding"
                },
                {
                    "function name": "XmlStreamReader",
                    "function params": [
                        "is"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader"
                },
                {
                    "function name": "doRawStream",
                    "function params": [
                        "is",
                        "lenient"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReader.doRawStream"
                },
                {
                    "function name": "XmlStreamReader",
                    "function params": [
                        "conn"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReader.close"
                },
                {
                    "function name": "getContentTypeMime",
                    "function params": [
                        "httpContentType"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReader.getContentTypeMime"
                },
                {
                    "function name": "getXmlGuessEncoding",
                    "function params": [],
                    "file name": "XmlStreamReaderException.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderException.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReaderException.getXmlGuessEncoding"
                },
                {
                    "function name": "XmlStreamReaderException",
                    "function params": [
                        "msg",
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc",
                        "is"
                    ],
                    "file name": "XmlStreamReaderException.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderException.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReaderException.XmlStreamReaderException"
                },
                {
                    "function name": "getInputStream",
                    "function params": [],
                    "file name": "XmlStreamReaderException.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderException.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReaderException.getInputStream"
                },
                {
                    "function name": "getContentTypeEncoding",
                    "function params": [],
                    "file name": "XmlStreamReaderException.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderException.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReaderException.getContentTypeEncoding"
                },
                {
                    "function name": "getBomEncoding",
                    "function params": [],
                    "file name": "XmlStreamReaderException.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderException.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReaderException.getBomEncoding"
                },
                {
                    "function name": "getContentTypeMime",
                    "function params": [],
                    "file name": "XmlStreamReaderException.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderException.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReaderException.getContentTypeMime"
                },
                {
                    "function name": "XmlStreamReaderException",
                    "function params": [
                        "msg",
                        "ctMime",
                        "ctEnc",
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc",
                        "is"
                    ],
                    "file name": "XmlStreamReaderException.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderException.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReaderException.XmlStreamReaderException"
                },
                {
                    "function name": "getXmlEncoding",
                    "function params": [],
                    "file name": "XmlStreamReaderException.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderException.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReaderException.getXmlEncoding"
                }
            ],
            "date": "2010-10-05"
        },
        {
            "commit_id": 721,
            "hash": "ac500460cc6de2f84921faaa7c65bbe812cb2fd2",
            "commit_summary": "Remove unnecessary throws throws XmlStreamReaderException from methods (already declares throwing IOException - which XmlStreamReaderException is)\n            \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004508 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/io/input/XmlStreamReader.java"
            ],
            "functions": [
                {
                    "function name": "XmlStreamReader",
                    "function params": [
                        "is",
                        "httpContentType",
                        "lenient"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.main.java.org.apache.commons.io.input.XmlStreamReader.XmlStreamReader"
                },
                {
                    "function name": "XmlStreamReader",
                    "function params": [
                        "is",
                        "lenient"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.main.java.org.apache.commons.io.input.XmlStreamReader.XmlStreamReader"
                },
                {
                    "function name": "XmlStreamReader",
                    "function params": [
                        "is",
                        "httpContentType",
                        "lenient",
                        "defaultEncoding"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.main.java.org.apache.commons.io.input.XmlStreamReader.XmlStreamReader"
                }
            ],
            "date": "2010-10-05"
        },
        {
            "commit_id": 722,
            "hash": "305062404737ecf9a3ff561bca985513cee818ad",
            "commit_summary": "Remove unsafe *static* MessageFormats instances.\n\nFrom the MessageFormat JavaDocs:\n\"Message formats are not synchronized. It is recommended to create separate format instances for each thread. If multiple threads access a format concurrently, it must be synchronized externally.\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004511 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/io/input/XmlStreamReader.java"
            ],
            "functions": [
                {
                    "function name": "calculateHttpEncoding",
                    "function params": [
                        "cTMime",
                        "cTEnc",
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc",
                        "is",
                        "lenient"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.main.java.org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding"
                },
                {
                    "function name": "calculateRawEncoding",
                    "function params": [
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc",
                        "is"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.main.java.org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding"
                }
            ],
            "date": "2010-10-05"
        },
        {
            "commit_id": 723,
            "hash": "e4540bba7aebd88d3d4b22e68a6a916ddfc48890",
            "commit_summary": "Refactoring to remove the InputStream from XmlStreamReaderException in r1004109 means we don't need to pass the InputStream to the calculateRawEncoding() and calculateHttpEncoding() methods \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004512 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/io/input/XmlStreamReader.java"
            ],
            "functions": [
                {
                    "function name": "calculateHttpEncoding",
                    "function params": [
                        "cTMime",
                        "cTEnc",
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc",
                        "is",
                        "lenient"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.main.java.org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding"
                },
                {
                    "function name": "calculateHttpEncoding",
                    "function params": [
                        "cTMime",
                        "cTEnc",
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc",
                        "lenient"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.main.java.org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding"
                },
                {
                    "function name": "doRawStream",
                    "function params": [
                        "is",
                        "lenient"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.main.java.org.apache.commons.io.input.XmlStreamReader.doRawStream"
                },
                {
                    "function name": "calculateRawEncoding",
                    "function params": [
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc",
                        "is"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.main.java.org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding"
                },
                {
                    "function name": "doHttpStream",
                    "function params": [
                        "is",
                        "httpContentType",
                        "lenient"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.main.java.org.apache.commons.io.input.XmlStreamReader.doHttpStream"
                },
                {
                    "function name": "calculateRawEncoding",
                    "function params": [
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.main.java.org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding"
                }
            ],
            "date": "2010-10-05"
        },
        {
            "commit_id": 724,
            "hash": "7264eea73bc0f9560520ed6c423ff62f18ab4940",
            "commit_summary": "Refactoring - move mine/encoding content type detection into the calculateHttpEncoding() method where its used\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004514 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/io/input/XmlStreamReader.java"
            ],
            "functions": [
                {
                    "function name": "calculateHttpEncoding",
                    "function params": [
                        "cTMime",
                        "cTEnc",
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc",
                        "lenient"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.main.java.org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding"
                },
                {
                    "function name": "doHttpStream",
                    "function params": [
                        "is",
                        "httpContentType",
                        "lenient"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.main.java.org.apache.commons.io.input.XmlStreamReader.doHttpStream"
                },
                {
                    "function name": "calculateHttpEncoding",
                    "function params": [
                        "httpContentType",
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc",
                        "lenient"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.main.java.org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding"
                }
            ],
            "date": "2010-10-05"
        },
        {
            "commit_id": 725,
            "hash": "7b6afbba6b7d568983f6b4481f96e0d1f207eafa",
            "commit_summary": "Refactor the calculateRawEncoding() & calculateHttpEncoding() methods to make them easier to understand\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004517 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/io/input/XmlStreamReader.java"
            ],
            "functions": [
                {
                    "function name": "calculateHttpEncoding",
                    "function params": [
                        "httpContentType",
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc",
                        "lenient"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.main.java.org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding"
                },
                {
                    "function name": "calculateRawEncoding",
                    "function params": [
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.main.java.org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding"
                }
            ],
            "date": "2010-10-05"
        },
        {
            "commit_id": 726,
            "hash": "6a5b920a68647879ee26d015d66b0d66ad11c159",
            "commit_summary": "IO-162 Allow the default encoding to be configurable\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004737 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/io/output/XmlStreamWriter.java",
                "src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java"
            ],
            "functions": [
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "XmlStreamWriter.java",
                    "file old path": "src/main/java/org/apache/commons/io/output/XmlStreamWriter.java",
                    "file new path": "src/main/java/org/apache/commons/io/output/XmlStreamWriter.java",
                    "full name": "src.main.java.org.apache.commons.io.output.XmlStreamWriter.close"
                },
                {
                    "function name": "XmlStreamWriter",
                    "function params": [
                        "out"
                    ],
                    "file name": "XmlStreamWriter.java",
                    "file old path": "src/main/java/org/apache/commons/io/output/XmlStreamWriter.java",
                    "file new path": "src/main/java/org/apache/commons/io/output/XmlStreamWriter.java",
                    "full name": "src.main.java.org.apache.commons.io.output.XmlStreamWriter.XmlStreamWriter"
                },
                {
                    "function name": "XmlStreamWriter",
                    "function params": [
                        "file",
                        "defaultEncoding"
                    ],
                    "file name": "XmlStreamWriter.java",
                    "file old path": "src/main/java/org/apache/commons/io/output/XmlStreamWriter.java",
                    "file new path": "src/main/java/org/apache/commons/io/output/XmlStreamWriter.java",
                    "full name": "src.main.java.org.apache.commons.io.output.XmlStreamWriter.XmlStreamWriter"
                },
                {
                    "function name": "detectEncoding",
                    "function params": [
                        "cbuf",
                        "off",
                        "len"
                    ],
                    "file name": "XmlStreamWriter.java",
                    "file old path": "src/main/java/org/apache/commons/io/output/XmlStreamWriter.java",
                    "file new path": "src/main/java/org/apache/commons/io/output/XmlStreamWriter.java",
                    "full name": "src.main.java.org.apache.commons.io.output.XmlStreamWriter.detectEncoding"
                },
                {
                    "function name": "XmlStreamWriter",
                    "function params": [
                        "file"
                    ],
                    "file name": "XmlStreamWriter.java",
                    "file old path": "src/main/java/org/apache/commons/io/output/XmlStreamWriter.java",
                    "file new path": "src/main/java/org/apache/commons/io/output/XmlStreamWriter.java",
                    "full name": "src.main.java.org.apache.commons.io.output.XmlStreamWriter.XmlStreamWriter"
                },
                {
                    "function name": "getDefaultEncoding",
                    "function params": [],
                    "file name": "XmlStreamWriter.java",
                    "file old path": "src/main/java/org/apache/commons/io/output/XmlStreamWriter.java",
                    "file new path": "src/main/java/org/apache/commons/io/output/XmlStreamWriter.java",
                    "full name": "src.main.java.org.apache.commons.io.output.XmlStreamWriter.getDefaultEncoding"
                },
                {
                    "function name": "XmlStreamWriter",
                    "function params": [
                        "out",
                        "defaultEncoding"
                    ],
                    "file name": "XmlStreamWriter.java",
                    "file old path": "src/main/java/org/apache/commons/io/output/XmlStreamWriter.java",
                    "file new path": "src/main/java/org/apache/commons/io/output/XmlStreamWriter.java",
                    "full name": "src.main.java.org.apache.commons.io.output.XmlStreamWriter.XmlStreamWriter"
                },
                {
                    "function name": "checkXmlContent",
                    "function params": [
                        "xml",
                        "encoding",
                        "defaultEncoding"
                    ],
                    "file name": "XmlStreamWriterTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java",
                    "full name": "src.test.java.org.apache.commons.io.output.XmlStreamWriterTest.checkXmlContent"
                },
                {
                    "function name": "testDefaultEncoding",
                    "function params": [],
                    "file name": "XmlStreamWriterTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java",
                    "full name": "src.test.java.org.apache.commons.io.output.XmlStreamWriterTest.testDefaultEncoding"
                },
                {
                    "function name": "testNoXmlHeader",
                    "function params": [],
                    "file name": "XmlStreamWriterTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java",
                    "full name": "src.test.java.org.apache.commons.io.output.XmlStreamWriterTest.testNoXmlHeader"
                },
                {
                    "function name": "checkXmlWriter",
                    "function params": [
                        "text",
                        "encoding"
                    ],
                    "file name": "XmlStreamWriterTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java",
                    "full name": "src.test.java.org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter"
                },
                {
                    "function name": "checkXmlWriter",
                    "function params": [
                        "text",
                        "encoding",
                        "defaultEncoding"
                    ],
                    "file name": "XmlStreamWriterTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java",
                    "full name": "src.test.java.org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter"
                },
                {
                    "function name": "checkXmlContent",
                    "function params": [
                        "xml",
                        "encoding"
                    ],
                    "file name": "XmlStreamWriterTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java",
                    "full name": "src.test.java.org.apache.commons.io.output.XmlStreamWriterTest.checkXmlContent"
                }
            ],
            "date": "2010-10-05"
        },
        {
            "commit_id": 727,
            "hash": "d46782f8408d2ae17f8e05f18080db51ed608b35",
            "commit_summary": "IO-162 Improve testing of Encoding Utility functionality (changed the visibility of some XmlStreamReader methods from private to package)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004822 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/io/input/XmlStreamReader.java"
            ],
            "functions": [
                {
                    "function name": "calculateRawEncoding",
                    "function params": [
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.main.java.org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding"
                },
                {
                    "function name": "isTextXml",
                    "function params": [
                        "mime"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.main.java.org.apache.commons.io.input.XmlStreamReader.isTextXml"
                },
                {
                    "function name": "getContentTypeMime",
                    "function params": [
                        "httpContentType"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.main.java.org.apache.commons.io.input.XmlStreamReader.getContentTypeMime"
                },
                {
                    "function name": "calculateHttpEncoding",
                    "function params": [
                        "httpContentType",
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc",
                        "lenient"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.main.java.org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding"
                },
                {
                    "function name": "getContentTypeEncoding",
                    "function params": [
                        "httpContentType"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.main.java.org.apache.commons.io.input.XmlStreamReader.getContentTypeEncoding"
                },
                {
                    "function name": "isAppXml",
                    "function params": [
                        "mime"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.main.java.org.apache.commons.io.input.XmlStreamReader.isAppXml"
                },
                {
                    "function name": "testContentTypeEncoding",
                    "function params": [],
                    "file name": "XmlStreamReaderUtilitiesTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testContentTypeEncoding"
                },
                {
                    "function name": "testCalculateRawEncodingNoBOM",
                    "function params": [],
                    "file name": "XmlStreamReaderUtilitiesTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingNoBOM"
                },
                {
                    "function name": "checkRawEncoding",
                    "function params": [
                        "expected",
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc",
                        "defaultEncoding"
                    ],
                    "file name": "XmlStreamReaderUtilitiesTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawEncoding"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "XmlStreamReaderUtilitiesTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.setUp"
                },
                {
                    "function name": "testAppXml",
                    "function params": [],
                    "file name": "XmlStreamReaderUtilitiesTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testAppXml"
                },
                {
                    "function name": "testCalculateRawEncodingStandard",
                    "function params": [],
                    "file name": "XmlStreamReaderUtilitiesTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandard"
                },
                {
                    "function name": "checkHttpEncoding",
                    "function params": [
                        "expected",
                        "lenienet",
                        "httpContentType",
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc",
                        "defaultEncoding"
                    ],
                    "file name": "XmlStreamReaderUtilitiesTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpEncoding"
                },
                {
                    "function name": "MockXmlStreamReader",
                    "function params": [
                        "defaultEncoding"
                    ],
                    "file name": "XmlStreamReaderUtilitiesTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.MockXmlStreamReader"
                },
                {
                    "function name": "testTextXml",
                    "function params": [],
                    "file name": "XmlStreamReaderUtilitiesTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testTextXml"
                },
                {
                    "function name": "checkContentTypeEncoding",
                    "function params": [
                        "expected",
                        "httpContentType"
                    ],
                    "file name": "XmlStreamReaderUtilitiesTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkContentTypeEncoding"
                },
                {
                    "function name": "testCalculateRawEncodingAdditonalkUTF16",
                    "function params": [],
                    "file name": "XmlStreamReaderUtilitiesTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingAdditonalkUTF16"
                },
                {
                    "function name": "checkRawError",
                    "function params": [
                        "msgSuffix",
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc",
                        "defaultEncoding"
                    ],
                    "file name": "XmlStreamReaderUtilitiesTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawError"
                },
                {
                    "function name": "testCalculateHttpEncoding",
                    "function params": [],
                    "file name": "XmlStreamReaderUtilitiesTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncoding"
                },
                {
                    "function name": "checkContentTypeMime",
                    "function params": [
                        "expected",
                        "httpContentType"
                    ],
                    "file name": "XmlStreamReaderUtilitiesTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkContentTypeMime"
                },
                {
                    "function name": "testCalculateRawEncodingStandard",
                    "function params": [
                        "bomEnc",
                        "otherEnc",
                        "defaultEnc"
                    ],
                    "file name": "XmlStreamReaderUtilitiesTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandard"
                },
                {
                    "function name": "checkTextXml",
                    "function params": [
                        "expected",
                        "mime"
                    ],
                    "file name": "XmlStreamReaderUtilitiesTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkTextXml"
                },
                {
                    "function name": "testContentTypeMime",
                    "function params": [],
                    "file name": "XmlStreamReaderUtilitiesTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testContentTypeMime"
                },
                {
                    "function name": "checkAppXml",
                    "function params": [
                        "expected",
                        "mime"
                    ],
                    "file name": "XmlStreamReaderUtilitiesTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkAppXml"
                },
                {
                    "function name": "checkHttpError",
                    "function params": [
                        "msgSuffix",
                        "lenienet",
                        "httpContentType",
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc",
                        "defaultEncoding"
                    ],
                    "file name": "XmlStreamReaderUtilitiesTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpError"
                }
            ],
            "date": "2010-10-05"
        },
        {
            "commit_id": 728,
            "hash": "0ac9cccd34c88c2421550cfd30ec7cc2af62e3c3",
            "commit_summary": "IO-162 Throw XmlStreamReaderException instead of IOException (looks like this was missed when it was introduced in ROME)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004825 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java"
            ],
            "functions": [
                {
                    "function name": "calculateRawEncoding",
                    "function params": [
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.main.java.org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding"
                },
                {
                    "function name": "testCalculateRawEncodingStandard",
                    "function params": [
                        "bomEnc",
                        "otherEnc",
                        "defaultEnc"
                    ],
                    "file name": "XmlStreamReaderUtilitiesTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandard"
                },
                {
                    "function name": "testCalculateRawEncodingAdditonalkUTF16",
                    "function params": [],
                    "file name": "XmlStreamReaderUtilitiesTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingAdditonalkUTF16"
                }
            ],
            "date": "2010-10-05"
        },
        {
            "commit_id": 729,
            "hash": "4edc41ae11f428ac4efce237ba91654ed13fdaf8",
            "commit_summary": "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004841 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/io/ByteOrderMark.java",
                "src/main/java/org/apache/commons/io/input/BOMInputStream.java"
            ],
            "functions": [],
            "date": "2010-10-05"
        },
        {
            "commit_id": 730,
            "hash": "1f37a65bf704e25a0d6b0642ab8b2e74647b18c7",
            "commit_summary": "Unnecessary casts\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004842 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java"
            ],
            "functions": [
                {
                    "function name": "getXmlStream",
                    "function params": [
                        "bomType",
                        "xmlType",
                        "streamEnc",
                        "prologEnc"
                    ],
                    "file name": "XmlStreamReaderTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.XmlStreamReaderTest.getXmlStream"
                }
            ],
            "date": "2010-10-05"
        },
        {
            "commit_id": 731,
            "hash": "3fb12de7946abf01216f303bd97e1ec051a65d2e",
            "commit_summary": "Immutable private field might as well be final\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004843 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/io/input/XmlStreamReader.java"
            ],
            "functions": [],
            "date": "2010-10-05"
        },
        {
            "commit_id": 732,
            "hash": "c388d20a4b41438628c91bb47497753cc21d1af5",
            "commit_summary": "Change the visibility of the *utility* methods from private to package (so that the XmlStreamReaderUtilitiesTest can also be run against the \"compatibility\" version of XmlStreamReader)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004854 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java"
            ],
            "functions": [
                {
                    "function name": "isAppXml",
                    "function params": [
                        "mime"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReader.isAppXml"
                },
                {
                    "function name": "getBOMEncoding",
                    "function params": [
                        "is"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReader.getBOMEncoding"
                },
                {
                    "function name": "calculateHttpEncoding",
                    "function params": [
                        "cTMime",
                        "cTEnc",
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc",
                        "is",
                        "lenient"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReader.calculateHttpEncoding"
                },
                {
                    "function name": "isTextXml",
                    "function params": [
                        "mime"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReader.isTextXml"
                },
                {
                    "function name": "calculateRawEncoding",
                    "function params": [
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc",
                        "is"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReader.calculateRawEncoding"
                },
                {
                    "function name": "getContentTypeMime",
                    "function params": [
                        "httpContentType"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReader.getContentTypeMime"
                },
                {
                    "function name": "getContentTypeEncoding",
                    "function params": [
                        "httpContentType"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReader.getContentTypeEncoding"
                }
            ],
            "date": "2010-10-05"
        },
        {
            "commit_id": 733,
            "hash": "389eebcb50481ac5cb120688175eb946ae295629",
            "commit_summary": "Apply the same fix to Throw XmlStreamReaderException instead of IOException to compatibility version\n\nhttp://svn.apache.org/viewvc?view=revision&revision=1004825\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004856 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java"
            ],
            "functions": [
                {
                    "function name": "calculateRawEncoding",
                    "function params": [
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc",
                        "is"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReader.calculateRawEncoding"
                }
            ],
            "date": "2010-10-05"
        },
        {
            "commit_id": 734,
            "hash": "3777327db78077f50f7e7488298588c90c6589de",
            "commit_summary": "Create a version of the XmlStreamReaderUtilitiesTest to run against the original XmlStreamReader implementation (Sanity check to make sure all the refactoring hasn't screwed things up)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004857 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderException.java"
            ],
            "functions": [
                {
                    "function name": "checkRawEncoding",
                    "function params": [
                        "expected",
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc",
                        "defaultEncoding"
                    ],
                    "file name": "XmlStreamReaderUtilitiesTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawEncoding"
                },
                {
                    "function name": "calculateHttpEncoding",
                    "function params": [
                        "httpContentType",
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc",
                        "lenient",
                        "defaultEncoding"
                    ],
                    "file name": "XmlStreamReaderUtilitiesTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.calculateHttpEncoding"
                },
                {
                    "function name": "checkHttpEncoding",
                    "function params": [
                        "expected",
                        "lenient",
                        "httpContentType",
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc",
                        "defaultEncoding"
                    ],
                    "file name": "XmlStreamReaderUtilitiesTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpEncoding"
                },
                {
                    "function name": "calculateRawEncoding",
                    "function params": [
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc",
                        "defaultEncoding"
                    ],
                    "file name": "XmlStreamReaderUtilitiesTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.calculateRawEncoding"
                },
                {
                    "function name": "checkHttpEncoding",
                    "function params": [
                        "expected",
                        "lenienet",
                        "httpContentType",
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc",
                        "defaultEncoding"
                    ],
                    "file name": "XmlStreamReaderUtilitiesTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpEncoding"
                },
                {
                    "function name": "XmlStreamReaderException",
                    "function params": [
                        "msg",
                        "ctMime",
                        "ctEnc",
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc",
                        "is"
                    ],
                    "file name": "XmlStreamReaderException.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderException.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderException.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReaderException.XmlStreamReaderException"
                },
                {
                    "function name": "calculateHttpEncoding",
                    "function params": [
                        "httpContentType",
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc",
                        "lenient",
                        "defaultEncoding"
                    ],
                    "file name": "XmlStreamReaderUtilitiesCompatibilityTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderUtilitiesCompatibilityTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.calculateHttpEncoding"
                },
                {
                    "function name": "calculateRawEncoding",
                    "function params": [
                        "bomEnc",
                        "xmlGuessEnc",
                        "xmlEnc",
                        "defaultEncoding"
                    ],
                    "file name": "XmlStreamReaderUtilitiesCompatibilityTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderUtilitiesCompatibilityTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.calculateRawEncoding"
                },
                {
                    "function name": "MockXmlStreamReader",
                    "function params": [
                        "defaultEncoding"
                    ],
                    "file name": "XmlStreamReaderUtilitiesCompatibilityTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderUtilitiesCompatibilityTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.MockXmlStreamReader"
                }
            ],
            "date": "2010-10-06"
        },
        {
            "commit_id": 735,
            "hash": "8a1529917f7aa5604fbdaa689b086c04848779af",
            "commit_summary": "IO-162 Refactor lenient processing - simplifies the code and avoids reprocessing the stream\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004871 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/io/input/XmlStreamReader.java"
            ],
            "functions": [
                {
                    "function name": "XmlStreamReader",
                    "function params": [
                        "is",
                        "lenient"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.main.java.org.apache.commons.io.input.XmlStreamReader.XmlStreamReader"
                },
                {
                    "function name": "XmlStreamReader",
                    "function params": [
                        "is",
                        "httpContentType",
                        "lenient",
                        "defaultEncoding"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.main.java.org.apache.commons.io.input.XmlStreamReader.XmlStreamReader"
                },
                {
                    "function name": "doLenientDetection",
                    "function params": [
                        "httpContentType",
                        "is",
                        "ex"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.main.java.org.apache.commons.io.input.XmlStreamReader.doLenientDetection"
                },
                {
                    "function name": "doHttpStream",
                    "function params": [
                        "is",
                        "httpContentType",
                        "lenient"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.main.java.org.apache.commons.io.input.XmlStreamReader.doHttpStream"
                },
                {
                    "function name": "doRawStream",
                    "function params": [
                        "is",
                        "lenient"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.main.java.org.apache.commons.io.input.XmlStreamReader.doRawStream"
                },
                {
                    "function name": "XmlStreamReader",
                    "function params": [
                        "conn"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.main.java.org.apache.commons.io.input.XmlStreamReader.XmlStreamReader"
                }
            ],
            "date": "2010-10-06"
        },
        {
            "commit_id": 736,
            "hash": "447d9982998a63275e78048a1beb081bb50b3536",
            "commit_summary": "IO-162 Remove the static setDefaultEncoding() accessor - IMO this is a bad practice. Add two constructors to compensate\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004874 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                "src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java"
            ],
            "functions": [
                {
                    "function name": "getDefaultEncoding",
                    "function params": [],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.main.java.org.apache.commons.io.input.XmlStreamReader.getDefaultEncoding"
                },
                {
                    "function name": "XmlStreamReader",
                    "function params": [
                        "is",
                        "lenient"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.main.java.org.apache.commons.io.input.XmlStreamReader.XmlStreamReader"
                },
                {
                    "function name": "XmlStreamReader",
                    "function params": [
                        "conn",
                        "defaultEncoding"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.main.java.org.apache.commons.io.input.XmlStreamReader.XmlStreamReader"
                },
                {
                    "function name": "XmlStreamReader",
                    "function params": [
                        "is",
                        "httpContentType",
                        "lenient",
                        "defaultEncoding"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.main.java.org.apache.commons.io.input.XmlStreamReader.XmlStreamReader"
                },
                {
                    "function name": "XmlStreamReader",
                    "function params": [
                        "url"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.main.java.org.apache.commons.io.input.XmlStreamReader.XmlStreamReader"
                },
                {
                    "function name": "XmlStreamReader",
                    "function params": [
                        "is",
                        "lenient",
                        "defaultEncoding"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.main.java.org.apache.commons.io.input.XmlStreamReader.XmlStreamReader"
                },
                {
                    "function name": "XmlStreamReader",
                    "function params": [
                        "conn"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.main.java.org.apache.commons.io.input.XmlStreamReader.XmlStreamReader"
                },
                {
                    "function name": "_testAlternateDefaultEncoding",
                    "function params": [
                        "cT",
                        "bomEnc",
                        "streamEnc",
                        "prologEnc",
                        "alternateEnc"
                    ],
                    "file name": "XmlStreamReaderTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.XmlStreamReaderTest._testAlternateDefaultEncoding"
                }
            ],
            "date": "2010-10-06"
        },
        {
            "commit_id": 737,
            "hash": "621a3b44fe7971f2362dc8ae48387c48b94fa131",
            "commit_summary": "Remove unnecessary try/finally\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004875 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java"
            ],
            "functions": [
                {
                    "function name": "_testAlternateDefaultEncoding",
                    "function params": [
                        "cT",
                        "bomEnc",
                        "streamEnc",
                        "prologEnc",
                        "alternateEnc"
                    ],
                    "file name": "XmlStreamReaderTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.XmlStreamReaderTest._testAlternateDefaultEncoding"
                }
            ],
            "date": "2010-10-06"
        },
        {
            "commit_id": 738,
            "hash": "4b7b166727ea45b2c6edaf77bdc056d3da6350a2",
            "commit_summary": "Re-instated checks for non UTF-16 encodings (had to comment out 2 tests which failed)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004876 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java"
            ],
            "functions": [
                {
                    "function name": "_testHttpValid",
                    "function params": [
                        "cT",
                        "bomEnc",
                        "streamEnc",
                        "prologEnc"
                    ],
                    "file name": "XmlStreamReaderTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.XmlStreamReaderTest._testHttpValid"
                },
                {
                    "function name": "testHttp",
                    "function params": [],
                    "file name": "XmlStreamReaderTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.XmlStreamReaderTest.testHttp"
                },
                {
                    "function name": "_testAlternateDefaultEncoding",
                    "function params": [
                        "cT",
                        "bomEnc",
                        "streamEnc",
                        "prologEnc",
                        "alternateEnc"
                    ],
                    "file name": "XmlStreamReaderTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.XmlStreamReaderTest._testAlternateDefaultEncoding"
                }
            ],
            "date": "2010-10-06"
        },
        {
            "commit_id": 739,
            "hash": "ec9c918889a17312effbd8b555489103da1df04e",
            "commit_summary": "Minor formatting changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004878 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/io/input/XmlStreamReader.java"
            ],
            "functions": [
                {
                    "function name": "doLenientDetection",
                    "function params": [
                        "httpContentType",
                        "is",
                        "ex"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.main.java.org.apache.commons.io.input.XmlStreamReader.doLenientDetection"
                }
            ],
            "date": "2010-10-06"
        },
        {
            "commit_id": 740,
            "hash": "294c570fcae9ca62e3157a9e7b8293a08e68dae2",
            "commit_summary": "Make reader and encoding fields immutable\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004882 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/io/input/XmlStreamReader.java"
            ],
            "functions": [
                {
                    "function name": "XmlStreamReader",
                    "function params": [
                        "conn",
                        "defaultEncoding"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.main.java.org.apache.commons.io.input.XmlStreamReader.XmlStreamReader"
                },
                {
                    "function name": "XmlStreamReader",
                    "function params": [
                        "is",
                        "httpContentType",
                        "lenient",
                        "defaultEncoding"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.main.java.org.apache.commons.io.input.XmlStreamReader.XmlStreamReader"
                },
                {
                    "function name": "doHttpStream",
                    "function params": [
                        "is",
                        "httpContentType",
                        "lenient"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.main.java.org.apache.commons.io.input.XmlStreamReader.doHttpStream"
                },
                {
                    "function name": "XmlStreamReader",
                    "function params": [
                        "is",
                        "lenient",
                        "defaultEncoding"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.main.java.org.apache.commons.io.input.XmlStreamReader.XmlStreamReader"
                },
                {
                    "function name": "doRawStream",
                    "function params": [
                        "is",
                        "lenient"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.main.java.org.apache.commons.io.input.XmlStreamReader.doRawStream"
                }
            ],
            "date": "2010-10-06"
        },
        {
            "commit_id": 741,
            "hash": "ede1a5e2ca688af0e4bc83ba1aa47acc6d827cfc",
            "commit_summary": "Minor re-organization\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004891 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/io/input/XmlStreamReader.java"
            ],
            "functions": [
                {
                    "function name": "doLenientDetection",
                    "function params": [
                        "httpContentType",
                        "is",
                        "ex"
                    ],
                    "file name": "XmlStreamReader.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/XmlStreamReader.java",
                    "full name": "src.main.java.org.apache.commons.io.input.XmlStreamReader.doLenientDetection"
                }
            ],
            "date": "2010-10-06"
        },
        {
            "commit_id": 742,
            "hash": "ca59df82b6c947868938b88334aa88d245a35817",
            "commit_summary": "JavaDoc improvements\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005099 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/io/ByteOrderMark.java",
                "src/main/java/org/apache/commons/io/comparator/DirectoryFileComparator.java",
                "src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java",
                "src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java",
                "src/main/java/org/apache/commons/io/filefilter/DelegateFileFilter.java",
                "src/main/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java",
                "src/main/java/org/apache/commons/io/filefilter/FalseFileFilter.java",
                "src/main/java/org/apache/commons/io/filefilter/FileFileFilter.java",
                "src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java",
                "src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java",
                "src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java",
                "src/main/java/org/apache/commons/io/filefilter/NotFileFilter.java",
                "src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java",
                "src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java",
                "src/main/java/org/apache/commons/io/filefilter/SizeFileFilter.java",
                "src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java",
                "src/main/java/org/apache/commons/io/filefilter/TrueFileFilter.java",
                "src/main/java/org/apache/commons/io/input/BOMInputStream.java",
                "src/main/java/org/apache/commons/io/monitor/FilesystemObserver.java"
            ],
            "functions": [],
            "date": "2010-10-06"
        },
        {
            "commit_id": 743,
            "hash": "4a60ccc9ac2d254adafb266faad7939817aba641",
            "commit_summary": "EOL:=native\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005121 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/io/comparator/DirectoryFileComparator.java",
                "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java"
            ],
            "functions": [
                {
                    "function name": "getType",
                    "function params": [
                        "file"
                    ],
                    "file name": "DirectoryFileComparator.java",
                    "file old path": "src/main/java/org/apache/commons/io/comparator/DirectoryFileComparator.java",
                    "file new path": "src/main/java/org/apache/commons/io/comparator/DirectoryFileComparator.java",
                    "full name": "src.main.java.org.apache.commons.io.comparator.DirectoryFileComparator.getType"
                },
                {
                    "function name": "compare",
                    "function params": [
                        "file1",
                        "file2"
                    ],
                    "file name": "DirectoryFileComparator.java",
                    "file old path": "src/main/java/org/apache/commons/io/comparator/DirectoryFileComparator.java",
                    "file new path": "src/main/java/org/apache/commons/io/comparator/DirectoryFileComparator.java",
                    "full name": "src.main.java.org.apache.commons.io.comparator.DirectoryFileComparator.compare"
                },
                {
                    "function name": "testAvailableWithoutBOM",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.BOMInputStreamTest.testAvailableWithoutBOM"
                },
                {
                    "function name": "testGetBOMFirstThenReadInclude",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenReadInclude"
                },
                {
                    "function name": "testSmallBufferWithBOM",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.BOMInputStreamTest.testSmallBufferWithBOM"
                },
                {
                    "function name": "assertData",
                    "function params": [
                        "expected",
                        "actual",
                        "off",
                        "len"
                    ],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.BOMInputStreamTest.assertData"
                },
                {
                    "function name": "testLargeBufferWithBOM",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.BOMInputStreamTest.testLargeBufferWithBOM"
                },
                {
                    "function name": "testReadWithBOM",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOM"
                },
                {
                    "function name": "testMarkResetBeforeReadWithBOM",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.BOMInputStreamTest.testMarkResetBeforeReadWithBOM"
                },
                {
                    "function name": "testReadWithMultipleBOM",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.BOMInputStreamTest.testReadWithMultipleBOM"
                },
                {
                    "function name": "testSupportCode",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.BOMInputStreamTest.testSupportCode"
                },
                {
                    "function name": "testReadSmall",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.BOMInputStreamTest.testReadSmall"
                },
                {
                    "function name": "testAvailableWithBOM",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.BOMInputStreamTest.testAvailableWithBOM"
                },
                {
                    "function name": "ExpectCloseInputStream",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.BOMInputStreamTest.ExpectCloseInputStream"
                },
                {
                    "function name": "testSkipWithoutBOM",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.BOMInputStreamTest.testSkipWithoutBOM"
                },
                {
                    "function name": "testMarkResetAfterReadWithoutBOM",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.BOMInputStreamTest.testMarkResetAfterReadWithoutBOM"
                },
                {
                    "function name": "testClose",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.BOMInputStreamTest.testClose"
                },
                {
                    "function name": "ExpectCloseInputStream",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.BOMInputStreamTest.ExpectCloseInputStream"
                },
                {
                    "function name": "testMarkResetAfterReadWithBOM",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.BOMInputStreamTest.testMarkResetAfterReadWithBOM"
                },
                {
                    "function name": "testNoBoms",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.BOMInputStreamTest.testNoBoms"
                },
                {
                    "function name": "testSmallBufferWithoutBOM",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.BOMInputStreamTest.testSmallBufferWithoutBOM"
                },
                {
                    "function name": "testReadEmpty",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.BOMInputStreamTest.testReadEmpty"
                },
                {
                    "function name": "testGetBOMFirstThenRead",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenRead"
                },
                {
                    "function name": "testReadWithoutBOM",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.BOMInputStreamTest.testReadWithoutBOM"
                },
                {
                    "function name": "createDataStream",
                    "function params": [
                        "baseData",
                        "addBOM"
                    ],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.BOMInputStreamTest.createDataStream"
                },
                {
                    "function name": "testLeadingNonBOMBufferedRead",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.BOMInputStreamTest.testLeadingNonBOMBufferedRead"
                },
                {
                    "function name": "testLeadingNonBOMSingleRead",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.BOMInputStreamTest.testLeadingNonBOMSingleRead"
                },
                {
                    "function name": "testLargeBufferWithoutBOM",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.BOMInputStreamTest.testLargeBufferWithoutBOM"
                },
                {
                    "function name": "testReadWithBOMInclude",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMInclude"
                },
                {
                    "function name": "testMarkResetBeforeReadWithoutBOM",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.BOMInputStreamTest.testMarkResetBeforeReadWithoutBOM"
                },
                {
                    "function name": "testSkipWithBOM",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.BOMInputStreamTest.testSkipWithBOM"
                },
                {
                    "function name": "ExpectCloseInputStream",
                    "function params": [],
                    "file name": "BOMInputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.BOMInputStreamTest.ExpectCloseInputStream"
                }
            ],
            "date": "2010-10-06"
        },
        {
            "commit_id": 744,
            "hash": "3f124c68426718bd5870a85930fd075c151ccb33",
            "commit_summary": "IO-161 try to fix OutOfMemoryError being thrown by FileCleaningTrackerTestCase in Gump and fix a potential *hanging* situation.\n\nRemove the tracker from the list first. Theres a potential loop-for-ever situation if for some reason the delete fails because the Tracker will have been removed from the queue but still be in the List - and this method loops until the List is empty.\n\nHopefully this will also resolve the FileCleaningTrackerTestCase's OutOfMemoryError in Gump and Continuum. Its failing during the file.delete() operation - the test code to fill-up-memory continues until the Tracker List is zero.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005515 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/io/FileCleaningTracker.java",
                "src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java"
            ],
            "functions": [
                {
                    "function name": "Reaper",
                    "function params": [],
                    "file name": "FileCleaningTracker.java",
                    "file old path": "src/main/java/org/apache/commons/io/FileCleaningTracker.java",
                    "file new path": "src/main/java/org/apache/commons/io/FileCleaningTracker.java",
                    "full name": "src.main.java.org.apache.commons.io.FileCleaningTracker.Reaper"
                },
                {
                    "function name": "waitUntilTrackCount",
                    "function params": [],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": "src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "file new path": "src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.java.org.apache.commons.io.FileCleaningTrackerTestCase.waitUntilTrackCount"
                }
            ],
            "date": "2010-10-07"
        },
        {
            "commit_id": 745,
            "hash": "f11021dca612e6bc4e9963248c0927225299a857",
            "commit_summary": "IO-196 FilesystemObserverTestCase failures - revert r1002909 to test case and change how FilesystemMonitor compares files for changes to see if this resolves the original test failures\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005676 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/io/monitor/FilesystemEntry.java",
                "src/main/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                "src/test/java/org/apache/commons/io/monitor/FilesystemObserverTestCase.java"
            ],
            "functions": [
                {
                    "function name": "hasChanged",
                    "function params": [
                        "file"
                    ],
                    "file name": "FilesystemEntry.java",
                    "file old path": "src/main/java/org/apache/commons/io/monitor/FilesystemEntry.java",
                    "file new path": "src/main/java/org/apache/commons/io/monitor/FilesystemEntry.java",
                    "full name": "src.main.java.org.apache.commons.io.monitor.FilesystemEntry.hasChanged"
                },
                {
                    "function name": "hasChanged",
                    "function params": [],
                    "file name": "FilesystemEntry.java",
                    "file old path": "src/main/java/org/apache/commons/io/monitor/FilesystemEntry.java",
                    "file new path": "src/main/java/org/apache/commons/io/monitor/FilesystemEntry.java",
                    "full name": "src.main.java.org.apache.commons.io.monitor.FilesystemEntry.hasChanged"
                },
                {
                    "function name": "refresh",
                    "function params": [
                        "file"
                    ],
                    "file name": "FilesystemEntry.java",
                    "file old path": "src/main/java/org/apache/commons/io/monitor/FilesystemEntry.java",
                    "file new path": "src/main/java/org/apache/commons/io/monitor/FilesystemEntry.java",
                    "full name": "src.main.java.org.apache.commons.io.monitor.FilesystemEntry.refresh"
                },
                {
                    "function name": "refresh",
                    "function params": [],
                    "file name": "FilesystemEntry.java",
                    "file old path": "src/main/java/org/apache/commons/io/monitor/FilesystemEntry.java",
                    "file new path": "src/main/java/org/apache/commons/io/monitor/FilesystemEntry.java",
                    "full name": "src.main.java.org.apache.commons.io.monitor.FilesystemEntry.refresh"
                },
                {
                    "function name": "createFileEntry",
                    "function params": [
                        "parent",
                        "file"
                    ],
                    "file name": "FilesystemObserver.java",
                    "file old path": "src/main/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "file new path": "src/main/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "full name": "src.main.java.org.apache.commons.io.monitor.FilesystemObserver.createFileEntry"
                },
                {
                    "function name": "doMatch",
                    "function params": [
                        "entry",
                        "file"
                    ],
                    "file name": "FilesystemObserver.java",
                    "file old path": "src/main/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "file new path": "src/main/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "full name": "src.main.java.org.apache.commons.io.monitor.FilesystemObserver.doMatch"
                },
                {
                    "function name": "initialize",
                    "function params": [],
                    "file name": "FilesystemObserver.java",
                    "file old path": "src/main/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "file new path": "src/main/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "full name": "src.main.java.org.apache.commons.io.monitor.FilesystemObserver.initialize"
                },
                {
                    "function name": "testFileDelete",
                    "function params": [],
                    "file name": "FilesystemObserverTestCase.java",
                    "file old path": "src/test/java/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "file new path": "src/test/java/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "full name": "src.test.java.org.apache.commons.io.monitor.FilesystemObserverTestCase.testFileDelete"
                },
                {
                    "function name": "testFileCreate",
                    "function params": [],
                    "file name": "FilesystemObserverTestCase.java",
                    "file old path": "src/test/java/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "file new path": "src/test/java/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "full name": "src.test.java.org.apache.commons.io.monitor.FilesystemObserverTestCase.testFileCreate"
                },
                {
                    "function name": "checkCollectionsEmpty",
                    "function params": [
                        "label"
                    ],
                    "file name": "FilesystemObserverTestCase.java",
                    "file old path": "src/test/java/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "file new path": "src/test/java/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "full name": "src.test.java.org.apache.commons.io.monitor.FilesystemObserverTestCase.checkCollectionsEmpty"
                },
                {
                    "function name": "testFileUpdate",
                    "function params": [],
                    "file name": "FilesystemObserverTestCase.java",
                    "file old path": "src/test/java/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "file new path": "src/test/java/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "full name": "src.test.java.org.apache.commons.io.monitor.FilesystemObserverTestCase.testFileUpdate"
                },
                {
                    "function name": "checkCollectionSizes",
                    "function params": [
                        "label",
                        "dirCreate",
                        "dirChange",
                        "dirDelete",
                        "fileCreate",
                        "fileChange",
                        "fileDelete"
                    ],
                    "file name": "FilesystemObserverTestCase.java",
                    "file old path": "src/test/java/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "file new path": "src/test/java/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "full name": "src.test.java.org.apache.commons.io.monitor.FilesystemObserverTestCase.checkCollectionSizes"
                },
                {
                    "function name": "testObserveSingleFile",
                    "function params": [],
                    "file name": "FilesystemObserverTestCase.java",
                    "file old path": "src/test/java/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "file new path": "src/test/java/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "full name": "src.test.java.org.apache.commons.io.monitor.FilesystemObserverTestCase.testObserveSingleFile"
                },
                {
                    "function name": "testDirectory",
                    "function params": [],
                    "file name": "FilesystemObserverTestCase.java",
                    "file old path": "src/test/java/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "file new path": "src/test/java/org/apache/commons/io/monitor/FilesystemObserverTestCase.java",
                    "full name": "src.test.java.org.apache.commons.io.monitor.FilesystemObserverTestCase.testDirectory"
                }
            ],
            "date": "2010-10-08"
        },
        {
            "commit_id": 746,
            "hash": "6c289ff54d3caf4940063b57223d03b272ab5333",
            "commit_summary": "IO-132 Always do the compare on files names, but provide case-sensitivity options (allowing any comparator is going to result in someone shooting themselves in the foot)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005682 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/io/monitor/FilesystemObserver.java"
            ],
            "functions": [
                {
                    "function name": "FilesystemObserver",
                    "function params": [
                        "rootEntry",
                        "fileFilter",
                        "comparator"
                    ],
                    "file name": "FilesystemObserver.java",
                    "file old path": "src/main/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "file new path": "src/main/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "full name": "src.main.java.org.apache.commons.io.monitor.FilesystemObserver.FilesystemObserver"
                },
                {
                    "function name": "FilesystemObserver",
                    "function params": [
                        "directory",
                        "fileFilter",
                        "caseSensitivity"
                    ],
                    "file name": "FilesystemObserver.java",
                    "file old path": "src/main/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "file new path": "src/main/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "full name": "src.main.java.org.apache.commons.io.monitor.FilesystemObserver.FilesystemObserver"
                },
                {
                    "function name": "FilesystemObserver",
                    "function params": [
                        "directory",
                        "fileFilter"
                    ],
                    "file name": "FilesystemObserver.java",
                    "file old path": "src/main/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "file new path": "src/main/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "full name": "src.main.java.org.apache.commons.io.monitor.FilesystemObserver.FilesystemObserver"
                },
                {
                    "function name": "FilesystemObserver",
                    "function params": [
                        "directoryName",
                        "fileFilter",
                        "caseSensitivity"
                    ],
                    "file name": "FilesystemObserver.java",
                    "file old path": "src/main/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "file new path": "src/main/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "full name": "src.main.java.org.apache.commons.io.monitor.FilesystemObserver.FilesystemObserver"
                },
                {
                    "function name": "FilesystemObserver",
                    "function params": [
                        "rootEntry",
                        "fileFilter",
                        "caseSensitivity"
                    ],
                    "file name": "FilesystemObserver.java",
                    "file old path": "src/main/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "file new path": "src/main/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "full name": "src.main.java.org.apache.commons.io.monitor.FilesystemObserver.FilesystemObserver"
                },
                {
                    "function name": "FilesystemObserver",
                    "function params": [
                        "directory",
                        "fileFilter",
                        "comparator"
                    ],
                    "file name": "FilesystemObserver.java",
                    "file old path": "src/main/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "file new path": "src/main/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "full name": "src.main.java.org.apache.commons.io.monitor.FilesystemObserver.FilesystemObserver"
                },
                {
                    "function name": "FilesystemObserver",
                    "function params": [
                        "directoryName",
                        "fileFilter",
                        "comparator"
                    ],
                    "file name": "FilesystemObserver.java",
                    "file old path": "src/main/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "file new path": "src/main/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "full name": "src.main.java.org.apache.commons.io.monitor.FilesystemObserver.FilesystemObserver"
                }
            ],
            "date": "2010-10-08"
        },
        {
            "commit_id": 747,
            "hash": "c92f4ac0a572b70ac760612525ebb59de696431f",
            "commit_summary": "IO-132 Detect changes on File's size and type as well as last modified and \"refresh\" the values that were compared\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005693 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/io/monitor/FilesystemEntry.java",
                "src/main/java/org/apache/commons/io/monitor/FilesystemObserver.java"
            ],
            "functions": [
                {
                    "function name": "refresh",
                    "function params": [
                        "file"
                    ],
                    "file name": "FilesystemEntry.java",
                    "file old path": "src/main/java/org/apache/commons/io/monitor/FilesystemEntry.java",
                    "file new path": "src/main/java/org/apache/commons/io/monitor/FilesystemEntry.java",
                    "full name": "src.main.java.org.apache.commons.io.monitor.FilesystemEntry.refresh"
                },
                {
                    "function name": "getLength",
                    "function params": [],
                    "file name": "FilesystemEntry.java",
                    "file old path": "src/main/java/org/apache/commons/io/monitor/FilesystemEntry.java",
                    "file new path": "src/main/java/org/apache/commons/io/monitor/FilesystemEntry.java",
                    "full name": "src.main.java.org.apache.commons.io.monitor.FilesystemEntry.getLength"
                },
                {
                    "function name": "setLength",
                    "function params": [
                        "length"
                    ],
                    "file name": "FilesystemEntry.java",
                    "file old path": "src/main/java/org/apache/commons/io/monitor/FilesystemEntry.java",
                    "file new path": "src/main/java/org/apache/commons/io/monitor/FilesystemEntry.java",
                    "full name": "src.main.java.org.apache.commons.io.monitor.FilesystemEntry.setLength"
                },
                {
                    "function name": "doMatch",
                    "function params": [
                        "entry",
                        "file"
                    ],
                    "file name": "FilesystemObserver.java",
                    "file old path": "src/main/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "file new path": "src/main/java/org/apache/commons/io/monitor/FilesystemObserver.java",
                    "full name": "src.main.java.org.apache.commons.io.monitor.FilesystemObserver.doMatch"
                }
            ],
            "date": "2010-10-08"
        },
        {
            "commit_id": 748,
            "hash": "073ee87731292eb74b9df83acaf88fc2673bc86e",
            "commit_summary": "Javadoc correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005694 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/io/monitor/FilesystemEntry.java"
            ],
            "functions": [],
            "date": "2010-10-08"
        },
        {
            "commit_id": 749,
            "hash": "ec8a3410e55e7fcc45102451c439cc86383524d3",
            "commit_summary": "Fix to resolve OutOfMemoryError has now caused another issue. Try adding a *pause* to see if additional times allows the file delete to complete. If not provide a facility to show that the delete failed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005707 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/io/FileCleaningTracker.java",
                "src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java"
            ],
            "functions": [
                {
                    "function name": "Tracker",
                    "function params": [],
                    "file name": "FileCleaningTracker.java",
                    "file old path": "src/main/java/org/apache/commons/io/FileCleaningTracker.java",
                    "file new path": "src/main/java/org/apache/commons/io/FileCleaningTracker.java",
                    "full name": "src.main.java.org.apache.commons.io.FileCleaningTracker.Tracker"
                },
                {
                    "function name": "getDeleteFailures",
                    "function params": [],
                    "file name": "FileCleaningTracker.java",
                    "file old path": "src/main/java/org/apache/commons/io/FileCleaningTracker.java",
                    "file new path": "src/main/java/org/apache/commons/io/FileCleaningTracker.java",
                    "full name": "src.main.java.org.apache.commons.io.FileCleaningTracker.getDeleteFailures"
                },
                {
                    "function name": "Reaper",
                    "function params": [],
                    "file name": "FileCleaningTracker.java",
                    "file old path": "src/main/java/org/apache/commons/io/FileCleaningTracker.java",
                    "file new path": "src/main/java/org/apache/commons/io/FileCleaningTracker.java",
                    "full name": "src.main.java.org.apache.commons.io.FileCleaningTracker.Reaper"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": "src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "file new path": "src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.java.org.apache.commons.io.FileCleaningTrackerTestCase.tearDown"
                },
                {
                    "function name": "testFileCleanerExitWhenFinished1",
                    "function params": [],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": "src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "file new path": "src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.java.org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished1"
                },
                {
                    "function name": "testFileCleanerFile",
                    "function params": [],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": "src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "file new path": "src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.java.org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerFile"
                },
                {
                    "function name": "showFailures",
                    "function params": [],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": "src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "file new path": "src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.java.org.apache.commons.io.FileCleaningTrackerTestCase.showFailures"
                },
                {
                    "function name": "testFileCleanerExitWhenFinished2",
                    "function params": [],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": "src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "file new path": "src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.java.org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished2"
                },
                {
                    "function name": "testFileCleanerDirectory_ForceStrategy",
                    "function params": [],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": "src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "file new path": "src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.java.org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_ForceStrategy"
                },
                {
                    "function name": "pauseForDeleteToComplete",
                    "function params": [
                        "file"
                    ],
                    "file name": "FileCleaningTrackerTestCase.java",
                    "file old path": "src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "file new path": "src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java",
                    "full name": "src.test.java.org.apache.commons.io.FileCleaningTrackerTestCase.pauseForDeleteToComplete"
                }
            ],
            "date": "2010-10-08"
        },
        {
            "commit_id": 750,
            "hash": "f6c8dcc99db1929435fd8bb05dc0cf77e956e6e6",
            "commit_summary": "IO-177 Should be handling InterruptedException when sleeping - not calling the exception handler\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1005921 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/io/input/Tailer.java",
                "src/test/java/org/apache/commons/io/input/TailerTest.java"
            ],
            "functions": [
                {
                    "function name": "run",
                    "function params": [],
                    "file name": "Tailer.java",
                    "file old path": "src/main/java/org/apache/commons/io/input/Tailer.java",
                    "file new path": "src/main/java/org/apache/commons/io/input/Tailer.java",
                    "full name": "src.main.java.org.apache.commons.io.input.Tailer.run"
                },
                {
                    "function name": "testTailer",
                    "function params": [],
                    "file name": "TailerTest.java",
                    "file old path": "src/test/java/org/apache/commons/io/input/TailerTest.java",
                    "file new path": "src/test/java/org/apache/commons/io/input/TailerTest.java",
                    "full name": "src.test.java.org.apache.commons.io.input.TailerTest.testTailer"
                }
            ],
            "date": "2010-10-08"
        }
    ]
}